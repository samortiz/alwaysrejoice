{"version":3,"sources":["functions/utils.js","functions/constants.js","functions/game.js","functions/fly.js","functions/manage.js","functions/ai.js","functions/savegame.js","fly/Heatbar.js","fly/PushButton.js","fly/StatusButton.js","fly/InfoFly.js","manage/ManagePlanet.js","manage/factory/FactoryButtonRow.js","manage/factory/FactoryTab.js","manage/factory/FactoryTabs.js","manage/ManageStorage.js","manage/ManageSystem.js","manage/CodeEntry.js","manage/ManageLog.js","manage/ManageTabs.js","InfoPanel.js","App.js","serviceWorker.js","index.js"],"names":["distanceBetween","ax","ay","bx","by","Math","sqrt","pow","midPoint","a","b","normalizeRadian","radians","retVal","PI","calcGravity","x","y","planet","distance","gravityDirection","atan2","c","GRAVITATIONAL_CONST","mass","sin","cos","dir","directionTo","x1","y1","x2","y2","dirComponents","amount","xAmt","yAmt","randomInt","minP","maxP","min","ceil","max","floor","random","randomFloat","randomBool","getPointFrom","startX","startY","getVertexData","sprite","calculateVertices","vertices","vertexData","map","p","window","world","system","screenScale","collisionPoints","push","toGlobal","globalX","globalY","spriteX","spriteY","HALF_SCREEN_WIDTH","HALF_SCREEN_HEIGHT","pointInSprite","pX","pY","topLeft","topRight","bottomLeft","AB","toVector","AD","AM","dotAMAB","dot","dotABAB","dotAMAD","dotADAD","p1","p2","u","v","keyboardListener","value","key","toLowerCase","isDown","isUp","press","undefined","release","downHandler","event","upHandler","downListener","bind","upListener","addEventListener","unsubscribe","removeEventListener","showToast","text","Swal","fire","title","timer","position","showConfirmButton","toast","width","showClass","popup","hideClass","then","APP_VERSION","BLACK","YELLOW","BLUE","WHITE","DARKER_GREY","DARK_GREY","LIGHT_GREY","GREY","RED","GREEN","PURPLE","GAME_STATE","INIT","FLY","MANAGE","LOCALSTORAGE_GAME_NAMES_KEY","SCREEN_WIDTH","SCREEN_HEIGHT","NEARBY_WIDTH","NEARBY_HEIGHT","MINIMAP_WIDTH","MINIMAP_HEIGHT","HALF_MINIMAP_WIDTH","HALF_MINIMAP_HEIGHT","MINIMAP_VIEW_WIDTH","MINIMAP_VIEW_HEIGHT","HALF_MINIMAP_VIEW_WIDTH","HALF_MINIMAP_VIEW_HEIGHT","MINIMAP_SCALE_X","MINIMAP_SCALE_Y","SPRITESHEET_JSON","ALIEN_SHIP_BLACK_FILE","ALIEN_SHIP_BLUE_FILE","ALIEN_SHIP_BLUE_LARGE_FILE","ALIEN_SHIP_BLUE_SMALL_FILE","ALIEN_SHIP_FIRE_FILE","ALIEN_SHIP_GREEN_FILE","ALIEN_SHIP_GREEN_SMALL_FILE","ALIEN_SHIP_GREEN_LARGE_FILE","ALIEN_SHIP_RED_FILE","ALIEN_SHIP_RED_SMALL_FILE","ALIEN_SHIP_RED_LARGE_FILE","BULLET_FILE","BULLET_BLUE_FILE","BULLET_WHITE_FILE","FACTORY_FILE","MINE_FILE","PLANET_GREEN_FILE","PLANET_PURPLE_FILE","PLANET_RED_FILE","PLANET_ROCK_FILE","WORMHOLE_SPRITE","SHIELD_BLUE_FILE","SHIELD_GREEN_FILE","SHIELD_WHITE_FILE","SHIP_BALL_FILE","SHIP_CARGO_FILE","SHIP_EXPLORER_FILE","SHIP_FAST_FILE","SHIP_FIGHTER_FILE","SHIP_HEAVY_FILE","SHIP_MISSILE_FILE","SHIP_RED_WINGS_FILE","SHIP_SKELETON_FILE","STAR_BACKGROUND_FILE","CRASH_JSON","CRASH","SMOKE_JSON","SMOKE","UNIVERSE_RADIUS","OUTER_RING_MIN","OUTER_RING_MAX","PLAYER","ALIEN","PLAYER_STARTING_RESOURCES","titanium","gold","uranium","ALLOWED_OVERLAP","TAKEOFF_SPEED","PLANET_RESOURCE_MAX","PLAYER_START_X","PLAYER_START_Y","MIN_ALIEN_DIST_TO_PLANET","MIN_ALIEN_DIST_TO_ALIEN","MINIMAP_BORDER_COLOR","MINIMAP_BACKGROUND_COLOR","MINIMAP_BUILDING_COLOR","MINIMAP_SHIP_COLOR","MINIMAP_SELECTED_PLANET_COLOR","PLANET_COLORS","BUILDING_PLACEMENT_ROTATION_INCREMENT","BUILDING_TYPE_MINE","MINE_SCALE","MINE_WIDTH","MINE_ANIMATION_SPEED","MINE_SPEED_TITANIUM","MINE_SPEED_GOLD","MINE_SPEED_URANIUM","MINE_COST","SALVAGE_RATE","BUILDING_TYPE_FACTORY","FACTORY_COST","FACTORY_WIDTH","FACTORY_SCALE","EQUIP_TYPE_BRAKE","EQUIP_TYPE_PRIMARY_WEAPON","EQUIP_TYPE_SECONDARY_WEAPON","EQUIP_TYPE_THRUSTER","EQUIP_TYPE_ARMOR","EQUIP_TYPE_REPAIR_DROID","EQUIP_TYPE_GUNNERY_DROID","EQUIP_TYPE_SHIELD_DROID","EQUIP_TYPE_SPEED","EQUIP_TYPE_TURN","EQUIP_TYPE_STORAGE","EQUIP_TYPE_AUTOLANDER","EQUIP_TYPE_GRAVITY_SHIELD","THRUST_MOMENTUM","THRUST_BLINK","OBJ_EQUIP","OBJ_SHIP","ALIEN_AI_TURRET","ALIEN_AI_CREEPER","ALIEN_AI_MOTHERSHIP","ALIEN_AI_KAMIKAZI","EQUIP_AI_MINE","EQUIP_AI_TURRET","EQUIP_AI_MISSILE","EQUIP_AI_RESOURCE_DROID","DIR_AHEAD_OF_SHIP","DIR_BEHIND_SHIP","EQUIP_BRAKE","name","objType","type","brakeSpeedPct","cost","description","EQUIP_BLINK_BRAKE","EQUIP_SPEED_BOOST","boostSpeed","EQUIP_TURN_BOOST","EQUIP_STORAGE","storageAmount","EQUIP_ENHANCED_STORAGE","EQUIP_ARMOR","armorAmt","EQUIP_ENHANCED_ARMOR","EQUIP_THRUSTER","thrustSpeed","thrustType","EQUIP_BLINK_THRUSTER","EQUIP_AUTOLANDER","EQUIP_GRAVITY_SHIELD","EQUIP_BLASTER","coolTime","cool","damage","speed","lifetime","jitter","bulletFile","EQUIP_FAST_BLASTER","EQUIP_SPRINKLER_BLASTER","EQUIP_STREAM_BLASTER","EQUIP_MELEE_GUN","EQUIP_SNIPER_RIFLE","EQUIP_ALIEN_BLASTER","EQUIP_ALIEN_BLASTER_FAST","EQUIP_ALIEN_BLASTER_LIGHTNING","EQUIP_STAPLE_GUN","EQUIP_STAPLE_GUN_HEAVY","EQUIP_SHIELD","shield","active","armor","armorMax","lifetimeMax","spriteFile","radius","EQUIP_SHIELD_WEAK","EQUIP_SHIELD_LONG","EQUIP_SHIELD_STRONG","EQUIP_SHIELD_ULTRA","EQUIP_SHIELD_BLINK","SHIP_RED_MISSILE","propulsion","turnSpeed","resourcesMax","resources","equipMax","equip","crashSpeed","crashAngle","imageScale","imageFile","viewRange","aiType","EQUIP_ALIEN_MISSILE_LAUNCHER","createShip","EQUIP_R2D2","repairSpeed","EQUIP_GUNNERY_DROID","weapon","EQUIP_LIGHTING_DROID","EQUIP_SHIELD_DROID","SHIP_EXPLORER","SHIP_CARGO","SHIP_FAST","SHIP_SKELETON","SHIP_HEAVY","SHIP_FIGHTER","SHIP_WING","SHIP_ALIEN_TURRET","SHIP_ALIEN","SHIP_ALIEN_LARGE","SHIP_ALIEN_STAPLE_TURRET","SHIP_ALIEN_LIGHTNING_TURRET","SHIP_ALIEN_FIRE","SHIP_ALIEN_STEALTH","SHIP_ALIEN_MOTHERSHIP","SHIP_DECOY","SHIP_TURRET","SHIP_STREAM_TURRET","SHIP_MISSILE","SHIP_BOMB","SHIP_FRIENDSHIP_MISSILE","SHIP_RESOURCE_DROID","autonomousShip","ALL_ALIENS","ALL_SHIPS","EQUIP_DECOY_DEPLOYER","EQUIP_TURRET_DEPLOYER","EQUIP_STREAM_TURRET_DEPLOYER","EQUIP_MISSILE_LAUNCHER","EQUIP_BOMB_LAUNCHER","EQUIP_FRIENDSHIP_GUN","EQUIP_UPGRADES","EQUIP_PRIMARY_WEAPONS","EQUIP_SECONDARY_WEAPONS","EQUIP_DROIDS","ALL_EQUIP","XP_LEVELS","xp","obj","PLANET_DENSITY","Map","set","UNIVERSE_RINGS","planetCount","minDist","maxDist","minDistToOtherPlanet","minPlanetRadius","maxPlanetRadius","planetFiles","aliens","count","file","createEmptyWorld","appVersion","saveGameName","ship","view","ships","planets","selectedPlanet","lastPlanetLanded","gameTickCount","nextId","introDialogShown","blueprints","xpLevels","lodash","cloneDeep","keys","buttonKeyDown","up","right","down","left","shoot","app","gameState","isTyping","gameLoop","bgSprite","smokeSheet","explosionSheet","explosions","bullets","nearby","planetSpriteCache","shipSpriteCache","shieldSpriteCache","spriteContainers","background","minimap","screenHeight","screenWidth","miniMapGraphics","initializing","continuousFire","continuousFireUp","setupWorld","setupSpriteContainers","createBackground","createPlanets","otherPlanet","i","length","jumpToX","jumpToY","createWormholeLinks","shipStartX","shipStartY","getShipSprite","visible","createAliens","createExtras","setupMiniMap","setupExplosionSheet","mainStage","stage","PIXI","Container","addChild","resource","Loader","shared","spritesheet","container","TilingSprite","Texture","from","ring","fileName","utils","String","fromCharCode","get","maxResource","minResource","createPlanet","getFreeXy","nearestPlanetDistance","origPlanet","nearestPlanet","dist","nearestPlanetDist","nearestAlienDistance","nearestAlien","alien","nearestAlienDist","minDistToPlanet","minDistToAlien","failCount","console","warn","planetFile","id","stored","raw","buildings","lastLandingDir","spriteId","getPlanetSprite","planetContainer","wormholeSprite","AnimatedSprite","animations","animationSpeed","loop","anchor","scale","play","planetSprite","Sprite","loader","textures","spriteScale","building","manage","makeBuildingSprite","entries","foundSprite","rotation","spriteWidth","spriteHeight","height","spriteSheet","getSpriteOrigWithHeight","origWidth","origHeight","setShieldRadius","shieldSprite","shipSprite","shieldWidth","getShieldSprite","cacheId","shipType","owner","selectedSecondaryWeaponIndex","vx","vy","alive","createAlien","alienInfo","newPlanet","mothershipTemplate","miniMapContainer","mask","Graphics","drawRect","renderable","cacheAsBitmap","g","click","data","global","scaledX","scaledY","fly","clickOnMinimap","changeGameState","newState","enterFlyState","flyLoop","enterManageState","manageLoop","runBuildings","mineResource","children","buildingSprite","resourceType","nextLevel","addBlueprint","shift","addMiningXp","addAlienXp","canAfford","payResourceCost","payResource","paid","createExplosionSprite","log","delta","setupNearby","runDroids","turnShip","d","w","propelShip","s","brake","getEquip","brakeShip","space","firePrimaryWeapon","fireSecondaryWeapon","q","thrustShip","e","planetsInView","planetInView","grav","game","detectCollisionWithPlanet","landShip","detectCollisionWithAlien","shipsCollide","moveExplosions","moveBackground","drawMiniMap","minX","maxX","minY","maxY","repositionScreen","ai","moveAliens","coolAllWeapons","coolWeapons","disableShield","resetWeaponsCool","droid","shootAtNearestAlien","weaponRange","origDir","fireWeapon","tilePosition","getActiveShield","getAvailableShieldEquip","hasShieldDroid","getEquippedShield","point","planetDir","xPos","yPos","xSpeed","ySpeed","dirDiff","abs","success","hasAutolander","speedDiff","dirDiffAdj","damageShip","resetGame","r","getExplosionSprite","explosionSprite","playerShip","bigExplosion","nearbyShip","distToShip","onLoop","stop","destroyShip","afterExplosion","getAvailablePlanetXY","thruster","thrustX","thrustY","fireBullet","gun","getSecondaryWeapon","selectFirstSecondaryWeapon","child","childSprite","childDistFromShip","checkForCollisionWithPlanet","checkForCollisionWithShip","enableShield","bullet","findOrCreateBullet","jitterAmt","killBullet","moveBullets","checkForBulletCollision","bulletWillHitShip","shieldEquip","bulletHitShip","useShield","shipDamage","alienDamage","equipType","t","clear","beginFill","lineStyle","endFill","planetOnMap","planetColor","drawCircle","buildingX","buildingY","clickX","clickY","primaryWeaponRange","takeOff","boost","gravity","getBuildingInfo","buildingType","animation","buildMine","mine","getBuildingPlacementRotation","distanceFromShip","deg","degX","degY","buildingWidth","buildingFits","minBuildingWidth","transferResource","source","target","requestedAmtStr","maxCapacity","requestedAmt","Number","isNaN","amt","spaceLeft","unloadShip","resupplyShip","desiredAmt","freeAmt","desiredTitanium","buildFactory","factory","buildShip","shipTemplate","launchDroidShip","newShip","switchToShip","oldShip","removeShipFromStorage","addShipToStorage","newShipSprite","filter","removedShip","hasFactory","makeEquip","equipTemplate","buildEquip","aiData","homePlanet","targetPlanet","getTargetPlanetWithResources","costToRepair","repairShip","addArmor","titaniumOnHand","addEquip","newEquip","moveEquipFromPlanetToShip","equipToMove","remove","moveEquipFromShipToPlanet","shipResources","owing","this","removeResource","salvageEquip","salvageShip","canEquip","includes","find","eq","hasMoved","creeperAi","turretAi","missileAi","mothershipAi","resourceDroidAi","alienSprite","shootAt","shooter","turretShip","getNearestOpponentTarget","distanceToPlayer","enableShieldIfNeeded","stuckCounter","newTarget","counter","dirToTarget","getXYToMoveTowards","unloadDroid","loadDroid","hasDroids","summonAllDroids","currPlanet","droidCount","planetsWithResources","homePlanetId","resourcesMined","totalResources","sort","minPlanetDist","planetInfo","score","planetOptions","slice","totalScore","reduce","prev","curr","chosenValue","planetOption","getNearestAlienTarget","getNearestPlayerTarget","getNearestFriendlyTarget","missile","goAround","obstacleX","obstacleY","dirToObstacle","rightLeft","turnDir","moveAmts","shipToMove","targetX","targetY","crashIntoEnemy","moveAmt","willCollideWithPlanet","nearestShip","getNearestShip","willCollideWithShip","shipId","shipRadius","crashIntoPlayer","moved","playerTarget","distToOpponent","friend","otherShip","getShield","saveLocalStorage","objToSave","localStorage","getItem","removeItem","setItem","JSON","stringify","loadLocalStorage","objString","parse","upgradeDB","db","result","oldVersion","deleteObjectStore","createObjectStore","keyPath","loadWorld","dbRequest","indexedDB","open","onerror","onupgradeneeded","onsuccess","request","transaction","objectStore","newWorld","oldSystem","removeChildren","saveWorld","worldToStore","omit","objectStoreRequest","put","deleteWorld","delete","HEATBAR","Heatbar","topFree","colorImgSrc","className","style","IMG_WIDTH","IMG_HEIGHT","src","alt","clipPath","PushButton","selected","onChange","imgFile","onClick","BUTTON","StatusButton","rightFree","getStatus","InfoFly","buttonDown","buttonUp","killContextMenu","preventDefault","stopPropagation","backgroundImage","backgroundSize","paddingLeft","paddingRight","textAlign","cellPadding","colSpan","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onContextMenu","display","ManagePlanet","useState","titaniumAmt","setTitaniumAmt","goldAmt","setGoldAmt","uraniumAmt","setUraniumAmt","shipOnPlanet","disabled","round","marginLeft","defaultValue","marginTop","FactoryButtonRow","template","existingInventory","templateArg","FactoryTab","templateList","maxHeight","minWidth","FactoryTabs","upgrades","primaryWeapons","secondaryWeapons","droids","Tabs","defaultActiveKey","Tab","eventKey","ManageStorage","selectedShip","setSelectedShip","currentShip","selectedShipEquip","concat","viewShip","confirm","ManageSystem","nameInput","useRef","gameNames","savegame","setCurrentGame","newName","current","addGameName","newGameName","onFocus","onBlur","ref","saveGame","gameName","loadGame","deleteGame","color","CodeEntry","showCodeEntry","setShowCodeEntry","onCenterPlanet","steep","setSteep","heap","setHeap","deep","setDeep","steepOk","setSteepOk","heapOk","setHeapOk","deepOk","setDeepOk","codesAllGood","toUpperCase","href","ManageLog","timeSpentMin","timeSpentHr","translations","Object","entry","ManageTabs","mountOnEnter","unmountOnExit","InfoPanel","React","Component","App","props","createPixiApp","Application","renderer","backgroundColor","pixiRef","appendChild","add","load","setupGame","setupKeyboardListeners","setupWindowResizeListener","plugins","interaction","on","ticker","mainLoop","forceUpdate","createRef","resizeScreenToWindow","h","innerHeight","innerWidth","resize","fontSize","document","body","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.22711f7d.chunk.js","sourcesContent":["import { c } from './';\nimport Swal from \"sweetalert2\";\n\n/**\n * Returns the distance between two points \n */\nexport function distanceBetween(ax, ay, bx, by) {\n  return Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n}\n  \n/**\n * Returns array with [x,y] of midpoint between two points\n * Both params should be [x,y]\n */\nexport function midPoint(a, b) {\n  return [(a[0]+b[0])/2, (a[1]+b[1])/2];\n}\n\n/**\n * Convert the angle to 0 <= rad <= 2*PI \n */\nexport function normalizeRadian(radians) {\n  let retVal = radians;\n  if (retVal < 0) {\n    retVal += Math.PI * 2;\n  }\n  if (retVal > Math.PI * 2) {\n    retVal -= Math.PI * 2;\n  }\n  return retVal;\n}\n  \n/**\n * Calc gravity for point.\n * @return {x,y,dir} This will be the x and y forces applied to the object (not a point)\n */\nexport function calcGravity(x, y, planet) {\n  let distance = distanceBetween(x, y, planet.x, planet.y);\n  if (distance < 10) {\n    distance = 10;\n  }\n  let gravityDirection = Math.atan2(x - planet.x, y - planet.y);\n  let gravityX = c.GRAVITATIONAL_CONST * planet.mass / Math.pow(distance, 2) * -Math.sin(gravityDirection);\n  let gravityY = c.GRAVITATIONAL_CONST * planet.mass / Math.pow(distance, 2) * -Math.cos(gravityDirection);\n  return {x:gravityX, y:gravityY, dir:gravityDirection};\n}\n\n/**\n * @return the angle x1,y1 would need to face to point directly at x2,y2\n */\nexport function directionTo(x1,y1, x2,y2) {\n  return normalizeRadian(Math.atan2(y2 - y1, x2 - x1));\n}\n\n/**\n * @return {{xAmt: number, yAmt: number}} splitting the dir and amount into x,y portions\n */\nexport function dirComponents(dir, amount) {\n  let xAmt = amount * Math.cos(dir);\n  let yAmt = amount * Math.sin(dir);\n  return {xAmt, yAmt};\n}\n\n/**\n * @return an int between min and max inclusive\n */\nexport function randomInt(minP, maxP) {\n  let min = Math.ceil(minP);\n  let max = Math.floor(maxP);\n  return Math.floor(Math.random() * (max - min +1) + min); \n}\n\n/**\n * @return a random floating point number between min and max\n */\nexport function randomFloat(min, max) {\n  return min + (Math.random() * (max - min));\n}\n\n/**\n * @return true 50% of the time\n */\nexport function randomBool() {\n  return Math.random() > 0.5;\n}\n\n/**\n * @return add distance in direction to startX,startY \n */\nexport function getPointFrom(startX, startY, dir, distance) {\n  let x = startX + (distance * Math.cos(dir));\n  let y = startY + (distance * Math.sin(dir));\n  return {x,y};\n}\n\n/**\n * return a collection of points [[x,y],[x,y]] on a rectangular sprite that can be used for collision detection\n * param x,y global x,y position of sprite (on main map, not in viewport)\n * NOTE: This will scale based on the scaleFactor set by the window size\n */\nexport function getVertexData(x,y, sprite) {\n  sprite.calculateVertices();\n  const vertices = sprite.vertexData.map(p => p / window.world.system.screenScale);\n  let collisionPoints = []; // [[x,y],[x,y]]\n  collisionPoints.push(toGlobal(x, y, vertices[0], vertices[1])); // top left\n  collisionPoints.push(toGlobal(x, y, vertices[2], vertices[3])); // top right\n  collisionPoints.push(toGlobal(x, y, vertices[4], vertices[5])); // bottom right\n  collisionPoints.push(toGlobal(x, y, vertices[6], vertices[7])); // bottom left\n  // Add a few points between to help with border collisions (these have already been converted to global)\n  collisionPoints.push(midPoint(collisionPoints[0], collisionPoints[1]));\n  collisionPoints.push(midPoint(collisionPoints[1], collisionPoints[2]));\n  collisionPoints.push(midPoint(collisionPoints[2], collisionPoints[3]));\n  collisionPoints.push(midPoint(collisionPoints[3], collisionPoints[0]));\n  return collisionPoints;\n}\n\n/**\n * Converts the local sprite-based x,y to global based on ship's position\n * @return [x,y] in global map coordinates\n */\nexport function toGlobal(globalX,globalY, spriteX,spriteY) {\n  return [globalX + (spriteX - c.HALF_SCREEN_WIDTH), globalY+ (spriteY - c.HALF_SCREEN_HEIGHT)];\n}\n\n\n/**\n * return true if the pX,pY (global positions) is inside the sprite at x,y\n * param x,y global x,y position of sprite (on main map, not in viewport)\n */\nexport function pointInSprite(x,y, sprite, pX, pY) {\n  sprite.calculateVertices();\n  // scale the vertices for the screen scaling\n  const vertices = sprite.vertexData.map(p => p / window.world.system.screenScale);\n  const topLeft = (toGlobal(x, y, vertices[0], vertices[1])); // top left\n  const topRight = (toGlobal(x, y, vertices[2], vertices[3])); // top right\n  const bottomLeft = (toGlobal(x, y, vertices[6], vertices[7])); // bottom right\n  // Complicated math stuff\n  const AB = toVector(topLeft, topRight);\n  const AD = toVector(topLeft, bottomLeft);\n  const AM = toVector(topLeft, [pX, pY]);\n  const dotAMAB = dot(AM, AB);\n  const dotABAB = dot(AB, AB);\n  const dotAMAD = dot(AM, AD);\n  const dotADAD = dot(AD, AD);\n  return 0 <= dotAMAB && dotAMAB <= dotABAB && 0 <= dotAMAD && dotAMAD <= dotADAD;\n}\n\n// p1 and p2 are [x,y]\nfunction toVector(p1, p2) {\n  return [(p2[0] - p1[0]), (p2[1] - p1[1])];\n}\n\n// u and v are [x,y]\nfunction dot(u, v) {\n  return (u[0] * v[0]) + (u[1] * v[1]);\n}\n\n/**\n * Sets up a keyboard listener\n */\nexport function keyboardListener(value) {\n  let key = {};\n  key.value = value.toLowerCase();\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = event => {\n    if (event.key.toLowerCase() === key.value) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n    }\n  };\n  //The `upHandler`\n  key.upHandler = event => {\n    if (event.key.toLowerCase() === key.value) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n    }\n  };\n  //Attach event listeners\n  const downListener = key.downHandler.bind(key);\n  const upListener = key.upHandler.bind(key);\n  window.addEventListener(\n    \"keydown\", downListener, false\n  );\n  window.addEventListener(\n    \"keyup\", upListener, false\n  );\n  // Detach event listeners\n  key.unsubscribe = () => {\n    window.removeEventListener(\"keydown\", downListener);\n    window.removeEventListener(\"keyup\", upListener);\n  };\n  return key;\n}\n\nexport function showToast(text) {\n  Swal.fire({\n    title: text,\n    timer: 5000,\n    position:'top-left',\n    showConfirmButton: false,\n    toast:true,\n    width: '40vw',\n    showClass: {\n      popup: 'animate__animated animate__slideInDown'\n    },\n    hideClass: {\n      popup: 'animate__animated animate__slideOutUp'\n    }\n  }).then();\n}","// Main Version\nexport const APP_VERSION = \"0.5tr\";\n// Colors\nexport const BLACK = 0X000000;\nexport const YELLOW = 0xFFCC55;\nexport const BLUE = 0x00AAFF;\nexport const WHITE = 0xFFFFFF;\nexport const DARKER_GREY = 0x202020;\nexport const DARK_GREY = 0x303030;\nexport const LIGHT_GREY = 0x909090;\nexport const GREY = 0x808080;\nexport const RED = 0x500000;\nexport const GREEN = 0x005000;\nexport const PURPLE = 0x500050;\n\nexport const GAME_STATE = {\n  INIT: \"init\",\n  FLY: \"fly\",\n  MANAGE: \"manage\"\n};\n\n// Saved games\nexport const LOCALSTORAGE_GAME_NAMES_KEY = 'saved-game-names';\n\n// Screen Layout\nexport const SCREEN_WIDTH = 1000;\nexport const SCREEN_HEIGHT = 1000;\nexport const HALF_SCREEN_WIDTH = SCREEN_WIDTH / 2;\nexport const HALF_SCREEN_HEIGHT = SCREEN_HEIGHT / 2;\nexport const NEARBY_WIDTH = SCREEN_WIDTH * 3;\nexport const NEARBY_HEIGHT = SCREEN_HEIGHT * 3;\n// size of minimap on screen\nexport const MINIMAP_WIDTH = 250;\nexport const MINIMAP_HEIGHT = 250;\nexport const HALF_MINIMAP_WIDTH = MINIMAP_WIDTH / 2;\nexport const HALF_MINIMAP_HEIGHT = MINIMAP_HEIGHT / 2;\n// how far the minimap can view\nexport const MINIMAP_VIEW_WIDTH = 8000;\nexport const MINIMAP_VIEW_HEIGHT = 8000;\nexport const HALF_MINIMAP_VIEW_WIDTH = MINIMAP_VIEW_WIDTH / 2;\nexport const HALF_MINIMAP_VIEW_HEIGHT = MINIMAP_VIEW_HEIGHT / 2;\n// convert minimap pixels to real pixels\nexport const MINIMAP_SCALE_X = MINIMAP_WIDTH / MINIMAP_VIEW_WIDTH;\nexport const MINIMAP_SCALE_Y = MINIMAP_HEIGHT / MINIMAP_VIEW_HEIGHT;\n\n// Files\nexport const SPRITESHEET_JSON = \"images/spritesheet.json\";\nexport const ALIEN_SHIP_BLACK_FILE = \"alien_black.png\";\nexport const ALIEN_SHIP_BLUE_FILE = \"alien_blue.png\";\nexport const ALIEN_SHIP_BLUE_LARGE_FILE = \"alien_blue_large.png\";\nexport const ALIEN_SHIP_BLUE_SMALL_FILE = \"alien_blue_small.png\";\nexport const ALIEN_SHIP_FIRE_FILE = \"alien_fire.png\";\nexport const ALIEN_SHIP_GREEN_FILE = \"alien_green.png\";\nexport const ALIEN_SHIP_GREEN_SMALL_FILE = \"alien_green_small.png\";\nexport const ALIEN_SHIP_GREEN_LARGE_FILE = \"alien_green_large.png\";\nexport const ALIEN_SHIP_RED_FILE = \"alien_red.png\";\nexport const ALIEN_SHIP_RED_SMALL_FILE = \"alien_red_small.png\";\nexport const ALIEN_SHIP_RED_LARGE_FILE = \"alien_red_large.png\";\nexport const BULLET_FILE = \"bullet.png\";\nexport const BULLET_BLUE_FILE = \"bullet_blue.png\";\nexport const BULLET_WHITE_FILE = \"bullet_white.png\";\nexport const FACTORY_FILE = \"factory.png\";\nexport const MINE_FILE = \"mine\"; // animation name in json\nexport const PLANET_GREEN_FILE = \"planet_green.png\";\nexport const PLANET_PURPLE_FILE = \"planet_purple.png\";\nexport const PLANET_RED_FILE = \"planet_red.png\";\nexport const PLANET_ROCK_FILE = \"planet_rock.png\";\nexport const WORMHOLE_SPRITE = \"wormhole_sprite\" // Flag value to do wormhole sprite handling\nexport const SHIELD_BLUE_FILE = \"shield_blue.png\";\nexport const SHIELD_GREEN_FILE = \"shield_green.png\";\nexport const SHIELD_WHITE_FILE = \"shield_white.png\";\nexport const SHIP_BALL_FILE = \"ship_ball.png\";\nexport const SHIP_CARGO_FILE = \"ship_cargo.png\";\nexport const SHIP_EXPLORER_FILE = \"ship_explorer.png\";\nexport const SHIP_FAST_FILE = \"ship_fast.png\";\nexport const SHIP_FIGHTER_FILE = \"ship_fighter.png\";\nexport const SHIP_HEAVY_FILE = \"ship_heavy.png\";\nexport const SHIP_MISSILE_FILE = \"ship_missile.png\";\nexport const SHIP_RED_WINGS_FILE = \"ship_red_wings.png\";\nexport const SHIP_SKELETON_FILE = \"ship_skeleton.png\";\nexport const STAR_BACKGROUND_FILE = \"images/stars.png\";\nexport const CRASH_JSON = \"images/crash.json\";\nexport const CRASH = \"crash\"; // animation name in json\nexport const SMOKE_JSON = \"images/smoke.json\"\nexport const SMOKE = \"smoke\";\n\n// Misc\nexport const UNIVERSE_RADIUS = 40000;\nexport const OUTER_RING_MIN = 50000; // This is where we dump extra planets and aliens that won't fit into the universe\nexport const OUTER_RING_MAX = 70000;\nexport const PLAYER = \"player\";\nexport const ALIEN = \"alien\";\nexport const PLAYER_STARTING_RESOURCES = {titanium: 30, gold: 20, uranium: 0};\nexport const GRAVITATIONAL_CONST = 2;\nexport const ALLOWED_OVERLAP = 2; // overlap for fudging collision detection\nexport const TAKEOFF_SPEED = 10; // in units of planet gravity\nexport const PLANET_RESOURCE_MAX = 99999999;\nexport const PLAYER_START_X = -(UNIVERSE_RADIUS + 1000); // left of the universe\nexport const PLAYER_START_Y = 0;\nexport const MIN_ALIEN_DIST_TO_PLANET = 50;\nexport const MIN_ALIEN_DIST_TO_ALIEN = 3;\n\n// MiniMap colors\nexport const MINIMAP_BORDER_COLOR = LIGHT_GREY;\nexport const MINIMAP_BACKGROUND_COLOR = DARK_GREY;\nexport const MINIMAP_BUILDING_COLOR = BLUE;\nexport const MINIMAP_SHIP_COLOR = WHITE;\nexport const MINIMAP_SELECTED_PLANET_COLOR = YELLOW;\nexport const PLANET_COLORS = {\n  [PLANET_ROCK_FILE]: GREY,\n  [PLANET_RED_FILE]: RED,\n  [PLANET_GREEN_FILE]: GREEN,\n  [PLANET_PURPLE_FILE]: PURPLE,\n  [WORMHOLE_SPRITE]: DARKER_GREY,\n};\n\n// Buildings\nexport const BUILDING_PLACEMENT_ROTATION_INCREMENT = 0.05;\n// Mine\nexport const BUILDING_TYPE_MINE = \"mine\";\nexport const MINE_SCALE = 1;\nexport const MINE_WIDTH = 52;\nexport const MINE_ANIMATION_SPEED = 0.5;\nexport const MINE_SPEED_TITANIUM = 0.0166; // 1 every sec\nexport const MINE_SPEED_GOLD = 0.0083;  // 1 every 2 sec\nexport const MINE_SPEED_URANIUM = 0.0033; // 1 every 5 sec\nexport const MINE_COST = {titanium: 20, gold: 10, uranium: 0};\nexport const SALVAGE_RATE = 0.5; // amount returned when salvaging equipment or ships\n// Factory\nexport const BUILDING_TYPE_FACTORY = \"factory\";\nexport const FACTORY_COST = {titanium: 50, gold: 20, uranium: 10};\nexport const FACTORY_WIDTH = 91;\nexport const FACTORY_SCALE = 0.8;\n\n// Equipment\nexport const EQUIP_TYPE_BRAKE = \"Brake\";\nexport const EQUIP_TYPE_PRIMARY_WEAPON = \"Primary Weapon\";\nexport const EQUIP_TYPE_SECONDARY_WEAPON = \"Secondary Weapon\";\nexport const EQUIP_TYPE_THRUSTER = \"Thruster\";\nexport const EQUIP_TYPE_ARMOR = \"Armor\";\nexport const EQUIP_TYPE_REPAIR_DROID = \"Repair Droid\";\nexport const EQUIP_TYPE_GUNNERY_DROID = \"Gunnery Droid\";\nexport const EQUIP_TYPE_SHIELD_DROID = \"Shield Droid\";\nexport const EQUIP_TYPE_SPEED = \"Speed\";\nexport const EQUIP_TYPE_TURN = \"Turn\";\nexport const EQUIP_TYPE_STORAGE = \"Storage\";\nexport const EQUIP_TYPE_AUTOLANDER = \"Autolander\";\nexport const EQUIP_TYPE_GRAVITY_SHIELD = \"GravityShield\";\n\nexport const THRUST_MOMENTUM = \"Thrust Momentum\";\nexport const THRUST_BLINK = \"Thrust Blink\";\n\nexport const OBJ_EQUIP = \"Equip\";\nexport const OBJ_SHIP = \"Ship\";\n\nexport const ALIEN_AI_TURRET = \"ALIEN_AI_TURRET\";\nexport const ALIEN_AI_CREEPER = \"ALIEN_AI_CREEPER\";\nexport const ALIEN_AI_MOTHERSHIP = \"ALIEN_AI_MOTHERSHIP\";\nexport const ALIEN_AI_KAMIKAZI = \"ALIEN_AI_KAMIKAZI\";\nexport const EQUIP_AI_MINE = \"EQUIP_AI_MINE\";\nexport const EQUIP_AI_TURRET = \"EQUIP_AI_TURRET\";\nexport const EQUIP_AI_MISSILE = \"EQUIP_AI_MISSILE\";\nexport const EQUIP_AI_RESOURCE_DROID = \"EQUIP_AI_RESOURCE_DROID\";\n\nexport const DIR_AHEAD_OF_SHIP = \"ahead\";\nexport const DIR_BEHIND_SHIP = \"behind\";\n\n// Ship Upgrades\n// brakeSpeedPct is best between 0.02 - 0.1 (higher is ok)\nexport const EQUIP_BRAKE = {\n  name: \"Brake\", objType: OBJ_EQUIP, type: EQUIP_TYPE_BRAKE, brakeSpeedPct: 0.04,\n  cost: {titanium: 20, gold: 10, uranium: 0},\n  description: \"Slows your ship down.\",\n};\nexport const EQUIP_BLINK_BRAKE = {\n  name: \"Blink Brake\", objType: OBJ_EQUIP, type: EQUIP_TYPE_BRAKE, brakeSpeedPct: 0,\n  cost: {titanium: 50, gold: 50, uranium: 30},\n  description: \"Stops your ship immediately.\",\n};\nexport const EQUIP_SPEED_BOOST = {\n  name: \"Speed Booster\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SPEED, boostSpeed: 0.05,\n  cost: {titanium: 0, gold: 20, uranium: 10},\n  description: \"Increase the ship's acceleration. Helps slow ships take off of large planets.\",\n};\nexport const EQUIP_TURN_BOOST = {\n  name: \"Turn Booster\", objType: OBJ_EQUIP, type: EQUIP_TYPE_TURN, boostSpeed: 0.04,\n  cost: {titanium: 0, gold: 10, uranium: 20},\n  description: \"Increase turning speed.\",\n};\nexport const EQUIP_STORAGE = {\n  name: \"Storage\", objType: OBJ_EQUIP, type: EQUIP_TYPE_STORAGE, storageAmount: 100,\n  cost: {titanium: 30, gold: 0, uranium: 0},\n  description: \"100 more resource storage.\",\n};\nexport const EQUIP_ENHANCED_STORAGE = {\n  name: \"Enhanced Storage\", objType: OBJ_EQUIP, type: EQUIP_TYPE_STORAGE, storageAmount: 300,\n  cost: {titanium: 200, gold: 0, uranium: 0},\n  description: \"300 more resources.\",\n};\nexport const EQUIP_ARMOR = {\n  name: \"Armor Plate\", objType: OBJ_EQUIP, type: EQUIP_TYPE_ARMOR, armorAmt: 100,\n  cost: {titanium: 50, gold: 0, uranium: 0},\n  description: \"Increase armor by 100.\",\n};\nexport const EQUIP_ENHANCED_ARMOR = {\n  name: \"Enhanced Armor\", objType: OBJ_EQUIP, type: EQUIP_TYPE_ARMOR, armorAmt: 300,\n  cost: {titanium: 300, gold: 0, uranium: 0},\n  description: \"Increase armor by 300.\",\n};\nexport const EQUIP_THRUSTER = {\n  name: \"Thruster\", objType: OBJ_EQUIP, type: EQUIP_TYPE_THRUSTER, thrustSpeed: 0.08, thrustType: THRUST_MOMENTUM,\n  cost: {titanium: 40, gold: 40, uranium: 10},\n  description: \"Enable lateral movement. Use 'q' and 'e' keys.\",\n};\n// blink thrustSpeed is good from 2 to 10\nexport const EQUIP_BLINK_THRUSTER = {\n  name: \"Blink Thruster\", objType: OBJ_EQUIP, type: EQUIP_TYPE_THRUSTER, thrustSpeed: 2.5, thrustType: THRUST_BLINK,\n  cost: {titanium: 60, gold: 50, uranium: 10},\n  description: \"Lateral movement without momentum. Use 'q' and 'e' keys.\",\n};\nexport const EQUIP_AUTOLANDER = {\n  name: \"Auto Lander\", objType: OBJ_EQUIP, type: EQUIP_TYPE_AUTOLANDER,\n  cost: {titanium: 60, gold: 50, uranium: 10},\n  description: \"Never crash into a planet again!\",\n};\nexport const EQUIP_GRAVITY_SHIELD = {\n  name: \"Gravity Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_GRAVITY_SHIELD,\n  cost: {titanium: 100, gold: 200, uranium: 150},\n  description: \"Be free from the effect of gravity.\",\n};\n\n// Primary Weapons\nexport const EQUIP_BLASTER = {\n  name: \"Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 25,\n  cool: 0,\n  damage: 10,\n  speed: 2.5,\n  lifetime: 100,\n  jitter: 0.05,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 0, gold: 0, uranium: 10}\n};\nexport const EQUIP_FAST_BLASTER = {\n  name: \"Fast Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 10,\n  cool: 0,\n  damage: 7.5,\n  speed: 4,\n  lifetime: 75,\n  jitter: 0.05,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 20, gold: 20, uranium: 40}\n};\nexport const EQUIP_SPRINKLER_BLASTER = {\n  name: \"Sprinkler Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 2,\n  cool: 0,\n  damage: 8,\n  speed: 2.5,\n  lifetime: 150,\n  jitter: 1,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 10, gold: 10, uranium: 80}\n};\nexport const EQUIP_STREAM_BLASTER = {\n  name: \"Stream Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 4,\n  cool: 0,\n  damage: 8,\n  speed: 7,\n  lifetime: 70,\n  jitter: 0.04,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 0, gold: 50, uranium: 150}\n};\nexport const EQUIP_MELEE_GUN = {\n  name: \"Melee Gun\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 3,\n  cool: 0,\n  damage: 12,\n  speed: 3,\n  lifetime: 40,\n  jitter: 0.25,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 0, gold: 150, uranium: 200}\n};\nexport const EQUIP_SNIPER_RIFLE = {\n  name: \"Sniper Rifle\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 100,\n  cool: 0,\n  damage: 160,\n  speed: 9,\n  lifetime: 90,\n  jitter: 0.0,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 0, gold: 200, uranium: 300}\n};\nexport const EQUIP_ALIEN_BLASTER = {\n  name: \"Alien Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 20,\n  cool: 0,\n  damage: 5,\n  speed: 2,\n  lifetime: 120,\n  jitter: 0.12,\n  bulletFile: BULLET_BLUE_FILE,\n  cost: {titanium: 0, gold: 0, uranium: 5}\n};\nexport const EQUIP_ALIEN_BLASTER_FAST = {\n  name: \"Alien Fast Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 10,\n  cool: 0,\n  damage: 12,\n  speed: 5,\n  lifetime: 110,\n  jitter: 0.1,\n  bulletFile: BULLET_BLUE_FILE,\n  cost: {titanium: 0, gold: 50, uranium: 80}\n};\nexport const EQUIP_ALIEN_BLASTER_LIGHTNING = {\n  name: \"Alien Lighting Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 10,\n  cool: 0,\n  damage: 25,\n  speed: 12,\n  lifetime: 50,\n  jitter: 0.08,\n  bulletFile: BULLET_BLUE_FILE,\n  cost: {titanium: 0, gold: 300, uranium: 500}\n};\nexport const EQUIP_STAPLE_GUN = {\n  name: \"Staple Gun\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 3,\n  cool: 0,\n  damage: 5,\n  speed: 3,\n  lifetime: 250,\n  jitter: 0.2,\n  bulletFile: BULLET_WHITE_FILE,\n  cost: {titanium: 0, gold: 50, uranium: 200}\n};\nexport const EQUIP_STAPLE_GUN_HEAVY = {\n  name: \"Heavy Staple Gun\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 3,\n  cool: 0,\n  damage: 6,\n  speed: 3,\n  lifetime: 250,\n  jitter: 0.15,\n  bulletFile: BULLET_WHITE_FILE,\n  cost: {titanium: 0, gold: 250, uranium: 400}\n};\n\n// Secondary (more at end of file after the ships)\nexport const EQUIP_SHIELD = {\n  name: \"Force Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 600,\n  shield: {\n    active: false,\n    armor: 500,\n    armorMax: 500,\n    lifetime: 300,\n    lifetimeMax: 300,\n    spriteFile: SHIELD_BLUE_FILE,\n    radius: 0\n  },\n  cost: {titanium: 0, gold: 100, uranium: 10}\n};\n// This isn't a shield you want to buy\nexport const EQUIP_SHIELD_WEAK = {\n  name: \"Weak Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 800,\n  shield: {\n    active: false,\n    armor: 175,\n    armorMax: 175,\n    lifetime: 300,\n    lifetimeMax: 300,\n    spriteFile: SHIELD_BLUE_FILE,\n    radius: 0\n  },\n  cost: {titanium: 0, gold: 50, uranium: 10}\n};\nexport const EQUIP_SHIELD_LONG = {\n  name: \"Long Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 1200,\n  shield: {\n    active: false,\n    armor: 500,\n    armorMax: 500,\n    lifetime: 1100,\n    lifetimeMax: 1100,\n    spriteFile: SHIELD_WHITE_FILE,\n    radius: 0\n  },\n  cost: {titanium: 0, gold: 200, uranium: 10}\n};\nexport const EQUIP_SHIELD_STRONG = {\n  name: \"Strong Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 1000,\n  shield: {\n    active: false,\n    armor: 1500,\n    armorMax: 1500,\n    lifetime: 400,\n    lifetimeMax: 400,\n    spriteFile: SHIELD_GREEN_FILE,\n    radius: 0\n  },\n  cost: {titanium: 0, gold: 200, uranium: 10}\n};\nexport const EQUIP_SHIELD_ULTRA = {\n  name: \"Ultra Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 1000,\n  shield: {\n    active: false,\n    armor: 1200,\n    armorMax: 1200,\n    lifetime: 800,\n    lifetimeMax: 800,\n    spriteFile: SHIELD_BLUE_FILE,\n    radius: 0\n  },\n  cost: {titanium: 0, gold: 300, uranium: 100}\n};\nexport const EQUIP_SHIELD_BLINK = {\n  name: \"Blink Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 600,\n  shield: {\n    active: false,\n    armor: 900,\n    armorMax: 900,\n    lifetime: 500,\n    lifetimeMax: 500,\n    spriteFile: SHIELD_BLUE_FILE,\n    radius: 0\n  },\n  cost: {titanium: 0, gold: 500, uranium: 100}\n};\n\nexport const SHIP_RED_MISSILE = {\n  name: \"Alien Missile\",\n  objType: OBJ_SHIP,\n  propulsion: 0.08,\n  turnSpeed: 0.3,\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 0,\n  equip: [],\n  armorMax: 200,\n  armor: 200,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.8,\n  imageFile: ALIEN_SHIP_RED_SMALL_FILE,\n  cost: {titanium: 5, gold: 5, uranium: 10},\n  viewRange: SCREEN_WIDTH * 3,\n  aiType: ALIEN_AI_KAMIKAZI,\n};\n\nexport const EQUIP_ALIEN_MISSILE_LAUNCHER = {\n  name: \"Alien Missile Launcher\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 100, cool: 100,\n  createShip: {type: SHIP_RED_MISSILE, dir: DIR_AHEAD_OF_SHIP},\n  cost: {titanium: 150, gold: 150, uranium: 200},\n  description: \"Fires red alien missiles that persistently follow enemies.\",\n};\n\n// Droids\nexport const EQUIP_R2D2 = {\n  name: \"R2D2 Repair Droid\", objType: OBJ_EQUIP, type: EQUIP_TYPE_REPAIR_DROID, repairSpeed: 0.2,\n  cost: {titanium: 50, gold: 300, uranium: 100},\n  description: \"Repairs your ship while you are flying.\"\n};\nexport const EQUIP_GUNNERY_DROID = {\n  name: \"Gunnery Droid\", objType: OBJ_EQUIP, type: EQUIP_TYPE_GUNNERY_DROID,\n  weapon: EQUIP_FAST_BLASTER, cost: {titanium: 100, gold: 400, uranium: 200},\n  description: \"Fires a fast blaster at the nearest enemy.\",\n};\nexport const EQUIP_LIGHTING_DROID = {\n  name: \"Lightning Droid\", objType: OBJ_EQUIP, type: EQUIP_TYPE_GUNNERY_DROID,\n  weapon: EQUIP_ALIEN_BLASTER_LIGHTNING, cost: {titanium: 100, gold: 500, uranium: 300},\n  description: \"Fires a lightning blaster at the nearest enemy.\",\n};\nexport const EQUIP_SHIELD_DROID = {\n  name: \"Shield Droid\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SHIELD_DROID,\n  cost: {titanium: 50, gold: 600, uranium: 50},\n  description: \"Deploys your shields automatically when bullets are flying.\",\n};\n\n// Ships\nexport const SHIP_EXPLORER = {\n  name: \"Explorer\",\n  objType: OBJ_SHIP,\n  propulsion: 0.05, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 50,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 4,\n  equip: [EQUIP_BRAKE, EQUIP_BLASTER],\n  armorMax: 50,\n  armor: 50,\n  crashSpeed: 2,\n  crashAngle: 0.5,\n  imageScale: 0.6,\n  imageFile: SHIP_EXPLORER_FILE,\n  cost: {titanium: 40, gold: 20, uranium: 10},\n  description: \"A basic ship with good handling and 4 slots.\",\n};\n\nexport const SHIP_CARGO = {\n  name: \"Cargo\",\n  objType: OBJ_SHIP,\n  propulsion: 0.025, // best between 0.02 - 0.1\n  turnSpeed: 0.02, // // best between 0.3 - 0.07\n  resourcesMax: 750,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 3,\n  equip: [EQUIP_BRAKE],\n  armorMax: 20,\n  armor: 20,\n  crashSpeed: 1.2,\n  crashAngle: 0.3,\n  imageScale: 1,\n  imageFile: SHIP_CARGO_FILE,\n  cost: {titanium: 100, gold: 50, uranium: 50},\n  description: \"A large, slow ship that can carry 750 resources, but only has 3 slots.\",\n};\n\nexport const SHIP_FAST = {\n  name: \"Fast\",\n  objType: OBJ_SHIP,\n  propulsion: 0.1, // best between 0.02 - 0.1\n  turnSpeed: 0.07, // // best between 0.3 - 0.07\n  resourcesMax: 40,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 5,\n  equip: [EQUIP_BRAKE],\n  armorMax: 50,\n  armor: 50,\n  crashSpeed: 2,\n  crashAngle: 0.5,\n  imageScale: 0.6,\n  imageFile: SHIP_FAST_FILE,\n  cost: {titanium: 200, gold: 100, uranium: 50},\n  description: \"A fast ship with good handling and 5 slots.\",\n};\n\nexport const SHIP_SKELETON = {\n  name: \"Skeleton\",\n  objType: OBJ_SHIP,\n  propulsion: 0.03, // best between 0.02 - 0.1\n  turnSpeed: 0.03, // // best between 0.3 - 0.07\n  resourcesMax: 30,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 8,\n  equip: [],\n  armorMax: 50,\n  armor: 50,\n  crashSpeed: 2,\n  crashAngle: 0.5,\n  imageScale: 0.7,\n  imageFile: SHIP_SKELETON_FILE,\n  cost: {titanium: 200, gold: 200, uranium: 50},\n  description: \"A framework with 8 slots that makes it flexible.\",\n};\n\nexport const SHIP_HEAVY = {\n  name: \"Heavy\",\n  objType: OBJ_SHIP,\n  propulsion: 0.055, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 300,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 8,\n  equip: [EQUIP_BRAKE],\n  armorMax: 500,\n  armor: 500,\n  crashSpeed: 1.5,\n  crashAngle: 0.4,\n  imageScale: 0.5,\n  imageFile: SHIP_HEAVY_FILE,\n  cost: {titanium: 500, gold: 400, uranium: 300},\n  description: \"A large ship with 500 armor, 300 resources and 8 slots.\",\n};\n\nexport const SHIP_FIGHTER = {\n  name: \"Fighter\",\n  objType: OBJ_SHIP,\n  propulsion: 0.08, // best between 0.02 - 0.1\n  turnSpeed: 0.07, // // best between 0.3 - 0.07\n  resourcesMax: 200,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 10,\n  equip: [EQUIP_BRAKE],\n  armorMax: 300,\n  armor: 300,\n  crashSpeed: 1.5,\n  crashAngle: 0.6,\n  imageScale: 0.6,\n  imageFile: SHIP_FIGHTER_FILE,\n  cost: {titanium: 500, gold: 500, uranium: 500},\n  description: \"A fast, ship with 300 armor, 200 resources and 10 slots.\",\n};\n\nexport const SHIP_WING = {\n  name: \"Wing Ship\",\n  objType: OBJ_SHIP,\n  propulsion: 0.075, // best between 0.02 - 0.1\n  turnSpeed: 0.06, // // best between 0.3 - 0.07\n  resourcesMax: 300,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 12,\n  equip: [EQUIP_BLINK_BRAKE],\n  armorMax: 500,\n  armor: 500,\n  crashSpeed: 3,\n  crashAngle: 0.5,\n  imageScale: 0.7,\n  imageFile: SHIP_RED_WINGS_FILE,\n  cost: {titanium: 1000, gold: 1000, uranium: 1000},\n  description: \"A large ship with good handling 500 armor, 300 resources and 12 slots.\",\n};\n\nexport const SHIP_ALIEN_TURRET = {\n  name: \"Alien Turret\",\n  objType: OBJ_SHIP,\n  propulsion: 0.001, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 3,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER],\n  armorMax: 100,\n  armor: 100,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.8,\n  imageFile: ALIEN_SHIP_GREEN_SMALL_FILE,\n  cost: {titanium: 50, gold: 50, uranium: 50},\n  aiType: ALIEN_AI_TURRET,\n  description: \"A basic turret with an alien blaster\",\n};\n\nexport const SHIP_ALIEN = {\n  name: \"Alien Ship\",\n  objType: OBJ_SHIP,\n  propulsion: 0.05, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 5,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER],\n  armorMax: 100,\n  armor: 100,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.9,\n  imageFile: ALIEN_SHIP_GREEN_FILE,\n  cost: {titanium: 150, gold: 100, uranium: 80},\n  aiType: ALIEN_AI_CREEPER,\n  description: \"The basic alien scout ship.\",\n};\n\nexport const SHIP_ALIEN_LARGE = {\n  name: \"Alien Large\",\n  objType: OBJ_SHIP,\n  propulsion: 0.03, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 8,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER_FAST],\n  armorMax: 300,\n  armor: 300,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1,\n  imageFile: ALIEN_SHIP_GREEN_LARGE_FILE,\n  cost: {titanium: 150, gold: 100, uranium: 80},\n  aiType: ALIEN_AI_CREEPER,\n  description: \"A large heavily armored alien.\",\n};\n\nexport const SHIP_ALIEN_STAPLE_TURRET = {\n  name: \"Alien Staple Turret\",\n  objType: OBJ_SHIP,\n  propulsion: 0.00,\n  turnSpeed: 0.001,\n  resourcesMax: 100,\n  resources: {\n     titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 3,\n  equip: [EQUIP_BRAKE, EQUIP_STAPLE_GUN_HEAVY],\n  armorMax: 230,\n  armor: 230,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1.3,\n  imageFile: ALIEN_SHIP_BLUE_SMALL_FILE,\n  cost: {titanium: 150, gold: 150, uranium: 200},\n  aiType: ALIEN_AI_TURRET,\n  description: \"A hard-to-hit turret with a heavy staple gun.\",\n};\n\nexport const SHIP_ALIEN_LIGHTNING_TURRET = {\n  name: \"Alien Lightning Turret\",\n  objType: OBJ_SHIP,\n  propulsion: 0.00,\n  turnSpeed: 0.001,\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 1,\n  equip: [EQUIP_ALIEN_BLASTER_LIGHTNING],\n  armorMax: 300,\n  armor: 300,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1.5,\n  imageFile: ALIEN_SHIP_BLUE_SMALL_FILE,\n  cost: {titanium: 100, gold: 200, uranium: 300},\n  aiType: ALIEN_AI_TURRET,\n  description: \"A turret that shoots lightning bolts.\",\n};\n\nexport const SHIP_ALIEN_FIRE = {\n  name: \"Alien Fire\",\n  objType: OBJ_SHIP,\n  propulsion: 0.08, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 8,\n  equip: [EQUIP_BRAKE, EQUIP_STAPLE_GUN_HEAVY, EQUIP_SHIELD_LONG],\n  armorMax: 450,\n  armor: 450,\n  crashSpeed: 2,\n  crashAngle: 0.4,\n  imageScale: 1.5,\n  imageFile: ALIEN_SHIP_FIRE_FILE,\n  cost: {titanium: 250, gold: 200, uranium: 80},\n  aiType: ALIEN_AI_CREEPER,\n  description: \"A tough alien ship with a shield and heavy staple gun.\",\n};\n\nexport const SHIP_ALIEN_STEALTH = {\n  name: \"Alien Stealth\",\n  objType: OBJ_SHIP,\n  propulsion: 0.04, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 6,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER_FAST],\n  armorMax: 150,\n  armor: 150,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1.5,\n  imageFile: ALIEN_SHIP_BLACK_FILE,\n  cost: {titanium: 100, gold: 200, uranium: 150},\n  aiType: ALIEN_AI_CREEPER,\n  description: \"An alien with a cloak making it hard to see.\",\n};\n\nexport const SHIP_ALIEN_MOTHERSHIP = {\n  name: \"Alien Mothership\",\n  objType: OBJ_SHIP,\n  propulsion: 0.00,\n  turnSpeed: 0.001,\n  resourcesMax: 10000,\n  resources: {\n    titanium: 1000,\n    gold: 1000,\n    uranium: 2000,\n  },\n  equipMax: 10,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_MISSILE_LAUNCHER, EQUIP_SHIELD_ULTRA, EQUIP_ALIEN_BLASTER_LIGHTNING],\n  armorMax: 1000,\n  armor: 1000,\n  crashSpeed: 3,\n  crashAngle: 10,\n  imageScale: 1.3,\n  imageFile: ALIEN_SHIP_RED_LARGE_FILE,\n  cost: {titanium: 1200, gold: 1000, uranium: 750},\n  aiType: ALIEN_AI_MOTHERSHIP,\n  description: \"A large heavily armored ship with smart missiles.\",\n};\n\nexport const SHIP_DECOY = {\n  name: \"Decoy\",\n  objType: OBJ_SHIP,\n  propulsion: 0.0,\n  turnSpeed: 0.0,\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 0,\n  equip: [],\n  armorMax: 350,\n  armor: 350,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.55,\n  imageFile: SHIP_EXPLORER_FILE,\n  cost: {titanium:10, gold: 0, uranium: 0},\n  aiType: EQUIP_AI_MINE,\n  description: \"An empty shell of a ship.\",\n};\n\nexport const SHIP_TURRET = {\n  name: \"Turret\",\n  objType: OBJ_SHIP,\n  propulsion: 0.0,\n  turnSpeed: 0.0,\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 1,\n  equip: [EQUIP_FAST_BLASTER],\n  armorMax: 350,\n  armor: 350,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.6,\n  imageFile: ALIEN_SHIP_BLUE_LARGE_FILE,\n  cost: {titanium: 5, gold: 10, uranium: 5},\n  aiType: EQUIP_AI_TURRET,\n  description: \"A turret with a fast blaster.\",\n};\n\nexport const SHIP_STREAM_TURRET = {\n  name: \"Stream Turret\",\n  objType: OBJ_SHIP,\n  propulsion: 0.0,\n  turnSpeed: 0.0,\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 1,\n  equip: [EQUIP_STREAM_BLASTER],\n  armorMax: 250,\n  armor: 250,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.4,\n  imageFile: ALIEN_SHIP_BLUE_LARGE_FILE,\n  cost: {titanium: 10, gold: 30, uranium: 20},\n  aiType: EQUIP_AI_TURRET,\n  description: \"A turret with a stream blaster\",\n};\n\nexport const SHIP_MISSILE = {\n  name: \"Missile\",\n  objType: OBJ_SHIP,\n  propulsion: 0.08,\n  turnSpeed: 0.25,\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 0,\n  equip: [],\n  armorMax: 250,\n  armor: 250,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1,\n  imageFile: SHIP_BALL_FILE,\n  cost: {titanium: 0, gold: 15, uranium: 15},\n  aiType: EQUIP_AI_MISSILE,\n  description: \"An enemy seeking missile.\",\n};\n\nexport const SHIP_BOMB = {\n  name: \"Bomb\",\n  objType: OBJ_SHIP,\n  propulsion: 0.05,\n  turnSpeed: 0.10, // not really used\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 0,\n  equip: [],\n  armorMax: 70,\n  armor: 70,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.5,\n  imageFile: ALIEN_SHIP_RED_FILE,\n  cost: {titanium: 0, gold: 0, uranium: 30},\n  aiType: EQUIP_AI_MISSILE,\n  description: \"When it dies it detonates damaging everything nearby\",\n};\n\nexport const SHIP_FRIENDSHIP_MISSILE = {\n  name: \"Friendship Missile\",\n  objType: OBJ_SHIP,\n  propulsion: 0.09, // best between 0.02 - 0.1\n  turnSpeed: 0.25, // // best between 0.3 - 0.07\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 0,\n  equip: [EQUIP_SHIELD_WEAK],\n  armorMax: 40,\n  armor: 40,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.5,\n  imageFile: ALIEN_SHIP_BLUE_FILE,\n  cost: {titanium: 5, gold: 30, uranium: 0},\n  aiType: EQUIP_AI_MISSILE,\n  description: \"A missile that turns enemies into friends.\",\n};\n\nexport const SHIP_RESOURCE_DROID = {\n  name: \"Resource Droid\",\n  objType: OBJ_SHIP,\n  propulsion: 0.1,\n  turnSpeed: 0.1,\n  resourcesMax: 50,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 0,\n  equip: [],\n  armorMax: 10,\n  armor: 10,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1,\n  imageFile: SHIP_MISSILE_FILE,\n  cost: {titanium: 30, gold: 20, uranium: 0},\n  aiType: EQUIP_AI_RESOURCE_DROID,\n  autonomousShip: true, // Used to launch the ship\n  description: \"Self-piloting ship that brings resources to this planet.\",\n};\n\nexport const ALL_ALIENS = [SHIP_ALIEN_TURRET, SHIP_ALIEN, SHIP_ALIEN_LARGE, SHIP_ALIEN_STEALTH,  SHIP_ALIEN_STAPLE_TURRET, SHIP_ALIEN_FIRE, SHIP_ALIEN_MOTHERSHIP];\nexport const ALL_SHIPS = [SHIP_EXPLORER, SHIP_CARGO, SHIP_FAST, SHIP_RESOURCE_DROID, SHIP_SKELETON, SHIP_HEAVY, SHIP_FIGHTER, SHIP_WING, ...ALL_ALIENS];\n\n// This equipment needs to go after the ships (ugh)\nexport const EQUIP_DECOY_DEPLOYER = {\n  name: \"Decoy Deployer\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 25, cool: 0,\n  createShip: {type: SHIP_DECOY, dir: DIR_BEHIND_SHIP},\n  cost: {titanium: 0, gold: 50, uranium: 100},\n  description: \"Drops a fake ship.\"\n};\nexport const EQUIP_TURRET_DEPLOYER = {\n  name: \"Turret Deployer\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 100, cool: 0,\n  createShip: {type: SHIP_TURRET, dir: DIR_BEHIND_SHIP},\n  cost: {titanium: 0, gold: 200, uranium: 100},\n  description: \"Drops a turret with a fast blaster.\",\n};\nexport const EQUIP_STREAM_TURRET_DEPLOYER = {\n  name: \"Stream Turret Deployer\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 100, cool: 0,\n  createShip: {type: SHIP_STREAM_TURRET, dir: DIR_BEHIND_SHIP},\n  cost: {titanium: 100, gold: 400, uranium: 400},\n  description: \"Drops a turret with a stream blaster.\",\n};\nexport const EQUIP_MISSILE_LAUNCHER = {\n  name: \"Missile Launcher\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 100, cool: 0,\n  createShip: {type: SHIP_MISSILE, dir: DIR_AHEAD_OF_SHIP},\n  cost: {titanium: 50, gold: 250, uranium: 300},\n  description: \"Fires enemy-seeking missiles.\",\n};\nexport const EQUIP_BOMB_LAUNCHER = {\n  name: \"Bomb Launcher\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 80, cool: 0,\n  createShip: {type: SHIP_BOMB, dir: DIR_AHEAD_OF_SHIP},\n  cost: {titanium: 250, gold: 300, uranium: 400},\n  description: \"Fires explosive missiles.\",\n};\nexport const EQUIP_FRIENDSHIP_GUN = {\n  name: \"Friendship Gun\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 150, cool: 0,\n  createShip: {type: SHIP_FRIENDSHIP_MISSILE, dir: DIR_AHEAD_OF_SHIP},\n  cost: {titanium: 100, gold: 300, uranium: 100},\n  description: \"Fires a missile that turns your enemies into allies.\",\n};\n\n\nexport const EQUIP_UPGRADES = [EQUIP_BRAKE, EQUIP_BLINK_BRAKE, EQUIP_THRUSTER, EQUIP_BLINK_THRUSTER, EQUIP_ARMOR, EQUIP_SPEED_BOOST, EQUIP_TURN_BOOST,\n  EQUIP_STORAGE, EQUIP_ENHANCED_ARMOR, EQUIP_ENHANCED_STORAGE, EQUIP_AUTOLANDER, EQUIP_GRAVITY_SHIELD];\nexport const EQUIP_PRIMARY_WEAPONS = [EQUIP_BLASTER, EQUIP_FAST_BLASTER, EQUIP_STREAM_BLASTER, EQUIP_SPRINKLER_BLASTER, EQUIP_MELEE_GUN, EQUIP_SNIPER_RIFLE, EQUIP_ALIEN_BLASTER, EQUIP_STAPLE_GUN, EQUIP_STAPLE_GUN_HEAVY, EQUIP_ALIEN_BLASTER_FAST, EQUIP_ALIEN_BLASTER_LIGHTNING];\nexport const EQUIP_SECONDARY_WEAPONS = [EQUIP_DECOY_DEPLOYER, EQUIP_TURRET_DEPLOYER, EQUIP_STREAM_TURRET_DEPLOYER, EQUIP_MISSILE_LAUNCHER, EQUIP_BOMB_LAUNCHER, EQUIP_ALIEN_MISSILE_LAUNCHER, EQUIP_FRIENDSHIP_GUN, EQUIP_SHIELD, EQUIP_SHIELD_LONG, EQUIP_SHIELD_STRONG, EQUIP_SHIELD_ULTRA, EQUIP_SHIELD_BLINK];\nexport const EQUIP_DROIDS = [EQUIP_R2D2, EQUIP_GUNNERY_DROID, EQUIP_LIGHTING_DROID, EQUIP_SHIELD_DROID];\nexport const ALL_EQUIP = [...EQUIP_UPGRADES, ...EQUIP_PRIMARY_WEAPONS, ...EQUIP_SECONDARY_WEAPONS, ...EQUIP_DROIDS];\n\nexport const XP_LEVELS = {\n  // Mining resources\n  [PLANET_ROCK_FILE]: [\n    {xp: 1, obj: EQUIP_BLASTER},\n    {xp: 10, obj: EQUIP_BRAKE},\n    {xp: 50, obj: SHIP_EXPLORER},\n    {xp: 100, obj: SHIP_CARGO},\n    {xp: 200, obj: EQUIP_ARMOR},\n    {xp: 1000, obj: EQUIP_SPEED_BOOST},\n  ],\n  [PLANET_RED_FILE]: [\n    {xp: 10, obj: EQUIP_STORAGE},\n    {xp: 50, obj: EQUIP_BLINK_BRAKE},\n    {xp: 100, obj: EQUIP_THRUSTER},\n    {xp: 500, obj: SHIP_FAST},\n    {xp: 1000, obj: EQUIP_AUTOLANDER},\n    {xp: 2000, obj: EQUIP_TURN_BOOST},\n  ],\n  [PLANET_GREEN_FILE]: [\n    {xp: 10, obj: SHIP_SKELETON},\n    {xp: 50, obj: EQUIP_R2D2},\n    {xp: 500, obj: SHIP_HEAVY},\n    {xp: 1000, obj: EQUIP_BLINK_THRUSTER},\n  ],\n  [PLANET_PURPLE_FILE]: [\n    {xp: 300, obj: EQUIP_SHIELD_STRONG},\n    {xp: 750, obj: EQUIP_GUNNERY_DROID},\n    {xp: 1000, obj: SHIP_FIGHTER},\n    {xp: 2000, obj: EQUIP_SHIELD_ULTRA},\n  ],\n  // Killing aliens\n  [SHIP_ALIEN_TURRET.name]: [\n    {xp: 1, obj: EQUIP_FAST_BLASTER},\n    {xp: 5, obj: EQUIP_ALIEN_BLASTER},\n    {xp: 10, obj: EQUIP_DECOY_DEPLOYER},\n  ],\n  [SHIP_ALIEN.name]: [\n    {xp: 1, obj: EQUIP_SHIELD},\n    {xp: 5, obj: SHIP_RESOURCE_DROID},\n    {xp: 10, obj: EQUIP_ALIEN_BLASTER_FAST},\n    {xp: 20, obj: EQUIP_SHIELD_LONG},\n    {xp: 30, obj: SHIP_ALIEN},\n  ],\n  [SHIP_ALIEN_LARGE.name]: [\n    {xp: 1, obj: EQUIP_TURRET_DEPLOYER},\n    {xp: 5, obj: EQUIP_STREAM_BLASTER},\n    {xp: 10, obj: EQUIP_ENHANCED_STORAGE},\n    {xp: 15, obj: EQUIP_SNIPER_RIFLE},\n    {xp: 25, obj: SHIP_ALIEN_LARGE},\n  ],\n  [SHIP_ALIEN_STEALTH.name]: [\n    {xp: 1, obj: EQUIP_SPRINKLER_BLASTER},\n    {xp: 7, obj: EQUIP_MISSILE_LAUNCHER},\n    {xp: 15, obj: EQUIP_FRIENDSHIP_GUN},\n  ],\n  [SHIP_ALIEN_STAPLE_TURRET.name]: [\n    {xp: 1, obj: EQUIP_STAPLE_GUN},\n    {xp: 5, obj: EQUIP_MELEE_GUN},\n    {xp: 10, obj: EQUIP_ENHANCED_ARMOR},\n    {xp: 15, obj: EQUIP_BOMB_LAUNCHER},\n    {xp: 20, obj: EQUIP_SHIELD_DROID},\n  ],\n  [SHIP_ALIEN_FIRE.name]: [\n    {xp: 1, obj: EQUIP_STAPLE_GUN_HEAVY},\n    {xp: 5, obj: EQUIP_SHIELD_BLINK},\n    {xp: 10, obj: EQUIP_STREAM_TURRET_DEPLOYER},\n    {xp: 20, obj: EQUIP_GRAVITY_SHIELD},\n    {xp: 30, obj: SHIP_ALIEN_FIRE},\n  ],\n  [SHIP_ALIEN_MOTHERSHIP.name]: [\n    {xp: 1, obj: EQUIP_ALIEN_BLASTER_LIGHTNING},\n    {xp: 2, obj: EQUIP_ALIEN_MISSILE_LAUNCHER},\n    {xp: 3, obj: EQUIP_LIGHTING_DROID},\n    {xp: 4, obj: SHIP_WING},\n  ]\n}\n\nexport const PLANET_DENSITY = new Map();\nPLANET_DENSITY.set(PLANET_ROCK_FILE, 0.026);\nPLANET_DENSITY.set(PLANET_RED_FILE, 0.021);\nPLANET_DENSITY.set(PLANET_GREEN_FILE, 0.014);\nPLANET_DENSITY.set(PLANET_PURPLE_FILE, 0.011);\nPLANET_DENSITY.set(WORMHOLE_SPRITE, 15);\n\n// Universe Rings\nexport const UNIVERSE_RINGS = [\n  {\n    planetCount: 1,\n    minDist: 1, maxDist: 2,\n    minDistToOtherPlanet: 10,\n    minPlanetRadius: 1500, maxPlanetRadius: 1501,\n    planetFiles: [PLANET_PURPLE_FILE],\n    aliens: [{count: 0, file: null}],\n  },\n  {\n    planetCount: 0,\n    minDist: 1700, maxDist: 2500,\n    minDistToOtherPlanet: 10,\n    minPlanetRadius: 10, maxPlanetRadius: 10,\n    planetFiles: [],\n    aliens: [\n      {count: 50, file: SHIP_ALIEN_STEALTH},\n      {count: 75, file: SHIP_ALIEN_FIRE},\n      {count: 30, file: SHIP_ALIEN_STAPLE_TURRET},\n    ],\n  },\n  {\n    planetCount: 180,\n    minDist: 2500, maxDist: 10000,\n    minDistToOtherPlanet: 150,\n    minPlanetRadius: 300, maxPlanetRadius: 600,\n    planetFiles: [PLANET_RED_FILE, PLANET_PURPLE_FILE, PLANET_GREEN_FILE],\n    aliens: [\n      {count: 400, file: SHIP_ALIEN_STAPLE_TURRET},\n      {count: 500, file: SHIP_ALIEN_LARGE},\n      {count: 500, file: SHIP_ALIEN_STEALTH},\n    ],\n  },\n  {\n    planetCount: 20,\n    minDist: 2501, maxDist: 10001,\n    minDistToOtherPlanet: 200,\n    minPlanetRadius: 10, maxPlanetRadius:20,\n    planetFiles: [WORMHOLE_SPRITE],\n    aliens: [],\n  },\n  {\n    planetCount: 0,\n    minDist: 8000, maxDist: 12000,\n    minDistToOtherPlanet: 10,\n    minPlanetRadius: 10, maxPlanetRadius: 10,\n    planetFiles: [PLANET_RED_FILE],\n    aliens: [\n      {count: 100, file: SHIP_ALIEN_STAPLE_TURRET},\n      {count: 400, file: SHIP_ALIEN_STEALTH},\n    ],\n  },\n  {\n    planetCount: 1000,\n    minDist: 10000, maxDist: 20000,\n    minDistToOtherPlanet: 150,\n    minPlanetRadius: 200, maxPlanetRadius: 360,\n    planetFiles: [PLANET_ROCK_FILE, PLANET_RED_FILE, PLANET_GREEN_FILE],\n    aliens: [\n      {count: 400, file: SHIP_ALIEN_TURRET},\n      {count: 800, file: SHIP_ALIEN},\n      {count: 400, file: SHIP_ALIEN_LARGE},\n    ],\n  },\n  {\n    planetCount: 20,\n    minDist: 10001, maxDist: 20001,\n    minDistToOtherPlanet: 200,\n    minPlanetRadius: 10, maxPlanetRadius:20,\n    planetFiles: [WORMHOLE_SPRITE],\n    aliens: [],\n  },\n  {\n    planetCount: 2000,\n    minDist: 20000, maxDist: 30000,\n    minDistToOtherPlanet: 200,\n    minPlanetRadius: 170, maxPlanetRadius: 220,\n    planetFiles: [PLANET_ROCK_FILE, PLANET_RED_FILE],\n    aliens: [\n      {count: 1300, file: SHIP_ALIEN_TURRET},\n      {count: 400, file: SHIP_ALIEN}\n    ],\n  },\n  {\n    planetCount: 1000,\n    minDist: 30000, maxDist: 35000,\n    minDistToOtherPlanet: 300,\n    minPlanetRadius: 150, maxPlanetRadius: 180,\n    planetFiles: [PLANET_ROCK_FILE],\n    aliens: [{count: 600, file: SHIP_ALIEN_TURRET}],\n  },\n  {\n    planetCount: 20,\n    minDist: 20001, maxDist: 35001,\n    minDistToOtherPlanet: 200,\n    minPlanetRadius: 10, maxPlanetRadius:20,\n    planetFiles: [WORMHOLE_SPRITE],\n    aliens: [],\n  },\n  {\n    planetCount: 900,\n    minDist: 35000, maxDist: UNIVERSE_RADIUS,\n    minDistToOtherPlanet: 500,\n    minPlanetRadius: 80, maxPlanetRadius: 150,\n    planetFiles: [PLANET_ROCK_FILE],\n    aliens: [],\n  },\n  {\n    planetCount: 20,\n    minDist: UNIVERSE_RADIUS-300, maxDist: UNIVERSE_RADIUS+800,\n    minDistToOtherPlanet: 500,\n    minPlanetRadius: 10, maxPlanetRadius:20,\n    planetFiles: [WORMHOLE_SPRITE],\n    aliens: [],\n  },\n];\n","import {c, fly, manage, utils} from './';\nimport lodash from 'lodash';\nimport {randomInt} from \"./utils\";\n\n/**\n * Creates an empty world object, with only basic properties.\n * This will be populated by setupWorld()\n */\nexport function createEmptyWorld() {\n  return {\n    appVersion: c.APP_VERSION,\n    saveGameName: null, // name of last game saved/loaded\n    ship: null,\n    view: { // global XY for current view (in manage mode, always ship.xy in fly mode)\n      x: 0,\n      y: 0,\n    },\n    ships: [],\n    planets: [],\n    selectedPlanet: {resources: {}},\n    lastPlanetLanded: null,\n    gameTickCount : 0,\n    nextId: 100, // unique ID for sprites, equip, etc...\n    introDialogShown: false,\n    blueprints: {\n      ship: [],\n      equip: [],\n      xp: {\n        [c.PLANET_ROCK_FILE]: 0,\n        [c.PLANET_RED_FILE]: 0,\n        [c.PLANET_GREEN_FILE]: 0,\n        [c.PLANET_PURPLE_FILE]: 0,\n        [c.SHIP_ALIEN_TURRET.name]: 0,\n        [c.SHIP_ALIEN.name]: 0,\n        [c.SHIP_ALIEN_LARGE.name]: 0,\n        [c.SHIP_ALIEN_STEALTH.name]: 0,\n        [c.SHIP_ALIEN_STAPLE_TURRET.name]: 0,\n        [c.SHIP_ALIEN_FIRE.name]: 0,\n        [c.SHIP_ALIEN_MOTHERSHIP.name]: 0,\n      },\n      xpLevels: lodash.cloneDeep(c.XP_LEVELS),\n    },\n    // everything in system is transient and not serialized when saving the game\n    system: {\n      keys: {}, // Global keypress handlers\n      buttonKeyDown : {up:false, right:false, down:false, left:false, shoot:false, x:false}, // true when a button is depressed\n      app: null, // Pixi App\n      gameState: c.GAME_STATE.INIT, // Current game state\n      isTyping: false, // used to stop keypress events ('w') when user is typing in input\n      gameLoop: null, // loop function in this state\n      bgSprite: null, // star background\n      smokeSheet: null, // spritesheet for smoke animation\n      explosionSheet: null, // spritesheet for explosions\n      explosions: [], //contains sprites\n      bullets: [], // contains all the bullets\n      nearby: {planets: [], ships: []}, // ships and planets near enough for collision detection and running AI\n      planetSpriteCache: {}, // {\"green_planet.png\" : Map(id:sprite, id:sprite)... }\n      shipSpriteCache: {}, // {\"alien_small.png\" : Map(id:sprite, id:sprite)... }\n      shieldSpriteCache: new Map(), // These sprites are each added to a ship and not reused\n      spriteContainers: {background: null, planets: null, bullets: null, ships: null, minimap: null, explosions:null},\n      screenHeight: c.SCREEN_HEIGHT, // changed based on window size\n      screenWidth: c.SCREEN_WIDTH, // changed in App.js based on window size\n      screenScale: 1, // scale due to window sizing\n      miniMapGraphics: null, // used as a canvas for drawing the miniMap\n      initializing: true, // set to false when the game fully running (after first draw)\n      continuousFire: false, // set to true by keypress\n      continuousFireUp : false, // set to true to determine when an key-up event happens\n    },\n  };\n}\n\nexport function setupWorld() {\n  const world = window.world;\n  setupSpriteContainers();\n  createBackground();\n  createPlanets();\n  createWormholeLinks();\n  // Default selectedPlanet, shouldn't be displayed\n  world.selectedPlanet = world.planets[0];\n  window.world.shipStartX = c.PLAYER_START_X;\n  // window.world.shipStartX = -1800;\n  window.world.shipStartY = c.PLAYER_START_Y;\n  world.ship = createShip(c.SHIP_EXPLORER, c.PLAYER);\n  const shipSprite = getShipSprite(world.ship);\n  shipSprite.visible = true;\n  world.ship.resources = c.PLAYER_STARTING_RESOURCES;\n\n  const debug = false;\n  if (debug) {\n    // DEBUG SHIP\n    world.ship.armorMax = 10000;\n    world.ship.armor = 10000;\n    world.ship.resources = {titanium: 10000, gold: 10000, uranium: 10000};\n    world.ship.resourcesMax = 100000;\n    world.ship.equip = [\n      manage.makeEquip(c.EQUIP_BLINK_BRAKE),\n      manage.makeEquip(c.EQUIP_AUTOLANDER),\n      manage.makeEquip(c.EQUIP_STREAM_BLASTER),\n      manage.makeEquip(c.EQUIP_SHIELD_DROID),\n      manage.makeEquip(c.EQUIP_FRIENDSHIP_GUN),\n      manage.makeEquip(c.EQUIP_SHIELD_BLINK),\n      manage.makeEquip(c.EQUIP_SHIELD_BLINK),\n    ];\n    world.ship.equipMax = world.ship.equip.length;\n    world.blueprints.equip = [...c.ALL_EQUIP];\n    world.blueprints.ship = [...c.ALL_SHIPS];\n    world.introDialogShown = true;\n\n    // DEBUG test alien\n    createAlien(c.SHIP_ALIEN_STAPLE_TURRET, c.PLAYER_START_X + 450, c.PLAYER_START_Y + 70);\n    createAlien(c.SHIP_ALIEN_LIGHTNING_TURRET, c.PLAYER_START_X + 450, c.PLAYER_START_Y + 350);\n\n    // DEBUG Planet\n    let testPlanet = createPlanet(c.PLANET_ROCK_FILE, \"home\", 100, 200, {\n      titanium: 20000,\n      gold: 50000,\n      uranium: 50000,\n    });\n    testPlanet.x = c.PLAYER_START_X - 150;\n    testPlanet.y = c.PLAYER_START_Y;\n    testPlanet.resources.stored = {titanium: 10000, gold: 10000, uranium: 10000};\n  }\n\n  createAliens();\n  createExtras();\n  setupMiniMap();\n  setupExplosionSheet();\n}\n\n/**\n * Sets up the sprite containers in the correct display order\n */\nexport function setupSpriteContainers() {\n  let mainStage = window.world.system.app.stage;\n  let spriteContainers = window.world.system.spriteContainers;\n\n  spriteContainers.background = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.background);\n\n  // Setup the wormhole spritesheet\n  const resource = window.PIXI.Loader.shared.resources[c.SMOKE_JSON];\n  window.world.system.smokeSheet = resource.spritesheet;\n\n  // Add all the containers, the order here will control which images are on top\n  spriteContainers.planets = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.planets);\n\n  spriteContainers.bullets = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.bullets);\n\n  spriteContainers.ships = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.ships);\n\n  spriteContainers.explosions = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.explosions);\n\n  spriteContainers.minimap = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.minimap);\n}\n\nexport function createBackground() {\n  let container = window.world.system.spriteContainers.background;\n  window.world.system.bgSprite = new window.PIXI.TilingSprite(\n    window.PIXI.Texture.from(c.STAR_BACKGROUND_FILE),\n    c.SCREEN_WIDTH,\n    c.SCREEN_HEIGHT,\n  );\n  container.addChild(window.world.system.bgSprite);\n}\n\n// Go through all the rings and create planet objects\nexport function createPlanets() {\n  for (let ring of c.UNIVERSE_RINGS) {\n    for (let i = 0; i < ring.planetCount; i++) {\n      let fileName = ring.planetFiles[utils.randomInt(0, ring.planetFiles.length - 1)];\n      let name = String.fromCharCode(65 + Math.floor(Math.random() * 26)) + utils.randomInt(1000, 999999);\n      let radius = utils.randomInt(ring.minPlanetRadius, ring.maxPlanetRadius);\n      let mass = radius * radius * c.PLANET_DENSITY.get(fileName);\n      let maxResource = mass * 2 * 0.3;\n      let minResource = mass * 0.15;\n      if (radius > 1000) {\n        minResource += 10000;\n        maxResource += 10000;\n      } else if (radius > 500) {\n        minResource += 500;\n        maxResource += 500;\n      }\n      // Setup the planet\n      let planet = createPlanet(fileName, name, radius, mass, {\n        titanium: utils.randomInt(minResource, maxResource),\n        gold: utils.randomInt(minResource, maxResource),\n        uranium: utils.randomInt(minResource, maxResource),\n      });\n      let {x, y} = getFreeXy(planet, ring.minDistToOtherPlanet, 0, ring.minDist, ring.maxDist);\n      planet.x = x;\n      planet.y = y;\n    } // for i\n  } // for ring\n}\n\n// Setup the wormhole locations\nfunction createWormholeLinks() {\n  const planets = window.world.planets;\n  for (const planet of planets) {\n    if (planet.spriteFile === c.WORMHOLE_SPRITE) {\n      let otherPlanet = null;\n      for (let i=planets.length-1; i>=0; i--) {\n        if (planets[i].spriteFile === c.WORMHOLE_SPRITE && !planets[i].jumpToX && !planets[i].jumpToY) {\n          otherPlanet = planets[i];\n          break;\n        }\n      } // for i\n      if (otherPlanet) {\n        planet.jumpToX = otherPlanet.x;\n        planet.jumpToY = otherPlanet.y;\n        otherPlanet.jumpToX = planet.x;\n        otherPlanet.jumpToY = planet.y;\n      } else {\n        // planet.jumpToX = c.PLAYER_START_X;\n        // planet.jumpToY = c.PLAYER_START_Y;\n      }\n    } // for planet\n  } // for planet\n}\n\n/**\n * Distance to the nearest planet that is not equal to origPlanet\n * @return {{nearestPlanetDist: number, nearestPlanet: null}}\n */\nfunction nearestPlanetDistance(origPlanet, x, y) {\n  let minDist = 99999999999;\n  let nearestPlanet = null;\n  for (let planet of window.world.planets) {\n    if (planet !== origPlanet) {\n      let dist = utils.distanceBetween(x, y, planet.x, planet.y) - planet.radius;\n      if (origPlanet) {\n        dist -= origPlanet.radius;\n      }\n      if (!nearestPlanet || (dist < minDist)) {\n        minDist = dist;\n        nearestPlanet = planet;\n      }\n    }\n  } // for planet\n  return {nearestPlanet: nearestPlanet, nearestPlanetDist: minDist};\n}\n\n/**\n * Distance to the nearest alien\n * @return {{nearestAlien: null, nearestAlienDist: number}}\n */\nfunction nearestAlienDistance(x, y) {\n  let minDist = 99999999999;\n  let nearestAlien = null;\n  for (let alien of window.world.system.nearby.ships) {\n    if (alien === window.world.ship) {\n      continue;\n    }\n    // This assumes the calling code alien is the same size\n    let dist = utils.distanceBetween(x, y, alien.x, alien.y) - (alien.radius * 2);\n    if (!nearestAlien || (dist < minDist)) {\n      minDist = dist;\n      nearestAlien = alien;\n    }\n  } // for\n  return {nearestAlien: nearestAlien, nearestAlienDist: minDist};\n}\n\n/**\n * Find a free spot of space to stick something\n * This will recurse until it finds a free spot.\n * @return {{x, y}}\n */\nfunction getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, failCount = 0) {\n  let dir = utils.randomFloat(0, Math.PI * 2);\n  let dist = utils.randomInt(minDist, maxDist);\n  let {x, y} = utils.getPointFrom(0, 0, dir, dist);\n  if (failCount > 200) {\n    // If we tried a lot of times and can't find a spot, we will dump the object into the outer ring\n    console.warn(\"Had a hard time finding a spot in ring \"+minDist+\"-\"+maxDist+\" dumping to outer ring\");\n    return getFreeXy(planet, minDistToPlanet, minDistToAlien, c.OUTER_RING_MIN, c.OUTER_RING_MAX, 0);\n  }\n  if (minDistToPlanet > 0) {\n    let {nearestPlanetDist} = nearestPlanetDistance(planet, x, y);\n    if (nearestPlanetDist < minDistToPlanet) {\n      return getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, ++failCount);\n    }\n  }\n  if (minDistToAlien > 0) {\n    let {nearestAlienDist} = nearestAlienDistance(x, y);\n    if (nearestAlienDist < minDistToAlien) {\n      return getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, ++failCount);\n    }\n  }\n  // For wormholes, we don't want any too close to the player's start location - it would be a really bad way to start the game\n  if (planet && planet.spriteFile === c.WORMHOLE_SPRITE &&\n      utils.distanceBetween(x, y, c.PLAYER_START_X, c.PLAYER_START_Y) < c.MINIMAP_VIEW_HEIGHT) {\n    return getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, ++failCount);\n  }\n  return {x, y};\n}\n\n// Creates and returns a planet (and adds it to the app)\nexport function createPlanet(planetFile, name, radius, mass, resources) {\n  let planet = {};\n  planet.id = window.world.nextId++;\n  planet.name = name;\n  planet.x = 0; // temp should get reset\n  planet.y = 0; // temp should get reset\n  planet.mass = mass;\n  planet.resources = {\n    stored: {titanium: 0, gold: 0, uranium: 0},\n    raw: resources\n  };\n  planet.ships = []; // stored ships \n  planet.equip = []; // stored equipment\n  planet.buildings = []; // mines, factories\n  planet.radius = radius;\n  planet.lastLandingDir = 0;\n  planet.spriteFile = planetFile;\n  planet.spriteId = null; // no sprite created yet\n  // jumpToX jumpToY will be set for wormholes\n  window.world.planets.push(planet);\n  return planet;\n}\n\n/**\n * Finds or creates a planet sprite.\n * This cache works a little different, no sprites are re-used.\n * Once a planetSprite is created the buildings are added and it stays attached to the planet\n * Otherwise we would have to empty out the container and redraw the planet and buildings each time\n */\nexport function getPlanetSprite(planet) {\n  let planetSpriteCache = window.world.system.planetSpriteCache[planet.spriteFile];\n  // No cache for this file yet - create an empty cache\n  if (!planetSpriteCache) {\n    planetSpriteCache = new Map();\n    window.world.system.planetSpriteCache[planet.spriteFile] = planetSpriteCache;\n  }\n  // Lookup the sprite in the cache by ID\n  let planetContainer = planetSpriteCache.get(planet.spriteId);\n  if (planetContainer) {\n    return planetContainer;\n  }\n  // Setup the planet container sprite (contains planet plus buildings)\n  planetContainer = new window.PIXI.Container();\n  planetContainer.x = 0; // will be set on every draw\n  planetContainer.y = 0;\n  planetContainer.visible = true;\n  window.world.system.spriteContainers.planets.addChild(planetContainer);\n\n  // Setup the planet sprite itself\n  if (planet.spriteFile === c.WORMHOLE_SPRITE) {\n    let wormholeSprite = new window.PIXI.AnimatedSprite(window.world.system.smokeSheet.animations[c.SMOKE]);\n    wormholeSprite.animationSpeed = 0.2;\n    wormholeSprite.loop = true;\n    wormholeSprite.anchor.set(0.5, 0.5);\n    const scale = (planet.radius * 2 / wormholeSprite.width) * 10;\n    wormholeSprite.scale.set(scale, scale);\n    wormholeSprite.visible = true;\n    wormholeSprite.play();\n    planetContainer.addChild(wormholeSprite);\n\n  } else {\n    const planetSprite = new window.PIXI.Sprite(\n        window.PIXI.loader.resources[c.SPRITESHEET_JSON].textures[planet.spriteFile]);\n    planetSprite.anchor.set(0.5, 0.5);\n    let spriteScale = planet.radius * 2 / planetSprite.width;\n    // Planets with atmosphere are a little smaller than the full image size\n    if ((planet.spriteFile === c.PLANET_PURPLE_FILE) || (planet.spriteFile === c.PLANET_GREEN_FILE)) {\n      spriteScale = spriteScale * 1.08;\n    }\n    planetSprite.scale.set(spriteScale, spriteScale);\n    planetContainer.addChild(planetSprite);\n\n    for (const building of planet.buildings) {\n      manage.makeBuildingSprite(building, planet, planetContainer);\n    }\n  }\n\n  // Cache the new sprite\n  planet.spriteId = window.world.nextId++;\n  planetSpriteCache.set(planet.spriteId, planetContainer);\n  return planetContainer;\n}\n\n/**\n * Finds or creates a sprite for the ship\n * NOTE: This will return a non-visible sprite, the calling code is responsible for making the sprite visible\n */\nexport function getShipSprite(ship) {\n  // if (!ship.alive) {\n  //   console.warn('You should not get sprites for dead ships.');\n  //   console.trace();\n  //   window.error(); // does not exist... thus an error!\n  //   return;\n  // }\n  let shipSpriteCache = window.world.system.shipSpriteCache[ship.imageFile];\n  // No cache for this file yet - create an empty cache\n  if (!shipSpriteCache) {\n    shipSpriteCache = new Map();\n    window.world.system.shipSpriteCache[ship.imageFile] = shipSpriteCache;\n  }\n  // Lookup the sprite in the cache by ID\n  let sprite = shipSpriteCache.get(ship.spriteId);\n  if (sprite) {\n    return sprite;\n  }\n  // Lookup a free sprite (dead or off-screen alien)\n  for (let [spriteId, foundSprite] of shipSpriteCache.entries()) {\n    if (!foundSprite.visible) {\n      foundSprite.visible = false;\n      foundSprite.rotation = ship.rotation;\n      foundSprite.scale.set(ship.imageScale, ship.imageScale);\n      ship.spriteWidth = foundSprite.width;\n      ship.spriteHeight = foundSprite.height;\n      ship.radius = foundSprite.width / 2; // used for circular aliens\n      ship.spriteId = spriteId;\n      //console.log('found old sprite '+spriteId+' '+ship.imageFile);\n      return foundSprite;\n    }\n  } // foundSprite\n\n  // No sprite found - create a new one\n  let spriteSheet = window.PIXI.loader.resources[c.SPRITESHEET_JSON];\n  sprite = new window.PIXI.Sprite(spriteSheet.textures[ship.imageFile]);\n  sprite.position.set(c.HALF_SCREEN_WIDTH, c.HALF_SCREEN_HEIGHT);\n  sprite.anchor.set(0.5, 0.5);  // pivot on ship center\n  sprite.scale.set(ship.imageScale, ship.imageScale);\n  sprite.rotation = ship.rotation;\n  sprite.visible = false;\n  ship.spriteWidth = sprite.width;\n  ship.spriteHeight = sprite.height;\n  ship.radius = sprite.width / 2; // used for circular aliens\n  ship.spriteId = window.world.nextId++;\n  shipSpriteCache.set(ship.spriteId, sprite);\n  window.world.system.spriteContainers.ships.addChild(sprite);\n  //console.log('created new ship sprite '+ship.imageFile, sprite);\n  return sprite;\n}\n\n/**\n * @return The original width/height of the sprite before scaling was applied\n *   {width, height}\n */\nexport function getSpriteOrigWithHeight(sprite) {\n  const origWidth = sprite.width;\n  const origHeight = sprite.height;\n  sprite.scale.set(1, 1);\n  const width = sprite.width;\n  const height = sprite.height;\n  sprite.width = origWidth;\n  sprite.height = origHeight;\n  return {width, height};\n}\n\nexport function setShieldRadius(ship, shield, shieldSprite) {\n  const shipSprite = getShipSprite(ship);\n  shieldSprite.anchor.set(0.5, 0.5);  // pivot on center\n  const {width, height} = getSpriteOrigWithHeight(shipSprite);\n  // Radius within the scaled ship sprite\n  const shieldWidth = Math.max(width, height) * 1.5; // 1.5 to make it larger than the ship\n  shieldSprite.width = shieldWidth;\n  shieldSprite.height = shieldWidth;\n  shield.radius = (shieldWidth * ship.imageScale) / 2; // size without ship scaling\n}\n\nexport function getShieldSprite(ship, shield) {\n  const cacheId = ship.id + '~' + shield.spriteFile;\n  // Lookup the sprite in the cache by ID\n  let shieldSprite = window.world.system.shieldSpriteCache.get(cacheId);\n  if (shieldSprite) {\n    setShieldRadius(ship, shield, shieldSprite);\n    return shieldSprite;\n  }\n  // Add a new shield image to the ship\n  const shipSprite = getShipSprite(ship);\n  let spriteSheet = window.PIXI.loader.resources[c.SPRITESHEET_JSON];\n  shieldSprite = new window.PIXI.Sprite(spriteSheet.textures[shield.spriteFile]);\n  setShieldRadius(ship, shield, shieldSprite);\n  shipSprite.addChild(shieldSprite);\n  window.world.system.shieldSpriteCache.set(cacheId, shieldSprite);\n  return shieldSprite;\n}\n\n// Creates and returns a ship object\nexport function createShip(shipType, owner) {\n  let ship = lodash.cloneDeep(shipType);\n  ship.id = window.world.nextId++;\n  ship.selectedSecondaryWeaponIndex = -1;\n  for (let i=0; i<ship.equip.length; i++) {\n    const equip = ship.equip[i];\n    equip.id = window.world.nextId++;\n    if (ship.selectedSecondaryWeaponIndex < 0 && equip.type === c.EQUIP_TYPE_SECONDARY_WEAPON) {\n      ship.selectedSecondaryWeaponIndex = i;\n    }\n  }\n  ship.owner = owner;\n  ship.vx = 0; // velocityX\n  ship.vy = 0; // velocityY\n  ship.x = window.world.shipStartX;\n  ship.y = window.world.shipStartY;\n  ship.spriteId = null; // no sprite yet\n  ship.alive = true; // set to false if it blows up\n  ship.spriteWidth = null; //We won't know until we load the sprite\n  ship.rotation = 0;\n  window.world.system.nearby.ships.push(ship);\n  return ship;\n}\n\nexport function createAlien(shipType, x, y) {\n  let alien = createShip(shipType, c.ALIEN);\n  window.world.ships.push(alien);\n  alien.x = x;\n  alien.y = y;\n  alien.radius = 50; // will be set to a real value when sprite loads\n  return alien;\n}\n\nexport function createAliens() {\n  // Create motherships\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, 1700, 200);\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, 0, 1700);\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, -1700, 0);\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, 0, -1700);\n\n  for (let ring of c.UNIVERSE_RINGS) {\n    for (const alienInfo of ring.aliens) {\n      for (let i = 0; i < alienInfo.count; i++) {\n        let {x, y} = getFreeXy(null, c.MIN_ALIEN_DIST_TO_PLANET, c.MIN_ALIEN_DIST_TO_ALIEN, ring.minDist, ring.maxDist);\n        createAlien(alienInfo.file, x, y);\n      } // for i\n    } // for alienInfo\n  } // for ring\n}\n\nexport function createExtras() {\n  const planetTrail = [\n    {\n      type: c.PLANET_ROCK_FILE,\n      name: 'X500',\n      x: c.UNIVERSE_RADIUS + 3000,\n      y: 0,\n      radius: 100,\n      mass: 100,\n      resources: {\n        titanium: utils.randomInt(100, 500),\n        gold: utils.randomInt(100, 500),\n        uranium: utils.randomInt(500, 1000),\n      },\n    },\n    {\n      type: c.PLANET_ROCK_FILE,\n      name: 'X400',\n      x: c.UNIVERSE_RADIUS + 5000,\n      y: 0,\n      radius: 200,\n      mass: 100,\n      resources: {\n        titanium: utils.randomInt(100, 500),\n        gold: utils.randomInt(100, 500),\n        uranium: utils.randomInt(500, 1000),\n      },\n    },\n    {\n      type: c.PLANET_ROCK_FILE,\n      name: 'X300',\n      x: c.UNIVERSE_RADIUS + 10000,\n      y: 0,\n      radius: 300,\n      mass: 150,\n      resources: {\n        titanium: utils.randomInt(200, 500),\n        gold: utils.randomInt(200, 1500),\n        uranium: utils.randomInt(1000, 1500),\n      },\n    },\n    {\n      type: c.PLANET_ROCK_FILE,\n      name: 'X200',\n      x: c.UNIVERSE_RADIUS + 16000,\n      y: 0,\n      radius: 300,\n      mass: 150,\n      resources: {\n        titanium: utils.randomInt(200, 500),\n        gold: utils.randomInt(200, 1500),\n        uranium: utils.randomInt(1000, 1500),\n      },\n    },\n\n    {\n      type: c.PLANET_ROCK_FILE,\n      name: 'X100',\n      x: c.UNIVERSE_RADIUS + 25000,\n      y: 0,\n      radius: 300,\n      mass: 150,\n      resources: {\n        titanium: utils.randomInt(200, 500),\n        gold: utils.randomInt(200, 1500),\n        uranium: utils.randomInt(1000, 1500),\n      },\n    },\n    {\n      type: c.PLANET_ROCK_FILE,\n      name: 'A',\n      x: c.UNIVERSE_RADIUS + 35000,\n      y: -1500,\n      radius: 400,\n      mass: 500,\n      resources: {\n        titanium: utils.randomInt(3000, 15000),\n        gold: utils.randomInt(3000, 15000),\n        uranium: utils.randomInt(3000, 15000),\n      },\n    },\n    {\n      type: c.PLANET_ROCK_FILE,\n      name: 'B',\n      x: c.UNIVERSE_RADIUS + 35000,\n      y: 1500,\n      radius: 400,\n      mass: 500,\n      resources: {\n        titanium: utils.randomInt(3000, 15000),\n        gold: utils.randomInt(3000, 15000),\n        uranium: utils.randomInt(3000, 15000),\n      },\n    },\n    {\n      type: c.PLANET_ROCK_FILE,\n      name: 'C',\n      x: c.UNIVERSE_RADIUS + 36500,\n      y: 0,\n      radius: 400,\n      mass: 500,\n      resources: {\n        titanium: utils.randomInt(3000, 15000),\n        gold: utils.randomInt(3000, 15000),\n        uranium: utils.randomInt(3000, 15000),\n      },\n    },\n  ];\n  for (const planet of planetTrail) {\n    let newPlanet = createPlanet(planet.type, planet.name, planet.radius, planet.mass, planet.resources);\n    newPlanet.x = planet.x;\n    newPlanet.y = planet.y;\n  }\n\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, c.UNIVERSE_RADIUS + 35000, 400);\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, c.UNIVERSE_RADIUS + 35000, -400);\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, c.UNIVERSE_RADIUS + 34800, 200);\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, c.UNIVERSE_RADIUS + 34800, -200);\n  const mothershipTemplate = lodash.cloneDeep(c.SHIP_ALIEN_MOTHERSHIP);\n  mothershipTemplate.armorMax = 10000;\n  mothershipTemplate.armor = 10000;\n  mothershipTemplate.imageScale = 2;\n  createAlien(mothershipTemplate, c.UNIVERSE_RADIUS + 35000, 0);\n\n  for (let i=0; i<30; i++) {\n    const x = c.UNIVERSE_RADIUS + 34000 + randomInt(0,20) - 10;\n    const y = (i * 150) - 3000;\n    createAlien(c.SHIP_ALIEN_FIRE, x, y);\n  }\n\n  for (let i=0; i<40; i++) {\n    const x = c.UNIVERSE_RADIUS + 34500;\n    const y = (i * 150) - 3000;\n    createAlien(c.SHIP_ALIEN_STAPLE_TURRET, x, y);\n  }\n  for (let i=0; i<40; i++) {\n    const x = c.UNIVERSE_RADIUS + 35500;\n    const y = (i * 150) - 3000;\n    createAlien(c.SHIP_ALIEN_STAPLE_TURRET, x, y);\n  }\n\n}\n\n\nexport function setupMiniMap() {\n  let container = window.world.system.spriteContainers.minimap;\n  let miniMapContainer = new window.PIXI.Container();\n  container.addChild(miniMapContainer);\n\n  // Mask so drawings don't spill out of the map\n  let mask = new window.PIXI.Graphics();\n  mask.drawRect(0, c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT, c.MINIMAP_WIDTH, c.SCREEN_HEIGHT);\n  mask.renderable = true;\n  mask.cacheAsBitmap = true;\n  miniMapContainer.addChild(mask);\n  miniMapContainer.mask = mask;\n\n  // Graphics for drawing shapes on\n  let g = new window.PIXI.Graphics();\n  miniMapContainer.addChild(g);\n  window.world.system.miniMapGraphics = g;\n}\n\n/**\n * Called when the user clicks on the screen\n */\nexport function click(event) {\n  let x = event.data.global.x;\n  let y = event.data.global.y;\n  const screenScale = window.world.system.screenScale;\n  let scaledX = x / screenScale;\n  let scaledY = y / screenScale;\n  if ((scaledX < c.MINIMAP_WIDTH) && (scaledY > (c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT))) {\n    fly.clickOnMinimap(scaledX, scaledY);\n  }\n}\n\nexport function changeGameState(newState) {\n  const world = window.world;\n  world.system.gameState = newState;\n  if (newState === c.GAME_STATE.FLY) {\n    fly.enterFlyState();\n    world.system.gameLoop = fly.flyLoop;\n  } else if (newState === c.GAME_STATE.MANAGE) {\n    manage.enterManageState();\n    world.system.gameLoop = manage.manageLoop;\n  } else {\n    world.system.gameLoop = null;\n  }\n}\n\n/**\n * Loop to run building, runs in any game mode (fly + manage)\n */\nexport function runBuildings() {\n  const world = window.world;\n  for (let planet of world.planets) {\n    for (let building of planet.buildings) {\n      if (building.type === c.BUILDING_TYPE_MINE) {\n        mineResource(planet, 'titanium', c.MINE_SPEED_TITANIUM);\n        mineResource(planet, 'gold', c.MINE_SPEED_GOLD);\n        mineResource(planet, 'uranium', c.MINE_SPEED_URANIUM);\n      }\n    } // for building\n    // If planet is out of resources stop the mine animations\n    if ((planet.resources.raw.titanium === 0)\n      && (planet.resources.raw.gold === 0)\n      && (planet.resources.raw.uranium === 0)) {\n      const planetSprite = getPlanetSprite(planet);\n      for (const buildingSprite of planetSprite.children) {\n        // all animated sprites stop (this may not be true if new building types are added)\n        if (buildingSprite.animationSpeed) {\n          buildingSprite.animationSpeed = 0;\n        }\n      }\n    }\n  } // for planet\n}\n\nfunction mineResource(planet, resourceType, amount) {\n  if (planet.resources.raw[resourceType] > 0) {\n    planet.resources.raw[resourceType] -= amount;\n    planet.resources.stored[resourceType] += amount;\n    if (planet.resources.raw[resourceType] <= 0) {\n      planet.resources.raw[resourceType] = 0;\n    }\n    addMiningXp(amount, planet);\n  }\n}\n\nfunction addMiningXp(amount, planet) {\n  let blueprints = window.world.blueprints;\n  const xp = blueprints.xp[planet.spriteFile] += amount;\n  let nextLevel = blueprints.xpLevels[planet.spriteFile][0];\n  if (nextLevel && (nextLevel.xp <= xp)) {\n    addBlueprint(nextLevel);\n    // Remove the item\n    blueprints.xpLevels[planet.spriteFile].shift();\n  }\n}\n\nexport function addAlienXp(ship) {\n  let blueprints = window.world.blueprints;\n  let xp = blueprints.xp[ship.name];\n  if (!xp) {\n    xp = 1;\n  }  else {\n    xp += 1;\n  }\n  blueprints.xp[ship.name] = xp;\n  if (blueprints.xpLevels[ship.name]) {\n    let nextLevel = blueprints.xpLevels[ship.name][0];\n    if (nextLevel && (nextLevel.xp <= xp)) {\n      addBlueprint(nextLevel);\n      // Remove the item\n      blueprints.xpLevels[ship.name].shift();\n    }\n  }\n}\n\nexport function addBlueprint(nextLevel) {\n  utils.showToast('New plan: ' + nextLevel.obj.name);\n  let blueprints = window.world.blueprints;\n  if (nextLevel.obj.objType === c.OBJ_EQUIP) {\n    blueprints.equip.push(nextLevel.obj);\n  } else if (nextLevel.obj.objType === c.OBJ_SHIP) {\n    blueprints.ship.push(nextLevel.obj);\n  } else {\n    console.warn(\"Could not find blueprint of type \" + nextLevel.obj.objType + \" nextLevel=\", nextLevel);\n  }\n}\n\n/**\n * Checks if the combined resources of planet and ship can afford the resources\n * Call this before calling payResourceCost\n * @return true if there are enough resources available\n */\nexport function canAfford(planet, ship, resources) {\n  let titanium = 0;\n  let gold = 0;\n  let uranium = 0;\n  if (planet) {\n    titanium += planet.resources.stored.titanium;\n    gold += planet.resources.stored.gold;\n    uranium += planet.resources.stored.uranium;\n  }\n  if (ship) {\n    titanium += ship.resources.titanium;\n    gold += ship.resources.gold;\n    uranium += ship.resources.uranium;\n  }\n  return (titanium >= resources.titanium)\n    && (gold >= resources.gold)\n    && (uranium >= resources.uranium);\n}\n\n/**\n * Pays the cost, taking from the planet and the ship as available\n * NOTE: This will not ensure you have enough resources, you can go into debt if you call this without checking\n * first using canAfford()\n * @param planet planet to get resources from\n * @param ship ship to get resources from\n * @param resources amount to pay\n */\nexport function payResourceCost(planet, ship, resources) {\n  payResource(planet, ship, 'titanium', resources.titanium);\n  payResource(planet, ship, 'gold', resources.gold);\n  payResource(planet, ship, 'uranium', resources.uranium);\n}\n\nexport function payResource(planet, ship, resourceType, amount) {\n  let paid = -amount; // amount owing (overwritten if some payment comes from the planet)\n  if (planet) {\n    paid = planet.resources.stored[resourceType] - amount;\n    if (paid >= 0) {\n      planet.resources.stored[resourceType] -= amount;\n      return;\n    } else {\n      // Planet can't afford this purchase, take some from the ship\n      planet.resources.stored[resourceType] = 0;\n    }\n  }\n  if (ship) {\n    ship.resources[resourceType] = ship.resources[resourceType] + paid;\n    if (ship.resources[resourceType] < 0) {\n      console.warn(\"Ship is in debt \" + ship.resources[resourceType] + \" \" + resourceType);\n    }\n  } else if (paid < 0) {\n    planet.resources.stored[resourceType] = planet.resources.stored[resourceType] + paid;\n    console.warn(\"Planet is in debt \" + planet.resources.stored[resourceType] + \" \" + resourceType);\n  }\n}\n\nexport function setupExplosionSheet() {\n  window.world.system.explosionSheet = window.PIXI.Loader.shared.resources[c.CRASH_JSON].spritesheet;\n  // Preload an explosion sprite animation (these will be cached and reused in world.system.explosions)\n  createExplosionSprite();\n}\n\nexport function createExplosionSprite() {\n  let sprite = new window.PIXI.AnimatedSprite(window.world.system.explosionSheet.animations[c.CRASH]);\n  sprite.animationSpeed = 0.4;\n  sprite.loop = false;\n  sprite.anchor.set(0.5, 0.5);\n  sprite.scale.set(2, 2);\n  sprite.x = c.HALF_SCREEN_WIDTH;\n  sprite.y = c.HALF_SCREEN_WIDTH;\n  sprite.loop = true;\n  sprite.visible = false;\n  window.world.system.explosions.push(sprite);\n  window.world.system.spriteContainers.explosions.addChild(sprite);\n  return sprite;\n}\n","import {ai, c, game, manage, utils} from './';\nimport {dirComponents, distanceBetween} from \"./utils\";\n\nexport function enterFlyState() {\n  console.log(\"Take off\");\n}\n\n// Main play mode - flying\nexport function flyLoop(delta) {\n  if (delta > 1.005) {\n    console.log('Lagging with delta=' + delta);\n  }\n  let world = window.world;\n  let ship = window.world.ship;\n\n  // Cache all the nearby planets and ships\n  setupNearby();\n\n  // When ship.alive is false the ship is exploding\n  if (ship.alive) {\n    runDroids(ship);\n    const buttonKeyDown = world.system.buttonKeyDown;\n    // Keypress handling\n    if (world.system.keys.left.isDown || world.system.keys.a.isDown || buttonKeyDown.left) {\n      turnShip(ship, true);\n    }\n    if (world.system.keys.right.isDown || world.system.keys.d.isDown || buttonKeyDown.right) {\n      turnShip(ship, false);\n    }\n    if (world.system.keys.up.isDown || world.system.keys.w.isDown || buttonKeyDown.up) {\n      propelShip(ship);\n    }\n    if (world.system.keys.down.isDown || world.system.keys.s.isDown || buttonKeyDown.down) {\n      brakeShip(ship);\n    }\n    if (world.system.keys.c.isUp && !world.system.continuousFireUp) {\n      world.system.continuousFireUp = true;\n    }\n    if (world.system.keys.c.isDown) {\n      if (world.system.continuousFireUp) {\n        world.system.continuousFire = !world.system.continuousFire;\n        world.system.continuousFireUp = false;\n      }\n    }\n    if (world.system.keys.space.isDown || world.system.continuousFire || buttonKeyDown.space) {\n      firePrimaryWeapon(ship, 0.05);\n    }\n    if (world.system.keys.x.isDown || buttonKeyDown.x) {\n      fireSecondaryWeapon(ship);\n    }\n    if (world.system.keys.q.isDown) {\n      thrustShip(ship, true);\n    }\n    if (world.system.keys.e.isDown) {\n      thrustShip(ship, false);\n    }\n\n    // Find planets in view\n    let planetsInView = [];\n    for (let planet of world.system.nearby.planets) {\n      if (planetInView(ship, planet)) {\n        planetsInView.push(planet);\n      }\n    }\n\n    // Gravity\n    const hasGravityShield = !!getEquip(ship, c.EQUIP_TYPE_GRAVITY_SHIELD);\n    if (!hasGravityShield) {\n      for (let planet of planetsInView) {\n        let grav = utils.calcGravity(ship.x, ship.y, planet);\n        ship.vx += grav.x;\n        ship.vy += grav.y;\n      }\n    }\n\n    // move the ship\n    ship.x += ship.vx;\n    ship.y += ship.vy;\n    world.view.x = ship.x;\n    world.view.y = ship.y;\n\n    let shipSprite = game.getShipSprite(ship);\n    shipSprite.rotation = ship.rotation;\n\n    // Don't detect collisions until all the drawing is done\n    // Pixijs sometimes gets the sprite locations wrong when they haven't been rendered yet\n    if (!world.system.initializing) {\n      // Ship-Planet Collisions\n      for (let planet of planetsInView) {\n        if (detectCollisionWithPlanet(ship, shipSprite, planet)) {\n          landShip(ship, planet);\n          return; // exit loop\n        }\n      } // for planet\n      // Ship-Alien collision\n      for (let alien of world.system.nearby.ships) {\n        if (alien.alive && detectCollisionWithAlien(ship, shipSprite, alien)) {\n          shipsCollide(ship, alien);\n        }\n      }\n    }\n  }\n\n  moveExplosions(); // especially alien explosions\n  moveBackground(ship);\n  drawMiniMap();\n  // first draw is done\n  if (world.system.initializing) {\n    world.system.initializing = false;\n  }\n}\n\n\n/**\n * Creates a cache of all nearby planets and ships\n */\nexport function setupNearby() {\n  const nearby = window.world.system.nearby;\n  const ship = window.world.ship;\n  const minX = ship.x - c.NEARBY_WIDTH / 2;\n  const maxX = ship.x + c.NEARBY_WIDTH / 2;\n  const minY = ship.y - c.NEARBY_HEIGHT / 2;\n  const maxY = ship.y + c.NEARBY_HEIGHT / 2;\n\n  nearby.planets = [];\n  // for every planet\n  for (const planet of window.world.planets) {\n    if ((planet.x + planet.radius >= minX) && (planet.x - planet.radius <= maxX) &&\n      (planet.y + planet.radius >= minY) && (planet.y - planet.radius <= maxY)) {\n      nearby.planets.push(planet);\n    }\n  } // for planet\n\n  // for every ship\n  nearby.ships = [window.world.ship]; // ship is always nearby\n  for (const ship of window.world.ships) {\n    if ((ship.x + ship.radius >= minX) && (ship.x - ship.radius <= maxX) &&\n      (ship.y + ship.radius >= minY) && (ship.y - ship.radius <= maxY)) {\n      nearby.ships.push(ship);\n    }\n  } // for ship\n}\n\n/**\n * Redraw all planets and aliens\n */\nexport function repositionScreen() {\n  const ship = window.world.ship;\n  // Reposition all the planets\n  for (let planet of window.world.planets) {\n    planetInView(ship, planet);\n  }\n  for (const ship of window.world.ships) {\n    if (ship.spriteId) {\n      game.getShipSprite(ship).visible = false;\n      ship.spriteId = null;\n    }\n  }\n  setupNearby();\n  // Reposition all the aliens\n  ai.moveAliens();\n  drawMiniMap();\n}\n\n/**\n * Cools all ship weapons, run in mainLoop\n */\nexport function coolAllWeapons() {\n  // Ship is in nearby\n  for (let ship of window.world.system.nearby.ships) {\n    coolWeapons(ship);\n  }\n}\n\n/**\n * called in flyLoop to cool weapons\n */\nexport function coolWeapons(ship) {\n  for (let equip of ship.equip) {\n    // If equip has a cool time\n    if (equip.cool) {\n      equip.cool -= 1;\n    }\n    // Gunnery Droids are equip with weapons\n    if (equip.weapon && equip.weapon.cool) {\n      equip.weapon.cool -= 1;\n    }\n    if (equip.shield && equip.shield.active) {\n      equip.shield.lifetime -= 1;\n      if (equip.shield.lifetime <= 0) {\n        equip.shield.lifetime = 0;\n        disableShield(ship, equip.shield);\n      }\n    }\n  }\n}\n\nexport function resetWeaponsCool(ship) {\n  for (let equip of ship.equip) {\n    if ((equip.type === c.EQUIP_TYPE_PRIMARY_WEAPON) && (equip.cool > 0)) {\n      equip.cool = 0;\n    }\n  }\n}\n\nexport function runDroids(ship) {\n  for (let droid of ship.equip) {\n    if ((droid.type === c.EQUIP_TYPE_REPAIR_DROID) && (ship.armor < ship.armorMax)) {\n      let cost = {titanium: 0, gold: 0, uranium: 0};\n      if (game.canAfford(null, ship, cost)) {\n        ship.armor += droid.repairSpeed;\n        game.payResourceCost(null, ship, cost);\n      }\n    } else if (droid.type === c.EQUIP_TYPE_GUNNERY_DROID) {\n      shootAtNearestAlien(ship, droid.weapon);\n    }\n    // NOTE: Shield droid runs in checkForBulletCollision\n  } // for\n}\n\n/**\n * Fires the weapon in the direction of the nearest alien (if able to )\n */\nexport function shootAtNearestAlien(ship, weapon) {\n  // If we can't shoot, don't waste our time\n  if (weapon.cool > 0) {\n    return;\n  }\n  let nearestAlien = null;\n  let nearestAlienDist = null;\n  for (let alien of window.world.system.nearby.ships) {\n    if (alien.alive && alien.owner === c.ALIEN) {\n      let dist = utils.distanceBetween(ship.x, ship.y, alien.x, alien.y);\n      if (!nearestAlien || (dist < nearestAlienDist)) {\n        nearestAlien = alien;\n        nearestAlienDist = dist;\n      }\n    }\n  } // for\n  if (nearestAlien && (nearestAlienDist <= weaponRange(weapon))) {\n    const origDir = ship.rotation;\n    ship.rotation = utils.normalizeRadian(Math.atan2(nearestAlien.y - ship.y, nearestAlien.x - ship.x));\n    fireWeapon(weapon, ship, 0.1);\n    ship.rotation = origDir;\n  }\n}\n\nexport function moveBackground(ship) {\n  let bgSprite = window.world.system.bgSprite;\n  bgSprite.tilePosition.x = (100 - ship.x) + c.HALF_SCREEN_WIDTH;\n  bgSprite.tilePosition.y = (100 - ship.y) + c.HALF_SCREEN_HEIGHT;\n}\n\n/**\n * @return true if the planet is in view of the ship, false otherwise\n * NOTE: This will set the sprite.visible and sprite x/y attributes for the planet\n */\nexport function planetInView(ship, planet) {\n  // Right side\n  if ((ship.x + c.HALF_SCREEN_WIDTH + planet.radius < planet.x) || // Right\n    (ship.x - c.HALF_SCREEN_WIDTH - planet.radius > planet.x) || // Left\n    (ship.y + c.HALF_SCREEN_HEIGHT + planet.radius < planet.y) || // Bottom\n    (ship.y - c.HALF_SCREEN_HEIGHT - planet.radius > planet.y)) { // Top\n    // Planet is not currently visible, but if it has an Id then it used to be visible\n    if (planet.spriteId) {\n      const sprite = game.getPlanetSprite(planet);\n      if (sprite.visible) {\n        sprite.visible = false;\n      }\n    }\n    return false;\n  }\n  // Here we know this planet is in view\n  const sprite = game.getPlanetSprite(planet);\n  sprite.visible = true;\n  // Set planet relative to the ship's viewport\n  sprite.x = (planet.x - ship.x) + c.HALF_SCREEN_WIDTH;\n  sprite.y = (planet.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n  return true;\n}\n\n/**\n * @return the first active shield the ship is equipped with\n * NOTE: This returns equip.shield (NOT the full equip object)\n */\nexport function getActiveShield(ship) {\n  for (const equip of ship.equip) {\n    if (equip.shield && equip.shield.active) {\n      return equip.shield;\n    }\n  }\n  return null;\n}\n\n/**\n * @returns The first shield that is not currently used and cooled enough to re-use\n * NOTE: This returns the whole equip (not just the shield)\n */\nexport function getAvailableShieldEquip(ship) {\n  for (const equip of ship.equip) {\n    if (equip.shield && !equip.shield.active && equip.cool === 0) {\n      return equip;\n    }\n  }\n  return null;\n}\n\n/**\n * @returns true if the ship is equipped with a shield droid\n */\nexport function hasShieldDroid(ship) {\n  for (const equip of ship.equip) {\n    if (equip.type === c.EQUIP_TYPE_SHIELD_DROID) {\n      return equip;\n    }\n  }\n  return null;\n}\n\n/**\n * @return the first active shield equip in the ship, and if none are active, returns the first shield it finds.\n * returns an equip (not equip.shield like getActiveShield)\n */\nexport function getEquippedShield(ship) {\n  let shield = null;\n  for (const equip of ship.equip) {\n    if (equip.shield) {\n      shield = equip;\n      if (equip.shield.active) {\n        return shield;\n      }\n    }\n  } // for equip\n  return shield;\n}\n\n// Returns true if there is a collision and false otherwise\nexport function detectCollisionWithPlanet(ship, shipSprite, planet) {\n  const shield = getActiveShield(ship);\n  if (shield) {\n    // shield collision is round\n    return utils.distanceBetween(ship.x, ship.y, planet.x, planet.y) < (planet.radius + shield.radius);\n  }\n  // [[x,y],[x,y]]\n  let collisionPoints = utils.getVertexData(ship.x, ship.y, shipSprite);\n  for (let point of collisionPoints) {\n    let dist = utils.distanceBetween(point[0], point[1], planet.x, planet.y);\n    if (dist < planet.radius - c.ALLOWED_OVERLAP) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// Returns true if there is a collision and false otherwise\nexport function detectCollisionWithAlien(ship, shipSprite, alien) {\n  if (ship === alien) {\n    return false;\n  }\n  const shield = getActiveShield(ship);\n  if (shield) {\n    // shield collision is round\n    return utils.distanceBetween(ship.x, ship.y, alien.x, alien.y) < (alien.radius + shield.radius);\n  }\n  let collisionPoints = utils.getVertexData(ship.x, ship.y, shipSprite);\n  for (let point of collisionPoints) {\n    // Only works with circular aliens (need different logic for squares)\n    if (alien.radius) {\n      let dist = utils.distanceBetween(point[0], point[1], alien.x, alien.y);\n      if (dist < alien.radius - c.ALLOWED_OVERLAP) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * Land the ship on the planet\n * NOTE: This will cause damage to the ship attempting to land (side-effects)\n */\nfunction landShip(ship, planet) {\n  // Disengage continuous fire when landing or attempting to land\n  window.world.system.continuousFire = false;\n  // atan2 has parameters (y,x)\n  let planetDir = utils.normalizeRadian(Math.atan2(ship.y - planet.y, ship.x - planet.x));\n\n  // Landing on a wormhole!\n  if (planet.spriteFile === c.WORMHOLE_SPRITE) {\n    const {xAmt:xPos, yAmt:yPos} = dirComponents(planetDir, 200);\n    const {xAmt:xSpeed, yAmt:ySpeed} = dirComponents((planetDir + (Math.PI / 2)), 5);\n    ship.x = planet.jumpToX + xPos;\n    ship.y = planet.jumpToY + yPos;\n    ship.vx = xSpeed;\n    ship.vy = ySpeed;\n    repositionScreen();\n    return;\n  }\n\n  let dirDiff = Math.abs(ship.rotation - planetDir);\n  let speed = Math.abs(ship.vx) + Math.abs(ship.vy);\n  // 0 and PI*2 are right beside each other, so large values are very close to small values\n  let success = ((dirDiff < ship.crashAngle) || (dirDiff > (Math.PI * 2 - ship.crashAngle))) &&\n                (speed < ship.crashSpeed);\n  const hasAutolander = !!getEquip(ship, c.EQUIP_TYPE_AUTOLANDER);\n  // Stop moving\n  ship.vx = 0;\n  ship.vy = 0;\n  if (!success && !hasAutolander) {\n    // The landing was rough - do damage\n    let speedDiff = Math.max(speed - ship.crashSpeed, 0); // 0 if negative\n    let dirDiffAdj = Math.max(dirDiff - ship.crashAngle, 0); // 0 if negative\n    if (dirDiffAdj > Math.PI) {\n      dirDiffAdj = (Math.PI * 2) - dirDiff - ship.crashAngle;\n    }\n    let dmgPct = (speedDiff / 3) + dirDiffAdj;\n    let dmg = dmgPct * ship.armorMax;\n    damageShip(ship, dmg, resetGame, true);\n  }\n  // Disable shields when landing\n  const shield = getActiveShield(ship);\n  if (shield) {\n    disableShield(ship, shield);\n  }\n  // If the ship survived the landing\n  if (ship.armor > 0) {\n    window.world.selectedPlanet = planet; // currently selected planet (for manage UI)\n    window.world.lastPlanetLanded = planet; // last planet landed on\n    //Set ship position and angle on the planet surface\n    let dir = utils.directionTo(planet.x, planet.y, ship.x, ship.y)\n    let r = planet.radius + ship.spriteWidth / 2;\n    let {xAmt, yAmt} = utils.dirComponents(dir, r);\n    ship.x = planet.x + xAmt;\n    ship.y = planet.y + yAmt;\n    ship.rotation = dir;\n    planet.lastLandingDir = dir;\n    game.getShipSprite(ship).rotation = dir;\n    repositionScreen();\n    game.changeGameState(c.GAME_STATE.MANAGE);\n  }\n}\n\nexport function getExplosionSprite(ship) {\n  let sprite = null;\n  for (let explosionSprite of window.world.system.explosions) {\n    if (!explosionSprite.visible) {\n      sprite = explosionSprite;\n      break;\n    }\n  }\n  if (!sprite) {\n    sprite = game.createExplosionSprite();\n  }\n  let playerShip = window.world.ship;\n  sprite.visible = true;\n  sprite.globalX = ship.x;\n  sprite.globalY = ship.y;\n  sprite.x = (ship.x - playerShip.x) + c.HALF_SCREEN_WIDTH;\n  sprite.y = (ship.y - playerShip.y) + c.HALF_SCREEN_HEIGHT;\n  return sprite\n}\n\nexport function bigExplosion(ship) {\n  const explosionSize = 300;\n  const explosionSprite = getExplosionSprite(ship);\n  explosionSprite.scale.set(6, 6);\n  explosionSprite.play();\n\n  // find ships in range\n  for (let nearbyShip of window.world.system.nearby.ships) {\n    if (nearbyShip.alive && nearbyShip.id !== ship.id && nearbyShip.name !== c.SHIP_BOMB.name) {\n      const distToShip = distanceBetween(nearbyShip.x, nearbyShip.y, ship.x, ship.y);\n      if (distToShip <= explosionSize) {\n        damageShip(nearbyShip, (explosionSize - distToShip), null, true);\n      }\n    }\n  } // for nearby\n\n  // This function runs after the animation finishes a loop\n  explosionSprite.onLoop = () => {\n    explosionSprite.stop(); // pause until we crash again\n    explosionSprite.visible = false;\n    explosionSprite.scale.set(2, 2);\n  };\n}\n\n/**\n * Destroys the ship playing an explosion animation\n * @param ship: the one to explode\n * @param afterExplosion: function to run after exploding (or null if nothing to do)\n */\nexport function destroyShip(ship, afterExplosion) {\n  const shield = getActiveShield(ship);\n  if (shield) {\n    disableShield(ship, shield);\n  }\n  if (ship.owner === c.ALIEN) {\n    game.addAlienXp(ship);\n  }\n  let explosionSprite = getExplosionSprite(ship);\n  if (ship.name === c.SHIP_BOMB.name) {\n    bigExplosion(ship);\n  }\n  const shipSprite = game.getShipSprite(ship);\n  shipSprite.visible = false;\n  ship.alive = false;\n  ship.spriteId = null;\n  explosionSprite.play();\n  // This function runs after the animation finishes a loop\n  explosionSprite.onLoop = () => {\n    explosionSprite.stop(); // pause until we crash again\n    explosionSprite.visible = false;\n    if (afterExplosion) {\n      afterExplosion();\n    }\n  };\n}\n\nfunction resetGame() {\n  // loadNewShip will setup a new ship but not position it\n  let ship = window.world.ship;\n  let planet = window.world.selectedPlanet;\n  // The current ship is gone\n  ship.resourcesMax = 0;\n  ship.resources = {titanium: 0, gold: 0, uranium: 0};\n  ship.equip = [];\n  ship.armorMax = 0;\n  ship.armor = 0;\n  window.world.system.continuousFire = false;\n\n  // If the most recently used planet doesn't have any buildings\n  if (!planet || (planet.buildings.length === 0)) {\n    // find a planet with a mine\n    for (let planet of window.world.planets) {\n      if (planet.buildings.length > 0) {\n        window.world.selectedPlanet = planet;\n        break;\n      }\n    }\n    // No buildings on any planet- game over! \n    if (!planet) {\n      window.world.selectedPlanet = window.world.planets[0];\n    }\n  }\n  let {x, y, rotation} = manage.getAvailablePlanetXY(planet, ship, planet.lastLandingDir, 20, 0);\n  ship.x = x;\n  ship.y = y;\n  ship.vx = 0;\n  ship.vy = 0;\n  ship.rotation = rotation;\n  repositionScreen();\n  game.changeGameState(c.GAME_STATE.MANAGE);\n}\n\n/**\n * Explosion position update on screen as ship moves\n * This is called in the fly loop\n */\nfunction moveExplosions() {\n  let ship = window.world.ship;\n  for (let sprite of window.world.system.explosions) {\n    sprite.x = (sprite.globalX - ship.x) + c.HALF_SCREEN_WIDTH;\n    sprite.y = (sprite.globalY - ship.y) + c.HALF_SCREEN_HEIGHT;\n  }\n}\n\nfunction turnShip(ship, left) {\n  let turnSpeed = ship.turnSpeed;\n  for (const equip of ship.equip) {\n    if (equip.type === c.EQUIP_TYPE_TURN && equip.boostSpeed) {\n      turnSpeed += equip.boostSpeed;\n    }\n  }\n  ship.rotation = utils.normalizeRadian(ship.rotation + turnSpeed * (left ? -1 : 1));\n}\n\nfunction propelShip(ship) {\n  let propulsion = ship.propulsion;\n  for (const equip of ship.equip) {\n    if (equip.type === c.EQUIP_TYPE_SPEED && equip.boostSpeed) {\n      propulsion += equip.boostSpeed;\n    }\n  }\n  ship.vx += propulsion * Math.cos(ship.rotation);\n  ship.vy += propulsion * Math.sin(ship.rotation);\n}\n\nfunction brakeShip(ship) {\n  let brake = getEquip(ship, c.EQUIP_TYPE_BRAKE);\n  if (brake) {\n    if (brake.brakeSpeedPct > 0) {\n      ship.vx -= ship.vx * brake.brakeSpeedPct;\n      ship.vy -= ship.vy * brake.brakeSpeedPct;\n    } else {\n      // Blink brake pct is 0, immediate stop (no momentum)\n      ship.vx = 0;\n      ship.vy = 0;\n    }\n  }\n}\n\nfunction thrustShip(ship, left) {\n  let thruster = getEquip(ship, c.EQUIP_TYPE_THRUSTER);\n  if (thruster) {\n    let dir = utils.normalizeRadian(ship.rotation + ((left ? -1 : 1) * Math.PI / 2)); // 90 deg turn\n    const thrustX = thruster.thrustSpeed * Math.cos(dir);\n    const thrustY = thruster.thrustSpeed * Math.sin(dir);\n    if (thruster.thrustType === c.THRUST_MOMENTUM) {\n      ship.vx += thrustX;\n      ship.vy += thrustY\n    } else if (thruster.thrustType === c.THRUST_BLINK) {\n      ship.x += thrustX;\n      ship.y += thrustY;\n    } else {\n      console.warn(\"Unable to use thruster with type \" + thruster.thrustType);\n    }\n  }\n}\n\n/**\n * Fires the weapon from the location and direction of the ship\n */\nexport function fireWeapon(weapon, ship, jitter) {\n  if (weapon && (weapon.cool <= 0)) {\n    fireBullet(ship, weapon, jitter);\n    weapon.cool = weapon.coolTime; // this is decremented in coolWeapons\n  }\n}\n\nexport function firePrimaryWeapon(ship, jitter) {\n  let gun = getEquip(ship, c.EQUIP_TYPE_PRIMARY_WEAPON);\n  if (gun) {\n    fireWeapon(gun, ship, gun.jitter ? gun.jitter : jitter);\n  }\n}\n\nexport function getSecondaryWeapon(ship) {\n  if (!ship.selectedSecondaryWeaponIndex || ship.selectedSecondaryWeaponIndex < 0) {\n    // Just find any secondary weapon - none was selected\n    return getEquip(ship, c.EQUIP_TYPE_SECONDARY_WEAPON);\n  }\n  // Find the equipped weapon\n  const equip = ship.equip[ship.selectedSecondaryWeaponIndex];\n  if (equip.type !== c.EQUIP_TYPE_SECONDARY_WEAPON) {\n    manage.selectFirstSecondaryWeapon(ship);\n    return getEquip(ship, c.EQUIP_TYPE_SECONDARY_WEAPON);\n  }\n  return equip;\n}\n\nexport function fireSecondaryWeapon(ship) {\n  let weapon = getSecondaryWeapon(ship);\n  if (weapon && (weapon.cool <= 0)) {\n    if (weapon.createShip) {\n      if (!game.canAfford(null, ship, weapon.createShip.type.cost)) {\n        // We don't fire the weapon - we can't afford it\n        return;\n      }\n      game.payResourceCost(null, ship, weapon.createShip.type.cost);\n      const child = game.createShip(weapon.createShip.type, ship.owner);\n      const childSprite = game.getShipSprite(child);\n      const shipRadius = ship.spriteWidth || (ship.radius * 2);\n      const childDistFromShip = (shipRadius / 2) + (child.spriteWidth / 2) + 20;\n      const dir = weapon.createShip.dir === c.DIR_AHEAD_OF_SHIP ? utils.normalizeRadian(ship.rotation - Math.PI) : ship.rotation;\n      const {xAmt, yAmt} = utils.dirComponents(dir, childDistFromShip);\n      child.x = ship.x - xAmt;\n      child.y = ship.y - yAmt;\n      if (child.propulsion) {\n        child.vx = ship.vx;\n        child.vy = ship.vy;\n      }\n      child.rotation = utils.normalizeRadian(dir - Math.PI);\n      childSprite.x = (child.x - window.world.ship.x) + c.HALF_SCREEN_WIDTH;\n      childSprite.y = (child.y - window.world.ship.y) + c.HALF_SCREEN_HEIGHT;\n      childSprite.visible = true;\n      window.world.ships.push(child);\n      // Since it may not move we need to check if it collides with anything\n      ai.checkForCollisionWithPlanet(child);\n      ai.checkForCollisionWithShip(child);\n    }\n    if (weapon.shield) {\n      // If another shield is already in use - we won't reset the cool\n      if (getActiveShield(ship) !== null) {\n        return;\n      }\n      enableShield(ship, weapon.shield);\n    }\n    weapon.cool = weapon.coolTime; // this is decremented in coolWeapons\n  }\n}\n\n/**\n * Called to enable a ship's shield.\n * This will add a shield sprite to the ship and set it to visible\n */\nexport function enableShield(ship, shield) {\n  if (getActiveShield(ship) !== null) {\n    console.log('not enabling shield, as there is already one enabled')\n    return;\n  }\n  const shieldSprite = game.getShieldSprite(ship, shield);\n  shieldSprite.visible = true;\n  shield.active = true;\n  shield.lifetime = shield.lifetimeMax;\n  shield.armor = shield.armorMax;\n  // Increase the ship size to the size of the shield\n  ship.spriteWidth = shield.radius * 2;\n  ship.spriteHeight = shield.radius * 2;\n}\n\n/**\n * Called to disable, and stop drawing a shield on a ship\n */\nexport function disableShield(ship, shield) {\n  const shieldSprite = game.getShieldSprite(ship, shield);\n  shieldSprite.visible = false;\n  shield.active = false;\n  // Reset the ship size back to regular\n  const shipSprite = game.getShipSprite(ship);\n  ship.spriteWidth = shipSprite.width;\n  ship.spriteHeight = shipSprite.height;\n}\n\n/**\n * Fires a bullet from the ship\n */\nexport function fireBullet(ship, gun, jitter) {\n  let bullet = findOrCreateBullet(gun.bulletFile);\n  bullet.lifetime = gun.lifetime;\n  bullet.damage = gun.damage;\n  const jitterAmt = jitter ? (jitter * Math.random() * (utils.randomBool() ? -1 : 1)) : 0;\n  const rotation = ship.rotation + jitterAmt;\n  bullet.vx = ship.vx + gun.speed * Math.cos(rotation);\n  bullet.vy = ship.vy + gun.speed * Math.sin(rotation);\n  bullet.x = ship.x + Math.sqrt(ship.spriteWidth * ship.spriteWidth + ship.spriteHeight * ship.spriteHeight) / 2 * Math.cos(rotation);\n  bullet.y = ship.y + Math.sqrt(ship.spriteWidth * ship.spriteWidth + ship.spriteHeight * ship.spriteHeight) / 2 * Math.sin(rotation);\n}\n\n/**\n * Gets the next available bullet (one that is not visible)\n */\nfunction findOrCreateBullet(bulletFile) {\n  for (let bullet of window.world.system.bullets) {\n    if (!bullet.active && (bullet.fileName === bulletFile)) {\n      bullet.active = true;\n      bullet.sprite.visible = true;\n      return bullet;\n    }\n  }\n  // Create a new bullet\n  let bullet = {active: true, damage: 0, x: 0, y: 0, vx: 0, vy: 0, lifetime: 1, fileName: bulletFile};\n  // Setup sprite\n  let spritesheet = window.PIXI.loader.resources[c.SPRITESHEET_JSON];\n  let sprite = new window.PIXI.Sprite(spritesheet.textures[bulletFile]);\n  sprite.x = -100;\n  sprite.y = -100;\n  sprite.anchor.set(0.5, 0.5);\n  sprite.scale.set(0.5, 0.5);\n  window.world.system.spriteContainers.bullets.addChild(sprite);\n  bullet.sprite = sprite;\n  window.world.system.bullets.push(bullet);\n  return bullet;\n}\n\nfunction killBullet(bullet) {\n  bullet.active = false;\n  bullet.sprite.visible = false;\n  bullet.sprite.x = -100;\n  bullet.sprite.y = -100;\n  bullet.vx = 0;\n  bullet.vy = 0;\n}\n\n/**\n * Moves all the bullets (called every draw cycle from app.js mainLoop)\n */\nexport function moveBullets() {\n  let ship = window.world.ship;\n  for (let bullet of window.world.system.bullets) {\n    if (bullet.active) {\n      bullet.x = bullet.x + bullet.vx;\n      bullet.y = bullet.y + bullet.vy;\n      bullet.sprite.x = (bullet.x - ship.x) + c.HALF_SCREEN_WIDTH;\n      bullet.sprite.y = (bullet.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n      bullet.lifetime = bullet.lifetime - 1;\n      if (bullet.lifetime <= 0) {\n        killBullet(bullet);\n      }\n      checkForBulletCollision(bullet);\n    }\n  } // for bullet\n}\n\nfunction checkForBulletCollision(bullet) {\n  let ship = window.world.ship;\n  // Collision with planet\n  for (let planet of window.world.system.nearby.planets) {\n    if (utils.distanceBetween(planet.x, planet.y, bullet.x, bullet.y) < planet.radius) {\n      killBullet(bullet);\n    }\n  }\n  // Collision with ship\n  if (ship.alive &&\n      // Initial check to see if the bullet is anywhere near the ship (before we do more expensive collision checks))\n      (bullet.x < ship.x + (ship.radius+10)) &&\n      (bullet.x > ship.x - (ship.radius+10)) &&\n      (bullet.y < ship.y + (ship.radius+10)) &&\n      (bullet.y > ship.y - (ship.radius+10))\n      ) {\n    const shipSprite = game.getShipSprite(ship);\n    const bulletWillHitShip = utils.pointInSprite(ship.x, ship.y, shipSprite, bullet.x, bullet.y);\n    let shield = getActiveShield(ship);\n    if (!shield && hasShieldDroid(ship) && (window.world.system.gameState === c.GAME_STATE.FLY)) {\n      const shieldEquip = getAvailableShieldEquip(ship);\n      if (shieldEquip && bulletWillHitShip) {\n        shieldEquip.cool = shieldEquip.coolTime;\n        enableShield(ship, shieldEquip.shield);\n        shield = shieldEquip.shield;\n      }\n    }\n    if (shield && utils.distanceBetween(ship.x, ship.y, bullet.x, bullet.y) < shield.radius) {\n      bulletHitShip(bullet, ship, resetGame);\n    } else if (bulletWillHitShip) {\n      bulletHitShip(bullet, ship, resetGame);\n    }\n  }\n  // Collision with alien ship\n  for (let alien of window.world.system.nearby.ships) {\n    if ((alien !== ship) && alien.alive && alien.radius &&\n      // Initial check to see if the bullet is anywhere near the alien (before we do more expensive collision checks))\n      (bullet.x < alien.x + (alien.radius+10)) &&\n      (bullet.x > alien.x - (alien.radius+10)) &&\n      (bullet.y < alien.y + (alien.radius+10)) &&\n      (bullet.y > alien.y - (alien.radius+10))\n    ) {\n      const shield = getActiveShield(alien);\n      if ((shield && utils.distanceBetween(alien.x, alien.y, bullet.x, bullet.y) < shield.radius) || // hit alien shield\n        (utils.distanceBetween(alien.x, alien.y, bullet.x, bullet.y) <= alien.radius)) { // hit alien ship\n        bulletHitShip(bullet, alien, null);\n      }\n    }\n  } // for alien\n}\n\n/**\n * Apply damage from bullet to ship, also kills the bullet\n */\nfunction bulletHitShip(bullet, ship, afterExplosion) {\n  damageShip(ship, bullet.damage, afterExplosion, true);\n  killBullet(bullet);\n}\n\n/**\n * applies damage to the ship, destroying the ship if needed\n */\nexport function damageShip(ship, damage, afterExplosion, useShield) {\n  const shield = getActiveShield(ship);\n  if (useShield && shield) {\n    shield.armor -= damage;\n    if (shield.armor <= 0) {\n      shield.armor = 0;\n      disableShield(ship, shield);\n    }\n  } else { // no shield\n    ship.armor = ship.armor - damage;\n    if (ship.armor <= 0) {\n      ship.armor = 0;\n      destroyShip(ship, afterExplosion);\n    }\n  }\n}\n\n/**\n * collision between player ship and alien (sometimes alien and alien)\n */\nexport function shipsCollide(ship, alien) {\n  if (ship === alien) {\n    return; // can't collide with yourself\n  }\n  let shipDamage = ship.armor;\n  let alienDamage = alien.armor;\n  damageShip(alien, shipDamage, (window.world.ship === alien) ? resetGame : null, false);\n  damageShip(ship, alienDamage, (window.world.ship === ship) ? resetGame : null, false);\n  // If you died hitting an alien, stop moving\n  if (!ship.alive) {\n    ship.vx = 0;\n    ship.vy = 0;\n  }\n}\n\n/**\n * @return matching acc equipment type if it is found, null otherwise\n */\nexport function getEquip(ship, equipType) {\n  for (let equip of ship.equip) {\n    if (equip.type === equipType) {\n      return equip;\n    }\n  }\n  return null;\n}\n\nexport function drawMiniMap() {\n  let g = window.world.system.miniMapGraphics;\n  let view = window.world.view;\n  let l = 0;\n  let t = c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT;\n  let r = c.MINIMAP_WIDTH;\n  let b = c.SCREEN_HEIGHT;\n  g.clear();\n  // Background\n  g.beginFill(c.MINIMAP_BACKGROUND_COLOR);\n  g.lineStyle(1, c.MINIMAP_BORDER_COLOR);\n  g.drawRect(l, t, r, b);\n  g.endFill();\n  // Planets\n  for (let planet of window.world.planets) {\n    if (planetOnMap(view, planet)) {\n      let x = l + c.HALF_MINIMAP_WIDTH + ((planet.x - view.x) * c.MINIMAP_SCALE_X);\n      let y = t + c.HALF_MINIMAP_HEIGHT + ((planet.y - view.y) * c.MINIMAP_SCALE_Y);\n      const planetColor = window.world.selectedPlanet === planet ? c.MINIMAP_SELECTED_PLANET_COLOR : c.PLANET_COLORS[planet.spriteFile];\n      g.lineStyle(2, planetColor);\n      g.beginFill(planetColor);\n      g.drawCircle(x, y, planet.radius * c.MINIMAP_SCALE_X);\n      g.endFill();\n      // Buildings\n      for (let building of planet.buildings) {\n        let buildingX = l + c.HALF_MINIMAP_WIDTH + ((building.x - view.x) * c.MINIMAP_SCALE_X) - 1.5;\n        let buildingY = t + c.HALF_MINIMAP_HEIGHT + ((building.y - view.y) * c.MINIMAP_SCALE_Y) - 1.5;\n        g.lineStyle(1, c.MINIMAP_BUILDING_COLOR);\n        g.drawRect(buildingX, buildingY, 2, 2);\n      }\n    }\n  }\n  // Ship\n  const x = l + c.HALF_MINIMAP_WIDTH + ((window.world.ship.x - view.x) * c.MINIMAP_SCALE_X);\n  const y = t + c.HALF_MINIMAP_HEIGHT + ((window.world.ship.y - view.y) * c.MINIMAP_SCALE_Y);\n  g.lineStyle(1, c.MINIMAP_SHIP_COLOR);\n  g.beginFill(c.MINIMAP_SHIP_COLOR);\n  g.drawCircle(x, y, 2);\n  g.endFill();\n}\n\n/**\n * Handles clicks on the minimap\n */\nexport function clickOnMinimap(clickX, clickY) {\n  if (window.world.system.gameState === c.GAME_STATE.MANAGE) {\n    const view = window.world.view\n    let globalX = view.x + ((clickX - c.HALF_MINIMAP_WIDTH) * (1 / c.MINIMAP_SCALE_X));\n    let globalY = view.y + (((clickY - (c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT)) - c.HALF_MINIMAP_HEIGHT) * (1 / c.MINIMAP_SCALE_X));\n    for (let planet of window.world.planets) {\n      if (utils.distanceBetween(globalX, globalY, planet.x, planet.y) <= planet.radius) {\n        window.world.selectedPlanet = planet;\n      }\n    }\n    view.x = globalX;\n    view.y = globalY;\n    drawMiniMap();\n  }\n}\n\nfunction planetOnMap(view, planet) {\n  // Right side\n  return !((view.x + c.HALF_MINIMAP_VIEW_WIDTH + planet.radius < planet.x) || // Right\n    (view.x - c.HALF_MINIMAP_VIEW_WIDTH - planet.radius > planet.x) || // Left\n    (view.y + c.HALF_MINIMAP_VIEW_HEIGHT + planet.radius < planet.y) || // Bottom\n    (view.y - c.HALF_MINIMAP_VIEW_HEIGHT - planet.radius > planet.y));\n}\n\n/**\n * @return the max range of the weapon\n */\nexport function weaponRange(weapon) {\n  if (!weapon) {\n    return 0;\n  }\n  // Not sure what the fudge factor is, but the range seems a little short without it\n  return weapon.speed * weapon.lifetime * 1.4;\n}\n\n/**\n * @return the max range of the primary weapon on the ship\n */\nexport function primaryWeaponRange(ship) {\n  let gun = getEquip(ship, c.EQUIP_TYPE_PRIMARY_WEAPON);\n  return weaponRange(gun);\n}","import { c, utils, fly, game, ai } from './';\nimport lodash from 'lodash';\nimport {EQUIP_TYPE_BRAKE, EQUIP_TYPE_PRIMARY_WEAPON, EQUIP_TYPE_THRUSTER} from \"./constants\";\nimport {canAfford, payResourceCost} from \"./game\";\n\nexport function enterManageState() {\n  console.log(\"enter manage state\");\n}\n\n// When managing planet resources - loop runs 60/s\nexport function manageLoop(delta) {\n  if ((window.world.system.keys.up.isDown || window.world.system.keys.w.isDown)) {\n    if (window.world.ship.alive && !window.world.system.isTyping) {\n      takeOff();\n    }\n  }\n}\n\nexport function takeOff(boost = 1) {\n  let world = window.world;\n  let ship = world.ship;\n  game.changeGameState(c.GAME_STATE.FLY);\n  let gravity = utils.calcGravity(ship.x, ship.y, world.selectedPlanet);\n  ship.vx = gravity.x * -c.TAKEOFF_SPEED * boost;\n  ship.vy = gravity.y * -c.TAKEOFF_SPEED * boost;\n}\n\n/**\n * @return Correct set of constants for the building type.\n * Maybe these constants could be moved into a variable or something\n */\nfunction getBuildingInfo(buildingType) {\n  if (buildingType === c.BUILDING_TYPE_FACTORY) {\n    return {spriteScale:c.FACTORY_SCALE, spriteFile:c.FACTORY_FILE, animation:false};\n  } else if (buildingType === c.BUILDING_TYPE_MINE) {\n    return {spriteScale:c.MINE_SCALE, spriteFile:c.MINE_FILE, animation:true};\n  }\n  console.warn('Unknown building type ', buildingType);\n  return {}\n}\n\n/**\n * Creates a factory sprite and adds it to the planet container using the factory x,y and rotation\n * NOTE: The building x,y,rot need to be set before calling this\n * @param building building to build\n * @param planet planet to build on\n * @param planetSprite optional, if null this will lookup the sprite using getPlanetSprite()\n */\nexport function makeBuildingSprite(building, planet, planetSprite = null) {\n  const { spriteScale, spriteFile, animation } = getBuildingInfo(building.type);\n  let spritesheet = window.PIXI.Loader.shared.resources[c.SPRITESHEET_JSON].spritesheet;\n  let buildingSprite;\n  if (animation) {\n    buildingSprite = new window.PIXI.AnimatedSprite(spritesheet.animations[spriteFile]);\n    buildingSprite.animationSpeed = c.MINE_ANIMATION_SPEED;\n    buildingSprite.play();\n  } else {\n    buildingSprite = new window.PIXI.Sprite(spritesheet.textures[spriteFile]);\n  }\n  buildingSprite.anchor.set(0.5, 0.5);\n  buildingSprite.scale.set(spriteScale, spriteScale);\n  buildingSprite.rotation = building.rotation;\n  buildingSprite.x = (building.x - planet.x);\n  buildingSprite.y = (building.y - planet.y);\n  buildingSprite.visible = true;\n  if (!planetSprite) {\n    planetSprite = game.getPlanetSprite(planet);\n  }\n  planetSprite.addChild(buildingSprite);\n}\n\nexport function buildMine() {\n  let world = window.world;\n  let mine = {type: c.BUILDING_TYPE_MINE};\n  let planet = world.selectedPlanet;\n  let ship = world.ship;\n  if (!canAfford(planet, ship, c.MINE_COST)) {\n    console.log('Not enough resources to build a mine');\n    return;\n  }\n  // Place the mine (to the right of the ship)\n  const initRotation = getBuildingPlacementRotation(ship, planet, c.MINE_WIDTH);\n  // Calculate an X,Y point near the ship on surface of the planet\n  // NOTE: we use sprite.height for width because all sprites face to the right (0 rotation)\n  let {x,y,rotation} = getAvailablePlanetXY(planet, ship, initRotation, c.MINE_WIDTH, 0);\n  if (x === null) {\n    console.warn(\"Unable to place mine\");\n    return;\n  }\n  mine.width = c.MINE_WIDTH;\n  mine.x = x;\n  mine.y = y;\n  mine.rotation = rotation;\n  // Setup the graphics\n  makeBuildingSprite(mine, planet);\n  game.payResourceCost(planet, ship, c.MINE_COST);\n  planet.buildings.push(mine);\n  fly.drawMiniMap(); // add building to minimap\n}\n\n/**\n * @return the rotation direction of a place some distance to the right of the ship\n */\nexport function getBuildingPlacementRotation(ship, planet, distanceFromShip) {\n  let deg = ship.rotation + Math.PI/2; // 90 deg (right of the ship)\n  let degX = ship.x + distanceFromShip  * Math.cos(deg); // Some point Xpx to the right of the ship\n  let degY = ship.y + distanceFromShip * Math.sin(deg);\n  // Calculate the rotation direction to get to that point\n  return utils.normalizeRadian(Math.atan2(degY - planet.y, degX - planet.x));\n\n}\n\n/**\n * @return {x,y} for the next free space to the right of the ship on the planet circumfrence \n */\nexport function getAvailablePlanetXY(planet, ship, rotation, buildingWidth, count) {\n  if (buildingFits(planet, ship, rotation, buildingWidth)) {\n    let x = planet.x + ((planet.radius + 10) * Math.cos(rotation));\n    let y = planet.y + ((planet.radius + 10) * Math.sin(rotation));\n    return {x,y, rotation};\n  }\n  // If we have done a full circle then give up\n  if (count > (Math.PI*2 / c.BUILDING_PLACEMENT_ROTATION_INCREMENT)) {\n    return {x:null, y:null, rotation:null};\n  }\n  return getAvailablePlanetXY(planet, ship, rotation+c.BUILDING_PLACEMENT_ROTATION_INCREMENT\n    , buildingWidth, ++count);\n}\n\nexport function buildingFits(planet, ship, rotation, buildingWidth) {\n  let x = planet.x + ((planet.radius + 10) * Math.cos(rotation));\n  let y = planet.y + ((planet.radius + 10) * Math.sin(rotation));\n  // Min distance to building\n  let minDist = utils.distanceBetween(x,y, ship.x, ship.y);\n  let minBuildingWidth = buildingWidth;\n  for (let building of planet.buildings) {\n     let dist = utils.distanceBetween(x,y, building.x, building.y);\n     if (dist < minDist) {\n       minDist = dist;\n       minBuildingWidth = building.width;\n     }\n  } \n  return (minDist > (buildingWidth/2 + minBuildingWidth/2 + 15));\n}\n\n/**\n * Move a resource ship <-> planet \n */\nexport function transferResource(source, target, resourceType, requestedAmtStr, maxCapacity) {\n  let requestedAmt = Number(requestedAmtStr);\n  if (requestedAmt < 0) {\n    requestedAmt = 0;\n  }\n  if (isNaN(requestedAmt)) {\n    requestedAmt = 0;\n  }\n  let amt = requestedAmt;\n  // requesting '' is requesting the entire source (same as requesting too much)\n  if (requestedAmtStr === '' || (source[resourceType] - requestedAmt < 0)) {\n    amt = source[resourceType];\n  }\n  // Cap to max capacity of target\n  if (maxCapacity !== null) {\n    let spaceLeft = maxCapacity - (target.titanium + target.gold + target.uranium);\n    if (spaceLeft < amt) {\n      amt = spaceLeft;\n    }\n  }\n  target[resourceType] += amt;\n  source[resourceType] -= amt;\n}\n\n/**\n * Move all resources to the planet\n */\nexport function unloadShip(ship, planet) {\n  transferResource(ship.resources, planet.resources.stored, 'titanium', ship.resources.titanium, null);\n  transferResource(ship.resources, planet.resources.stored, 'gold', ship.resources.gold, null);\n  transferResource(ship.resources, planet.resources.stored, 'uranium', ship.resources.uranium, null);\n}\n\n/**\n * Choose some default resources to resupply the ship with.\n * This is for quick restocking of resources\n * NOTE: This may need to do multiple passes to fill up the space properly especially when planets are low on uranium\n */\nexport function resupplyShip(ship, planet) {\n  const desiredAmt = Math.floor(ship.resourcesMax / 3);\n  let freeAmt = ship.resourcesMax - (ship.resources.titanium + ship.resources.gold + ship.resources.uranium);\n  if (freeAmt <= 0) {\n    // no space for more resources\n    return;\n  }\n  // 20 is the min required to build a mine - you probably want at least 20\n  const desiredTitanium = desiredAmt >= 20 ? desiredAmt : 20;\n  if (ship.resources.titanium < desiredTitanium) {\n    transferResource(planet.resources.stored, ship.resources, 'titanium', desiredTitanium - ship.resources.titanium, ship.resourcesMax);\n  }\n  if (ship.resources.gold < desiredAmt) {\n    transferResource(planet.resources.stored, ship.resources, 'gold', desiredAmt - ship.resources.gold, ship.resourcesMax);\n  }\n  // Fill up the rest of the space with uranium (it's the rarest)\n  freeAmt = ship.resourcesMax - (ship.resources.titanium + ship.resources.gold + ship.resources.uranium);\n  if (ship.resources.uranium < freeAmt) {\n    transferResource(planet.resources.stored, ship.resources, 'uranium', freeAmt, ship.resourcesMax);\n  }\n  // If we still have space\n  freeAmt = ship.resourcesMax - (ship.resources.titanium + ship.resources.gold + ship.resources.uranium);\n  if (freeAmt > 0) {\n    transferResource(planet.resources.stored, ship.resources, 'titanium', '', ship.resourcesMax);\n    transferResource(planet.resources.stored, ship.resources, 'gold', '', ship.resourcesMax);\n    transferResource(planet.resources.stored, ship.resources, 'uranium', '', ship.resourcesMax);\n  }\n}\n\nexport function buildFactory() {\n  let world = window.world;\n  let planet = world.selectedPlanet;\n  let ship = world.ship;\n  let factory = {type: c.BUILDING_TYPE_FACTORY};\n  if (!canAfford(planet, ship, c.FACTORY_COST)) {\n    console.log('Not enough resources to build a factory');\n    return;\n  }\n  // Place the factory (to the right of the ship)\n  const initialRotation = getBuildingPlacementRotation(ship, planet, c.FACTORY_WIDTH);\n  // Calculate an X,Y point near the ship on surface of the planet\n  // NOTE: we use sprite.height for width because all sprites face to the right (0 rotation)\n  let {x,y,rotation} = getAvailablePlanetXY(planet, ship, initialRotation, c.FACTORY_WIDTH, 0);\n  if (x === null) {\n    console.warn(\"Unable to place factory\");\n    return;\n  }\n  factory.width = c.MINE_WIDTH;\n  factory.x = x;\n  factory.y = y;\n  factory.rotation = rotation;\n  planet.buildings.push(factory);\n\n  // Setup the graphics\n  makeBuildingSprite(factory, planet);\n\n  game.payResourceCost(planet, ship, c.FACTORY_COST);\n  fly.drawMiniMap(); // add to minimap\n}\n\n/**\n * Called when the factory finishes building a new ship \n */\nexport function buildShip(shipTemplate) {\n  let world = window.world;\n  let planet = world.selectedPlanet;\n  let ship = window.world.ship;\n  if (!canAfford(planet, ship, shipTemplate.cost)) {\n    return;\n  }\n  payResourceCost(planet, ship, shipTemplate.cost);\n\n  if (shipTemplate.autonomousShip) {\n    // Special equip that creates an autonomous ship\n    launchDroidShip(shipTemplate);\n  } else {\n    let newShip = game.createShip(shipTemplate, c.PLAYER);\n    planet.ships.push(newShip);\n  }\n}\n\n/**\n * Called when the user clicks to switch to a new ship \n * NOTE: the new ship should already be created and stored in a planet\n */\nexport function switchToShip(newShip) {\n  let oldShip = window.world.ship;\n  let selectedPlanet = window.world.selectedPlanet;\n  let lastPlanetLanded = window.world.lastPlanetLanded;\n  if (!removeShipFromStorage(newShip, selectedPlanet)) {\n    console.warn(\"Unable to remove ship from planet \",newShip,\" planet=\",selectedPlanet);\n    return;\n  }\n  addShipToStorage(oldShip, lastPlanetLanded);\n\n  window.world.ship = newShip;\n  // check to ensure oldShip is not destroyed\n  if (oldShip && oldShip.alive && oldShip.spriteId) {\n    fly.resetWeaponsCool(oldShip);\n    const oldShipSprite = game.getShipSprite(oldShip);\n    oldShipSprite.visible = false;\n    oldShip.spriteId = null;\n  }\n  // Get the new sprite (adds it to the container)\n  const newShipSprite = game.getShipSprite(newShip);\n  newShipSprite.visible = true;\n  newShip.rotation = selectedPlanet.lastLandingDir;\n  newShipSprite.rotation = newShip.rotation;\n  newShipSprite.position.set(c.HALF_SCREEN_WIDTH, c.HALF_SCREEN_HEIGHT);\n\n  let r = selectedPlanet.radius + (newShip.spriteWidth / 2);\n  newShip.x = selectedPlanet.x + (r * Math.cos(newShip.rotation));\n  newShip.y = selectedPlanet.y + (r * Math.sin(newShip.rotation));\n  window.world.lastPlanetLanded = selectedPlanet;\n  fly.repositionScreen();\n}\n\n/**\n * Removes a ship from the planet, returns null if no matching ship was found\n */\nexport function removeShipFromStorage(ship, planet) {\n  let ships = planet.ships.filter((s) => s !== ship);\n  let removedShip = ships.length < planet.ships.length;\n  planet.ships = ships;\n  return removedShip;\n}\n\nexport function addShipToStorage(ship, planet) {\n  // If the ship is not visible (and armorMax is zero) it has been destroyed\n  // Some ships might be non-visible because they are not currently being used\n  if (ship.alive && ship.armorMax > 0) {\n    planet.ships.push(ship);\n  }\n}\n\n/**\n * @return true if the planet has a factory for the player\n */\nexport function hasFactory(planet) {\n  for (let building of planet.buildings) {\n    if (building.type === c.BUILDING_TYPE_FACTORY) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Create a new piece of equipment from the template\n */\nexport function makeEquip(equipTemplate) {\n  let equip = lodash.cloneDeep(equipTemplate);\n  equip.id = window.world.nextId++;\n  return equip;\n}\n\nexport function buildEquip(equipTemplate) {\n  let planet = window.world.selectedPlanet;\n  let ship = window.world.ship;\n  if (canAfford(planet, ship, equipTemplate.cost)) {\n    payResourceCost(planet, ship, equipTemplate.cost);\n    planet.equip.push(makeEquip(equipTemplate));\n  }\n}\n\nexport function launchDroidShip(equipTemplate) {\n  const planet = window.world.selectedPlanet;\n  const ship = window.world.ship;\n  const child = game.createShip(equipTemplate, ship.owner);\n  const childSprite = game.getShipSprite(child);\n  const childDistFromShip = planet.radius + child.spriteWidth + 10;\n  child.aiData = {homePlanet: planet, targetPlanet:null};\n  child.x = planet.x;\n  child.y = planet.y;\n  childSprite.x = (child.x - window.world.ship.x) + c.HALF_SCREEN_WIDTH;\n  childSprite.y = (child.y - window.world.ship.y) + c.HALF_SCREEN_HEIGHT;\n  childSprite.visible = true;\n  window.world.ships.push(child);\n  // Find a targetPlanet (has to be done after x,y is set\n  child.aiData.targetPlanet = ai.getTargetPlanetWithResources(child);\n  // Adjust the x,y so the ship points towards the destination\n  let dir = null;\n  if (child.aiData.targetPlanet) {\n    dir = utils.directionTo(child.aiData.targetPlanet.x, child.aiData.targetPlanet.y, planet.x, planet.y);\n  } else {\n    dir = ship.rotation + (Math.PI / 2);\n  }\n  const {xAmt, yAmt} = utils.dirComponents(dir, childDistFromShip);\n  child.x = planet.x - xAmt;\n  child.y = planet.y - yAmt;\n  child.rotation = utils.normalizeRadian(dir - Math.PI);\n}\n\nexport function costToRepair(ship) {\n  const damageToRepair = ship.armorMax - ship.armor;\n  // If you change the /5 remember to change the same in repairShip... maybe should be a constant\n  return {titanium:(damageToRepair / 5), gold:0, uranium:0};\n}\n\nexport function repairShip(ship, planet) {\n  let cost = costToRepair(ship);\n  let addArmor = ship.armorMax - ship.armor; // armor needed\n  if (!game.canAfford(planet, ship, cost)) {\n    let titaniumOnHand = planet.resources.stored.titanium + ship.resources.titanium;\n    cost.titanium = titaniumOnHand;\n    addArmor = titaniumOnHand * 5;\n  } \n  game.payResourceCost(planet, ship, cost);\n  ship.armor += addArmor;\n}\n\nexport function addEquip(ship, newEquip) {\n  if (newEquip.type === c.EQUIP_TYPE_ARMOR) {\n    // Only add armor if the ship is in full repair\n    if (ship.armor === ship.armorMax) {\n      ship.armor += newEquip.armorAmt;\n    }\n    ship.armorMax += newEquip.armorAmt;\n  } else if (newEquip.type === c.EQUIP_TYPE_STORAGE) {\n    ship.resourcesMax += newEquip.storageAmount;\n  }\n}\n\nexport function selectFirstSecondaryWeapon(ship) {\n  for (let i=0; i< ship.equip.length; i++) {\n    if (ship.equip[i].type === c.EQUIP_TYPE_SECONDARY_WEAPON) {\n      ship.selectedSecondaryWeaponIndex = i;\n      return;\n    }\n  } // for\n  // Couldn't find a secondary weapon\n  ship.selectedSecondaryWeaponIndex = -1;\n}\n\nexport function moveEquipFromPlanetToShip(ship, planet, equipToMove) {\n  // Remove from the planet\n  ship.equip.push(equipToMove);\n  addEquip(ship, equipToMove);\n  // Remove the oldEquip from the planet\n  lodash.remove(planet.equip, (e) => e.id === equipToMove.id);\n  selectFirstSecondaryWeapon(ship);\n}\n\nexport function moveEquipFromShipToPlanet(ship, planet, equipToMove) {\n  // Add to the planet\n  planet.equip.push(equipToMove);\n  if (equipToMove.type === c.EQUIP_TYPE_ARMOR) {\n    ship.armorMax -= equipToMove.armorAmt;\n    if (ship.armor > ship.armorMax) {\n      ship.armor = ship.armorMax;\n    }\n  } else if (equipToMove.type === c.EQUIP_TYPE_STORAGE) {\n    ship.resourcesMax -= equipToMove.storageAmount;\n    let shipResources = ship.resources.titanium + ship.resources.gold + ship.resources.uranium;\n    if (shipResources > ship.resourcesMax) {\n      let owing = this.removeResource(ship, 'titanium', (shipResources - ship.resourcesMax));\n      if (owing > 0) {\n        owing = this.removeResource(ship, 'gold', owing);\n      }\n      if (owing > 0) {\n        owing = this.removeResource(ship, 'uranium', owing);\n      }\n      if (owing > 0) {\n        console.warn(\"Cannot remove more resources from ship still owing \"+owing);\n      }\n    }\n  }\n  // Remove the oldEquip from the ship (no new equipment added)\n  lodash.remove(ship.equip, (e) => e.id === equipToMove.id);\n  selectFirstSecondaryWeapon(ship);\n}\n\n/**\n * Destroys unwanted equipment and recovers some material cost\n * @param planet location resources will be added to\n * @param equip to destroy\n */\nexport function salvageEquip(planet, equip) {\n  planet.resources.stored['titanium'] += equip.cost.titanium * c.SALVAGE_RATE;\n  planet.resources.stored['gold'] += equip.cost.gold * c.SALVAGE_RATE;\n  planet.resources.stored['uranium'] += equip.cost.uranium * c.SALVAGE_RATE;\n  // Remove the equip from the planet\n  lodash.remove(planet.equip, (e) => e.id === equip.id);\n}\n\n/**\n * Destroys unwanted ships and recovers some material cost\n * @param planet location resources will be added to\n * @param ship to destroy\n */\nexport function salvageShip(planet, ship) {\n  // First salvage all equipment on the ship\n  for (const equip of ship.equip) {\n    salvageEquip(planet, equip);\n  }\n  // Salvage the ship itself\n  planet.resources.stored['titanium'] += ship.cost.titanium * c.SALVAGE_RATE;\n  planet.resources.stored['gold'] += ship.cost.gold * c.SALVAGE_RATE;\n  planet.resources.stored['uranium'] += ship.cost.uranium * c.SALVAGE_RATE;\n  removeShipFromStorage(ship, planet);\n  // If ship is currently being used - stop using it!\n  if (ship === window.world.ship) {\n    const shipSprite = game.getShipSprite(ship);\n    shipSprite.visible = false;\n    ship.alive = false;\n    ship.spriteId = null;\n  }\n}\n\n\n/**\n * Removes the resource from the ship\n * @return the amount still owing after removing\n */\nexport function removeResource(ship, resourceType, amount) {\n  ship.resources[resourceType] -= amount;\n  if (ship.resources[resourceType] < 0) {\n    let owing = Math.abs(ship.resources[resourceType]);\n    ship.resources[resourceType] = 0;\n    return owing;\n  }\n  return 0;\n}\n\n/**\n * @return true if the equip can be added to the ship\n */\nexport function canEquip(ship, equip) {\n  if (!ship || !ship.equip || !equip) {\n    return false;\n  }\n  // No more space\n  if (ship.equip.length >= ship.equipMax) {\n    return false;\n  }\n  // Some equip you can only have one\n  if ([EQUIP_TYPE_BRAKE, EQUIP_TYPE_PRIMARY_WEAPON, EQUIP_TYPE_THRUSTER].includes(equip.type)) {\n    if (ship.equip.find((eq) => eq.type === equip.type)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n","import {c, fly, manage, utils, game} from './';\nimport {showToast} from \"./utils\";\n\nexport function moveAliens() {\n  let ship = window.world.ship;\n  for (let alien of window.world.system.nearby.ships) {\n    if (!alien.alive || ship === alien) {\n      continue;\n    }\n    let hasMoved = false;\n    if (alien.aiType === c.ALIEN_AI_CREEPER) {\n      hasMoved = creeperAi(alien, false);\n    } else if (alien.aiType === c.ALIEN_AI_KAMIKAZI) {\n      hasMoved = creeperAi(alien, true);\n    } else if (alien.aiType === c.EQUIP_AI_TURRET) {\n      hasMoved = turretAi(alien, 0.7);\n    } else if (alien.aiType === c.ALIEN_AI_TURRET) {\n      hasMoved = turretAi(alien, 0.25);\n    } else if (alien.aiType === c.EQUIP_AI_MISSILE) {\n      hasMoved = missileAi(alien);\n    } else if (alien.aiType === c.ALIEN_AI_MOTHERSHIP) {\n      mothershipAi(alien);\n    } else if (alien.aiType === c.EQUIP_AI_RESOURCE_DROID) {\n      hasMoved = resourceDroidAi(alien);\n    }\n    if (hasMoved) {\n      checkForCollisionWithPlanet(alien);\n      checkForCollisionWithShip(alien);\n    }\n\n    // If alien is in the viewport\n    if ((ship.x + c.HALF_SCREEN_WIDTH + alien.radius >= alien.x) && // Right\n      (ship.x - c.HALF_SCREEN_WIDTH - alien.radius <= alien.x) && // Left\n      (ship.y + c.HALF_SCREEN_HEIGHT + alien.radius >= alien.y) && // Bottom\n      (ship.y - c.HALF_SCREEN_HEIGHT - alien.radius <= alien.y)) { // Top\n      // alien may have died in a collision\n      if (alien.alive) {\n        // Set alien ship relative to the ship's viewport\n        const alienSprite = game.getShipSprite(alien);\n        alienSprite.visible = true;\n        alienSprite.rotation = alien.rotation;\n        alienSprite.x = (alien.x - ship.x) + c.HALF_SCREEN_WIDTH;\n        alienSprite.y = (alien.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n      }\n    } else { // alien is not in view\n      // Release the sprite if the alien is not in the view\n      if (alien.spriteId) {\n        const alienSprite = game.getShipSprite(alien);\n        alienSprite.visible = false;\n        alien.spriteId = null;\n      }\n    }\n  } // for alien\n}\n\n/**\n * Fire primary weapon in the direction of x,y\n * @ship ship with gun to fire\n * @x/y  the location to aim at\n * @jitter amount (in radians) of randomness added to direction component\n *         0 - shoots directly at player\n *         PI - shoot completely randomly\n */\nexport function shootAt(shooter, x, y, jitter) {\n  shooter.rotation = utils.normalizeRadian(Math.atan2(y - shooter.y, x - shooter.x));\n  fly.firePrimaryWeapon(shooter, jitter);\n}\n\nexport function turretAi(turretShip, jitter) {\n  const {target, dist} = getNearestOpponentTarget(turretShip);\n  if (!target || !target.alive) {\n    return false;\n  }\n  if (dist < fly.primaryWeaponRange(turretShip)) {\n    shootAt(turretShip, target.x, target.y, jitter);\n  }\n  return false;\n}\n\nexport function mothershipAi(alien) {\n  let ship = window.world.ship;\n  if (!ship.alive) {\n    return;\n  }\n  const distanceToPlayer = utils.distanceBetween(alien.x, alien.y, ship.x, ship.y);\n  if (distanceToPlayer < fly.primaryWeaponRange(alien)) {\n    shootAt(alien, ship.x, ship.y, 0.3);\n  }\n  if (distanceToPlayer < c.SCREEN_WIDTH*3) {\n    fly.fireSecondaryWeapon(alien);\n  }\n  if (alien.armor < alien.armorMax) {\n    enableShieldIfNeeded(alien);\n  }\n}\n\nexport function resourceDroidAi(droid) {\n  if (!droid.aiData.targetPlanet) {\n    droid.aiData.targetPlanet = getTargetPlanetWithResources(droid);\n  }\n  const targetPlanet = droid.aiData.targetPlanet;\n  // No planets to get resources from\n  if (!targetPlanet) {\n    return true;\n  }\n  // If the droid is stuck for a long time, then we choose a new target to break up the traffic jam.\n  if (droid.aiData.stuckCounter > 500) {\n    let newTarget = getTargetPlanetWithResources(droid);\n    let counter = 0;\n    while (newTarget === droid.aiData.targetPlanet && counter < 100) {\n      newTarget = getTargetPlanetWithResources(droid);\n      counter++;\n    }\n    droid.aiData.targetPlanet = newTarget;\n  }\n\n  let dirToTarget = utils.directionTo(droid.x, droid.y, targetPlanet.x, targetPlanet.y);\n  droid.rotation = dirToTarget;\n  let {xAmt, yAmt} = getXYToMoveTowards(droid, targetPlanet.x, targetPlanet.y, false)\n  if (xAmt && yAmt) {\n    droid.x += xAmt;\n    droid.y += yAmt;\n    droid.aiData.stuckCounter = 0;\n  } else {\n    droid.aiData.stuckCounter++;\n  }\n  // check for landing on planet\n  const distToTarget = utils.distanceBetween(droid.x, droid.y, targetPlanet.x, targetPlanet.y);\n  if (distToTarget <= targetPlanet.radius + droid.radius + 15) {\n    if (targetPlanet.id === droid.aiData.homePlanet.id) {\n      unloadDroid(droid, targetPlanet)\n    } else {\n      loadDroid(droid, targetPlanet);\n    }\n  }\n  return true;\n}\n\nexport function unloadDroid(droid, planet) {\n  manage.transferResource(droid.resources, planet.resources.stored, 'titanium', droid.resources.titanium, null);\n  manage.transferResource(droid.resources, planet.resources.stored, 'gold', droid.resources.gold, null);\n  manage.transferResource(droid.resources, planet.resources.stored, 'uranium', droid.resources.uranium, null);\n  // Finished unloading - go get more\n  droid.aiData.targetPlanet = getTargetPlanetWithResources(droid);\n}\n\nexport function loadDroid(droid, planet) {\n  const desiredAmt = droid.resourcesMax / 3;\n  manage.transferResource(planet.resources.stored, droid.resources, 'titanium', desiredAmt, droid.resourcesMax);\n  manage.transferResource(planet.resources.stored, droid.resources, 'gold', desiredAmt, droid.resourcesMax);\n  manage.transferResource(planet.resources.stored, droid.resources, 'uranium', desiredAmt, droid.resourcesMax);\n  if (droid.resourcesMax > (droid.resources.titanium + droid.resources.gold + droid.resources.uranium)) {\n    manage.transferResource(planet.resources.stored, droid.resources, 'titanium', droid.resourcesMax, droid.resourcesMax);\n    manage.transferResource(planet.resources.stored, droid.resources, 'gold', droid.resourcesMax, droid.resourcesMax);\n    manage.transferResource(planet.resources.stored, droid.resources, 'uranium', droid.resourcesMax, droid.resourcesMax);\n  }\n  // Go back to home planet\n  droid.aiData.targetPlanet = droid.aiData.homePlanet;\n}\n\n// Returns true if there are any resource droids for the player\nexport function hasDroids() {\n  for (let droid of window.world.ships) {\n    if (droid.aiType === c.EQUIP_AI_RESOURCE_DROID) {\n      return true;\n    }\n  } // for droid\n  return false;\n}\n\nexport function summonAllDroids() {\n  const currPlanet = window.world.selectedPlanet;\n  let droidCount = 0;\n  for (let droid of window.world.ships) {\n    if (droid.aiType === c.EQUIP_AI_RESOURCE_DROID && droid.alive) {\n      droid.aiData.homePlanet = currPlanet;\n      droid.aiData.targetPlanet = currPlanet;\n      droidCount++;\n    }\n  } // for droid\n  showToast(droidCount+\" droids summoned\");\n}\n\n/**\n * Find a planet with resources to go collect from\n */\nexport function getTargetPlanetWithResources(droid) {\n  const planetsWithResources = [];\n  let homePlanetId = droid.aiData.homePlanet.id;\n  for (let planet of window.world.planets) {\n    const resourcesMined = planet.resources.stored;\n    const totalResources = resourcesMined.titanium + resourcesMined.gold + resourcesMined.uranium;\n    if (totalResources > 1 && homePlanetId !== planet.id) {\n      const dist = utils.distanceBetween(planet.x, planet.y, droid.x, droid.y);\n      planetsWithResources.push({planet, dist, totalResources});\n    }\n  } // for planet\n\n  // Sort nearest planets first\n  planetsWithResources.sort((a,b) => a.dist - b.dist);\n\n  // Calculate planet scores\n  const minPlanetDist = planetsWithResources.length ? planetsWithResources[0].dist : 0;\n  for (let planetInfo of planetsWithResources) {\n    const distScore = 1 / (planetInfo.dist / minPlanetDist) * 2;\n    const resourceScore = Math.min(planetInfo.totalResources / (droid.resourcesMax * 3), 1);\n    const score = distScore * resourceScore * 100;\n    planetInfo.score = score;\n  }\n\n  // Sort by score, take the top 10\n  const planetOptions = planetsWithResources.sort((a,b) => b.score - a.score).slice(0,10);\n  const totalScore = planetOptions.reduce((prev, curr) => prev + curr.score, 0);\n  let chosenValue = utils.randomInt(0, totalScore);\n  for (let planetOption of planetOptions) {\n    if (planetOption.score >= chosenValue) {\n      return planetOption.planet;\n    }\n    chosenValue -= planetOption.score;\n  }\n  // Couldn't find a planet\n  console.warn(\"Could not find any planet to collect resources from\");\n  return null;\n}\n\n/**\n * Finds the nearest ship on the other team\n * @param ship ship to determine x,y and player\n */\nexport function getNearestOpponentTarget(ship) {\n  return (ship.owner === c.PLAYER)\n    ? getNearestAlienTarget(ship.x, ship.y, ship.id)\n    : getNearestPlayerTarget(ship.x, ship.y, ship.id);\n}\n\n/**\n * Finds the nearest ship on the same team\n * @param ship ship to determine x,y and player\n */\nexport function getNearestFriendlyTarget(ship) {\n  return (ship.owner === c.PLAYER)\n    ? getNearestPlayerTarget(ship.x, ship.y, ship.id)\n    : getNearestAlienTarget(ship.x, ship.y, ship.id);\n}\n\n/**\n * Simple AI for missiles - find nearest target and move toward it attempting to crash\n */\nexport function missileAi(missile) {\n  const {target, dist} = getNearestOpponentTarget(missile);\n  // Missiles don't track targets really far away\n  if (target && dist < c.SCREEN_WIDTH) {\n    let dirToTarget = utils.directionTo(missile.x, missile.y, target.x, target.y);\n    let {xAmt, yAmt} = utils.dirComponents(dirToTarget, missile.propulsion);\n    missile.vx += xAmt;\n    missile.vy += yAmt;\n    missile.x += missile.vx;\n    missile.y += missile.vy;\n    if (missile.armor < missile.armorMax) {\n      enableShieldIfNeeded(missile);\n    }\n    return true;\n  }\n  // Don't move if there's nobody to move towards\n  return false;\n}\n\n/**\n * Determine x,y amounts needed to move around an obstacle, moving right or left from dirToTarget\n */\nexport function goAround(x, y, propulsion, obstacleX, obstacleY, dirToTarget) {\n  const dirToObstacle = utils.directionTo(x, y, obstacleX, obstacleY);\n  let dirDiff = dirToObstacle - dirToTarget;\n  let rightLeft = (dirDiff >= 0) ? -1 : 1;\n  if (Math.abs(dirDiff) > Math.PI) {\n    rightLeft = rightLeft * -1;\n  }\n  const turnDir = dirToObstacle + (rightLeft * Math.PI / 2);\n  const moveAmts = utils.dirComponents(turnDir, 20 * propulsion);\n  const xAmt = moveAmts.xAmt;\n  const yAmt = moveAmts.yAmt;\n  return {xAmt, yAmt};\n}\n\n/**\n * This will return xAmt, yAmt which would be a reasonable next step to get to targetX, targetY from your current position.\n * This will go around planets and other ships, trying not to crash into things.\n * @param shipToMove : ship that will be moving - NOTE: This function does NOT move the ship, you need to do that.\n * @param targetX amount to move in X\n * @param targetY amount to move in Y\n * @param crashIntoEnemy if true will crash into enemy ships, if false will avoid all ships\n * @ret {xAmt, yAmt} amount to add to the X/y coord to move in the right direction\n */\nexport function getXYToMoveTowards(shipToMove, targetX, targetY, crashIntoEnemy) {\n  if (!shipToMove || !shipToMove.alive) {\n    return;\n  }\n  let dirToTarget = utils.directionTo(shipToMove.x, shipToMove.y, targetX, targetY);\n  let {xAmt, yAmt} = utils.dirComponents(dirToTarget, 25 * shipToMove.propulsion);\n\n  // Check if we are too close to a planet (need to move around the planet)\n  for (let planet of window.world.planets) {\n    if (utils.distanceBetween(shipToMove.x + xAmt, shipToMove.y + yAmt, planet.x, planet.y) < (planet.radius + shipToMove.radius + 10)) {\n      const moveAmt = goAround(shipToMove.x, shipToMove.y, shipToMove.propulsion, planet.x, planet.y, dirToTarget);\n      if (willCollideWithPlanet(shipToMove.x + moveAmt.xAmt, shipToMove.y + moveAmt.yAmt, shipToMove.radius)) {\n        xAmt = 0;\n        yAmt = 0;\n      } else {\n        xAmt = moveAmt.xAmt;\n        yAmt = moveAmt.yAmt;\n      }\n    }\n  } // for planet\n\n  // Check for ships we should go around\n  const nearestShip = crashIntoEnemy ? getNearestFriendlyTarget(shipToMove) :\n      getNearestShip(shipToMove.x + xAmt, shipToMove.y + yAmt, shipToMove.id);\n  if (nearestShip.target && nearestShip.dist <= nearestShip.target.radius + shipToMove.radius + 20) {\n    const moveAmt = goAround(shipToMove.x, shipToMove.y, shipToMove.propulsion, nearestShip.target.x, nearestShip.target.y, dirToTarget);\n    if (willCollideWithShip(shipToMove.x + moveAmt.xAmt, shipToMove.y + moveAmt.yAmt, shipToMove.id, shipToMove.radius)) {\n      xAmt = 0;\n      yAmt = 0;\n    } else {\n      xAmt = moveAmt.xAmt;\n      yAmt = moveAmt.yAmt;\n    }\n  }\n  return {xAmt, yAmt};\n}\n\nexport function willCollideWithShip(x, y, shipId, shipRadius) {\n  for (let ship of window.world.ships) {\n    if (ship.alive && ship.id !== shipId) {\n      let dist = utils.distanceBetween(ship.x, ship.y, x, y);\n      if (dist <= (ship.radius + shipRadius)) {\n        return true;\n      }\n    }\n  } // for\n  return false;\n}\n\nexport function willCollideWithPlanet(x, y, shipRadius) {\n  for (let planet of window.world.planets) {\n    let dist = utils.distanceBetween(planet.x, planet.y, x, y);\n    if (dist <= (planet.radius + shipRadius)) {\n      return true;\n    }\n  } // for\n  return false;\n}\n\n/**\n * AI for aliens that move toward the player and shoots\n * @return true if alien moved false otherwise\n */\nexport function creeperAi(alien, crashIntoPlayer=false) {\n  let ship = window.world.ship;\n  if (!ship.alive) {\n    return;\n  }\n  const viewRange = alien.viewRange || c.SCREEN_WIDTH;\n  let moved = false;\n  const {target:playerTarget, dist:distToOpponent} = getNearestOpponentTarget(alien);\n  if (!playerTarget) {\n    return;\n  }\n  if (distToOpponent < viewRange) {\n    let dirToTarget = utils.directionTo(alien.x, alien.y, playerTarget.x, playerTarget.y);\n    let {xAmt, yAmt} = getXYToMoveTowards(alien, playerTarget.x, playerTarget.y, crashIntoPlayer);\n    // Too close to an enemy, don't move as you might crash\n    if (!crashIntoPlayer && distToOpponent < (ship.spriteWidth + alien.radius + 20)) {\n      xAmt = 0;\n      yAmt = 0;\n    }\n    // Don't crash into friends\n    const {target: friend} = getNearestFriendlyTarget(alien);\n    if (friend &&\n      (utils.distanceBetween(alien.x + xAmt, alien.y + yAmt, friend.x, friend.y) < (alien.radius + friend.radius + 10))) {\n      xAmt = 0;\n      yAmt = 0;\n    }\n    if (alien.armor < alien.armorMax) {\n      enableShieldIfNeeded(alien);\n    }\n    alien.x += xAmt;\n    alien.y += yAmt;\n    alien.rotation = dirToTarget;\n    moved = true;\n  }\n  if (distToOpponent < fly.primaryWeaponRange(alien)) {\n    shootAt(alien, playerTarget.x, playerTarget.y, 0.15);\n  }\n  return moved;\n}\n\n/**\n * Finds the nearest alien target to the x,y location\n * @shipId : any alien except the one with a matching shipId\n * returns {target:X, dist:Y }  x and y will be null if no living targets are found\n */\nexport function getNearestAlienTarget(x, y, shipId = 'none') {\n  let target = null;\n  let minDist = null;\n  for (let alien of window.world.system.nearby.ships) {\n    if (alien.alive && alien.owner === c.ALIEN && alien.id !== shipId) {\n      let dist = utils.distanceBetween(x, y, alien.x, alien.y);\n      if (!target || (dist < minDist)) {\n        target = alien;\n        minDist = dist;\n      }\n    }\n  } // for\n  return {target: target, dist: minDist};\n}\n\n/**\n * Finds the nearest player target to the x,y location\n * @shipId : any ship except the one matching shipId\n * returns {target:X, dist:Y }  x and y will be null if no living targets are found\n */\nexport function getNearestPlayerTarget(x, y, shipId='none') {\n  const ship = window.world.ship;\n  let target = ship;\n  let minDist = ship.id !== shipId ? utils.distanceBetween(x, y, ship.x, ship.y) : 99999999999;\n  for (let ship of window.world.system.nearby.ships) {\n    if (ship.alive && ship.owner === c.PLAYER && ship.id !== shipId) {\n      let dist = utils.distanceBetween(x, y, ship.x, ship.y);\n      if (!target || (dist < minDist)) {\n        target = ship;\n        minDist = dist;\n      }\n    }\n  } // for\n  return {target: target, dist: minDist};\n}\n\nexport function getNearestShip(x, y, shipId, ) {\n  let minDist = 99999999999;\n  let target = null;\n  for (let ship of [...window.world.ships, window.world.ship]) {\n    if (ship.alive && ship.id !== shipId) {\n      let dist = utils.distanceBetween(x, y, ship.x, ship.y);\n      if (!target || (dist < minDist)) {\n        target = ship;\n        minDist = dist;\n      }\n    }\n  } // for\n  return {target:target, dist: minDist};\n}\n\nexport function checkForCollisionWithPlanet(alien) {\n  for (let planet of window.world.system.nearby.planets) {\n    let dist = utils.distanceBetween(alien.x, alien.y, planet.x, planet.y);\n    if (dist <= (alien.radius + planet.radius)) {\n      fly.destroyShip(alien, null);\n    }\n  } // for\n}\n\nexport function checkForCollisionWithShip(ship) {\n  for (let otherShip of window.world.system.nearby.ships) {\n    if (otherShip.alive && ship !== otherShip) {\n      let dist = utils.distanceBetween(ship.x, ship.y, otherShip.x, otherShip.y);\n      if (dist <= (ship.radius + otherShip.radius)) {\n        fly.shipsCollide(ship, otherShip);\n        if (ship.name === c.SHIP_FRIENDSHIP_MISSILE.name && otherShip.owner !== ship.owner) {\n          otherShip.owner = ship.owner;\n        }\n      }\n    }\n  } // for\n}\n\nexport function enableShieldIfNeeded(ship) {\n  const shieldEquip = getShield(ship);\n  if (!shieldEquip || shieldEquip.cool > 0) {\n    return;\n  }\n  fly.enableShield(ship, shieldEquip.shield);\n  shieldEquip.cool = shieldEquip.coolTime;\n}\n\nexport function getShield(ship) {\n  for (let i = 0; i < ship.equip.length; i++) {\n    const equip = ship.equip[i];\n    if ((equip.type === c.EQUIP_TYPE_SECONDARY_WEAPON) && equip.shield) {\n      return equip;\n    }\n  } // for\n  return null;\n}","import {fly, game, utils} from './';\nimport lodash from 'lodash';\n\n// IndexedDB constants\nconst WORLD_STORE = 'world';\nconst DB_NAME = 'astrominer';\nconst DB_VERSION = 1;\n\n/** Saves an object in localstorage.\n * @param key key to store/retrieve\n * @param objToSave: should be an Object or Array, NOT a primitive as the JSON.parse will fail\n */\nexport function saveLocalStorage(key, objToSave) {\n  const existing = localStorage.getItem(key);\n  if (existing) {\n    localStorage.removeItem(key);\n  }\n  localStorage.setItem(key, JSON.stringify(objToSave));\n}\n\n/**\n *  Loads an object from localstorage.\n * NOTE: The item stored must be an Object or Array as primitives will fail the JSON.parse\n */\nexport function loadLocalStorage(key) {\n  if (!key) {\n    console.warn('Unable to from localStorage without a key');\n    return;\n  }\n  const objString = localStorage.getItem(key)\n  //console.log('loaded objString ='+objString);\n  if (!objString) {\n    return null;\n  }\n  return JSON.parse(objString);\n}\n\nfunction upgradeDB(event) {\n  let db = event.target.result;\n  if (event.oldVersion >= 1) {\n    db.deleteObjectStore(WORLD_STORE);\n  }\n  db.createObjectStore(WORLD_STORE, {keyPath: \"saveGameName\"});\n}\n\n/**\n * Start using a newWorld, the old world and it's state will be discarded.\n * param key:  storage key where the world is kept\n */\nexport function loadWorld(key) {\n  let dbRequest = indexedDB.open(DB_NAME, DB_VERSION);\n  dbRequest.onerror = function (event) {\n    console.log('error ', event);\n  };\n  dbRequest.onupgradeneeded = upgradeDB;\n  dbRequest.onsuccess = function (event) {\n    let db = event.target.result;\n    let transaction = db.transaction([WORLD_STORE]);\n    let objectStore = transaction.objectStore(WORLD_STORE);\n    let request = objectStore.get(key);\n    request.onerror = function (event) {\n      console.log('Request error loading:', event);\n    };\n    request.onsuccess = function (event) {\n      const newWorld = request.result;\n      const oldSystem = window.world.system;\n      window.world = newWorld;\n      window.world.system = oldSystem;\n\n      // Clear the old containers of whatever they had\n      window.world.system.spriteContainers.planets.removeChildren();\n      window.world.system.planetSpriteCache = {};\n      window.world.system.spriteContainers.ships.removeChildren();\n      window.world.system.shipSpriteCache = {};\n      window.world.system.shieldSpriteCache = new Map();\n      window.world.system.bullets = []; // remove all active bullets from the screen\n      window.world.system.spriteContainers.bullets.removeChildren();\n      window.world.system.explosions = [];\n      window.world.system.spriteContainers.explosions.removeChildren();\n\n      // Reset/Redraw all the sprites\n      window.world.ship.spriteId = null;\n      const shipSprite = game.getShipSprite(window.world.ship);\n      shipSprite.visible = window.world.ship.alive;\n      fly.repositionScreen();\n      utils.showToast('Loaded game');\n    };\n  }\n\n}\n\nexport function saveWorld(key) {\n  const worldToStore = lodash.cloneDeep(lodash.omit(window.world, ['system']));\n  worldToStore.saveGameName = key;\n\n  let dbRequest = indexedDB.open(DB_NAME, DB_VERSION);\n  dbRequest.onerror = function (event) {\n    console.log('DB Request Error:', event);\n  };\n  dbRequest.onupgradeneeded = upgradeDB;\n  dbRequest.onsuccess = function (event) {\n    let db = event.target.result;\n    let transaction = db.transaction([WORLD_STORE], \"readwrite\");\n    let objectStore = transaction.objectStore(WORLD_STORE);\n    let objectStoreRequest = objectStore.put(worldToStore);\n    objectStoreRequest.onsuccess = function (event) {\n      utils.showToast('Saved game');\n    };\n    objectStoreRequest.onerror = function (event) {\n      console.log('failed to save ', event.target);\n    }\n  }\n}\n\nexport function deleteWorld(key) {\n  let dbRequest = indexedDB.open(DB_NAME, DB_VERSION);\n  dbRequest.onerror = function (event) {\n    console.log('DB Request Error:', event);\n  };\n  dbRequest.onupgradeneeded = upgradeDB;\n  dbRequest.onsuccess = function (event) {\n    let db = event.target.result;\n    let transaction = db.transaction([WORLD_STORE], \"readwrite\");\n    let objectStore = transaction.objectStore(WORLD_STORE);\n    let objectStoreRequest = objectStore.delete(key);\n    objectStoreRequest.onsuccess = function (event) {\n      utils.showToast('Deleted game ' + key);\n    };\n    objectStoreRequest.onerror = function (event) {\n      console.log('failed to delete ', event.target);\n    }\n  }\n}\n","import React from 'react';\nimport './Heatbar.css';\n\nconst IMG_HEIGHT = 100;\nconst IMG_WIDTH = 24;\n\nexport const HEATBAR = {\n  GREEN : 'heatbar-green.png',\n  RED: 'heatbar-red.png',\n  COLOR: 'heatbar-color.png'\n};\n\nexport function Heatbar({type, curr, max}) {\n  if (type !== HEATBAR.GREEN &&\n    type !== HEATBAR.RED &&\n    type !== HEATBAR.COLOR) {\n    console.warn('unknown heatbar type '+type);\n    return <span />;\n  }\n\n  const pct = curr / max;\n  const topFree = 100 - (pct * IMG_HEIGHT );\n\n  // Use red or green as the base\n  let colorImgSrc = 'images/'+(type === HEATBAR.RED ? HEATBAR.RED : HEATBAR.GREEN);\n\n  // Multicolor is based off green\n  if (type === HEATBAR.COLOR && (topFree > 60)) {\n    colorImgSrc = 'images/heatbar-color.png'\n  }\n\n  return (\n    <span className='heatbar-container' style={{width:IMG_WIDTH+'px',  height:IMG_HEIGHT+'px'}}>\n      <span className='heatbar-base'>\n        <img src='images/heatbar-base.png' width={IMG_WIDTH+'px'} height={IMG_HEIGHT+'px'} alt='heat' />\n      </span>\n      <span className='heatbar-color'>\n        <img src={colorImgSrc} width={IMG_WIDTH+'px'} height={IMG_HEIGHT+'px'} alt='heat' style={{\n          clipPath: 'inset('+topFree+'px 0px 00px 0px)'\n        }}\n        />\n      </span>\n    </span>);\n}\n\n","import React from 'react';\nimport './PushButton.css';\n\nconst IMG_HEIGHT = 26;\nconst IMG_WIDTH = 44;\n\nexport function PushButton({selected, onChange}) {\n  const imgFile = selected ? 'images/button_push_on.png' : 'images/button_push_off.png';\n  return (\n    <img src={imgFile} width={IMG_WIDTH + 'px'} height={IMG_HEIGHT + 'px'} alt='button' onClick={() => {\n      onChange();\n    }}/>\n  );\n}\n","import React from 'react';\nimport './StatusButton.css';\n\nconst IMG_HEIGHT = 24;\nconst IMG_WIDTH = 48;\n// pct at which red turns into yellow\nconst YELLOW_PCT = 0.7; // pct to change to yellow at\nconst BORDER = 5; // width of button border (non drawing part of button)\n\nconst BUTTON = {\n  GREEN: 'button_long_green.png',\n  RED: 'button_long_red.png',\n  YELLOW: 'button_long_yellow.png',\n  BLACK: 'button_long_black.png'\n};\n\nfunction getStatus(curr, max) {\n  if (!max || max <= 0) {\n    return {rightFree: 0, colorImgSrc: 'images/' + BUTTON.BLACK};\n  }\n  if (curr >= max) {\n    return {rightFree: 0, colorImgSrc: 'images/' + BUTTON.GREEN};\n  }\n  // Red\n  if (curr / max < YELLOW_PCT) {\n    const pct = curr / (max * YELLOW_PCT);\n    const rightFree = IMG_WIDTH - (BORDER + pct * (IMG_WIDTH - (2 * BORDER)));\n    return {rightFree, colorImgSrc: 'images/' + BUTTON.RED};\n  }\n  // Yellow\n  const pct = (curr - (max * YELLOW_PCT)) / (max * (1 - YELLOW_PCT));\n  const rightFree = IMG_WIDTH - (BORDER + pct * (IMG_WIDTH - (2 * BORDER)));\n  return {rightFree, colorImgSrc: 'images/' + BUTTON.YELLOW};\n}\n\n\nexport function StatusButton({curr, max}) {\n\n  const {rightFree, colorImgSrc} = getStatus(curr, max);\n\n  return (\n    <span className='statusbutton-container' style={{width: IMG_WIDTH + 'px', height: IMG_HEIGHT + 'px'}}>\n      <span className='statusbutton-base'>\n        <img src={'images/' + BUTTON.BLACK} width={IMG_WIDTH + 'px'} height={IMG_HEIGHT + 'px'} alt='status'/>\n      </span>\n      <span className='statusbutton-color'>\n        <img src={colorImgSrc} width={IMG_WIDTH + 'px'} height={IMG_HEIGHT + 'px'} alt='heat' style={{\n          clipPath: 'inset(0px ' + rightFree + 'px 0px 0px)'\n        }}\n        />\n      </span>\n    </span>);\n}\n\n","import React from 'react';\nimport {c, fly} from '../functions';\nimport './InfoFly.css';\nimport {HEATBAR, Heatbar} from \"./Heatbar\";\nimport {PushButton} from \"./PushButton\";\nimport {StatusButton} from \"./StatusButton\";\n\nexport function InfoFly() {\n  const ship = window.world.ship;\n  const shield = fly.getEquippedShield(ship);\n\n  function closeIntroDialog() {\n    window.world.introDialogShown = true;\n  }\n\n  function buttonDown(dir) {\n    window.world.system.buttonKeyDown[dir] = true;\n  }\n\n  function buttonUp(dir) {\n    window.world.system.buttonKeyDown[dir] = false;\n  }\n\n  function killContextMenu(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    return false;\n  }\n\n  return (\n    <div className='section'\n         style={{backgroundImage: 'url(\"images/metalbackground.png\")', backgroundSize: 'cover', height: '100%', paddingLeft:'3px'}}>\n\n      <div className='top-row'>\n        <div>\n          <div>{ship.name}</div>\n          <table>\n            <thead>\n            <tr>\n              <th style={{paddingRight: '10px'}}>Armor</th>\n              <th>Shield</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td style={{textAlign: 'center'}}>\n                <Heatbar type={HEATBAR.COLOR} curr={ship.armor} max={ship.armorMax}/>\n              </td>\n              <td>\n                {shield && shield.shield.active &&\n                <span>\n                    <Heatbar type={HEATBAR.RED} curr={shield.shield.lifetime} max={shield.shield.lifetimeMax}/>\n                    <Heatbar type={HEATBAR.COLOR} curr={shield.shield.armor} max={shield.shield.armorMax}/>\n                  </span>\n                }\n              </td>\n            </tr>\n            <tr>\n              <td>\n                {Math.floor(ship.armor)} / {ship.armorMax}\n              </td>\n              <td> </td>\n              <td> </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div className='bluescreen-container'>\n          <div className='bluescreen-background'>\n            <img src='images/blue_screen.png' className='stretch' alt='bluescreen'/>\n          </div>\n          <div className='bluescreen-text'>\n            <table cellPadding='4'>\n              <thead>\n              <tr>\n                <th colSpan='100%'>Resources</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr>\n                <td>Titatium</td>\n                <td>{Math.floor(ship.resources.titanium)}</td>\n              </tr>\n              <tr>\n                <td>Gold</td>\n                <td>{Math.floor(ship.resources.gold)}</td>\n              </tr>\n              <tr>\n                <td>Uranium</td>\n                <td>{Math.floor(ship.resources.uranium)}</td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n      <table>\n        <tbody>\n        <tr>\n          <td>\n            <div>\n              <b>Equip (max {ship.equipMax})</b>\n            </div>\n            <table>\n              <tbody>\n              {ship.equip.map((equip, i) => {\n                return <tr key={i} className='equip'>\n                  <td>\n                    {equip.type === c.EQUIP_TYPE_SECONDARY_WEAPON &&\n                    <PushButton selected={i === ship.selectedSecondaryWeaponIndex} onChange={() => {\n                      ship.selectedSecondaryWeaponIndex = i;\n                    }}/>}\n                  </td>\n                  <td>\n                    <StatusButton curr={equip.coolTime - equip.cool} max={equip.coolTime}/>\n                  </td>\n                  <td>\n                    {equip.name}\n                  </td>\n                </tr>\n              })}\n              </tbody>\n            </table>\n          </td>\n          <td style={{paddingLeft:'10px'}}> </td>\n        </tr>\n        </tbody>\n      </table>\n\n      <div className=\"button-control-container\">\n        <div className=\"button-space\">\n          <button type='button' onMouseDown={() => buttonDown('x')} onMouseUp={() => buttonUp('x')}\n                  onTouchStart={() => buttonDown('x')} onTouchEnd={() => buttonUp('x')}\n                  onContextMenu={(event) => killContextMenu(event)}>\n          <b>X</b>\n          </button>\n        </div>\n        <div className=\"button-space\">\n          <button type='button' onMouseDown={() => buttonDown('space')} onMouseUp={() => buttonUp('space')}\n                                onTouchStart={() => buttonDown('space')} onTouchEnd={() => buttonUp('space')}\n                                onContextMenu={(event) => killContextMenu(event)}>\n            <i className=\"fa fa-crosshairs\"> </i>\n          </button>\n        </div>\n        <table>\n          <tbody>\n          <tr>\n            <td> </td>\n            <td>\n              <button type='button' onMouseDown={() => buttonDown('up')} onMouseUp={() => buttonUp('up')}\n                                      onTouchStart={() => buttonDown('up')} onTouchEnd={() => buttonUp('up')}\n                                      onContextMenu={(event) => killContextMenu(event)}>\n                <i className=\"fa fa-arrow-up\"> </i>\n              </button>\n            </td>\n            <td> </td>\n          </tr>\n          <tr>\n            <td>\n              <button type='button' onMouseDown={() => buttonDown('left')} onMouseUp={() => buttonUp('left')}\n                                      onTouchStart={() => buttonDown('left')} onTouchEnd={() => buttonUp('left')}\n                                      onContextMenu={(event) => killContextMenu(event)}>\n                <i className=\"fa fa-arrow-left\"> </i>\n              </button>\n            </td>\n            <td>\n              <button type='button' onMouseDown={() => buttonDown('down')} onMouseUp={() => buttonUp('down')}\n                                      onTouchStart={() => buttonDown('down')} onTouchEnd={() => buttonUp('down')}\n                                      onContextMenu={(event) => killContextMenu(event)}>\n                <i className=\"fa fa-arrow-down\"> </i>\n              </button>\n            </td>\n            <td>\n              <button type='button' onMouseDown={() => buttonDown('right')} onMouseUp={() => buttonUp('right')}\n                                      onTouchStart={() => buttonDown('right')} onTouchEnd={() => buttonUp('right')}\n                                      onContextMenu={(event) => killContextMenu(event)}>\n                <i className=\"fa fa-arrow-right\"> </i>\n              </button>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"intro-dialog\" onClick={() => closeIntroDialog()} style={{display: window.world.introDialogShown ? \"none\": \"block\"}}>\n        <span className=\"close-intro-dialog\">X</span>\n        <p>Ship's Log: Day 348</p>\n        <p> After a long trip through deep space, I have finally made it to the edge of the asteroid field that until now I wasn't certain actually existed.\n          We will see if it lives up to the rumors from old men in taverns of asteroids full of titanium, gold and uranium, a place where a man can make\n          a fortune mining.  So it really does exist, but where are all the other people who came to make their fortune? This place looks empty.</p>\n        <p>It took years to save up enough to get this Explorer-class spaceship, and I outfitted it with a state-of-the-art AI which can build\n          autonomous mines to extract resources. It can also create fully automated factories to produce ships and equipment. The AI can learn new patterns\n          for the factories to build by being exposed to various different environments and equipment.  I have heard a lot about the power of this AI and\n           can't wait to try it out.</p>\n        <p>The first step is to find a planet with a good amount of resources and build a mine. I will have to be careful landing the ship though,\n          as the ship must be going slow enough and land on it's landing gear or it will be damaged.</p>\n        <p> Use the arrow keys or W-A-S-D keys to move the ship, and the spacebar to shoot. X will deploy a secondary weapon.</p>\n      </div>\n\n    </div>\n  );\n}\n\n\n","import React, {useState} from 'react';\nimport {c, game, manage, ai} from '../functions';\nimport './ManagePlanet.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nexport function ManagePlanet() {\n  const [titaniumAmt, setTitaniumAmt] = useState('');\n  const [goldAmt, setGoldAmt] = useState('');\n  const [uraniumAmt, setUraniumAmt] = useState('');\n\n  let world = window.world;\n  let planet = window.world.selectedPlanet;\n  let ship = window.world.ship;\n  let shipOnPlanet = ((planet === window.world.lastPlanetLanded) && ship.alive);\n\n  return (\n    <div className='planet-info'>\n      <div className='section'><b>Planet Name: </b> {world.selectedPlanet.name}</div>\n      <div className='build-button'>\n        <button\n          disabled={!game.canAfford(planet, (shipOnPlanet ? ship : null), c.MINE_COST)}\n          onClick={() => manage.buildMine()}>Build Mine\n        </button>\n        Cost: T:{c.MINE_COST.titanium} G:{c.MINE_COST.gold}\n      </div>\n      <div className='build-button'>\n        <button\n          disabled={!game.canAfford(planet, (shipOnPlanet ? ship : null), c.FACTORY_COST)}\n          onClick={() => manage.buildFactory()}>Build Factory\n        </button>\n        Cost: T:{c.FACTORY_COST.titanium} G:{c.FACTORY_COST.gold} U:{c.FACTORY_COST.uranium}\n      </div>\n\n      <div style={{display:ship.alive?'block':'none'}} >\n        <div className='section'><b>Ship</b> ({Math.round(ship.armor) +' / '+ ship.armorMax}) </div>\n        <div className='section'>\n          <button style={{marginLeft:'10px'}}\n                  onClick={() => manage.unloadShip(ship, planet)}>\n            Unload\n          </button>\n          <button style={{marginLeft:'10px'}}\n                  onClick={() => manage.resupplyShip(ship, planet)}>\n              Resupply\n          </button>\n          <button style={{marginLeft:'10px'}}\n                  onClick={() => manage.repairShip(ship, planet)}\n                  disabled={ship.armorMax <= ship.armor}>\n            Repair\n          </button>\n        </div>\n      </div>\n\n      <div className='section'>\n        <div className='section'>\n          <b>Resources</b>\n        </div>\n        <div className=\"row-item\">Titanium {Math.floor(planet.resources.raw.titanium)}</div>\n        <div className=\"row-item\">Gold {Math.floor(planet.resources.raw.gold)}</div>\n        <div className=\"row-item\">Uranium {Math.floor(planet.resources.raw.uranium)}</div>\n      </div>\n\n      {shipOnPlanet && <table className=\"row-item resource-table\">\n        <thead>\n        <tr>\n          <th>Resource</th>\n          <th>Planet</th>\n          <th>Transfer</th>\n          <th>Ship ({ship.resourcesMax})</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <td>Titanium</td>\n          <td>{Math.floor(planet.resources.stored.titanium)}</td>\n          <td>\n              <span className='transfer-button'\n                    onClick={() => manage.transferResource(ship.resources, planet.resources.stored,\n                      'titanium', titaniumAmt, c.PLANET_RESOURCE_MAX)}><i className=\"fa fa-arrow-left\"> </i></span>\n            <input type='text' className='transfer-input'\n                   defaultValue={titaniumAmt}\n                   onChange={(event) => setTitaniumAmt(event.target.value)}/>\n            <span className='transfer-button'\n                  onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                    'titanium', titaniumAmt, ship.resourcesMax)}><i className=\"fa fa-arrow-right\"> </i></span>\n          </td>\n          <td>{Math.floor(ship.resources.titanium)}</td>\n        </tr>\n        <tr>\n          <td>Gold</td>\n          <td>{Math.floor(planet.resources.stored.gold)}</td>\n          <td>\n              <span className='transfer-button'\n                    onClick={() => manage.transferResource(ship.resources, planet.resources.stored,\n                      'gold', goldAmt, c.PLANET_RESOURCE_MAX)}><i className=\"fa fa-arrow-left\"> </i></span>\n            <input type='text' className='transfer-input'\n                   defaultValue={goldAmt}\n                   onChange={(event) => setGoldAmt(event.target.value)}/>\n            <span className='transfer-button'\n                  onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                    'gold', goldAmt, ship.resourcesMax)}><i className=\"fa fa-arrow-right\"> </i></span>\n          </td>\n          <td>{Math.floor(ship.resources.gold)}</td>\n        </tr>\n        <tr>\n          <td>Uranium</td>\n          <td>{Math.floor(planet.resources.stored.uranium)}</td>\n          <td>\n              <span className='transfer-button'\n                    onClick={() => manage.transferResource(ship.resources, planet.resources.stored,\n                      'uranium', uraniumAmt, c.PLANET_RESOURCE_MAX)}><i className=\"fa fa-arrow-left\"> </i></span>\n            <input type='text' className='transfer-input'\n                   defaultValue={uraniumAmt}\n                   onChange={(event) => setUraniumAmt(event.target.value)}/>\n            <span className='transfer-button'\n                  onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                    'uranium', uraniumAmt, ship.resourcesMax)}><i className=\"fa fa-arrow-right\"> </i></span>\n          </td>\n          <td>{Math.floor(ship.resources.uranium)}</td>\n        </tr>\n        </tbody>\n      </table>}\n\n      {!shipOnPlanet &&\n      <table>\n        <thead>\n        <tr>\n          <th>Resource</th>\n          <th>Planet</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <td>Titanium</td>\n          <td>{Math.floor(planet.resources.stored.titanium)}</td>\n        </tr>\n        <tr>\n          <td>Gold</td>\n          <td>{Math.floor(planet.resources.stored.gold)}</td>\n        </tr>\n        <tr>\n          <td>Uranium</td>\n          <td>{Math.floor(planet.resources.stored.uranium)}</td>\n        </tr>\n        </tbody>\n      </table>}\n\n      <div style={{marginTop:'20px', marginLeft:'5px'}}>\n        <button disabled={!shipOnPlanet}\n                onClick={() => manage.takeOff(5)}>\n          Take Off\n        </button>\n        { ai.hasDroids() &&\n        <button onClick={() => ai.summonAllDroids()} style={{marginLeft: '10px'}}>\n          Summon all resource droids\n        </button>\n        }\n      </div>\n    </div>);\n}\n\n","import React from 'react';\nimport { c, manage, game} from '../../functions';\nimport './FactoryButtonRow.css';\n\nexport function FactoryButtonRow({template}) {\n  const world = window.world;\n  const planet = world.selectedPlanet;\n  const ship = world.ship;\n  let existingInventory = (template.objType === c.OBJ_SHIP) ?\n    planet.ships.filter(s=> s.name === template.name).length:\n    planet.equip.filter(e=> e.name === template.name).length;\n\n  // Calculate the description\n  let description = template.description;\n  if (!description && template.damage) {\n    description = `${Math.round(template.damage * (60 / template.coolTime))} dmg/s Range ${template.speed * template.lifetime} Speed ${template.speed} `;\n  }\n  if (!description && template.shield) {\n    const shield = template.shield;\n    description = `${shield.armorMax}dmg for ${Math.round(shield.lifetimeMax/60)}s every ${Math.round(template.coolTime/60)}s`;\n  }\n  if (template.createShip) {\n    const newShip = template.createShip.type;\n    description += ` Cost (${newShip.cost.titanium}T ${newShip.cost.gold}G ${newShip.cost.uranium}U)`;\n  }\n\n  // We pretend the current ship is in storage in the planet\n  if (ship.alive && template.name === ship.name) {\n    existingInventory += 1;\n  }\n\n  function build(templateArg) {\n    if (templateArg.objType === c.OBJ_SHIP) {\n      manage.buildShip(templateArg);\n    } else if (templateArg.objType === c.OBJ_EQUIP) {\n      manage.buildEquip(templateArg);\n    }\n  }\n\n  return (\n    <tr>\n      <td className=\"factory-row\">\n        {existingInventory}\n      </td>\n      <td className=\"factory-row\">\n      <button className=\"factory-button\"\n        disabled={!manage.hasFactory(planet) || !game.canAfford(planet, ship, template.cost)}\n        onClick={() => build(template)}>{template.name}</button>\n      </td>\n      <td className=\"factory-row\">\n        <span className='cost'>{template.cost.titanium}T {template.cost.gold}G {template.cost.uranium}U</span>\n      </td>\n      <td className=\"factory-row\">\n        {description}\n      </td>\n    </tr>);\n}\n\n","import React from 'react';\nimport { c } from '../../functions/';\nimport './FactoryTab.css';\nimport {FactoryButtonRow} from \"./FactoryButtonRow\";\n\nexport function FactoryTab({type, templateList}) {\n  return (\n    <div className='container factory-tab' style={{maxHeight: (c.SCREEN_HEIGHT - 200), minWidth:'400px'}}>\n      <table>\n        <tbody>\n          {templateList.map((template, i) => {\n            return <FactoryButtonRow key={type+i} template={template} />;\n          })}\n        </tbody>\n      </table>\n    </div>);\n}\n\n","import React from 'react';\nimport { c } from '../../functions/';\nimport './ManageFactory.css';\nimport {Tab, Tabs} from \"react-bootstrap\";\nimport {FactoryTab} from \"./FactoryTab\";\n\n\nexport function FactoryTabs() {\n  const equip = window.world.blueprints.equip;\n\n  const upgrades =  equip.filter((e) => c.EQUIP_UPGRADES.find(u => u.name === e.name));\n  const primaryWeapons = equip.filter((e) => c.EQUIP_PRIMARY_WEAPONS.find(p => p.name === e.name));\n  const secondaryWeapons = equip.filter((e) => c.EQUIP_SECONDARY_WEAPONS.find(s => s.name === e.name));\n  const droids = equip.filter((e) => c.EQUIP_DROIDS.find(d => d.name === e.name));\n\n  return (\n    <div className='factory-info'>\n      <Tabs defaultActiveKey='ships' id='factory-tabs' className=\"flex-nowrap\">\n        <Tab eventKey='ships' title=\"Ships\">\n          <FactoryTab type='ship' templateList={window.world.blueprints.ship} />\n        </Tab>\n\n        {upgrades && upgrades.length > 0 &&\n        <Tab eventKey='upgrades' title=\"Upgrades\">\n          <FactoryTab type='equip' templateList={upgrades} />\n        </Tab>\n        }\n\n        {primaryWeapons && primaryWeapons.length > 0 &&\n        <Tab eventKey='primaryWeapons' title=\"Primary Weapons\">\n          <FactoryTab type='equip' templateList={primaryWeapons} />\n        </Tab>\n        }\n\n        {secondaryWeapons && secondaryWeapons.length > 0 &&\n        <Tab eventKey='secondaryWeapons' title=\"Secondary Weapons\">\n          <FactoryTab type='equip' templateList={secondaryWeapons} />\n        </Tab>\n        }\n\n        {droids && droids.length > 0 &&\n        <Tab eventKey='droids' title=\"Droids\">\n          <FactoryTab type='equip' templateList={droids} />\n        </Tab>\n        }\n\n      </Tabs>\n    </div>);\n}\n\n","import React, {useState} from 'react';\nimport {manage} from '../functions';\nimport './ManageStorage.css';\n\nexport function ManageStorage() {\n  const [selectedShip, setSelectedShip] = useState();\n  let world = window.world;\n  let planet = world.selectedPlanet;\n  let currentShip = world.ship;\n  let shipOnPlanet = ((planet === window.world.lastPlanetLanded) && currentShip.alive);\n\n  function viewShip(ship) {\n    setSelectedShip(ship);\n  }\n\n  function startUsingShip() {\n    manage.switchToShip(selectedShip);\n    setSelectedShip(null);\n  }\n\n  function salvageShip(selectedShip) {\n    if (!window.confirm(\"Are you sure you want to salvage your \" + selectedShip.name + \"?\")) {\n      return;\n    }\n    manage.salvageShip(planet, selectedShip);\n    setSelectedShip(null);\n  }\n\n  function salvageEquip(equip) {\n    if (!window.confirm(\"Are you sure you want to this \" + equip.name + \"?\")) {\n      return;\n    }\n    manage.salvageEquip(planet, equip)\n  }\n\n  // Default to selecting the current ship\n  if (!selectedShip && shipOnPlanet) {\n    setSelectedShip(currentShip);\n  }\n\n  let selectedShipEquip = [];\n  if (selectedShip) {\n    for (let equip of selectedShip.equip) {\n      selectedShipEquip.push(\n        <div className=\"item\" key={equip.id}>\n          {equip.name} &nbsp;\n          <button onClick={() => manage.moveEquipFromShipToPlanet(selectedShip, planet, equip)}>Remove</button>\n        </div>);\n    }\n  }\n\n  return (\n    <div>\n      <div className='storage-section'>\n        <div className='title'>Ships</div>\n        <span className='item-list'>\n          {(shipOnPlanet ? [currentShip] : []).concat(planet.ships).map((ship, i) => {\n            return <div key={i}\n                        onClick={() => viewShip(ship)}\n                        className={`ship ${selectedShip === ship ? 'selected-item' : 'non-selected-item'}`}>{ship.name}</div>\n          })}\n        </span>\n        <span className='item-details'>\n          {selectedShip != null && // exclude this block if no ship selected\n          <div>\n            <div className='item-attr'>\n              <button onClick={() => startUsingShip()} disabled={selectedShip === currentShip}>Use Ship</button>\n              <button onClick={() => salvageShip(selectedShip)} style={{marginLeft:'10px'}}>Salvage</button>\n            </div>\n            <div className='item-attr'><b>Name</b> {selectedShip.name} {selectedShip.id}</div>\n            <div className='item-attr'>\n              <b>Engine</b> Propulsion:{Math.floor(selectedShip.propulsion * 100)} Turn:{Math.floor(selectedShip.turnSpeed * 100)}\n            </div>\n            <div className='item-attr'>\n              <b>Landing</b> Speed:{Math.floor(selectedShip.crashSpeed)} Angle:{Math.floor(selectedShip.crashAngle * 10)}\n            </div>\n            <div className='item-attr'><b>Armor</b> &nbsp;\n              {Math.floor(selectedShip.armor)} of {Math.floor(selectedShip.armorMax)}&nbsp;\n              <button onClick={() => manage.repairShip(selectedShip, planet)}\n                      disabled={selectedShip.armorMax <= selectedShip.armor}> Repair\n              </button>\n              &nbsp; Cost {Math.floor(manage.costToRepair(selectedShip).titanium)} titanium\n            </div>\n            <div className='item-attr'><b>Resources Max</b>{Math.floor(selectedShip.resourcesMax)}</div>\n            <div className='item-attr'><b>Equip</b> ({selectedShip.equip.length} of {selectedShip.equipMax})\n              {selectedShipEquip}\n            </div>\n          </div>\n          }\n        </span>\n      </div>\n\n      <div className='storage-section'>\n        <div className='title'>Equipment</div>\n        <span className='equip-list'>\n          {planet.equip.map((equip, i) => {\n            return <div key={i} className='item'>\n              {equip.name} &nbsp;\n              <button onClick={() => manage.moveEquipFromPlanetToShip(selectedShip, planet, equip)}\n                      disabled={!manage.canEquip(selectedShip, equip)}\n              >Equip\n              </button>\n              <button onClick={() => salvageEquip(equip)} style={{marginLeft:'10px'}}>Salvage</button>\n            </div>\n          })}\n        </span>\n      </div>\n    </div>);\n}\n\n","import React, {useRef} from 'react';\nimport {c, savegame} from '../functions';\nimport './ManageSystem.css';\nimport lodash from 'lodash';\nimport {showToast} from \"../functions/utils\";\n\nexport function ManageSystem() {\n  const world = window.world;\n  const nameInput = useRef();\n  let gameNames = savegame.loadLocalStorage(c.LOCALSTORAGE_GAME_NAMES_KEY);\n\n  function setCurrentGame(newName) {\n    nameInput.current.value = newName;\n    world.saveGameName = newName;\n    console.log('new name ' + newName);\n  }\n\n  /**\n   * Adds a game name to the list of saved game names.\n   */\n  function addGameName(newGameName) {\n    if (newGameName && !gameNames.includes(newGameName)) {\n      gameNames.push(newGameName)\n    }\n    savegame.saveLocalStorage(c.LOCALSTORAGE_GAME_NAMES_KEY, gameNames);\n  }\n\n  // If no games are saved, setup an empty list of game names\n  if (!gameNames) {\n    gameNames = [];\n    addGameName(null);\n  }\n\n  function saveGame() {\n    const saveGameName = nameInput.current.value;\n    if (!saveGameName) {\n      showToast('Cannot save game without name');\n      return;\n    }\n    // Save the world in indexedDB\n    savegame.saveWorld(saveGameName);\n    // Save the game name in localStorage\n    addGameName(saveGameName);\n    setCurrentGame(saveGameName);\n  }\n\n  function loadGame(gameName) {\n    savegame.loadWorld(gameName);\n    setCurrentGame(gameName);\n  }\n\n  function deleteGame(gameName) {\n    if (!window.confirm(\"Are you sure you want to delete \" + gameName + \"?\")) {\n      return;\n    }\n    savegame.deleteWorld(gameName);\n    gameNames = lodash.remove(gameNames, (name) => name !== gameName);\n    savegame.saveLocalStorage(c.LOCALSTORAGE_GAME_NAMES_KEY, gameNames);\n    if (world.saveGameName === gameName) {\n      world.saveGameName = null;\n    }\n    if (nameInput.current.value === gameName) {\n      nameInput.current.value = '';\n    }\n  }\n\n  return (\n    <div style={{paddingLeft:'10px'}}>\n      <div className='system-section'>\n        <div className='section'><b>Current Game</b></div>\n        <input type='text' defaultValue={world.saveGameName} onFocus={() => world.system.isTyping = true}\n               onBlur={() => world.system.isTyping = false} ref={nameInput}/>\n        <button name=\"Save\" onClick={() => saveGame()}>Save</button>\n        <div className='section'><b>Saved Game</b></div>\n        {gameNames.map(gameName => (\n          <div key={gameName} className={'game-list-row ' + (world.saveGameName === gameName ? 'selected-game' : '')}>\n            <span className='game-list-item'><button onClick={() => loadGame(gameName)}>Load </button></span>\n            <span className='game-list-item'><button onClick={() => deleteGame(gameName)}>Delete</button></span>\n            <span className='game-list-item'>{gameName}</span>\n          </div>\n        ))}\n      </div>\n      <div style={{color:\"#909090\"}}>\n        Version {world.appVersion}\n        {world.appVersion !== c.APP_VERSION && <span> in {c.APP_VERSION}</span>}\n      </div>\n    </div>);\n}\n\n","import React, {Fragment, useState} from 'react';\nimport './CodeEntry.css';\n\nexport function CodeEntry() {\n  const [showCodeEntry, setShowCodeEntry] = useState(false);\n  const onCenterPlanet = window.world?.selectedPlanet?.x < 10 && window.world?.selectedPlanet?.y < 10;\n  const [steep, setSteep] = useState('');\n  const [heap, setHeap] = useState('');\n  const [deep, setDeep] = useState('');\n  const [steepOk, setSteepOk] = useState('');\n  const [heapOk, setHeapOk] = useState('');\n  const [deepOk, setDeepOk] = useState('');\n  const codesAllGood = steepOk === 'good' && heapOk === 'good' && deepOk === 'good'\n\n\n  function submitCodes() {\n    setSteepOk((steep.toUpperCase() === 'H2401') ? 'good' : 'wrong');\n    setHeapOk((heap === '4194304') ? 'good' : 'wrong');\n    setDeepOk((deep === '2187') ? 'good' : 'wrong');\n  }\n\n  return (\n      <Fragment>\n        {onCenterPlanet &&\n        <div className='system-section code-section'>\n          <button type='button' onClick={() => setShowCodeEntry(true)}> Enter Codes</button>\n\n          <div className=\"code-dialog\" style={{display: showCodeEntry ? \"block\" : \"none\"}}>\n            <span className=\"close-code-dialog\" onClick={() => setShowCodeEntry(false)}>X</span>\n            <div className='code-title code-center'>Code Entry</div>\n            <div className='code-text'>\n              Enter the calculated values for codes you have found here.\n            </div>\n            <div className='code-input'>\n              The Steep\n              <input type='text' value={steep} onChange={e => setSteep(e.target.value)}/>\n              {steepOk === 'good' && <span className='code-good'>GOOD</span>}\n              {steepOk === 'wrong' && <span className='code-wrong'>WRONG</span>}\n            </div>\n            <div className='code-input'>\n              The Heap\n              <input type='text' value={heap} onChange={e => setHeap(e.target.value)}/>\n              {heapOk === 'good' && <span className='code-good'>GOOD</span>}\n              {heapOk === 'wrong' && <span className='code-wrong'>WRONG</span>}\n            </div>\n            <div className='code-input'>\n              The Deep\n              <input type='text' value={deep} onChange={e => setDeep(e.target.value)}/>\n              {deepOk === 'good' && <span className='code-good'>GOOD</span>}\n              {deepOk === 'wrong' && <span className='code-wrong'>WRONG</span>}\n            </div>\n\n            {!codesAllGood &&\n            <div className='code-submit'>\n              <button type='button' onClick={() => submitCodes()}>Check Codes</button>\n            </div>\n            }\n\n            {codesAllGood &&\n            <div className='code-answer'>\n              <b>Congratulations</b>, you have found all the codes! <br/>\n              The treasure is almost yours.<br/>\n              Go to the thinking rock at <a href='https://goo.gl/maps/Bkh6o5eDeKKaC7ey9'>44.478953, -63.673837</a> <br/>\n              The entrance is 30m east of the thinking rock at the bottom of the cliff.<br/>\n              Once you go in the entrance follow the hallway until you get to the hard right turn and then look in the cellar.<br/>\n            </div>\n            }\n          </div>\n        </div>\n        }\n      </Fragment>\n  );\n}\n\n","import React from 'react';\nimport {c} from '../functions';\nimport './ManageLog.css';\nimport {CodeEntry} from \"./CodeEntry\";\n\nexport function ManageLog() {\n  const xp = window.world.blueprints.xp;\n\n  const gameTickCount = window.world.gameTickCount;\n  let timeSpentMin = Math.floor((gameTickCount / 360))/10;\n  let timeSpentHr = 0;\n  if (timeSpentMin > 60) {\n    timeSpentHr = Math.floor(timeSpentMin / 60);\n    timeSpentMin = Math.floor(timeSpentMin - (timeSpentHr * 60));\n  }\n  const translations = {\n    [c.PLANET_ROCK_FILE]: 'Rock Planet',\n    [c.PLANET_RED_FILE]: 'Red Planet',\n    [c.PLANET_GREEN_FILE]: 'Green Planet',\n    [c.PLANET_PURPLE_FILE]: 'Purple Planet',\n  }\n\n  return (\n    <div>\n      <div className='system-section'>\n        <div className='section'><b>Experience Log</b></div>\n        <div>\n          <table className=\"log-table\">\n            <tbody>\n            {Object.entries(xp).map((entry) => {\n              const [key, value] = entry;\n              if (value) {\n                return <tr key={key}>\n                  <td><b>{translations[key] || key}</b></td>\n                  <td>{Math.round(value)}</td>\n                </tr>;\n              }\n              return <tr key={key}/>;\n              })}\n            </tbody>\n          </table>\n          <div className=\"tick-count\">\n            Total time spent : {timeSpentHr ? timeSpentHr + ' hour'+(timeSpentHr > 1 ? 's ': ' ') : ''} {timeSpentMin} min\n          </div>\n        </div>\n      </div>\n\n      <div className='system-section'>\n        <div className='section'><b>Keyboard Help</b></div>\n        <div style={{paddingLeft:\"10px\"}}>\n          <div><b>Left / Right arrow keys</b> to turn left and right</div>\n          <div><b>Up arrow</b> to accelerate </div>\n          <div><b>Down arrow</b> to brake</div>\n          <div><b>X</b> to use the selected secondary weapon</div>\n          <div>You may use WASD instead of the arrow keys</div>\n          <div><b>C</b> to engage/disengage continuous fire</div>\n        </div>\n      </div>\n      <CodeEntry />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { ManagePlanet } from './ManagePlanet';\nimport './ManageTabs.css';\nimport { FactoryTabs } from './factory/FactoryTabs';\nimport { ManageStorage } from './ManageStorage';\nimport {ManageSystem} from \"./ManageSystem\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Tab, Tabs} from \"react-bootstrap\";\nimport {ManageLog} from \"./ManageLog\";\n\nexport function ManageTabs() {\n\n  return (\n    <Tabs defaultActiveKey='planet' id='manage-tabs' mountOnEnter unmountOnExit className=\"flex-nowrap\">\n      <Tab eventKey='planet' title='Planet'>\n        <ManagePlanet/>\n      </Tab>\n\n      <Tab eventKey='factory' title='Factory'>\n        <FactoryTabs/>\n      </Tab>\n\n      <Tab eventKey='storage' title='Storage'>\n        <ManageStorage/>\n      </Tab>\n\n      <Tab eventKey='log' title='Log'>\n        <ManageLog/>\n      </Tab>\n\n      <Tab eventKey='system' title='System'>\n        <ManageSystem/>\n      </Tab>\n    </Tabs>);\n}\n\n","import React from 'react';\nimport { c } from './functions';\nimport './InfoPanel.css';\nimport { InfoFly } from './fly/InfoFly';\nimport { ManageTabs } from './manage/ManageTabs';\n\nexport class InfoPanel extends React.Component {\n  render() {\n    let world = window.world;\n    if (world.system.gameState === c.GAME_STATE.MANAGE) {\n      return (<ManageTabs/>);\n    } else if (world.system.gameState === c.GAME_STATE.FLY) {\n      return (<InfoFly/>);\n    }\n    return (<div>...</div>);\n  }\n}\n\n","import React from 'react';\nimport './App.css';\nimport {InfoPanel} from './InfoPanel';\nimport {ai, c, fly, game, utils} from './functions';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    window.world = game.createEmptyWorld();\n    this.pixiRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.createPixiApp();\n  }\n\n  render() {\n    return (\n      <table className='root-app' width='100%'>\n        <tbody>\n        <tr>\n          <td>\n            <div className='viewport' ref={this.pixiRef}/>\n          </td>\n          <td className='info-panel' width='100%' height={(window.world.system.screenHeight || c.SCREEN_HEIGHT) + 'px'}>\n            <div className='scroll-box'>\n              <InfoPanel/>\n            </div>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    );\n  }\n\n  createPixiApp = () => {\n    let app = new window.PIXI.Application({width: c.SCREEN_WIDTH, height: c.SCREEN_HEIGHT});\n    app.renderer.backgroundColor = c.BLACK;\n    this.pixiRef.current.appendChild(app.view);\n    window.PIXI.loader\n      .add(c.SPRITESHEET_JSON)\n      .add(c.CRASH_JSON)\n      .add(c.SMOKE_JSON)\n      .add(c.STAR_BACKGROUND_FILE)\n      .load(this.setupGame);\n    window.world.system.app = app;\n  }\n\n  // Setup the App\n  setupGame = () => {\n    game.setupWorld();\n    this.setupKeyboardListeners();\n    this.setupWindowResizeListener();\n    game.changeGameState(c.GAME_STATE.FLY);\n    window.world.system.app.renderer.plugins.interaction.on('pointerdown', (event) => {\n      game.click(event);\n    });\n    window.world.system.app.ticker.add(delta => this.mainLoop(delta));\n  }\n\n  // Main loop runs 60 times per sec\n  mainLoop = (delta) => {\n    if (window.world.system.gameLoop) {\n      window.world.gameTickCount += 1;\n      game.runBuildings();\n      fly.moveBullets();\n      fly.coolAllWeapons();\n      ai.moveAliens();\n      window.world.system.gameLoop(delta);\n    }\n    // Force redraw all the react HTML (doesn't need to be updated 60 times / sec)\n    if (window.world.gameTickCount % 15 === 0) {\n      this.forceUpdate();\n    }\n  }\n\n  setupKeyboardListeners = () => {\n    window.world.system.keys.left = utils.keyboardListener(\"ArrowLeft\");\n    window.world.system.keys.right = utils.keyboardListener(\"ArrowRight\");\n    window.world.system.keys.up = utils.keyboardListener(\"ArrowUp\");\n    window.world.system.keys.down = utils.keyboardListener(\"ArrowDown\");\n    window.world.system.keys.space = utils.keyboardListener(\" \");\n    window.world.system.keys.w = utils.keyboardListener(\"w\"); // up\n    window.world.system.keys.a = utils.keyboardListener(\"a\"); // left\n    window.world.system.keys.s = utils.keyboardListener(\"s\"); // down\n    window.world.system.keys.d = utils.keyboardListener(\"d\"); // right\n    window.world.system.keys.q = utils.keyboardListener(\"q\"); // thrust left\n    window.world.system.keys.e = utils.keyboardListener(\"e\"); // thrust right\n    window.world.system.keys.x = utils.keyboardListener(\"x\"); // secondary weapon\n    window.world.system.keys.c = utils.keyboardListener(\"c\"); // continuous fire\n  }\n\n  setupWindowResizeListener() {\n    window.addEventListener('resize', resizeScreenToWindow);\n    resizeScreenToWindow();\n  }\n}\n\nfunction resizeScreenToWindow() {\n  const app = window.world.system.app;\n  let h = window.innerHeight;\n  const w = window.innerWidth;\n  let aspectRatio = w/h;\n  // We need some space on the right for the info screens\n  if (aspectRatio < 1.8) {\n    h = w / 1.8;\n  }\n  const scale = h / 1000;\n  window.world.system.app.stage.scale.set(scale);\n  app.renderer.resize(h, h);\n  window.world.system.screenHeight = h;\n  window.world.system.screenWidth = w;\n  window.world.system.screenScale = scale;\n\n  let fontSize = '14px';\n  if (w < 1300) {\n    fontSize = '12px';\n  } else if (w < 1000) {\n    fontSize = '8px';\n  }\n  document.body.style.fontSize = fontSize;\n\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}