{"version":3,"sources":["functions/utils.js","functions/constants.js","functions/game.js","functions/fly.js","functions/manage.js","functions/ai.js","functions/savegame.js","fly/Heatbar.js","fly/PushButton.js","fly/StatusButton.js","fly/InfoFly.js","manage/ManagePlanet.js","manage/factory/FactoryButtonRow.js","manage/factory/FactoryTab.js","manage/factory/FactoryTabs.js","manage/ManageStorage.js","manage/ManageSystem.js","manage/ManageLog.js","manage/ManageTabs.js","InfoPanel.js","App.js","serviceWorker.js","index.js"],"names":["distanceBetween","ax","ay","bx","by","Math","sqrt","pow","midPoint","a","b","normalizeRadian","radians","retVal","PI","calcGravity","x","y","planet","distance","gravityDirection","atan2","c","GRAVITATIONAL_CONST","mass","sin","cos","dir","directionTo","x1","y1","x2","y2","dirComponents","amount","xAmt","yAmt","randomInt","minP","maxP","min","ceil","max","floor","random","randomFloat","randomBool","getPointFrom","startX","startY","getVertexData","sprite","calculateVertices","vertices","vertexData","map","p","window","world","system","screenScale","collisionPoints","push","toGlobal","globalX","globalY","spriteX","spriteY","HALF_SCREEN_WIDTH","HALF_SCREEN_HEIGHT","pointInSprite","pX","pY","topLeft","topRight","bottomLeft","AB","toVector","AD","AM","dotAMAB","dot","dotABAB","dotAMAD","dotADAD","p1","p2","u","v","keyboardListener","value","key","isDown","isUp","press","undefined","release","downHandler","event","upHandler","downListener","bind","upListener","addEventListener","unsubscribe","removeEventListener","showToast","text","Swal","fire","title","timer","position","showConfirmButton","toast","width","SCREEN_WIDTH","showClass","popup","hideClass","then","BLACK","YELLOW","BLUE","WHITE","DARK_GREY","LIGHT_GREY","GAME_STATE","INIT","FLY","MANAGE","LOCALSTORAGE_GAME_NAMES_KEY","SCREEN_HEIGHT","NEARBY_WIDTH","NEARBY_HEIGHT","MINIMAP_WIDTH","MINIMAP_HEIGHT","HALF_MINIMAP_WIDTH","HALF_MINIMAP_HEIGHT","MINIMAP_VIEW_WIDTH","MINIMAP_VIEW_HEIGHT","HALF_MINIMAP_VIEW_WIDTH","HALF_MINIMAP_VIEW_HEIGHT","MINIMAP_SCALE_X","MINIMAP_SCALE_Y","MINIMAP_BORDER_COLOR","MINIMAP_BACKGROUND_COLOR","MINIMAP_PLANET_COLOR","MINIMAP_SELECTED_PLANET_COLOR","MINIMAP_BUILDING_COLOR","MINIMAP_SHIP_COLOR","SPRITESHEET_JSON","ALIEN_SHIP_BLACK_FILE","ALIEN_SHIP_BLUE_FILE","ALIEN_SHIP_BLUE_LARGE_FILE","ALIEN_SHIP_BLUE_SMALL_FILE","ALIEN_SHIP_FIRE_FILE","ALIEN_SHIP_GREEN_FILE","ALIEN_SHIP_GREEN_SMALL_FILE","ALIEN_SHIP_GREEN_LARGE_FILE","ALIEN_SHIP_RED_FILE","ALIEN_SHIP_RED_SMALL_FILE","ALIEN_SHIP_RED_LARGE_FILE","BULLET_FILE","BULLET_BLUE_FILE","BULLET_WHITE_FILE","FACTORY_FILE","MINE_FILE","PLANET_GREEN_FILE","PLANET_PURPLE_FILE","PLANET_RED_FILE","PLANET_ROCK_FILE","SHIELD_BLUE_FILE","SHIELD_GREEN_FILE","SHIELD_WHITE_FILE","SHIP_BALL_FILE","SHIP_CARGO_FILE","SHIP_EXPLORER_FILE","SHIP_FAST_FILE","SHIP_FIGHTER_FILE","SHIP_HEAVY_FILE","SHIP_MISSILE_FILE","SHIP_RED_WINGS_FILE","SHIP_SKELETON_FILE","STAR_BACKGROUND_FILE","CRASH_JSON","CRASH","UNIVERSE_RADIUS","PLAYER","ALIEN","PLAYER_STARTING_RESOURCES","titanium","gold","uranium","ALLOWED_OVERLAP","TAKEOFF_SPEED","PLANET_RESOURCE_MAX","PLAYER_START_X","PLAYER_START_Y","MIN_ALIEN_DIST_TO_PLANET","MIN_ALIEN_DIST_TO_ALIEN","BUILDING_PLACEMENT_ROTATION_INCREMENT","BUILDING_TYPE_MINE","MINE_SCALE","MINE_WIDTH","MINE_ANIMATION_SPEED","MINE_SPEED_TITANIUM","MINE_SPEED_GOLD","MINE_SPEED_URANIUM","MINE_COST","SALVAGE_RATE","BUILDING_TYPE_FACTORY","FACTORY_COST","FACTORY_WIDTH","FACTORY_SCALE","EQUIP_TYPE_BRAKE","EQUIP_TYPE_PRIMARY_WEAPON","EQUIP_TYPE_SECONDARY_WEAPON","EQUIP_TYPE_THRUSTER","EQUIP_TYPE_ARMOR","EQUIP_TYPE_REPAIR_DROID","EQUIP_TYPE_GUNNERY_DROID","EQUIP_TYPE_SHIELD_DROID","EQUIP_TYPE_SPEED","EQUIP_TYPE_TURN","EQUIP_TYPE_STORAGE","EQUIP_TYPE_AUTOLANDER","THRUST_MOMENTUM","THRUST_BLINK","OBJ_EQUIP","OBJ_SHIP","ALIEN_AI_TURRET","ALIEN_AI_CREEPER","ALIEN_AI_MOTHERSHIP","ALIEN_AI_KAMIKAZI","EQUIP_AI_MINE","EQUIP_AI_TURRET","EQUIP_AI_MISSILE","DIR_AHEAD_OF_SHIP","DIR_BEHIND_SHIP","EQUIP_BRAKE","name","objType","type","brakeSpeedPct","cost","EQUIP_BLINK_BRAKE","EQUIP_SPEED_BOOST","boostSpeed","EQUIP_TURN_BOOST","EQUIP_STORAGE","storageAmount","EQUIP_ENHANCED_STORAGE","EQUIP_ARMOR","armorAmt","EQUIP_ENHANCED_ARMOR","EQUIP_THRUSTER","thrustSpeed","thrustType","EQUIP_BLINK_THRUSTER","EQUIP_AUTOLANDER","EQUIP_BLASTER","coolTime","cool","damage","speed","lifetime","jitter","bulletFile","EQUIP_FAST_BLASTER","EQUIP_SPRINKLER_BLASTER","EQUIP_STREAM_BLASTER","EQUIP_MELEE_GUN","EQUIP_SNIPER_RIFLE","EQUIP_ALIEN_BLASTER","EQUIP_ALIEN_BLASTER_FAST","EQUIP_ALIEN_BLASTER_LIGHTNING","EQUIP_STAPLE_GUN","EQUIP_STAPLE_GUN_HEAVY","EQUIP_SHIELD","shield","active","armor","armorMax","lifetimeMax","spriteFile","radius","EQUIP_SHIELD_LONG","EQUIP_SHIELD_STRONG","EQUIP_SHIELD_ULTRA","SHIP_RED_MISSILE","propulsion","turnSpeed","resourcesMax","resources","equipMax","equip","crashSpeed","crashAngle","imageScale","imageFile","viewRange","aiType","EQUIP_ALIEN_MISSILE_LAUNCHER","createShip","EQUIP_R2D2","repairSpeed","EQUIP_GUNNERY_DROID","weapon","EQUIP_SHIELD_DROID","SHIP_EXPLORER","SHIP_CARGO","SHIP_FAST","SHIP_SKELETON","SHIP_HEAVY","SHIP_FIGHTER","SHIP_ALIEN_TURRET","SHIP_ALIEN","SHIP_ALIEN_LARGE","SHIP_ALIEN_STAPLE_TURRET","SHIP_ALIEN_FIRE","SHIP_ALIEN_STEALTH","SHIP_ALIEN_MOTHERSHIP","SHIP_DECOY","SHIP_TURRET","SHIP_MISSILE","SHIP_FRIENDSHIP_MISSILE","ALL_ALIENS","ALL_SHIPS","EQUIP_DECOY_DEPLOYER","EQUIP_TURRET_DEPLOYER","EQUIP_MISSILE_LAUNCHER","EQUIP_FRIENDSHIP_GUN","EQUIP_UPGRADES","EQUIP_PRIMARY_WEAPONS","EQUIP_SECONDARY_WEAPONS","EQUIP_DROIDS","ALL_EQUIP","XP_LEVELS","xp","obj","PLANET_DENSITY","Map","set","UNIVERSE_RINGS","planetCount","minDist","maxDist","minDistToOtherPlanet","minPlanetRadius","maxPlanetRadius","planetFiles","aliens","count","file","createEmptyWorld","saveGameName","ship","view","ships","planets","selectedPlanet","lastPlanetLanded","gameTickCount","blueprints","xpLevels","lodash","cloneDeep","nextId","keys","app","gameState","isTyping","gameLoop","bgSprite","explosionSheet","explosions","bullets","nearby","planetSpriteCache","shipSpriteCache","shieldSpriteCache","spriteContainers","background","minimap","screenHeight","miniMapGraphics","initializing","setupWorld","setupSpriteContainers","createBackground","createPlanets","shipStartX","shipStartY","getShipSprite","visible","createAliens","setupMiniMap","setupExplosionSheet","mainStage","stage","PIXI","Container","addChild","container","TilingSprite","Texture","from","ring","i","fileName","utils","length","String","fromCharCode","get","maxResource","minResource","createPlanet","getFreeXy","nearestPlanetDistance","origPlanet","nearestPlanet","dist","nearestPlanetDist","nearestAlienDistance","nearestAlien","alien","nearestAlienDist","minDistToPlanet","minDistToAlien","failCount","np","console","warn","planetFile","stored","raw","buildings","lastLandingDir","spriteId","getPlanetSprite","planetContainer","planetSprite","Sprite","loader","textures","anchor","spriteScale","scale","building","manage","makeBuildingSprite","entries","foundSprite","rotation","spriteWidth","spriteHeight","height","spriteSheet","getSpriteOrigWithHeight","origWidth","origHeight","setShieldRadius","shieldSprite","shipSprite","shieldWidth","getShieldSprite","cacheId","id","shipType","owner","selectedSecondaryWeaponIndex","vx","vy","alive","createAlien","alienInfo","miniMapContainer","mask","Graphics","drawRect","renderable","cacheAsBitmap","g","click","data","global","scaledX","scaledY","fly","clickOnMinimap","changeGameState","newState","enterFlyState","flyLoop","enterManageState","manageLoop","runBuildings","mineResource","children","buildingSprite","animationSpeed","resourceType","nextLevel","addBlueprint","shift","addMiningXp","addAlienXp","canAfford","payResourceCost","payResource","paid","Loader","shared","spritesheet","createExplosionSprite","AnimatedSprite","animations","loop","log","delta","setupNearby","runDroids","left","turnShip","right","d","up","w","booster","getEquip","propelShip","down","s","brake","brakeShip","space","firePrimaryWeapon","fireSecondaryWeapon","q","thrustShip","e","planetsInView","planetInView","grav","game","detectCollisionWithPlanet","landShip","detectCollisionWithAlien","shipsCollide","moveExplosions","moveBackground","drawMiniMap","minX","maxX","minY","maxY","repositionScreen","ai","moveAliens","coolAllWeapons","coolWeapons","disableShield","resetWeaponsCool","droid","shootAtNearestAlien","weaponRange","origDir","fireWeapon","tilePosition","getActiveShield","getAvailableShieldEquip","hasShieldDroid","getEquippedShield","point","planetDir","dirDiff","abs","success","hasAutolander","speedDiff","dirDiffAdj","damageShip","resetGame","r","getExplosionSprite","explosionSprite","playerShip","destroyShip","afterExplosion","play","onLoop","stop","getAvailablePlanetXY","turnBooster","thruster","thrustX","thrustY","fireBullet","gun","getSecondaryWeapon","selectFirstSecondaryWeapon","child","childSprite","childDistFromShip","checkForCollisionWithPlanet","checkForCollisionWithShip","enableShield","bullet","findOrCreateBullet","jitterAmt","killBullet","moveBullets","checkForBulletCollision","bulletWillHitShip","shieldEquip","bulletHitShip","shipDamage","alienDamage","equipType","t","clear","beginFill","lineStyle","endFill","planetOnMap","planetColor","drawCircle","buildingX","buildingY","clickX","clickY","primaryWeaponRange","gravity","takeOff","getBuildingInfo","buildingType","animation","buildMine","mine","getBuildingPlacementRotation","distanceFromShip","deg","degX","degY","buildingWidth","buildingFits","minBuildingWidth","transferResource","source","target","requestedAmtStr","maxCapacity","requestedAmt","Number","isNaN","amt","spaceLeft","unloadShip","resupplyShip","desiredAmt","freeAmt","desiredTitanium","buildFactory","factory","buildShip","shipTemplate","newShip","switchToShip","oldShip","removeShipFromStorage","addShipToStorage","newShipSprite","filter","removedShip","hasFactory","buildEquip","equipTemplate","costToRepair","repairShip","addArmor","titaniumOnHand","addEquip","newEquip","moveEquipFromPlanetToShip","equipToMove","remove","moveEquipFromShipToPlanet","shipResources","owing","this","removeResource","salvageEquip","salvageShip","canEquip","includes","find","eq","hasMoved","creeperAi","turretAi","missileAi","mothershipAi","alienSprite","shootAt","shooter","turretShip","getNearestOpponentTarget","distanceToPlayer","enableShieldIfNeeded","getNearestAlienTarget","getNearestPlayerTarget","missile","dirToTarget","crashIntoPlayer","moved","playerTarget","distToPlayer","dirToPlanet","rightLeft","turnDir","alienTarget","alienDist","shipId","otherShip","getShield","saveLocalStorage","objToSave","localStorage","getItem","removeItem","setItem","JSON","stringify","loadLocalStorage","objString","parse","upgradeDB","db","result","oldVersion","deleteObjectStore","createObjectStore","keyPath","loadWorld","dbRequest","indexedDB","open","onerror","onupgradeneeded","onsuccess","request","transaction","objectStore","newWorld","oldSystem","removeChildren","saveWorld","worldToStore","omit","objectStoreRequest","put","deleteWorld","delete","HEATBAR","Heatbar","curr","topFree","colorImgSrc","className","style","IMG_WIDTH","IMG_HEIGHT","src","alt","clipPath","PushButton","selected","onChange","imgFile","onClick","BUTTON","StatusButton","rightFree","getStatus","InfoFly","backgroundImage","backgroundSize","paddingRight","textAlign","cellPadding","colSpan","ManagePlanet","useState","titaniumAmt","setTitaniumAmt","goldAmt","setGoldAmt","uraniumAmt","setUraniumAmt","shipOnPlanet","disabled","display","round","marginLeft","defaultValue","FactoryButtonRow","template","existingInventory","templateArg","FactoryTab","templateList","maxHeight","minWidth","FactoryTabs","upgrades","primaryWeapons","secondaryWeapons","droids","Tabs","defaultActiveKey","Tab","eventKey","ManageStorage","selectedShip","setSelectedShip","currentShip","selectedShipEquip","concat","viewShip","ManageSystem","nameInput","useRef","gameNames","savegame","setCurrentGame","newName","current","addGameName","newGameName","onFocus","onBlur","ref","saveGame","gameName","loadGame","confirm","deleteGame","ManageLog","timeSpentMin","timeSpentHr","translations","Object","entry","ManageTabs","mountOnEnter","unmountOnExit","InfoPanel","React","Component","App","props","createPixiApp","Application","renderer","backgroundColor","pixiRef","appendChild","add","load","setupGame","setupKeyboardListeners","setupWindowResizeListener","plugins","interaction","on","ticker","mainLoop","forceUpdate","createRef","resizeScreenToWindow","h","innerHeight","resize","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"2ieAMO,SAASA,EAAgBC,EAAIC,EAAIC,EAAIC,GAC1C,OAAOC,KAAKC,KAAKD,KAAKE,IAAIN,EAAKE,EAAI,GAAKE,KAAKE,IAAIL,EAAKE,EAAI,IAOrD,SAASI,EAASC,EAAGC,GAC1B,MAAO,EAAED,EAAE,GAAGC,EAAE,IAAI,GAAID,EAAE,GAAGC,EAAE,IAAI,GAM9B,SAASC,EAAgBC,GAC9B,IAAIC,EAASD,EAOb,OANIC,EAAS,IACXA,GAAoB,EAAVR,KAAKS,IAEbD,EAAmB,EAAVR,KAAKS,KAChBD,GAAoB,EAAVR,KAAKS,IAEVD,EAOF,SAASE,EAAYC,EAAGC,EAAGC,GAChC,IAAIC,EAAWnB,EAAgBgB,EAAGC,EAAGC,EAAOF,EAAGE,EAAOD,GAClDE,EAAW,KACbA,EAAW,IAEb,IAAIC,EAAmBf,KAAKgB,MAAML,EAAIE,EAAOF,EAAGC,EAAIC,EAAOD,GAG3D,MAAO,CAACD,EAFOM,EAAEC,oBAAsBL,EAAOM,KAAOnB,KAAKE,IAAIY,EAAU,IAAMd,KAAKoB,IAAIL,GAEnEH,EADLK,EAAEC,oBAAsBL,EAAOM,KAAOnB,KAAKE,IAAIY,EAAU,IAAMd,KAAKqB,IAAIN,GACvDO,IAAIP,GAM/B,SAASQ,EAAYC,EAAGC,EAAIC,EAAGC,GACpC,OAAOrB,EAAgBN,KAAKgB,MAAMW,EAAKF,EAAIC,EAAKF,IAM3C,SAASI,EAAcN,EAAKO,GAGjC,MAAO,CAACC,KAFGD,EAAS7B,KAAKqB,IAAIC,GAEfS,KADHF,EAAS7B,KAAKoB,IAAIE,IAOxB,SAASU,EAAUC,EAAMC,GAC9B,IAAIC,EAAMnC,KAAKoC,KAAKH,GAChBI,EAAMrC,KAAKsC,MAAMJ,GACrB,OAAOlC,KAAKsC,MAAMtC,KAAKuC,UAAYF,EAAMF,EAAK,GAAKA,GAM9C,SAASK,EAAYL,EAAKE,GAC/B,OAAOF,EAAOnC,KAAKuC,UAAYF,EAAMF,GAMhC,SAASM,IACd,OAAOzC,KAAKuC,SAAW,GAMlB,SAASG,EAAaC,EAAQC,EAAQtB,EAAKR,GAGhD,MAAO,CAACH,EAFAgC,EAAU7B,EAAWd,KAAKqB,IAAIC,GAE5BV,EADFgC,EAAU9B,EAAWd,KAAKoB,IAAIE,IASjC,SAASuB,EAAclC,EAAEC,EAAGkC,GACjCA,EAAOC,oBACP,IAAMC,EAAWF,EAAOG,WAAWC,KAAI,SAAAC,GAAC,OAAIA,EAAIC,OAAOC,MAAMC,OAAOC,eAChEC,EAAkB,GAUtB,OATAA,EAAgBC,KAAKC,EAAS/C,EAAGC,EAAGoC,EAAS,GAAIA,EAAS,KAC1DQ,EAAgBC,KAAKC,EAAS/C,EAAGC,EAAGoC,EAAS,GAAIA,EAAS,KAC1DQ,EAAgBC,KAAKC,EAAS/C,EAAGC,EAAGoC,EAAS,GAAIA,EAAS,KAC1DQ,EAAgBC,KAAKC,EAAS/C,EAAGC,EAAGoC,EAAS,GAAIA,EAAS,KAE1DQ,EAAgBC,KAAKtD,EAASqD,EAAgB,GAAIA,EAAgB,KAClEA,EAAgBC,KAAKtD,EAASqD,EAAgB,GAAIA,EAAgB,KAClEA,EAAgBC,KAAKtD,EAASqD,EAAgB,GAAIA,EAAgB,KAClEA,EAAgBC,KAAKtD,EAASqD,EAAgB,GAAIA,EAAgB,KAC3DA,EAOF,SAASE,EAASC,EAAQC,EAASC,EAAQC,GAChD,MAAO,CAACH,GAAWE,EAAU5C,EAAE8C,mBAAoBH,GAAUE,EAAU7C,EAAE+C,qBAQpE,SAASC,EAActD,EAAEC,EAAGkC,EAAQoB,EAAIC,GAC7CrB,EAAOC,oBAEP,IAAMC,EAAWF,EAAOG,WAAWC,KAAI,SAAAC,GAAC,OAAIA,EAAIC,OAAOC,MAAMC,OAAOC,eAC9Da,EAAWV,EAAS/C,EAAGC,EAAGoC,EAAS,GAAIA,EAAS,IAChDqB,EAAYX,EAAS/C,EAAGC,EAAGoC,EAAS,GAAIA,EAAS,IACjDsB,EAAcZ,EAAS/C,EAAGC,EAAGoC,EAAS,GAAIA,EAAS,IAEnDuB,EAAKC,EAASJ,EAASC,GACvBI,EAAKD,EAASJ,EAASE,GACvBI,EAAKF,EAASJ,EAAS,CAACF,EAAIC,IAC5BQ,EAAUC,EAAIF,EAAIH,GAClBM,EAAUD,EAAIL,EAAIA,GAClBO,EAAUF,EAAIF,EAAID,GAClBM,EAAUH,EAAIH,EAAIA,GACxB,OAAO,GAAKE,GAAWA,GAAWE,GAAW,GAAKC,GAAWA,GAAWC,EAI1E,SAASP,EAASQ,EAAIC,GACpB,MAAO,CAAEA,EAAG,GAAKD,EAAG,GAAMC,EAAG,GAAKD,EAAG,IAIvC,SAASJ,EAAIM,EAAGC,GACd,OAAQD,EAAE,GAAKC,EAAE,GAAOD,EAAE,GAAKC,EAAE,GAM5B,SAASC,EAAiBC,GAC/B,IAAIC,EAAM,GACVA,EAAID,MAAQA,EACZC,EAAIC,QAAS,EACbD,EAAIE,MAAO,EACXF,EAAIG,WAAQC,EACZJ,EAAIK,aAAUD,EAEdJ,EAAIM,YAAc,SAAAC,GACZA,EAAMP,MAAQA,EAAID,QAChBC,EAAIE,MAAQF,EAAIG,OAAOH,EAAIG,QAC/BH,EAAIC,QAAS,EACbD,EAAIE,MAAO,IAIfF,EAAIQ,UAAY,SAAAD,GACVA,EAAMP,MAAQA,EAAID,QAChBC,EAAIC,QAAUD,EAAIK,SAASL,EAAIK,UACnCL,EAAIC,QAAS,EACbD,EAAIE,MAAO,IAIf,IAAMO,EAAeT,EAAIM,YAAYI,KAAKV,GACpCW,EAAaX,EAAIQ,UAAUE,KAAKV,GAYtC,OAXAlC,OAAO8C,iBACL,UAAWH,GAAc,GAE3B3C,OAAO8C,iBACL,QAASD,GAAY,GAGvBX,EAAIa,YAAc,WAChB/C,OAAOgD,oBAAoB,UAAWL,GACtC3C,OAAOgD,oBAAoB,QAASH,IAE/BX,EAGF,SAASe,EAAUC,GACxBC,IAAKC,KAAK,CACRC,MAAOH,EACPI,MAAO,IACPC,SAAS,WACTC,mBAAmB,EACnBC,OAAM,EACNC,MAAO9G,KAAKsC,MAAMrB,EAAE8F,aAAa,GAAG,KACpCC,UAAW,CACTC,MAAO,0CAETC,UAAW,CACTD,MAAO,2CAERE,O,aCrNQC,EAAQ,EACRC,EAAS,SACTC,EAAO,MACPC,EAAQ,SACRC,EAAY,QACZC,EAAa,QAEbC,EAAa,CACxBC,KAAM,OACNC,IAAK,MACLC,OAAQ,UAIGC,EAA8B,mBAG9Bf,EAAe,IACfgB,EAAgB,IAChBhE,EAAoBgD,EAAe,EACnC/C,EAAqB+D,EAAgB,EACrCC,EAA8B,EAAfjB,EACfkB,EAAgC,EAAhBF,EAEhBG,EAAgB,IAChBC,GAAiB,IACjBC,GAAqBF,EAAgB,EACrCG,GAAsBF,GAAiB,EAEvCG,GAAqB,IACrBC,GAAsB,IACtBC,GAA0BF,GAAqB,EAC/CG,GAA2BF,GAAsB,EAEjDG,GAAkBR,EAAgBI,GAClCK,GAAkBR,GAAiBI,GAEnCK,GAAuBnB,EACvBoB,GAA2BrB,EAC3BsB,GAAuBrB,EACvBsB,GAAgC1B,EAChC2B,GAAyB1B,EACzB2B,GAAqB1B,EAGrB2B,GAAmB,0BACnBC,GAAwB,kBACxBC,GAAuB,iBACvBC,GAA6B,uBAC7BC,GAA6B,uBAC7BC,GAAuB,iBACvBC,GAAwB,kBACxBC,GAA8B,wBAC9BC,GAA8B,wBAC9BC,GAAsB,gBACtBC,GAA4B,sBAC5BC,GAA4B,sBAC5BC,GAAc,aACdC,GAAmB,kBACnBC,GAAoB,mBACpBC,GAAe,cACfC,GAAY,OACZC,GAAoB,mBACpBC,GAAqB,oBACrBC,GAAkB,iBAClBC,GAAmB,kBACnBC,GAAmB,kBACnBC,GAAoB,mBACpBC,GAAoB,mBACpBC,GAAiB,gBACjBC,GAAkB,iBAClBC,GAAqB,oBACrBC,GAAiB,gBACjBC,GAAoB,mBACpBC,GAAkB,iBAClBC,GAAoB,mBACpBC,GAAsB,qBACtBC,GAAqB,oBACrBC,GAAuB,mBACvBC,GAAa,oBACbC,GAAQ,QAERC,GAAkB,KAClBC,GAAS,SACTC,GAAQ,QACRC,GAA4B,CAACC,SAAU,GAAIC,KAAM,GAAIC,QAAS,GAC9D1K,GAAsB,EACtB2K,GAAkB,EAClBC,GAAgB,GAChBC,GAAsB,SACtBC,KAAmBV,GAAkB,KACrCW,GAAiB,EACjBC,GAA2B,GAC3BC,GAA0B,EAG1BC,GAAwC,IAExCC,GAAqB,OACrBC,GAAa,EACbC,GAAa,GACbC,GAAuB,GACvBC,GAAsB,MACtBC,GAAkB,MAClBC,GAAqB,MACrBC,GAAY,CAAClB,SAAU,GAAIC,KAAM,GAAIC,QAAS,GAC9CiB,GAAe,GAEfC,GAAwB,UACxBC,GAAe,CAACrB,SAAU,GAAIC,KAAM,GAAIC,QAAS,IACjDoB,GAAgB,GAChBC,GAAgB,GAGhBC,GAAmB,QACnBC,GAA4B,iBAC5BC,GAA8B,mBAC9BC,GAAsB,WACtBC,GAAmB,QACnBC,GAA0B,eAC1BC,GAA2B,gBAC3BC,GAA0B,eAC1BC,GAAmB,QACnBC,GAAkB,OAClBC,GAAqB,UACrBC,GAAwB,aAExBC,GAAkB,kBAClBC,GAAe,eAEfC,GAAY,QACZC,GAAW,OAEXC,GAAkB,kBAClBC,GAAmB,mBACnBC,GAAsB,sBACtBC,GAAoB,oBACpBC,GAAgB,gBAChBC,GAAkB,kBAClBC,GAAmB,mBAEnBC,GAAoB,QACpBC,GAAkB,SAIlBC,GAAc,CACzBC,KAAM,QAASC,QAASb,GAAWc,KAAM5B,GAAkB6B,cAAe,IAC1EC,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,IAE7BqD,GAAoB,CAC/BL,KAAM,cAAeC,QAASb,GAAWc,KAAM5B,GAAkB6B,cAAe,EAChFC,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAE7BsD,GAAoB,CAC/BN,KAAM,gBAAiBC,QAASb,GAAWc,KAAMpB,GAAkByB,WAAY,IAC/EH,KAAM,CAACtD,SAAU,EAAGC,KAAM,GAAIC,QAAS,KAE5BwD,GAAmB,CAC9BR,KAAM,eAAgBC,QAASb,GAAWc,KAAMnB,GAAiBwB,WAAY,IAC7EH,KAAM,CAACtD,SAAU,EAAGC,KAAM,GAAIC,QAAS,KAE5ByD,GAAgB,CAC3BT,KAAM,UAAWC,QAASb,GAAWc,KAAMlB,GAAoB0B,cAAe,IAC9EN,KAAM,CAACtD,SAAU,GAAIC,KAAM,EAAGC,QAAS,IAE5B2D,GAAyB,CACpCX,KAAM,mBAAoBC,QAASb,GAAWc,KAAMlB,GAAoB0B,cAAe,IACvFN,KAAM,CAACtD,SAAU,IAAKC,KAAM,EAAGC,QAAS,IAE7B4D,GAAc,CACzBZ,KAAM,cAAeC,QAASb,GAAWc,KAAMxB,GAAkBmC,SAAU,IAC3ET,KAAM,CAACtD,SAAU,GAAIC,KAAM,EAAGC,QAAS,IAE5B8D,GAAuB,CAClCd,KAAM,iBAAkBC,QAASb,GAAWc,KAAMxB,GAAkBmC,SAAU,IAC9ET,KAAM,CAACtD,SAAU,IAAKC,KAAM,EAAGC,QAAS,IAE7B+D,GAAiB,CAC5Bf,KAAM,WAAYC,QAASb,GAAWc,KAAMzB,GAAqBuC,YAAa,IAAMC,WAAY/B,GAChGkB,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7BkE,GAAuB,CAClClB,KAAM,iBAAkBC,QAASb,GAAWc,KAAMzB,GAAqBuC,YAAa,IAAKC,WAAY9B,GACrGiB,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAE7BmE,GAAmB,CAC9BnB,KAAM,cAAeC,QAASb,GAAWc,KAAMjB,GAC/CmB,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAM7BoE,GAAgB,CAC3BpB,KAAM,UACNC,QAASb,GACTc,KAAM3B,GACN8C,SAAU,GACVC,KAAM,EACNC,OAAQ,GACRC,MAAO,IACPC,SAAU,IACVC,OAAQ,IACRC,WAAYzG,GACZkF,KAAM,CAACtD,SAAU,GAAIC,KAAM,EAAGC,QAAS,KAG5B4E,GAAqB,CAChC5B,KAAM,eACNC,QAASb,GACTc,KAAM3B,GACN8C,SAAU,GACVC,KAAM,EACNC,OAAQ,GACRC,MAAO,EACPC,SAAU,GACVC,OAAQ,IACRC,WAAYzG,GACZkF,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7B6E,GAA0B,CACrC7B,KAAM,oBACNC,QAASb,GACTc,KAAM3B,GACN8C,SAAU,EACVC,KAAM,EACNC,OAAQ,EACRC,MAAO,IACPC,SAAU,IACVC,OAAQ,EACRC,WAAYzG,GACZkF,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7B8E,GAAuB,CAClC9B,KAAM,iBACNC,QAASb,GACTc,KAAM3B,GACN8C,SAAU,EACVC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPC,SAAU,GACVC,OAAQ,IACRC,WAAYzG,GACZkF,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7B+E,GAAkB,CAC7B/B,KAAM,YACNC,QAASb,GACTc,KAAM3B,GACN8C,SAAU,EACVC,KAAM,EACNC,OAAQ,GACRC,MAAO,EACPC,SAAU,GACVC,OAAQ,IACRC,WAAYzG,GACZkF,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7BgF,GAAqB,CAChChC,KAAM,eACNC,QAASb,GACTc,KAAM3B,GACN8C,SAAU,IACVC,KAAM,EACNC,OAAQ,IACRC,MAAO,EACPC,SAAU,IACVC,OAAQ,EACRC,WAAYzG,GACZkF,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,MAG7BiF,GAAsB,CACjCjC,KAAM,gBACNC,QAASb,GACTc,KAAM3B,GACN8C,SAAU,GACVC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPC,SAAU,IACVC,OAAQ,IACRC,WAAYxG,GACZiF,KAAM,CAACtD,SAAU,EAAGC,KAAM,EAAGC,QAAS,KAG3BkF,GAA2B,CACtClC,KAAM,qBACNC,QAASb,GACTc,KAAM3B,GACN8C,SAAU,GACVC,KAAM,EACNC,OAAQ,GACRC,MAAO,EACPC,SAAU,IACVC,OAAQ,GACRC,WAAYxG,GACZiF,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7BmF,GAAgC,CAC3CnC,KAAM,yBACNC,QAASb,GACTc,KAAM3B,GACN8C,SAAU,GACVC,KAAM,EACNC,OAAQ,GACRC,MAAO,GACPC,SAAU,GACVC,OAAQ,IACRC,WAAYxG,GACZiF,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,MAG7BoF,GAAmB,CAC9BpC,KAAM,aACNC,QAASb,GACTc,KAAM3B,GACN8C,SAAU,EACVC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPC,SAAU,IACVC,OAAQ,GACRC,WAAYvG,GACZgF,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7BqF,GAAyB,CACpCrC,KAAM,mBACNC,QAASb,GACTc,KAAM3B,GACN8C,SAAU,EACVC,KAAM,EACNC,OAAQ,IACRC,MAAO,EACPC,SAAU,IACVC,OAAQ,IACRC,WAAYvG,GACZgF,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,MAI7BsF,GAAe,CAC1BtC,KAAM,eAAgBC,QAASb,GAAWc,KAAM1B,GAA6B8C,KAAM,EAAGD,SAAU,IAChGkB,OAAQ,CACNC,QAAQ,EACRC,MAAO,IACPC,SAAU,IACVjB,SAAU,IACVkB,YAAa,IACbC,WAAYjH,GACZkH,OAAQ,GAEVzC,KAAM,CAACtD,SAAU,EAAGC,KAAM,EAAGC,QAAS,MAE3B8F,GAAoB,CAC/B9C,KAAM,cAAeC,QAASb,GAAWc,KAAM1B,GAA6B8C,KAAM,EAAGD,SAAU,KAC/FkB,OAAQ,CACNC,QAAQ,EACRC,MAAO,IACPC,SAAU,IACVjB,SAAU,IACVkB,YAAa,IACbC,WAAY/G,GACZgH,OAAQ,GAEVzC,KAAM,CAACtD,SAAU,EAAGC,KAAM,EAAGC,QAAS,MAE3B+F,GAAsB,CACjC/C,KAAM,gBAAiBC,QAASb,GAAWc,KAAM1B,GAA6B8C,KAAM,EAAGD,SAAU,IACjGkB,OAAQ,CACNC,QAAQ,EACRC,MAAO,KACPC,SAAU,KACVjB,SAAU,IACVkB,YAAa,IACbC,WAAYhH,GACZiH,OAAQ,GAEVzC,KAAM,CAACtD,SAAU,EAAGC,KAAM,EAAGC,QAAS,MAE3BgG,GAAqB,CAChChD,KAAM,eAAgBC,QAASb,GAAWc,KAAM1B,GAA6B8C,KAAM,EAAGD,SAAU,KAChGkB,OAAQ,CACNC,QAAQ,EACRC,MAAO,IACPC,SAAU,IACVjB,SAAU,IACVkB,YAAa,IACbC,WAAYjH,GACZkH,OAAQ,GAEVzC,KAAM,CAACtD,SAAU,EAAGC,KAAM,EAAGC,QAAS,MAG3BiG,GAAmB,CAC9BjD,KAAM,gBACNC,QAASZ,GACT6D,WAAY,GACZC,UAAW,GACXC,aAAc,EACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,GACPb,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAW3I,GACXoF,KAAM,CAACtD,SAAU,EAAGC,KAAM,EAAGC,QAAS,IACtC4G,UAA0B,EAAfzL,EACX0L,OAAQpE,IAGGqE,GAA+B,CAC1C9D,KAAM,yBAA0BC,QAASb,GAAWc,KAAM1B,GAA6B6C,SAAU,IAAKC,KAAM,IAC5GyC,WAAY,CAAC7D,KAAM+C,GAAkBvQ,IAAKmN,IAC1CO,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,MAI7BgH,GAAa,CACxBhE,KAAM,oBAAqBC,QAASb,GAAWc,KAAMvB,GAAyBsF,YAAa,IAC3F7D,KAAM,CAACtD,SAAU,GAAIC,KAAM,IAAKC,QAAS,KAE9BkH,GAAsB,CACjClE,KAAM,gBAAiBC,QAASb,GAAWc,KAAMtB,GACjDuF,OAAQvC,GAAoBxB,KAAM,CAACtD,SAAU,IAAKC,KAAM,IAAKC,QAAS,MAE3DoH,GAAqB,CAChCpE,KAAM,eAAgBC,QAASb,GAAWc,KAAMrB,GAChDuB,KAAM,CAACtD,SAAU,IAAKC,KAAM,IAAKC,QAAS,MAI/BqH,GAAgB,CAC3BrE,KAAM,WACNC,QAASZ,GACT6D,WAAY,IACZC,UAAW,IACXC,aAAc,GACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,CAACxD,GAAaqB,IACrBsB,SAAU,GACVD,MAAO,GACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAW3H,GACXoE,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7BsH,GAAa,CACxBtE,KAAM,QACNC,QAASZ,GACT6D,WAAY,KACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,CAACxD,IACR2C,SAAU,GACVD,MAAO,GACPe,WAAY,IACZC,WAAY,GACZC,WAAY,EACZC,UAAW5H,GACXqE,KAAM,CAACtD,SAAU,IAAKC,KAAM,GAAIC,QAAS,KAG9BuH,GAAY,CACvBvE,KAAM,OACNC,QAASZ,GACT6D,WAAY,GACZC,UAAW,IACXC,aAAc,GACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,CAACxD,IACR2C,SAAU,GACVD,MAAO,GACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAW1H,GACXmE,KAAM,CAACtD,SAAU,IAAKC,KAAM,IAAKC,QAAS,KAG/BwH,GAAgB,CAC3BxE,KAAM,WACNC,QAASZ,GACT6D,WAAY,IACZC,UAAW,IACXC,aAAc,GACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,GACPb,SAAU,GACVD,MAAO,GACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAWrH,GACX8D,KAAM,CAACtD,SAAU,IAAKC,KAAM,IAAKC,QAAS,KAG/ByH,GAAa,CACxBzE,KAAM,QACNC,QAASZ,GACT6D,WAAY,IACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,CAACxD,IACR2C,SAAU,IACVD,MAAO,IACPe,WAAY,IACZC,WAAY,GACZC,WAAY,GACZC,UAAWxH,GACXiE,KAAM,CAACtD,SAAU,IAAKC,KAAM,IAAKC,QAAS,MAG/B0H,GAAe,CAC1B1E,KAAM,UACNC,QAASZ,GACT6D,WAAY,IACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,CAACxD,IACR2C,SAAU,IACVD,MAAO,IACPe,WAAY,IACZC,WAAY,GACZC,WAAY,GACZC,UAAWzH,GACXkE,KAAM,CAACtD,SAAU,IAAKC,KAAM,IAAKC,QAAS,MAG/B2H,GAAoB,CAC/B3E,KAAM,eACNC,QAASZ,GACT6D,WAAY,KACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,CAACxD,GAAakC,IACrBS,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAW9I,GACXuF,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,IACxC6G,OAAQvE,IAGGsF,GAAa,CACxB5E,KAAM,aACNC,QAASZ,GACT6D,WAAY,IACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,CAACxD,GAAakC,IACrBS,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAW/I,GACXwF,KAAM,CAACtD,SAAU,IAAKC,KAAM,IAAKC,QAAS,IAC1C6G,OAAQtE,IAGGsF,GAAmB,CAC9B7E,KAAM,cACNC,QAASZ,GACT6D,WAAY,IACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,CAACxD,GAAamC,IACrBQ,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,EACZC,UAAW7I,GACXsF,KAAM,CAACtD,SAAU,IAAKC,KAAM,IAAKC,QAAS,IAC1C6G,OAAQtE,IAGGuF,GAA2B,CACtC9E,KAAM,sBACNC,QAASZ,GACT6D,WAAY,EACZC,UAAW,KACXC,aAAc,IACdC,UAAW,CACRvG,SAAU,EACXC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,CAACxD,GAAasC,IACrBK,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,IACZC,UAAWjJ,GACX0F,KAAM,CAACtD,SAAU,IAAKC,KAAM,IAAKC,QAAS,KAC1C6G,OAAQvE,IAGGyF,GAAkB,CAC7B/E,KAAM,aACNC,QAASZ,GACT6D,WAAY,IACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,CAACxD,GAAaqC,GAAkBU,IACvCJ,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,IACZC,UAAWhJ,GACXyF,KAAM,CAACtD,SAAU,IAAKC,KAAM,IAAKC,QAAS,IAC1C6G,OAAQtE,IAGGyF,GAAqB,CAChChF,KAAM,gBACNC,QAASZ,GACT6D,WAAY,IACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,CAACxD,GAAamC,IACrBQ,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,IACZC,UAAWpJ,GACX6F,KAAM,CAACtD,SAAU,IAAKC,KAAM,IAAKC,QAAS,KAC1C6G,OAAQtE,IAGG0F,GAAwB,CACnCjF,KAAM,mBACNC,QAASZ,GACT6D,WAAY,EACZC,UAAW,KACXC,aAAc,IACdC,UAAW,CACTvG,SAAU,IACVC,KAAM,IACNC,QAAS,KAEXsG,SAAU,GACVC,MAAO,CAACxD,GAAa+D,GAA8Bd,GAAoBb,IACvEO,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,IACZC,UAAW1I,GACXmF,KAAM,CAACtD,SAAU,KAAMC,KAAM,IAAMC,QAAS,KAC5C6G,OAAQrE,IAGG0F,GAAa,CACxBlF,KAAM,QACNC,QAASZ,GACT6D,WAAY,EACZC,UAAW,EACXC,aAAc,EACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,GACPb,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,IACZC,UAAW3H,GACXoE,KAAM,CAACtD,SAAU,EAAGC,KAAM,EAAGC,QAAS,IACtC6G,OAAQnE,IAGGyF,GAAc,CACzBnF,KAAM,SACNC,QAASZ,GACT6D,WAAY,EACZC,UAAW,EACXC,aAAc,EACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,CAAC3B,IACRc,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAWlJ,GACX2F,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,IACxC6G,OAAQlE,IAGGyF,GAAe,CAC1BpF,KAAM,UACNC,QAASZ,GACT6D,WAAY,IACZC,UAAW,IACXC,aAAc,EACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,GACPb,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,EACZC,UAAW7H,GACXsE,KAAM,CAACtD,SAAU,EAAGC,KAAM,EAAGC,QAAS,IACtC6G,OAAQjE,IAGGyF,GAA0B,CACrCrF,KAAM,qBACNC,QAASZ,GACT6D,WAAY,IACZC,UAAW,IACXC,aAAc,EACdC,UAAW,CACTvG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXsG,SAAU,EACVC,MAAO,GACPb,SAAU,GACVD,MAAO,GACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAWnJ,GACX4F,KAAM,CAACtD,SAAU,EAAGC,KAAM,GAAIC,QAAS,GACvC6G,OAAQjE,IAGG0F,GAAa,CAACX,GAAmBC,GAAYC,GAAkBG,GAAqBF,GAA0BC,GAAiBE,IAC/HM,GAAS,CAAIlB,GAAeC,GAAYC,GAAWC,GAAeC,GAAYC,IAArE,OAAsFY,IAG/FE,GAAuB,CAClCxF,KAAM,iBAAkBC,QAASb,GAAWc,KAAM1B,GAA6B6C,SAAU,GAAIC,KAAM,EACnGyC,WAAY,CAAC7D,KAAMgF,GAAYxS,IAAKoN,IACpCM,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,MAE7ByI,GAAwB,CACnCzF,KAAM,kBAAmBC,QAASb,GAAWc,KAAM1B,GAA6B6C,SAAU,IAAKC,KAAM,EACrGyC,WAAY,CAAC7D,KAAMiF,GAAazS,IAAKoN,IACrCM,KAAM,CAACtD,SAAU,IAAKC,KAAM,IAAKC,QAAS,MAE/B0I,GAAyB,CACpC1F,KAAM,mBAAoBC,QAASb,GAAWc,KAAM1B,GAA6B6C,SAAU,GAAIC,KAAM,EACrGyC,WAAY,CAAC7D,KAAMkF,GAAc1S,IAAKmN,IACtCO,KAAM,CAACtD,SAAU,GAAIC,KAAM,GAAIC,QAAS,MAE7B2I,GAAuB,CAClC3F,KAAM,iBAAkBC,QAASb,GAAWc,KAAM1B,GAA6B6C,SAAU,IAAKC,KAAM,EACpGyC,WAAY,CAAC7D,KAAMmF,GAAyB3S,IAAKmN,IACjDO,KAAM,CAACtD,SAAU,IAAKC,KAAM,IAAKC,QAAS,MAI/B4I,GAAiB,CAAC7F,GAAaM,GAAmBU,GAAgBG,GAAsBN,GAAaN,GAAmBE,GACnIC,GAAeK,GAAsBH,GAAwBQ,IAClD0E,GAAwB,CAACzE,GAAeQ,GAAoBE,GAAsBD,GAAyBE,GAAiBC,GAAoBC,GAAqBG,GAAkBC,GAAwBH,GAA0BC,IACzO2D,GAA0B,CAACN,GAAsBC,GAAuBC,GAAwBpD,GAAcQ,GAAmBC,GAAqBC,IACtJ+C,GAAe,CAAC/B,GAAYE,GAAqBE,IACjD4B,GAAS,UAAOJ,GAAmBC,GAA0BC,GAA4BC,IAEzFE,IAAS,mBAEnBvK,GAAmB,CAClB,CAACwK,GAAI,EAAGC,IAAK/E,IACb,CAAC8E,GAAI,GAAIC,IAAKpG,IACd,CAACmG,GAAI,GAAIC,IAAK9B,IACd,CAAC6B,GAAI,IAAKC,IAAK7B,IACf,CAAC4B,GAAI,IAAKC,IAAKvF,IACf,CAACsF,GAAI,IAAMC,IAAK7F,MARE,cAUnB7E,GAAkB,CACjB,CAACyK,GAAI,GAAIC,IAAK1F,IACd,CAACyF,GAAI,GAAIC,IAAK9F,IACd,CAAC6F,GAAI,IAAKC,IAAKpF,IACf,CAACmF,GAAI,IAAKC,IAAK5B,IACf,CAAC2B,GAAI,IAAMC,IAAKjF,MAfE,cAiBnB3F,GAAoB,CACnB,CAAC2K,GAAI,GAAIC,IAAK3B,IACd,CAAC0B,GAAI,GAAIC,IAAKnC,IACd,CAACkC,GAAI,IAAKC,IAAK1B,IACf,CAACyB,GAAI,IAAMC,IAAKhF,MArBE,cAuBnB3F,GAAqB,CACpB,CAAC0K,GAAI,GAAIC,IAAK3F,IACd,CAAC0F,GAAI,IAAKC,IAAKpD,IACf,CAACmD,GAAI,IAAKC,IAAKjC,IACf,CAACgC,GAAI,IAAMC,IAAKzB,MA3BE,cA8BnBC,GAAkB3E,KAAO,CACxB,CAACkG,GAAI,EAAGC,IAAKvE,IACb,CAACsE,GAAI,EAAGC,IAAKlE,IACb,CAACiE,GAAI,GAAIC,IAAKjE,MAjCI,cAmCnB0C,GAAW5E,KAAO,CACjB,CAACkG,GAAI,EAAGC,IAAK7D,IACb,CAAC4D,GAAI,EAAGC,IAAKX,IACb,CAACU,GAAI,GAAIC,IAAKrD,IACd,CAACoD,GAAI,GAAIC,IAAKvB,MAvCI,cAyCnBC,GAAiB7E,KAAO,CACvB,CAACkG,GAAI,EAAGC,IAAKrE,IACb,CAACoE,GAAI,EAAGC,IAAKV,IACb,CAACS,GAAI,GAAIC,IAAKnE,IACd,CAACkE,GAAI,GAAIC,IAAKtB,MA7CI,cA+CnBG,GAAmBhF,KAAO,CACzB,CAACkG,GAAI,EAAGC,IAAKT,IACb,CAACQ,GAAI,EAAGC,IAAKtE,IACb,CAACqE,GAAI,GAAIC,IAAKR,MAlDI,cAoDnBb,GAAyB9E,KAAO,CAC/B,CAACkG,GAAI,EAAGC,IAAK/D,IACb,CAAC8D,GAAI,EAAGC,IAAKpE,IACb,CAACmE,GAAI,EAAGC,IAAKxF,IACb,CAACuF,GAAI,GAAIC,IAAK/B,MAxDI,cA0DnBW,GAAgB/E,KAAO,CACtB,CAACkG,GAAI,EAAGC,IAAK9D,IACb,CAAC6D,GAAI,EAAGC,IAAKrF,IACb,CAACoF,GAAI,EAAGC,IAAKnD,IACb,CAACkD,GAAI,GAAIC,IAAKpB,MA9DI,cAgEnBE,GAAsBjF,KAAO,CAC5B,CAACkG,GAAI,EAAGC,IAAKhE,MAjEK,GAqETiE,GAAiB,IAAIC,IAClCD,GAAeE,IAAI/K,GAAmB,KACtC6K,GAAeE,IAAI9K,GAAoB,MACvC4K,GAAeE,IAAI7K,GAAiB,MACpC2K,GAAeE,IAAI5K,GAAkB,MAG9B,IAAM6K,GAAiB,CAC5B,CACEC,YAAa,EACbC,QAAS,EAAGC,QAAS,EACrBC,qBAAsB,GACtBC,gBAAiB,KAAMC,gBAAiB,KACxCC,YAAa,CAACtL,IACduL,OAAQ,CAAC,CAACC,MAAO,EAAGC,KAAM,QAE5B,CACET,YAAa,EACbC,QAAS,KAAMC,QAAS,KACxBC,qBAAsB,GACtBC,gBAAiB,GAAIC,gBAAiB,GACtCC,YAAa,GACbC,OAAQ,CACN,CAACC,MAAO,GAAIC,KAAMjC,IAClB,CAACgC,MAAO,GAAIC,KAAMlC,IAClB,CAACiC,MAAO,GAAIC,KAAMnC,MAGtB,CACE0B,YAAa,IACbC,QAAS,KAAMC,QAAS,IACxBC,qBAAsB,IACtBC,gBAAiB,IAAKC,gBAAiB,IACvCC,YAAa,CAACrL,GAAiBD,GAAoBD,IACnDwL,OAAQ,CACN,CAACC,MAAO,IAAKC,KAAMnC,IACnB,CAACkC,MAAO,IAAKC,KAAMpC,IACnB,CAACmC,MAAO,IAAKC,KAAMjC,MAGvB,CACEwB,YAAa,EACbC,QAAS,IAAMC,QAAS,KACxBC,qBAAsB,GACtBC,gBAAiB,GAAIC,gBAAiB,GACtCC,YAAa,CAACrL,IACdsL,OAAQ,CACN,CAACC,MAAO,IAAKC,KAAMnC,IACnB,CAACkC,MAAO,IAAKC,KAAMjC,MAGvB,CACEwB,YAAa,IACbC,QAAS,IAAOC,QAAS,KACzBC,qBAAsB,IACtBC,gBAAiB,IAAKC,gBAAiB,IACvCC,YAAa,CAACpL,GAAkBD,GAAiBF,IACjDwL,OAAQ,CACN,CAACC,MAAO,IAAKC,KAAMtC,IACnB,CAACqC,MAAO,IAAKC,KAAMrC,IACnB,CAACoC,MAAO,IAAKC,KAAMpC,MAGvB,CACE2B,YAAa,IACbC,QAAS,KAAOC,QAAS,KACzBC,qBAAsB,IACtBC,gBAAiB,IAAKC,gBAAiB,IACvCC,YAAa,CAACpL,GAAkBD,IAChCsL,OAAQ,CACN,CAACC,MAAO,KAAMC,KAAMtC,IACpB,CAACqC,MAAO,IAAKC,KAAMrC,MAGvB,CACE4B,YAAa,IACbC,QAAS,KAAOC,QAAS,IACzBC,qBAAsB,IACtBC,gBAAiB,IAAKC,gBAAiB,IACvCC,YAAa,CAACpL,IACdqL,OAAQ,CAAC,CAACC,MAAO,IAAKC,KAAMtC,MAE9B,CACE6B,YAAa,IACbC,QAAS,IAAOC,QAAShK,GACzBiK,qBAAsB,IACtBC,gBAAiB,GAAIC,gBAAiB,IACtCC,YAAa,CAACpL,IACdqL,OAAQ,K,mCCz/BL,SAASG,KAAoB,IAAD,EACjC,MAAO,CACLC,aAAc,KACdC,KAAM,KACNC,KAAM,CACJtV,EAAG,EACHC,EAAG,GAELsV,MAAO,GACPC,QAAS,GACTC,eAAgB,CAACnE,UAAW,IAC5BoE,iBAAkB,KAClBC,cAAgB,EAChBC,WAAY,CACVP,KAAM,GACN7D,MAAO,GACP2C,IAAE,mBACC7T,EAAEqJ,iBAAmB,GADtB,cAECrJ,EAAEoJ,gBAAkB,GAFrB,cAGCpJ,EAAEkJ,kBAAoB,GAHvB,cAIClJ,EAAEmJ,mBAAqB,GAJxB,cAKCnJ,EAAEsS,kBAAkB3E,KAAO,GAL5B,cAMC3N,EAAEuS,WAAW5E,KAAO,GANrB,cAOC3N,EAAEwS,iBAAiB7E,KAAO,GAP3B,cAQC3N,EAAE2S,mBAAmBhF,KAAO,GAR7B,cASC3N,EAAEyS,yBAAyB9E,KAAO,GATnC,cAUC3N,EAAE0S,gBAAgB/E,KAAO,GAV1B,cAWC3N,EAAE4S,sBAAsBjF,KAAO,GAXhC,GAaF4H,SAAUC,KAAOC,UAAUzV,EAAE4T,YAE/B8B,OAAQ,IAERrT,OAAQ,CACNsT,KAAM,GACNC,IAAK,KACLC,UAAW7V,EAAEyG,WAAWC,KACxBoP,UAAU,EACVC,SAAU,KACVC,SAAU,KACVC,eAAgB,KAChBC,WAAY,GACZC,QAAS,GACTC,OAAQ,CAAClB,QAAS,GAAID,MAAO,IAC7BoB,kBAAmB,GACnBC,gBAAiB,GACjBC,kBAAmB,IAAIvC,IACvBwC,iBAAkB,CAACC,WAAY,KAAMvB,QAAS,KAAMiB,QAAS,KAAMlB,MAAO,KAAMyB,QAAS,KAAMR,WAAW,MAC1GS,aAAc3W,EAAE8G,cAChBxE,YAAa,EACbsU,gBAAiB,KACjBC,cAAc,IAKb,SAASC,KACd,IAAM1U,EAAQD,OAAOC,MACrB2U,KACAC,KACAC,KAEA7U,EAAM+S,eAAiB/S,EAAM8S,QAAQ,GACrC/S,OAAOC,MAAM8U,WAAalX,EAAE+K,eAE5B5I,OAAOC,MAAM+U,WAAanX,EAAEgL,eAC5B5I,EAAM2S,KAAOrD,GAAW1R,EAAEgS,cAAehS,EAAEsK,QACxB8M,GAAchV,EAAM2S,MAC5BsC,SAAU,EACrBjV,EAAM2S,KAAK/D,UAAYhR,EAAEwK,0BA4BzB8M,KACAC,KACAC,KAMK,SAAST,KACd,IAAIU,EAAYtV,OAAOC,MAAMC,OAAOuT,IAAI8B,MACpClB,EAAmBrU,OAAOC,MAAMC,OAAOmU,iBAC3CA,EAAiBC,WAAa,IAAItU,OAAOwV,KAAKC,UAC9CH,EAAUI,SAASrB,EAAiBC,YAEpCD,EAAiBtB,QAAU,IAAI/S,OAAOwV,KAAKC,UAC3CH,EAAUI,SAASrB,EAAiBtB,SAEpCsB,EAAiBL,QAAU,IAAIhU,OAAOwV,KAAKC,UAC3CH,EAAUI,SAASrB,EAAiBL,SAEpCK,EAAiBvB,MAAQ,IAAI9S,OAAOwV,KAAKC,UACzCH,EAAUI,SAASrB,EAAiBvB,OAEpCuB,EAAiBN,WAAa,IAAI/T,OAAOwV,KAAKC,UAC9CH,EAAUI,SAASrB,EAAiBN,YAEpCM,EAAiBE,QAAU,IAAIvU,OAAOwV,KAAKC,UAC3CH,EAAUI,SAASrB,EAAiBE,SAG/B,SAASM,KACd,IAAIc,EAAY3V,OAAOC,MAAMC,OAAOmU,iBAAiBC,WACrDtU,OAAOC,MAAMC,OAAO2T,SAAW,IAAI7T,OAAOwV,KAAKI,aAC7C5V,OAAOwV,KAAKK,QAAQC,KAAKjY,EAAEkK,sBAC3BlK,EAAE8F,aACF9F,EAAE8G,eAEJgR,EAAUD,SAAS1V,OAAOC,MAAMC,OAAO2T,UAGlC,SAASiB,KACE9U,OAAOC,MAAMC,OAAOmU,iBAAiBtB,QAArD,IAD8B,iBAEblV,EAAEkU,gBAFW,IAE9B,2BACE,IADkC,IAA3BgE,EAA0B,QACxBC,EAAI,EAAGA,EAAID,EAAK/D,YAAagE,IAAK,CACzC,IAAIC,EAAWF,EAAKzD,YAAY4D,EAAMtX,UAAU,EAAGmX,EAAKzD,YAAY6D,OAAS,IACzE3K,EAAO4K,OAAOC,aAAa,GAAKzZ,KAAKsC,MAAsB,GAAhBtC,KAAKuC,WAAkB+W,EAAMtX,UAAU,IAAM,QACxFyP,EAAS6H,EAAMtX,UAAUmX,EAAK3D,gBAAiB2D,EAAK1D,iBACpDtU,EAAOsQ,EAASA,EAASxQ,EAAE+T,eAAe0E,IAAIL,GAC9CM,EAAqB,EAAPxY,EAAW,GACzByY,EAAqB,GAAPzY,EAEdN,EAASgZ,GAAaR,EAAUzK,EAAM6C,EAAQtQ,EAAM,CACtDuK,SAAU4N,EAAMtX,UAAU4X,EAAaD,GACvChO,KAAM2N,EAAMtX,UAAU4X,EAAaD,GACnC/N,QAAS0N,EAAMtX,UAAU4X,EAAaD,KAXC,EAa5BG,GAAUjZ,EAAQsY,EAAK5D,qBAAsB,EAAG4D,EAAK9D,QAAS8D,EAAK7D,SAA3E3U,EAboC,EAapCA,EAAGC,EAbiC,EAajCA,EACRC,EAAOF,EAAIA,EACXE,EAAOD,EAAIA,GAlBe,+BA2BhC,SAASmZ,GAAsBC,EAAYrZ,EAAGC,GAC5C,IAD+C,EAC3CyU,EAAU,YACV4E,EAAgB,KAF2B,eAG5B7W,OAAOC,MAAM8S,SAHe,IAG/C,2BAAyC,CAAC,IAAjCtV,EAAgC,QACvC,GAAIA,IAAWmZ,EAAY,CACzB,IAAIE,EAAOZ,EAAM3Z,gBAAgBgB,EAAGC,EAAGC,EAAOF,EAAGE,EAAOD,GAAKC,EAAO4Q,OAChEuI,IACFE,GAAQF,EAAWvI,UAEhBwI,GAAkBC,EAAO7E,KAC5BA,EAAU6E,EACVD,EAAgBpZ,KAXyB,8BAe/C,MAAO,CAACoZ,cAAeA,EAAeE,kBAAmB9E,GAO3D,SAAS+E,GAAqBzZ,EAAGC,GAC/B,IADkC,EAC9ByU,EAAU,YACVgF,EAAe,KAFe,eAGhBjX,OAAOC,MAAMC,OAAO+T,OAAOnB,OAHX,IAGlC,2BAAoD,CAAC,IAA5CoE,EAA2C,QAClD,GAAIA,IAAUlX,OAAOC,MAAM2S,KAA3B,CAIA,IAAIkE,EAAOZ,EAAM3Z,gBAAgBgB,EAAGC,EAAG0Z,EAAM3Z,EAAG2Z,EAAM1Z,GAAqB,EAAf0Z,EAAM7I,SAC7D4I,GAAiBH,EAAO7E,KAC3BA,EAAU6E,EACVG,EAAeC,KAXe,8BAclC,MAAO,CAACD,aAAcA,EAAcE,iBAAkBlF,GAQxD,SAASyE,GAAUjZ,EAAQ2Z,EAAiBC,EAAgBpF,EAASC,GAAyB,IAAhBoF,EAAe,uDAAH,EACpFpZ,EAAMgY,EAAM9W,YAAY,EAAa,EAAVxC,KAAKS,IAChCyZ,EAAOZ,EAAMtX,UAAUqT,EAASC,GAFuD,EAG9EgE,EAAM5W,aAAa,EAAG,EAAGpB,EAAK4Y,GAAtCvZ,EAHsF,EAGtFA,EAAGC,EAHmF,EAGnFA,EACJ+Z,EAAK,KACT,GAAIH,EAAkB,EAAG,CAAC,IAAD,EACGT,GAAsBlZ,EAAQF,EAAGC,GAAtDuZ,EADkB,EAClBA,kBACL,GAAIA,EAAoBK,EACtB,OAAOV,GAAUjZ,EAAQ2Z,EAAiBC,EAAgBpF,EAASC,IAAWoF,GAEhFC,EAAKR,EAEP,GAAIM,EAAiB,EAAG,CAAC,IAAD,EACGL,GAAqBzZ,EAAGC,GAA5C2Z,EADiB,EACjBA,iBACL,GAAIA,EAAmBE,EACrB,OAAOX,GAAUjZ,EAAQ2Z,EAAiBC,EAAgBpF,EAASC,IAAWoF,GAMlF,OAHIA,EAAY,KACdE,QAAQC,KAAK,2CAA6CH,EAAY,kBAAoBrF,EAAU,OAASsF,GAExG,CAACha,IAAGC,KAIN,SAASiZ,GAAaiB,EAAYlM,EAAM6C,EAAQtQ,EAAM8Q,GAC3D,IAAIpR,EAAS,GAiBb,OAhBAA,EAAO+N,KAAOA,EACd/N,EAAOF,EAAI,EACXE,EAAOD,EAAI,EACXC,EAAOM,KAAOA,EACdN,EAAOoR,UAAY,CACjB8I,OAAQ,CAACrP,SAAU,EAAGC,KAAM,EAAGC,QAAS,GACxCoP,IAAK/I,GAEPpR,EAAOqV,MAAQ,GACfrV,EAAOsR,MAAQ,GACftR,EAAOoa,UAAY,GACnBpa,EAAO4Q,OAASA,EAChB5Q,EAAOqa,eAAiB,EACxBra,EAAO2Q,WAAasJ,EACpBja,EAAOsa,SAAW,KAClB/X,OAAOC,MAAM8S,QAAQ1S,KAAK5C,GACnBA,EASF,SAASua,GAAgBva,GAC9B,IAAIyW,EAAoBlU,OAAOC,MAAMC,OAAOgU,kBAAkBzW,EAAO2Q,YAEhE8F,IACHA,EAAoB,IAAIrC,IACxB7R,OAAOC,MAAMC,OAAOgU,kBAAkBzW,EAAO2Q,YAAc8F,GAG7D,IAAI+D,EAAkB/D,EAAkBoC,IAAI7Y,EAAOsa,UACnD,GAAIE,EACF,OAAOA,GAGTA,EAAkB,IAAIjY,OAAOwV,KAAKC,WAClBlY,EAAI,EACpB0a,EAAgBza,EAAI,EACpBya,EAAgB/C,SAAU,EAC1BlV,OAAOC,MAAMC,OAAOmU,iBAAiBtB,QAAQ2C,SAASuC,GAGtD,IAAMC,EAAe,IAAIlY,OAAOwV,KAAK2C,OACnCnY,OAAOwV,KAAK4C,OAAOvJ,UAAUhR,EAAEiI,kBAAkBuS,SAAS5a,EAAO2Q,aACnE8J,EAAaI,OAAOxG,IAAI,GAAK,IAC7B,IAAIyG,EAA8B,EAAhB9a,EAAO4Q,OAAa6J,EAAaxU,MAE9CjG,EAAO2Q,aAAevQ,EAAEmJ,oBAAwBvJ,EAAO2Q,aAAevQ,EAAEkJ,oBAC3EwR,GAA4B,MAE9BL,EAAaM,MAAM1G,IAAIyG,EAAaA,GACpCN,EAAgBvC,SAASwC,GA7Ba,qBA+Bfza,EAAOoa,WA/BQ,IA+BtC,2BAAyC,CAAC,IAA/BY,EAA8B,QACvCC,EAAOC,mBAAmBF,EAAUhb,EAAQwa,IAhCR,8BAsCtC,OAFAxa,EAAOsa,SAAW/X,OAAOC,MAAMsT,SAC/BW,EAAkBpC,IAAIrU,EAAOsa,SAAUE,GAChCA,EAOF,SAAShD,GAAcrC,GAO5B,IAAIuB,EAAkBnU,OAAOC,MAAMC,OAAOiU,gBAAgBvB,EAAKzD,WAE1DgF,IACHA,EAAkB,IAAItC,IACtB7R,OAAOC,MAAMC,OAAOiU,gBAAgBvB,EAAKzD,WAAagF,GAGxD,IAAIzU,EAASyU,EAAgBmC,IAAI1D,EAAKmF,UACtC,GAAIrY,EACF,OAAOA,EAhByB,qBAmBEyU,EAAgByE,WAnBlB,IAmBlC,2BAA+D,CAAC,IAAD,0BAArDb,EAAqD,KAA3Cc,EAA2C,KAC7D,IAAKA,EAAY3D,QASf,OARA2D,EAAY3D,SAAU,EACtB2D,EAAYC,SAAWlG,EAAKkG,SAC5BD,EAAYL,MAAM1G,IAAIc,EAAK1D,WAAY0D,EAAK1D,YAC5C0D,EAAKmG,YAAcF,EAAYnV,MAC/BkP,EAAKoG,aAAeH,EAAYI,OAChCrG,EAAKvE,OAASwK,EAAYnV,MAAQ,EAClCkP,EAAKmF,SAAWA,EAETc,GA7BuB,8BAkClC,IAAIK,EAAclZ,OAAOwV,KAAK4C,OAAOvJ,UAAUhR,EAAEiI,kBAcjD,OAbApG,EAAS,IAAIM,OAAOwV,KAAK2C,OAAOe,EAAYb,SAASzF,EAAKzD,aACnD5L,SAASuO,IAAIjU,EAAE8C,kBAAmB9C,EAAE+C,oBAC3ClB,EAAO4Y,OAAOxG,IAAI,GAAK,IACvBpS,EAAO8Y,MAAM1G,IAAIc,EAAK1D,WAAY0D,EAAK1D,YACvCxP,EAAOoZ,SAAWlG,EAAKkG,SACvBpZ,EAAOwV,SAAU,EACjBtC,EAAKmG,YAAcrZ,EAAOgE,MAC1BkP,EAAKoG,aAAetZ,EAAOuZ,OAC3BrG,EAAKvE,OAAS3O,EAAOgE,MAAQ,EAC7BkP,EAAKmF,SAAW/X,OAAOC,MAAMsT,SAC7BY,EAAgBrC,IAAIc,EAAKmF,SAAUrY,GACnCM,OAAOC,MAAMC,OAAOmU,iBAAiBvB,MAAM4C,SAAShW,GAE7CA,EAOF,SAASyZ,GAAwBzZ,GACtC,IAAM0Z,EAAY1Z,EAAOgE,MACnB2V,EAAa3Z,EAAOuZ,OAC1BvZ,EAAO8Y,MAAM1G,IAAI,EAAG,GACpB,IAAMpO,EAAQhE,EAAOgE,MACfuV,EAASvZ,EAAOuZ,OAGtB,OAFAvZ,EAAOgE,MAAQ0V,EACf1Z,EAAOuZ,OAASI,EACT,CAAC3V,QAAOuV,UAGV,SAASK,GAAgB1G,EAAM7E,EAAQwL,GAC5C,IAAMC,EAAavE,GAAcrC,GACjC2G,EAAajB,OAAOxG,IAAI,GAAK,IAF6B,MAGlCqH,GAAwBK,GAAzC9V,EAHmD,EAGnDA,MAAOuV,EAH4C,EAG5CA,OAERQ,EAAwC,IAA1B7c,KAAKqC,IAAIyE,EAAOuV,GACpCM,EAAa7V,MAAQ+V,EACrBF,EAAaN,OAASQ,EACtB1L,EAAOM,OAAUoL,EAAc7G,EAAK1D,WAAc,EAG7C,SAASwK,GAAgB9G,EAAM7E,GACpC,IAAM4L,EAAU/G,EAAKgH,GAAK,IAAM7L,EAAOK,WAEnCmL,EAAevZ,OAAOC,MAAMC,OAAOkU,kBAAkBkC,IAAIqD,GAC7D,GAAIJ,EAEF,OADAD,GAAgB1G,EAAM7E,EAAQwL,GACvBA,EAGT,IAAMC,EAAavE,GAAcrC,GAC7BsG,EAAclZ,OAAOwV,KAAK4C,OAAOvJ,UAAUhR,EAAEiI,kBAKjD,OAHAwT,GAAgB1G,EAAM7E,EADtBwL,EAAe,IAAIvZ,OAAOwV,KAAK2C,OAAOe,EAAYb,SAAStK,EAAOK,cAElEoL,EAAW9D,SAAS6D,GACpBvZ,OAAOC,MAAMC,OAAOkU,kBAAkBtC,IAAI6H,EAASJ,GAC5CA,EAIF,SAAShK,GAAWsK,EAAUC,GACnC,IAAIlH,EAAOS,KAAOC,UAAUuG,GAC5BjH,EAAKgH,GAAK5Z,OAAOC,MAAMsT,SACvBX,EAAKmH,8BAAgC,EACrC,IAAK,IAAI/D,EAAE,EAAGA,EAAEpD,EAAK7D,MAAMoH,OAAQH,IAAK,CACtC,IAAMjH,EAAQ6D,EAAK7D,MAAMiH,GACzBjH,EAAM6K,GAAK5Z,OAAOC,MAAMsT,SACpBX,EAAKmH,6BAA+B,GAAKhL,EAAMrD,OAAS7N,EAAEmM,8BAC5D4I,EAAKmH,6BAA+B/D,GAaxC,OAVApD,EAAKkH,MAAQA,EACblH,EAAKoH,GAAK,EACVpH,EAAKqH,GAAK,EACVrH,EAAKrV,EAAIyC,OAAOC,MAAM8U,WACtBnC,EAAKpV,EAAIwC,OAAOC,MAAM+U,WACtBpC,EAAKmF,SAAW,KAChBnF,EAAKsH,OAAQ,EACbtH,EAAKmG,YAAc,KACnBnG,EAAKkG,SAAW,EAChB9Y,OAAOC,MAAMC,OAAO+T,OAAOnB,MAAMzS,KAAKuS,GAC/BA,EAGF,SAASuH,GAAYN,EAAUtc,EAAGC,GACvC,IAAI0Z,EAAQ3H,GAAWsK,EAAUhc,EAAEuK,OAKnC,OAJApI,OAAOC,MAAM6S,MAAMzS,KAAK6W,GACxBA,EAAM3Z,EAAIA,EACV2Z,EAAM1Z,EAAIA,EACV0Z,EAAM7I,OAAS,GACR6I,EAGF,SAAS/B,KAEdgF,GAAYtc,EAAE4S,sBAAuB,KAAM,KAC3C0J,GAAYtc,EAAE4S,sBAAuB,EAAG,MACxC0J,GAAYtc,EAAE4S,uBAAwB,KAAM,GAC5C0J,GAAYtc,EAAE4S,sBAAuB,GAAI,MALZ,qBAOZ5S,EAAEkU,gBAPU,IAO7B,2BAAmC,CAAC,IAAD,EAA1BgE,EAA0B,uBACTA,EAAKxD,QADI,IACjC,2BACE,IADoC,IAA3B6H,EAA0B,QAC1BpE,EAAI,EAAGA,EAAIoE,EAAU5H,MAAOwD,IAAK,CAAC,IAAD,EAC3BU,GAAU,KAAM7Y,EAAEiL,yBAA0BjL,EAAEkL,wBAAyBgN,EAAK9D,QAAS8D,EAAK7D,SAAlG3U,EADmC,EACnCA,EAAGC,EADgC,EAChCA,EACR2c,GAAYC,EAAU3H,KAAMlV,EAAGC,IAJF,gCAPN,+BAiBxB,SAAS4X,KACd,IAAIO,EAAY3V,OAAOC,MAAMC,OAAOmU,iBAAiBE,QACjD8F,EAAmB,IAAIra,OAAOwV,KAAKC,UACvCE,EAAUD,SAAS2E,GAGnB,IAAIC,EAAO,IAAIta,OAAOwV,KAAK+E,SAC3BD,EAAKE,SAAS,EAAG3c,EAAE8G,cAAgB9G,EAAEkH,eAAgBlH,EAAEiH,cAAejH,EAAE8G,eACxE2V,EAAKG,YAAa,EAClBH,EAAKI,eAAgB,EACrBL,EAAiB3E,SAAS4E,GAC1BD,EAAiBC,KAAOA,EAGxB,IAAIK,EAAI,IAAI3a,OAAOwV,KAAK+E,SACxBF,EAAiB3E,SAASiF,GAC1B3a,OAAOC,MAAMC,OAAOuU,gBAAkBkG,EAMjC,SAASC,GAAMnY,GACpB,IAAIlF,EAAIkF,EAAMoY,KAAKC,OAAOvd,EACtBC,EAAIiF,EAAMoY,KAAKC,OAAOtd,EACpB2C,EAAcH,OAAOC,MAAMC,OAAOC,YACpC4a,EAAUxd,EAAI4C,EACd6a,EAAUxd,EAAI2C,EACb4a,EAAUld,EAAEiH,eAAmBkW,EAAWnd,EAAE8G,cAAgB9G,EAAEkH,gBACjEkW,EAAIC,eAAeH,EAASC,GAIzB,SAASG,GAAgBC,GAC9B,IAAMnb,EAAQD,OAAOC,MACrBA,EAAMC,OAAOwT,UAAY0H,EACrBA,IAAavd,EAAEyG,WAAWE,KAC5ByW,EAAII,gBACJpb,EAAMC,OAAO0T,SAAWqH,EAAIK,SACnBF,IAAavd,EAAEyG,WAAWG,QACnCiU,EAAO6C,mBACPtb,EAAMC,OAAO0T,SAAW8E,EAAO8C,YAE/Bvb,EAAMC,OAAO0T,SAAW,KAOrB,SAAS6H,KACd,IAD6B,EACvBxb,EAAQD,OAAOC,MADQ,eAEVA,EAAM8S,SAFI,IAE7B,2BAAkC,CAAC,IAAD,EAAzBtV,EAAyB,uBACXA,EAAOoa,WADI,IAChC,2BAAuC,SACxBnM,OAAS7N,EAAEoL,qBACtByS,GAAaje,EAAQ,WAAYI,EAAEwL,qBACnCqS,GAAaje,EAAQ,OAAQI,EAAEyL,iBAC/BoS,GAAaje,EAAQ,UAAWI,EAAE0L,sBALN,8BAShC,GAAuC,IAAlC9L,EAAOoR,UAAU+I,IAAItP,UACU,IAA9B7K,EAAOoR,UAAU+I,IAAIrP,MACY,IAAjC9K,EAAOoR,UAAU+I,IAAIpP,QAAgB,CACzC,IADyC,EACnC0P,EAAeF,GAAgBva,GADI,eAEZya,EAAayD,UAFD,IAEzC,2BAAoD,CAAC,IAA1CC,EAAyC,QAE9CA,EAAeC,iBACjBD,EAAeC,eAAiB,IALK,iCAbhB,+BAyB/B,SAASH,GAAaje,EAAQqe,EAAcrd,GACtChB,EAAOoR,UAAU+I,IAAIkE,GAAgB,IACvCre,EAAOoR,UAAU+I,IAAIkE,IAAiBrd,EACtChB,EAAOoR,UAAU8I,OAAOmE,IAAiBrd,EACrChB,EAAOoR,UAAU+I,IAAIkE,IAAiB,IACxCre,EAAOoR,UAAU+I,IAAIkE,GAAgB,GAM3C,SAAqBrd,EAAQhB,GAC3B,IAAI0V,EAAanT,OAAOC,MAAMkT,WACxBzB,EAAKyB,EAAWzB,GAAGjU,EAAO2Q,aAAe3P,EAC3Csd,EAAY5I,EAAWC,SAAS3V,EAAO2Q,YAAY,GACnD2N,GAAcA,EAAUrK,IAAMA,IAChCsK,GAAaD,GAEb5I,EAAWC,SAAS3V,EAAO2Q,YAAY6N,SAXvCC,CAAYzd,EAAQhB,IAejB,SAAS0e,GAAWvJ,GACzB,IAAIO,EAAanT,OAAOC,MAAMkT,WAC1BzB,EAAKyB,EAAWzB,GAAGkB,EAAKpH,MAO5B,GANKkG,EAGHA,GAAM,EAFNA,EAAK,EAIPyB,EAAWzB,GAAGkB,EAAKpH,MAAQkG,EACvByB,EAAWC,SAASR,EAAKpH,MAAO,CAClC,IAAIuQ,EAAY5I,EAAWC,SAASR,EAAKpH,MAAM,GAC3CuQ,GAAcA,EAAUrK,IAAMA,IAChCsK,GAAaD,GAEb5I,EAAWC,SAASR,EAAKpH,MAAMyQ,UAK9B,SAASD,GAAaD,GAC3B7F,EAAMjT,UAAU,aAAe8Y,EAAUpK,IAAInG,MAC7C,IAAI2H,EAAanT,OAAOC,MAAMkT,WAC1B4I,EAAUpK,IAAIlG,UAAY5N,EAAE+M,UAC9BuI,EAAWpE,MAAM1O,KAAK0b,EAAUpK,KACvBoK,EAAUpK,IAAIlG,UAAY5N,EAAEgN,SACrCsI,EAAWP,KAAKvS,KAAK0b,EAAUpK,KAE/B6F,QAAQC,KAAK,oCAAsCsE,EAAUpK,IAAIlG,QAAU,cAAesQ,GASvF,SAASK,GAAU3e,EAAQmV,EAAM/D,GACtC,IAAIvG,EAAW,EACXC,EAAO,EACPC,EAAU,EAWd,OAVI/K,IACF6K,GAAY7K,EAAOoR,UAAU8I,OAAOrP,SACpCC,GAAQ9K,EAAOoR,UAAU8I,OAAOpP,KAChCC,GAAW/K,EAAOoR,UAAU8I,OAAOnP,SAEjCoK,IACFtK,GAAYsK,EAAK/D,UAAUvG,SAC3BC,GAAQqK,EAAK/D,UAAUtG,KACvBC,GAAWoK,EAAK/D,UAAUrG,SAEpBF,GAAYuG,EAAUvG,UACxBC,GAAQsG,EAAUtG,MAClBC,GAAWqG,EAAUrG,QAWtB,SAAS6T,GAAgB5e,EAAQmV,EAAM/D,GAC5CyN,GAAY7e,EAAQmV,EAAM,WAAY/D,EAAUvG,UAChDgU,GAAY7e,EAAQmV,EAAM,OAAQ/D,EAAUtG,MAC5C+T,GAAY7e,EAAQmV,EAAM,UAAW/D,EAAUrG,SAG1C,SAAS8T,GAAY7e,EAAQmV,EAAMkJ,EAAcrd,GACtD,IAAI8d,GAAQ9d,EACZ,GAAIhB,EAAQ,CAEV,IADA8e,EAAO9e,EAAOoR,UAAU8I,OAAOmE,GAAgBrd,IACnC,EAEV,YADAhB,EAAOoR,UAAU8I,OAAOmE,IAAiBrd,GAIzChB,EAAOoR,UAAU8I,OAAOmE,GAAgB,EAGxClJ,GACFA,EAAK/D,UAAUiN,GAAgBlJ,EAAK/D,UAAUiN,GAAgBS,EAC1D3J,EAAK/D,UAAUiN,GAAgB,GACjCtE,QAAQC,KAAK,mBAAqB7E,EAAK/D,UAAUiN,GAAgB,IAAMA,IAEhES,EAAO,IAChB9e,EAAOoR,UAAU8I,OAAOmE,GAAgBre,EAAOoR,UAAU8I,OAAOmE,GAAgBS,EAChF/E,QAAQC,KAAK,qBAAuBha,EAAOoR,UAAU8I,OAAOmE,GAAgB,IAAMA,IAI/E,SAASzG,KACdrV,OAAOC,MAAMC,OAAO4T,eAAiB9T,OAAOwV,KAAKgH,OAAOC,OAAO5N,UAAUhR,EAAEmK,YAAY0U,YAEvFC,KAGK,SAASA,KACd,IAAIjd,EAAS,IAAIM,OAAOwV,KAAKoH,eAAe5c,OAAOC,MAAMC,OAAO4T,eAAe+I,WAAWhf,EAAEoK,QAW5F,OAVAvI,EAAOmc,eAAiB,GACxBnc,EAAOod,MAAO,EACdpd,EAAO4Y,OAAOxG,IAAI,GAAK,IACvBpS,EAAO8Y,MAAM1G,IAAI,EAAG,GACpBpS,EAAOnC,EAAIM,EAAE8C,kBACbjB,EAAOlC,EAAIK,EAAE8C,kBACbjB,EAAOod,MAAO,EACdpd,EAAOwV,SAAU,EACjBlV,OAAOC,MAAMC,OAAO6T,WAAW1T,KAAKX,GACpCM,OAAOC,MAAMC,OAAOmU,iBAAiBN,WAAW2B,SAAShW,GAClDA,ECvpBF,SAAS2b,KACd7D,QAAQuF,IAAI,YAIP,SAASzB,GAAQ0B,GAClBA,EAAQ,OACVxF,QAAQuF,IAAI,sBAAwBC,GAEtC,IAAI/c,EAAQD,OAAOC,MACf2S,EAAO5S,OAAOC,MAAM2S,KAMxB,GAHAqK,KAGIrK,EAAKsH,MAAO,CACdgD,GAAUtK,IAEN3S,EAAMC,OAAOsT,KAAK2J,KAAKhb,QAAUlC,EAAMC,OAAOsT,KAAKxW,EAAEmF,SACvDib,GAASxK,GAAM,IAEb3S,EAAMC,OAAOsT,KAAK6J,MAAMlb,QAAUlC,EAAMC,OAAOsT,KAAK8J,EAAEnb,SACxDib,GAASxK,GAAM,IAEb3S,EAAMC,OAAOsT,KAAK+J,GAAGpb,QAAUlC,EAAMC,OAAOsT,KAAKgK,EAAErb,SAue3D,SAAoByQ,GAClB,IAAIlE,EAAakE,EAAKlE,WAClB+O,EAAUC,GAAS9K,EAAM/U,EAAE0M,iBAC3BkT,IACF/O,GAAc+O,EAAQ1R,YAExB6G,EAAKoH,IAAMtL,EAAa9R,KAAKqB,IAAI2U,EAAKkG,UACtClG,EAAKqH,IAAMvL,EAAa9R,KAAKoB,IAAI4U,EAAKkG,UA7elC6E,CAAW/K,IAET3S,EAAMC,OAAOsT,KAAKoK,KAAKzb,QAAUlC,EAAMC,OAAOsT,KAAKqK,EAAE1b,SA8e7D,SAAmByQ,GACjB,IAAIkL,EAAQJ,GAAS9K,EAAM/U,EAAEiM,kBACzBgU,IACEA,EAAMnS,cAAgB,GACxBiH,EAAKoH,IAAMpH,EAAKoH,GAAK8D,EAAMnS,cAC3BiH,EAAKqH,IAAMrH,EAAKqH,GAAK6D,EAAMnS,gBAG3BiH,EAAKoH,GAAK,EACVpH,EAAKqH,GAAK,IAtfV8D,CAAUnL,GAER3S,EAAMC,OAAOsT,KAAKwK,MAAM7b,QAC1B8b,GAAkBrL,EAAM,KAEtB3S,EAAMC,OAAOsT,KAAKjW,EAAE4E,QACtB+b,GAAoBtL,GAElB3S,EAAMC,OAAOsT,KAAK2K,EAAEhc,QACtBic,GAAWxL,GAAM,GAEf3S,EAAMC,OAAOsT,KAAK6K,EAAElc,QACtBic,GAAWxL,GAAM,GAInB,IA7Bc,EA6BV0L,EAAgB,GA7BN,eA8BKre,EAAMC,OAAO+T,OAAOlB,SA9BzB,IA8Bd,2BAAgD,CAAC,IAAxCtV,EAAuC,QAC1C8gB,GAAa3L,EAAMnV,IACrB6gB,EAAcje,KAAK5C,IAhCT,8BAqCd,cAAmB6gB,EAAnB,eAAkC,CAA7B,IAAI7gB,EAAM,KACT+gB,EAAOtI,EAAM5Y,YAAYsV,EAAKrV,EAAGqV,EAAKpV,EAAGC,GAC7CmV,EAAKoH,IAAMwE,EAAKjhB,EAChBqV,EAAKqH,IAAMuE,EAAKhhB,EAIlBoV,EAAKrV,GAAKqV,EAAKoH,GACfpH,EAAKpV,GAAKoV,EAAKqH,GACfha,EAAM4S,KAAKtV,EAAIqV,EAAKrV,EACpB0C,EAAM4S,KAAKrV,EAAIoV,EAAKpV,EAEpB,IAAIgc,EAAaiF,EAAKxJ,cAAcrC,GAKpC,GAJA4G,EAAWV,SAAWlG,EAAKkG,UAItB7Y,EAAMC,OAAOwU,aAAc,sBAEX4J,GAFW,IAE9B,2BAAkC,CAAC,IAA1B7gB,EAAyB,QAChC,GAAIihB,GAA0B9L,EAAM4G,EAAY/b,GAE9C,YADAkhB,GAAS/L,EAAMnV,IAJW,mDASZwC,EAAMC,OAAO+T,OAAOnB,OATR,IAS9B,2BAA6C,CAAC,IAArCoE,EAAoC,QACvCA,EAAMgD,OAAS0E,GAAyBhM,EAAM4G,EAAYtC,IAC5D2H,GAAajM,EAAMsE,IAXO,iCAyapC,WACE,IADwB,EACpBtE,EAAO5S,OAAOC,MAAM2S,KADA,eAEL5S,OAAOC,MAAMC,OAAO6T,YAFf,IAExB,2BAAmD,CAAC,IAA3CrU,EAA0C,QACjDA,EAAOnC,EAAKmC,EAAOa,QAAUqS,EAAKrV,EAAKM,EAAE8C,kBACzCjB,EAAOlC,EAAKkC,EAAOc,QAAUoS,EAAKpV,EAAKK,EAAE+C,oBAJnB,+BAxZxBke,GACAC,GAAenM,GACfoM,KAEI/e,EAAMC,OAAOwU,eACfzU,EAAMC,OAAOwU,cAAe,GAQzB,SAASuI,KACd,IAAMhJ,EAASjU,OAAOC,MAAMC,OAAO+T,OAC7BrB,EAAO5S,OAAOC,MAAM2S,KACpBqM,EAAOrM,EAAKrV,EAAIM,EAAE+G,aAAe,EACjCsa,EAAOtM,EAAKrV,EAAIM,EAAE+G,aAAe,EACjCua,EAAOvM,EAAKpV,EAAIK,EAAEgH,cAAgB,EAClCua,EAAOxM,EAAKpV,EAAIK,EAAEgH,cAAgB,EAExCoP,EAAOlB,QAAU,GARW,qBAUP/S,OAAOC,MAAM8S,SAVN,IAU5B,2BAA2C,CAAC,IAAjCtV,EAAgC,QACpCA,EAAOF,EAAIE,EAAO4Q,QAAU4Q,GAAUxhB,EAAOF,EAAIE,EAAO4Q,QAAU6Q,GACpEzhB,EAAOD,EAAIC,EAAO4Q,QAAU8Q,GAAU1hB,EAAOD,EAAIC,EAAO4Q,QAAU+Q,GACnEnL,EAAOlB,QAAQ1S,KAAK5C,IAbI,8BAkB5BwW,EAAOnB,MAAQ,CAAC9S,OAAOC,MAAM2S,MAlBD,qBAmBT5S,OAAOC,MAAM6S,OAnBJ,IAmB5B,2BAAuC,CAAC,IAA7BF,EAA4B,QAChCA,EAAKrV,EAAIqV,EAAKvE,QAAU4Q,GAAUrM,EAAKrV,EAAIqV,EAAKvE,QAAU6Q,GAC5DtM,EAAKpV,EAAIoV,EAAKvE,QAAU8Q,GAAUvM,EAAKpV,EAAIoV,EAAKvE,QAAU+Q,GAC3DnL,EAAOnB,MAAMzS,KAAKuS,IAtBM,+BA8BvB,SAASyM,KACd,IADiC,EAC3BzM,EAAO5S,OAAOC,MAAM2S,KADO,eAGd5S,OAAOC,MAAM8S,SAHC,IAGjC,2BAAyC,CACvCwL,GAAa3L,EAD0B,UAHR,mDAMd5S,OAAOC,MAAM6S,OANC,IAMjC,2BAAuC,CAAC,IAA7BF,EAA4B,QACjCA,EAAKmF,WACP0G,EAAKxJ,cAAcrC,GAAMsC,SAAU,EACnCtC,EAAKmF,SAAW,OATa,8BAYjCkF,KAEAqC,EAAGC,aACHP,KAMK,SAASQ,KAAiB,qBAEdxf,OAAOC,MAAMC,OAAO+T,OAAOnB,OAFb,IAE/B,2BAAmD,CACjD2M,GADiD,UAFpB,+BAU1B,SAASA,GAAY7M,GAAO,IAAD,iBACdA,EAAK7D,OADS,IAChC,2BAA8B,CAAC,IAAtBA,EAAqB,QAExBA,EAAMjC,OACRiC,EAAMjC,MAAQ,GAGZiC,EAAMY,QAAUZ,EAAMY,OAAO7C,OAC/BiC,EAAMY,OAAO7C,MAAQ,GAEnBiC,EAAMhB,QAAUgB,EAAMhB,OAAOC,SAC/Be,EAAMhB,OAAOd,UAAY,EACrB8B,EAAMhB,OAAOd,UAAY,IAC3B8B,EAAMhB,OAAOd,SAAW,EACxByS,GAAc9M,EAAM7D,EAAMhB,WAdA,+BAoB3B,SAAS4R,GAAiB/M,GAAO,IAAD,iBACnBA,EAAK7D,OADc,IACrC,2BAA8B,CAAC,IAAtBA,EAAqB,QACvBA,EAAMrD,OAAS7N,EAAEkM,2BAA+BgF,EAAMjC,KAAO,IAChEiC,EAAMjC,KAAO,IAHoB,+BAQhC,SAASoQ,GAAUtK,GAAO,IAAD,iBACZA,EAAK7D,OADO,IAC9B,2BAA8B,CAAC,IAAtB6Q,EAAqB,QAC5B,GAAKA,EAAMlU,OAAS7N,EAAEsM,yBAA6ByI,EAAK3E,MAAQ2E,EAAK1E,SAAW,CAC9E,IAAItC,EAAO,CAACtD,SAAU,EAAGC,KAAM,EAAGC,QAAS,GACvCiW,EAAKrC,UAAU,KAAMxJ,EAAMhH,KAC7BgH,EAAK3E,OAAS2R,EAAMnQ,YACpBgP,EAAKpC,gBAAgB,KAAMzJ,EAAMhH,SAE1BgU,EAAMlU,OAAS7N,EAAEuM,0BAC1ByV,GAAoBjN,EAAMgN,EAAMjQ,SATN,+BAkBzB,SAASkQ,GAAoBjN,EAAMjD,GAExC,KAAIA,EAAO7C,KAAO,GAAlB,CAGA,IALgD,EAK5CmK,EAAe,KACfE,EAAmB,KANyB,eAO9BnX,OAAOC,MAAMC,OAAO+T,OAAOnB,OAPG,IAOhD,2BAAoD,CAAC,IAA5CoE,EAA2C,QAClD,GAAIA,EAAMgD,OAAShD,EAAM4C,QAAUjc,EAAEuK,MAAO,CAC1C,IAAI0O,EAAOZ,EAAM3Z,gBAAgBqW,EAAKrV,EAAGqV,EAAKpV,EAAG0Z,EAAM3Z,EAAG2Z,EAAM1Z,KAC3DyZ,GAAiBH,EAAOK,KAC3BF,EAAeC,EACfC,EAAmBL,KAZuB,8BAgBhD,GAAIG,GAAiBE,GAAoB2I,GAAYnQ,GAAU,CAC7D,IAAMoQ,EAAUnN,EAAKkG,SACrBlG,EAAKkG,SAAW5C,EAAMhZ,gBAAgBN,KAAKgB,MAAMqZ,EAAazZ,EAAIoV,EAAKpV,EAAGyZ,EAAa1Z,EAAIqV,EAAKrV,IAChGyiB,GAAWrQ,EAAQiD,EAAM,IACzBA,EAAKkG,SAAWiH,IAIb,SAAShB,GAAenM,GAC7B,IAAIiB,EAAW7T,OAAOC,MAAMC,OAAO2T,SACnCA,EAASoM,aAAa1iB,EAAK,IAAMqV,EAAKrV,EAAKM,EAAE8C,kBAC7CkT,EAASoM,aAAaziB,EAAK,IAAMoV,EAAKpV,EAAKK,EAAE+C,mBAOxC,SAAS2d,GAAa3L,EAAMnV,GAEjC,GAAKmV,EAAKrV,EAAIM,EAAE8C,kBAAoBlD,EAAO4Q,OAAS5Q,EAAOF,GACxDqV,EAAKrV,EAAIM,EAAE8C,kBAAoBlD,EAAO4Q,OAAS5Q,EAAOF,GACtDqV,EAAKpV,EAAIK,EAAE+C,mBAAqBnD,EAAO4Q,OAAS5Q,EAAOD,GACvDoV,EAAKpV,EAAIK,EAAE+C,mBAAqBnD,EAAO4Q,OAAS5Q,EAAOD,EAAI,CAE5D,GAAIC,EAAOsa,SAAU,CACnB,IAAMrY,EAAS+e,EAAKzG,gBAAgBva,GAChCiC,EAAOwV,UACTxV,EAAOwV,SAAU,GAGrB,OAAO,EAGT,IAAMxV,EAAS+e,EAAKzG,gBAAgBva,GAKpC,OAJAiC,EAAOwV,SAAU,EAEjBxV,EAAOnC,EAAKE,EAAOF,EAAIqV,EAAKrV,EAAKM,EAAE8C,kBACnCjB,EAAOlC,EAAKC,EAAOD,EAAIoV,EAAKpV,EAAKK,EAAE+C,oBAC5B,EAOF,SAASsf,GAAgBtN,GAAO,IAAD,iBAChBA,EAAK7D,OADW,IACpC,2BAAgC,CAAC,IAAtBA,EAAqB,QAC9B,GAAIA,EAAMhB,QAAUgB,EAAMhB,OAAOC,OAC/B,OAAOe,EAAMhB,QAHmB,8BAMpC,OAAO,KAOF,SAASoS,GAAwBvN,GAAO,IAAD,iBACxBA,EAAK7D,OADmB,IAC5C,2BAAgC,CAAC,IAAtBA,EAAqB,QAC9B,GAAIA,EAAMhB,SAAWgB,EAAMhB,OAAOC,QAAyB,IAAfe,EAAMjC,KAChD,OAAOiC,GAHiC,8BAM5C,OAAO,KAMF,SAASqR,GAAexN,GAAO,IAAD,iBACfA,EAAK7D,OADU,IACnC,2BAAgC,CAAC,IAAtBA,EAAqB,QAC9B,GAAIA,EAAMrD,OAAS7N,EAAEwM,wBACnB,OAAO0E,GAHwB,8BAMnC,OAAO,KAOF,SAASsR,GAAkBzN,GAChC,IADsC,EAClC7E,EAAS,KADyB,eAElB6E,EAAK7D,OAFa,IAEtC,2BAAgC,CAAC,IAAtBA,EAAqB,QAC9B,GAAIA,EAAMhB,SACRA,EAASgB,EACLA,EAAMhB,OAAOC,QACf,OAAOD,GANyB,8BAUtC,OAAOA,EAIF,SAAS2Q,GAA0B9L,EAAM4G,EAAY/b,GAC1D,IAAMsQ,EAASmS,GAAgBtN,GAC/B,GAAI7E,EAEF,OAAOmI,EAAM3Z,gBAAgBqW,EAAKrV,EAAGqV,EAAKpV,EAAGC,EAAOF,EAAGE,EAAOD,GAAMC,EAAO4Q,OAASN,EAAOM,OAG7F,IAPkE,EAO9DjO,EAAkB8V,EAAMzW,cAAcmT,EAAKrV,EAAGqV,EAAKpV,EAAGgc,GAPQ,eAQhDpZ,GARgD,IAQlE,2BAAmC,CAAC,IAA3BkgB,EAA0B,QAEjC,GADWpK,EAAM3Z,gBAAgB+jB,EAAM,GAAIA,EAAM,GAAI7iB,EAAOF,EAAGE,EAAOD,GAC3DC,EAAO4Q,OAASxQ,EAAE4K,gBAC3B,OAAO,GAXuD,8BAclE,OAAO,EAIF,SAASmW,GAAyBhM,EAAM4G,EAAYtC,GACzD,GAAItE,IAASsE,EACX,OAAO,EAET,IAAMnJ,EAASmS,GAAgBtN,GAC/B,GAAI7E,EAEF,OAAOmI,EAAM3Z,gBAAgBqW,EAAKrV,EAAGqV,EAAKpV,EAAG0Z,EAAM3Z,EAAG2Z,EAAM1Z,GAAM0Z,EAAM7I,OAASN,EAAOM,OAE1F,IATgE,EAS5DjO,EAAkB8V,EAAMzW,cAAcmT,EAAKrV,EAAGqV,EAAKpV,EAAGgc,GATM,eAU9CpZ,GAV8C,IAUhE,2BAAmC,CAAC,IAA3BkgB,EAA0B,QAEjC,GAAIpJ,EAAM7I,OAER,GADW6H,EAAM3Z,gBAAgB+jB,EAAM,GAAIA,EAAM,GAAIpJ,EAAM3Z,EAAG2Z,EAAM1Z,GACzD0Z,EAAM7I,OAASxQ,EAAE4K,gBAC1B,OAAO,GAfmD,8BAmBhE,OAAO,EAOT,SAASkW,GAAS/L,EAAMnV,GAEtB,IAAI8iB,EAAYrK,EAAMhZ,gBAAgBN,KAAKgB,MAAMgV,EAAKpV,EAAIC,EAAOD,EAAGoV,EAAKrV,EAAIE,EAAOF,IAChFijB,EAAU5jB,KAAK6jB,IAAI7N,EAAKkG,SAAWyH,GACnCvT,EAAQpQ,KAAK6jB,IAAI7N,EAAKoH,IAAMpd,KAAK6jB,IAAI7N,EAAKqH,IAE1CyG,GAAYF,EAAU5N,EAAK3D,YAAgBuR,EAAqB,EAAV5jB,KAAKS,GAASuV,EAAK3D,aAC9DjC,EAAQ4F,EAAK5D,WACtB2R,IAAkBjD,GAAS9K,EAAM/U,EAAE4M,uBAIzC,GAFAmI,EAAKoH,GAAK,EACVpH,EAAKqH,GAAK,GACLyG,IAAYC,EAAe,CAE9B,IAAIC,EAAYhkB,KAAKqC,IAAI+N,EAAQ4F,EAAK5D,WAAY,GAC9C6R,EAAajkB,KAAKqC,IAAIuhB,EAAU5N,EAAK3D,WAAY,GACjD4R,EAAajkB,KAAKS,KACpBwjB,EAAwB,EAAVjkB,KAAKS,GAAUmjB,EAAU5N,EAAK3D,YAI9C6R,GAAWlO,GAFGgO,EAAY,EAAKC,GACZjO,EAAK1E,SACF6S,IAGxB,IAAMhT,EAASmS,GAAgBtN,GAK/B,GAJI7E,GACF2R,GAAc9M,EAAM7E,GAGlB6E,EAAK3E,MAAQ,EAAG,CAClBjO,OAAOC,MAAM+S,eAAiBvV,EAC9BuC,OAAOC,MAAMgT,iBAAmBxV,EAEhC,IAAIS,EAAMgY,EAAM/X,YAAYV,EAAOF,EAAGE,EAAOD,EAAGoV,EAAKrV,EAAGqV,EAAKpV,GACzDwjB,EAAIvjB,EAAO4Q,OAASuE,EAAKmG,YAAc,EALzB,EAMC7C,EAAM1X,cAAcN,EAAK8iB,GAAvCtiB,EANa,EAMbA,KAAMC,EANO,EAMPA,KACXiU,EAAKrV,EAAIE,EAAOF,EAAImB,EACpBkU,EAAKpV,EAAIC,EAAOD,EAAImB,EACpBiU,EAAKkG,SAAW5a,EAChBT,EAAOqa,eAAiB5Z,EACxBugB,EAAKxJ,cAAcrC,GAAMkG,SAAW5a,EACpCmhB,KACAZ,EAAKtD,gBAAgBtd,EAAEyG,WAAWG,SAI/B,SAASwc,GAAmBrO,GACjC,IADuC,EACnClT,EAAS,KAD0B,eAEXM,OAAOC,MAAMC,OAAO6T,YAFT,IAEvC,2BAA4D,CAAC,IAApDmN,EAAmD,QAC1D,IAAKA,EAAgBhM,QAAS,CAC5BxV,EAASwhB,EACT,QALmC,8BAQlCxhB,IACHA,EAAS+e,EAAK9B,yBAEhB,IAAIwE,EAAanhB,OAAOC,MAAM2S,KAM9B,OALAlT,EAAOwV,SAAU,EACjBxV,EAAOa,QAAUqS,EAAKrV,EACtBmC,EAAOc,QAAUoS,EAAKpV,EACtBkC,EAAOnC,EAAKqV,EAAKrV,EAAI4jB,EAAW5jB,EAAKM,EAAE8C,kBACvCjB,EAAOlC,EAAKoV,EAAKpV,EAAI2jB,EAAW3jB,EAAKK,EAAE+C,mBAChClB,EAQF,SAAS0hB,GAAYxO,EAAMyO,GAC5BzO,EAAKkH,QAAUjc,EAAEuK,OACnBqW,EAAKtC,WAAWvJ,GAElB,IAAIsO,EAAkBD,GAAmBrO,GACtB6L,EAAKxJ,cAAcrC,GAC3BsC,SAAU,EACrBtC,EAAKsH,OAAQ,EACbtH,EAAKmF,SAAW,KAChBmJ,EAAgBI,OAEhBJ,EAAgBK,OAAS,WACvBL,EAAgBM,OAChBN,EAAgBhM,SAAU,EACtBmM,GACFA,KAKN,SAASN,KAEP,IAAInO,EAAO5S,OAAOC,MAAM2S,KACpBnV,EAASuC,OAAOC,MAAM+S,eAS1B,GAPAJ,EAAKhE,aAAe,EACpBgE,EAAK/D,UAAY,CAACvG,SAAU,EAAGC,KAAM,EAAGC,QAAS,GACjDoK,EAAK7D,MAAQ,GACb6D,EAAK1E,SAAW,EAChB0E,EAAK3E,MAAQ,GAGRxQ,GAAuC,IAA5BA,EAAOoa,UAAU1B,OAAe,sBAE3BnW,OAAOC,MAAM8S,SAFc,IAE9C,2BAAyC,CAAC,IAAjCtV,EAAgC,QACvC,GAAIA,EAAOoa,UAAU1B,OAAS,EAAG,CAC/BnW,OAAOC,MAAM+S,eAAiBvV,EAC9B,QAL0C,8BASzCA,IACHuC,OAAOC,MAAM+S,eAAiBhT,OAAOC,MAAM8S,QAAQ,IAtBpC,MAyBI2F,EAAO+I,qBAAqBhkB,EAAQmV,EAAMnV,EAAOqa,eAAgB,GAAI,GAAvFva,EAzBc,EAyBdA,EAAGC,EAzBW,EAyBXA,EAAGsb,EAzBQ,EAyBRA,SACXlG,EAAKrV,EAAIA,EACTqV,EAAKpV,EAAIA,EACToV,EAAKoH,GAAK,EACVpH,EAAKqH,GAAK,EACVrH,EAAKkG,SAAWA,EAChBuG,KACAZ,EAAKtD,gBAAgBtd,EAAEyG,WAAWG,QAepC,SAAS2Y,GAASxK,EAAMuK,GACtB,IAAIxO,EAAYiE,EAAKjE,UACjB+S,EAAchE,GAAS9K,EAAM/U,EAAE0M,iBAC/BmX,IACF/S,GAAa+S,EAAY3V,YAE3B6G,EAAKkG,SAAW5C,EAAMhZ,gBAAgB0V,EAAKkG,SAAWnK,GAAawO,GAAQ,EAAI,IA2BjF,SAASiB,GAAWxL,EAAMuK,GACxB,IAAIwE,EAAWjE,GAAS9K,EAAM/U,EAAEoM,qBAChC,GAAI0X,EAAU,CACZ,IAAIzjB,EAAMgY,EAAMhZ,gBAAgB0V,EAAKkG,UAAaqE,GAAQ,EAAI,GAAKvgB,KAAKS,GAAK,GACvEukB,EAAUD,EAASnV,YAAc5P,KAAKqB,IAAIC,GAC1C2jB,EAAUF,EAASnV,YAAc5P,KAAKoB,IAAIE,GAC5CyjB,EAASlV,aAAe5O,EAAE6M,iBAC5BkI,EAAKoH,IAAM4H,EACXhP,EAAKqH,IAAM4H,GACFF,EAASlV,aAAe5O,EAAE8M,cACnCiI,EAAKrV,GAAKqkB,EACVhP,EAAKpV,GAAKqkB,GAEVrK,QAAQC,KAAK,oCAAsCkK,EAASlV,aAQ3D,SAASuT,GAAWrQ,EAAQiD,EAAM1F,GACnCyC,GAAWA,EAAO7C,MAAQ,IAC5BgV,GAAWlP,EAAMjD,EAAQzC,GACzByC,EAAO7C,KAAO6C,EAAO9C,UAIlB,SAASoR,GAAkBrL,EAAM1F,GACtC,IAAI6U,EAAMrE,GAAS9K,EAAM/U,EAAEkM,2BACvBgY,GACF/B,GAAW+B,EAAKnP,EAAMmP,EAAI7U,OAAS6U,EAAI7U,OAASA,GAI7C,SAAS8U,GAAmBpP,GACjC,IAAKA,EAAKmH,8BAAgCnH,EAAKmH,6BAA+B,EAE5E,OAAO2D,GAAS9K,EAAM/U,EAAEmM,6BAG1B,IAAM+E,EAAQ6D,EAAK7D,MAAM6D,EAAKmH,8BAC9B,OAAIhL,EAAMrD,OAAS7N,EAAEmM,6BACnB0O,EAAOuJ,2BAA2BrP,GAC3B8K,GAAS9K,EAAM/U,EAAEmM,8BAEnB+E,EAGF,SAASmP,GAAoBtL,GAClC,IAAIjD,EAASqS,GAAmBpP,GAChC,GAAIjD,GAAWA,EAAO7C,MAAQ,EAAI,CAChC,GAAI6C,EAAOJ,WAAY,CACrB,IAAKkP,EAAKrC,UAAU,KAAMxJ,EAAMjD,EAAOJ,WAAW7D,KAAKE,MAErD,OAEF6S,EAAKpC,gBAAgB,KAAMzJ,EAAMjD,EAAOJ,WAAW7D,KAAKE,MACxD,IAAMsW,EAAQzD,EAAKlP,WAAWI,EAAOJ,WAAW7D,KAAMkH,EAAKkH,OACrDqI,EAAc1D,EAAKxJ,cAAciN,GAEjCE,GADaxP,EAAKmG,aAA8B,EAAdnG,EAAKvE,QACL,EAAM6T,EAAMnJ,YAAc,EAAK,GACjE7a,EAAMyR,EAAOJ,WAAWrR,MAAQL,EAAEwN,kBAAoB6K,EAAMhZ,gBAAgB0V,EAAKkG,SAAWlc,KAAKS,IAAMuV,EAAKkG,SAV7F,EAWA5C,EAAM1X,cAAcN,EAAKkkB,GAAvC1jB,EAXc,EAWdA,KAAMC,EAXQ,EAWRA,KACbujB,EAAM3kB,EAAIqV,EAAKrV,EAAImB,EACnBwjB,EAAM1kB,EAAIoV,EAAKpV,EAAImB,EACfujB,EAAMxT,aACRwT,EAAMlI,GAAKpH,EAAKoH,GAChBkI,EAAMjI,GAAKrH,EAAKqH,IAElBiI,EAAMpJ,SAAW5C,EAAMhZ,gBAAgBgB,EAAMtB,KAAKS,IAClD8kB,EAAY5kB,EAAK2kB,EAAM3kB,EAAIyC,OAAOC,MAAM2S,KAAKrV,EAAKM,EAAE8C,kBACpDwhB,EAAY3kB,EAAK0kB,EAAM1kB,EAAIwC,OAAOC,MAAM2S,KAAKpV,EAAKK,EAAE+C,mBACpDuhB,EAAYjN,SAAU,EACtBlV,OAAOC,MAAM6S,MAAMzS,KAAK6hB,GAExB5C,EAAG+C,4BAA4BH,GAC/B5C,EAAGgD,0BAA0BJ,GAE/B,GAAIvS,EAAO5B,OAAQ,CAEjB,GAA8B,OAA1BmS,GAAgBtN,GAClB,OAEF2P,GAAa3P,EAAMjD,EAAO5B,QAE5B4B,EAAO7C,KAAO6C,EAAO9C,UAQlB,SAAS0V,GAAa3P,EAAM7E,GACH,OAA1BmS,GAAgBtN,IAIC6L,EAAK/E,gBAAgB9G,EAAM7E,GACnCmH,SAAU,EACvBnH,EAAOC,QAAS,EAChBD,EAAOd,SAAWc,EAAOI,YACzBJ,EAAOE,MAAQF,EAAOG,SAEtB0E,EAAKmG,YAA8B,EAAhBhL,EAAOM,OAC1BuE,EAAKoG,aAA+B,EAAhBjL,EAAOM,QAVzBmJ,QAAQuF,IAAI,wDAgBT,SAAS2C,GAAc9M,EAAM7E,GACb0Q,EAAK/E,gBAAgB9G,EAAM7E,GACnCmH,SAAU,EACvBnH,EAAOC,QAAS,EAEhB,IAAMwL,EAAaiF,EAAKxJ,cAAcrC,GACtCA,EAAKmG,YAAcS,EAAW9V,MAC9BkP,EAAKoG,aAAeQ,EAAWP,OAM1B,SAAS6I,GAAWlP,EAAMmP,EAAK7U,GACpC,IAAIsV,EAcN,SAA4BrV,GAAa,IAAD,iBACnBnN,OAAOC,MAAMC,OAAO8T,SADD,IACtC,2BAAgD,CAAC,IAAxCwO,EAAuC,QAC9C,IAAKA,EAAOxU,QAAWwU,EAAOvM,WAAa9I,EAGzC,OAFAqV,EAAOxU,QAAS,EAChBwU,EAAO9iB,OAAOwV,SAAU,EACjBsN,GAL2B,8BAStC,IAAIA,EAAS,CAACxU,QAAQ,EAAMjB,OAAQ,EAAGxP,EAAG,EAAGC,EAAG,EAAGwc,GAAI,EAAGC,GAAI,EAAGhN,SAAU,EAAGgJ,SAAU9I,GAEpFuP,EAAc1c,OAAOwV,KAAK4C,OAAOvJ,UAAUhR,EAAEiI,kBAC7CpG,EAAS,IAAIM,OAAOwV,KAAK2C,OAAOuE,EAAYrE,SAASlL,IAQzD,OAPAzN,EAAOnC,GAAK,IACZmC,EAAOlC,GAAK,IACZkC,EAAO4Y,OAAOxG,IAAI,GAAK,IACvBpS,EAAO8Y,MAAM1G,IAAI,GAAK,IACtB9R,OAAOC,MAAMC,OAAOmU,iBAAiBL,QAAQ0B,SAAShW,GACtD8iB,EAAO9iB,OAASA,EAChBM,OAAOC,MAAMC,OAAO8T,QAAQ3T,KAAKmiB,GAC1BA,EAlCMC,CAAmBV,EAAI5U,YACpCqV,EAAOvV,SAAW8U,EAAI9U,SACtBuV,EAAOzV,OAASgV,EAAIhV,OACpB,IAAM2V,EAAYxV,EAAUA,EAAStQ,KAAKuC,UAAY+W,EAAM7W,cAAgB,EAAI,GAAM,EAChFyZ,EAAWlG,EAAKkG,SAAW4J,EACjCF,EAAOxI,GAAKpH,EAAKoH,GAAK+H,EAAI/U,MAAQpQ,KAAKqB,IAAI6a,GAC3C0J,EAAOvI,GAAKrH,EAAKqH,GAAK8H,EAAI/U,MAAQpQ,KAAKoB,IAAI8a,GAC3C0J,EAAOjlB,EAAIqV,EAAKrV,EAAIX,KAAKC,KAAK+V,EAAKmG,YAAcnG,EAAKmG,YAAcnG,EAAKoG,aAAepG,EAAKoG,cAAgB,EAAIpc,KAAKqB,IAAI6a,GAC1H0J,EAAOhlB,EAAIoV,EAAKpV,EAAIZ,KAAKC,KAAK+V,EAAKmG,YAAcnG,EAAKmG,YAAcnG,EAAKoG,aAAepG,EAAKoG,cAAgB,EAAIpc,KAAKoB,IAAI8a,GA6B5H,SAAS6J,GAAWH,GAClBA,EAAOxU,QAAS,EAChBwU,EAAO9iB,OAAOwV,SAAU,EACxBsN,EAAO9iB,OAAOnC,GAAK,IACnBilB,EAAO9iB,OAAOlC,GAAK,IACnBglB,EAAOxI,GAAK,EACZwI,EAAOvI,GAAK,EAMP,SAAS2I,KACd,IAD4B,EACxBhQ,EAAO5S,OAAOC,MAAM2S,KADI,eAET5S,OAAOC,MAAMC,OAAO8T,SAFX,IAE5B,2BAAgD,CAAC,IAAxCwO,EAAuC,QAC1CA,EAAOxU,SACTwU,EAAOjlB,EAAIilB,EAAOjlB,EAAIilB,EAAOxI,GAC7BwI,EAAOhlB,EAAIglB,EAAOhlB,EAAIglB,EAAOvI,GAC7BuI,EAAO9iB,OAAOnC,EAAKilB,EAAOjlB,EAAIqV,EAAKrV,EAAKM,EAAE8C,kBAC1C6hB,EAAO9iB,OAAOlC,EAAKglB,EAAOhlB,EAAIoV,EAAKpV,EAAKK,EAAE+C,mBAC1C4hB,EAAOvV,SAAWuV,EAAOvV,SAAW,EAChCuV,EAAOvV,UAAY,GACrB0V,GAAWH,GAEbK,GAAwBL,KAZA,+BAiB9B,SAASK,GAAwBL,GAC/B,IADuC,EACnC5P,EAAO5S,OAAOC,MAAM2S,KADe,eAGpB5S,OAAOC,MAAMC,OAAO+T,OAAOlB,SAHP,IAGvC,2BAAuD,CAAC,IAA/CtV,EAA8C,QACjDyY,EAAM3Z,gBAAgBkB,EAAOF,EAAGE,EAAOD,EAAGglB,EAAOjlB,EAAGilB,EAAOhlB,GAAKC,EAAO4Q,QACzEsU,GAAWH,IALwB,8BASvC,GAAI5P,EAAKsH,MAAO,CACd,IAAMV,EAAaiF,EAAKxJ,cAAcrC,GAChCkQ,EAAoB5M,EAAMrV,cAAc+R,EAAKrV,EAAGqV,EAAKpV,EAAGgc,EAAYgJ,EAAOjlB,EAAGilB,EAAOhlB,GACvFuQ,EAASmS,GAAgBtN,GAC7B,IAAK7E,GAAUqS,GAAexN,GAAO,CACnC,IAAMmQ,EAAc5C,GAAwBvN,GACxCmQ,GAAeD,IACjBC,EAAYjW,KAAOiW,EAAYlW,SAC/B0V,GAAa3P,EAAMmQ,EAAYhV,QAC/BA,EAASgV,EAAYhV,SAGrBA,GAAUmI,EAAM3Z,gBAAgBqW,EAAKrV,EAAGqV,EAAKpV,EAAGglB,EAAOjlB,EAAGilB,EAAOhlB,GAAKuQ,EAAOM,QAEtEyU,IADTE,GAAcR,EAAQ5P,EAAMmO,IAtBO,qBA4BrB/gB,OAAOC,MAAMC,OAAO+T,OAAOnB,OA5BN,IA4BvC,2BAAoD,CAAC,IAA5CoE,EAA2C,QAClD,GAAKA,IAAUtE,GAASsE,EAAMgD,OAAShD,EAAM7I,OAAQ,CACnD,IAAMN,EAASmS,GAAgBhJ,IAC1BnJ,GAAUmI,EAAM3Z,gBAAgB2a,EAAM3Z,EAAG2Z,EAAM1Z,EAAGglB,EAAOjlB,EAAGilB,EAAOhlB,GAAKuQ,EAAOM,QACjF6H,EAAM3Z,gBAAgB2a,EAAM3Z,EAAG2Z,EAAM1Z,EAAGglB,EAAOjlB,EAAGilB,EAAOhlB,IAAM0Z,EAAM7I,SACtE2U,GAAcR,EAAQtL,EAAO,QAjCI,+BA0CzC,SAAS8L,GAAcR,EAAQ5P,EAAMyO,GACnCP,GAAWlO,EAAM4P,EAAOzV,OAAQsU,GAChCsB,GAAWH,GAMN,SAAS1B,GAAWlO,EAAM7F,EAAQsU,GACvC,IAAMtT,EAASmS,GAAgBtN,GAC3B7E,GACFA,EAAOE,OAASlB,EACZgB,EAAOE,OAAS,IAClBF,EAAOE,MAAQ,EACfyR,GAAc9M,EAAM7E,MAGtB6E,EAAK3E,MAAQ2E,EAAK3E,MAAQlB,EACtB6F,EAAK3E,OAAS,IAChB2E,EAAK3E,MAAQ,EACbmT,GAAYxO,EAAMyO,KAQjB,SAASxC,GAAajM,EAAMsE,GACjC,GAAItE,IAASsE,EAAb,CAGA,IAAI+L,EAAarQ,EAAK3E,MAClBiV,EAAchM,EAAMjJ,MACxB6S,GAAW5J,EAAO+L,EAAajjB,OAAOC,MAAM2S,OAASsE,EAAS6J,GAAY,MAC1ED,GAAWlO,EAAMsQ,EAAcljB,OAAOC,MAAM2S,OAASA,EAAQmO,GAAY,MAEpEnO,EAAKsH,QACRtH,EAAKoH,GAAK,EACVpH,EAAKqH,GAAK,IAOP,SAASyD,GAAS9K,EAAMuQ,GAAY,IAAD,iBACtBvQ,EAAK7D,OADiB,IACxC,2BAA8B,CAAC,IAAtBA,EAAqB,QAC5B,GAAIA,EAAMrD,OAASyX,EACjB,OAAOpU,GAH6B,8BAMxC,OAAO,KAGF,SAASiQ,KACd,IAAIrE,EAAI3a,OAAOC,MAAMC,OAAOuU,gBACxB5B,EAAO7S,OAAOC,MAAM4S,KAEpBuQ,EAAIvlB,EAAE8G,cAAgB9G,EAAEkH,eACxBic,EAAInjB,EAAEiH,cACN7H,EAAIY,EAAE8G,cACVgW,EAAE0I,QAEF1I,EAAE2I,UAAUzlB,EAAE4H,0BACdkV,EAAE4I,UAAU,EAAG1lB,EAAE2H,sBACjBmV,EAAEH,SARM,EAQM4I,EAAGpC,EAAG/jB,GACpB0d,EAAE6I,UAZ0B,qBAcTxjB,OAAOC,MAAM8S,SAdJ,IAc5B,2BAAyC,CAAC,IAAjCtV,EAAgC,QACvC,GAAIgmB,GAAY5Q,EAAMpV,GAAS,CAC7B,IAAIF,EAbA,EAaQM,EAAEmH,oBAAuBvH,EAAOF,EAAIsV,EAAKtV,GAAKM,EAAEyH,gBACxD9H,EAAI4lB,EAAIvlB,EAAEoH,qBAAwBxH,EAAOD,EAAIqV,EAAKrV,GAAKK,EAAE0H,gBACvDme,EAAc1jB,OAAOC,MAAM+S,iBAAmBvV,EAASI,EAAE8H,8BAAgC9H,EAAE6H,qBACjGiV,EAAE4I,UAAU,EAAGG,GACf/I,EAAEgJ,WAAWpmB,EAAGC,EAAGC,EAAO4Q,OAASxQ,EAAEyH,iBALR,qBAOR7H,EAAOoa,WAPC,IAO7B,2BAAuC,CAAC,IAA/BY,EAA8B,QACjCmL,EApBF,EAoBkB/lB,EAAEmH,oBAAuByT,EAASlb,EAAIsV,EAAKtV,GAAKM,EAAEyH,gBAAmB,IACrFue,EAAYT,EAAIvlB,EAAEoH,qBAAwBwT,EAASjb,EAAIqV,EAAKrV,GAAKK,EAAE0H,gBAAmB,IAC1FoV,EAAE4I,UAAU,EAAG1lB,EAAE+H,wBACjB+U,EAAEH,SAASoJ,EAAWC,EAAW,EAAG,IAXT,iCAfL,8BA+B5BlJ,EAAE4I,UAAU,EAAG1lB,EAAEgI,oBACjB,IAAMtI,EA7BE,EA6BMM,EAAEmH,oBAAuBhF,OAAOC,MAAM2S,KAAKrV,EAAIsV,EAAKtV,GAAKM,EAAEyH,gBACnE9H,EAAI4lB,EAAIvlB,EAAEoH,qBAAwBjF,OAAOC,MAAM2S,KAAKpV,EAAIqV,EAAKrV,GAAKK,EAAE0H,gBAC1EoV,EAAEgJ,WAAWpmB,EAAGC,EAAG,GAMd,SAAS0d,GAAe4I,EAAQC,GACrC,GAAI/jB,OAAOC,MAAMC,OAAOwT,YAAc7V,EAAEyG,WAAWG,OAAQ,CACzD,IADyD,EACnDoO,EAAO7S,OAAOC,MAAM4S,KACtBtS,EAAUsS,EAAKtV,GAAMumB,EAASjmB,EAAEmH,qBAAuB,EAAInH,EAAEyH,iBAC7D9E,EAAUqS,EAAKrV,GAAOumB,GAAUlmB,EAAE8G,cAAgB9G,EAAEkH,gBAAmBlH,EAAEoH,sBAAwB,EAAIpH,EAAEyH,iBAHlD,eAItCtF,OAAOC,MAAM8S,SAJyB,IAIzD,2BAAyC,CAAC,IAAjCtV,EAAgC,QACnCyY,EAAM3Z,gBAAgBgE,EAASC,EAAS/C,EAAOF,EAAGE,EAAOD,IAAMC,EAAO4Q,SACxErO,OAAOC,MAAM+S,eAAiBvV,IANuB,8BASzDoV,EAAKtV,EAAIgD,EACTsS,EAAKrV,EAAIgD,EACTwe,MAIJ,SAASyE,GAAY5Q,EAAMpV,GAEzB,QAAUoV,EAAKtV,EAAIM,EAAEuH,wBAA0B3H,EAAO4Q,OAAS5Q,EAAOF,GACnEsV,EAAKtV,EAAIM,EAAEuH,wBAA0B3H,EAAO4Q,OAAS5Q,EAAOF,GAC5DsV,EAAKrV,EAAIK,EAAEwH,yBAA2B5H,EAAO4Q,OAAS5Q,EAAOD,GAC7DqV,EAAKrV,EAAIK,EAAEwH,yBAA2B5H,EAAO4Q,OAAS5Q,EAAOD,GAM3D,SAASsiB,GAAYnQ,GAC1B,OAAKA,EAIEA,EAAO3C,MAAQ2C,EAAO1C,SAAW,IAH/B,EASJ,SAAS+W,GAAmBpR,GAEjC,OAAOkN,GADGpC,GAAS9K,EAAM/U,EAAEkM,4BCr4BtB,SAASwR,KACd/D,QAAQuF,IAAI,sBAIP,SAASvB,GAAWwB,IACpBhd,OAAOC,MAAMC,OAAOsT,KAAK+J,GAAGpb,QAAUnC,OAAOC,MAAMC,OAAOsT,KAAKgK,EAAErb,SAChEnC,OAAOC,MAAM2S,KAAKsH,QAAUla,OAAOC,MAAMC,OAAOyT,UAMxD,WACE,IAAI1T,EAAQD,OAAOC,MACf2S,EAAO3S,EAAM2S,KACjB6L,EAAKtD,gBAAgBtd,EAAEyG,WAAWE,KAClC,IAAIyf,EAAU/N,EAAM5Y,YAAYsV,EAAKrV,EAAGqV,EAAKpV,EAAGyC,EAAM+S,gBACtDJ,EAAKoH,GAAKiK,EAAQ1mB,GAAKM,EAAE6K,cACzBkK,EAAKqH,GAAKgK,EAAQzmB,GAAKK,EAAE6K,cAXrBwb,GAkBN,SAASC,GAAgBC,GACvB,OAAIA,IAAiBvmB,EAAE6L,sBACd,CAAC6O,YAAY1a,EAAEgM,cAAeuE,WAAWvQ,EAAEgJ,aAAcwd,WAAU,GACjED,IAAiBvmB,EAAEoL,mBACrB,CAACsP,YAAY1a,EAAEqL,WAAYkF,WAAWvQ,EAAEiJ,UAAWud,WAAU,IAEtE7M,QAAQC,KAAK,yBAA0B2M,GAChC,IAUF,SAASzL,GAAmBF,EAAUhb,GAA8B,IAGrEme,EAH+C1D,EAAqB,uDAAN,KAAM,EACzBiM,GAAgB1L,EAAS/M,MAAhE6M,EADgE,EAChEA,YAAanK,EADmD,EACnDA,WAAYiW,EADuC,EACvCA,UAC7B3H,EAAc1c,OAAOwV,KAAKgH,OAAOC,OAAO5N,UAAUhR,EAAEiI,kBAAkB4W,YAEtE2H,IACFzI,EAAiB,IAAI5b,OAAOwV,KAAKoH,eAAeF,EAAYG,WAAWzO,KACxDyN,eAAiBhe,EAAEuL,qBAClCwS,EAAe0F,QAEf1F,EAAiB,IAAI5b,OAAOwV,KAAK2C,OAAOuE,EAAYrE,SAASjK,IAE/DwN,EAAetD,OAAOxG,IAAI,GAAK,IAC/B8J,EAAepD,MAAM1G,IAAIyG,EAAaA,GACtCqD,EAAe9C,SAAWL,EAASK,SACnC8C,EAAere,EAAKkb,EAASlb,EAAIE,EAAOF,EACxCqe,EAAepe,EAAKib,EAASjb,EAAIC,EAAOD,EACxCoe,EAAe1G,SAAU,EACpBgD,IACHA,EAAeuG,EAAKzG,gBAAgBva,IAEtCya,EAAaxC,SAASkG,GAGjB,SAAS0I,KACd,IAAIrkB,EAAQD,OAAOC,MACfskB,EAAO,CAAC7Y,KAAM7N,EAAEoL,oBAChBxL,EAASwC,EAAM+S,eACfJ,EAAO3S,EAAM2S,KAJS,EASL6O,GAAqBhkB,EAAQmV,EAH7B4R,GAA6B5R,EAAMnV,EAAQI,EAAEsL,YAGItL,EAAEsL,WAAY,GAA/E5L,EATqB,EASrBA,EAAEC,EATmB,EASnBA,EAAEsb,EATiB,EASjBA,SACC,OAANvb,GAIJgnB,EAAK7gB,MAAQ7F,EAAEsL,WACfob,EAAKhnB,EAAIA,EACTgnB,EAAK/mB,EAAIA,EACT+mB,EAAKzL,SAAWA,EAEhBH,GAAmB4L,EAAM9mB,GACzBghB,EAAKpC,gBAAgB5e,EAAQmV,EAAM/U,EAAE2L,WACrC/L,EAAOoa,UAAUxX,KAAKkkB,GACtBtJ,EAAI+D,eAXFxH,QAAQC,KAAK,wBAiBV,SAAS+M,GAA6B5R,EAAMnV,EAAQgnB,GACzD,IAAIC,EAAM9R,EAAKkG,SAAWlc,KAAKS,GAAG,EAC9BsnB,EAAO/R,EAAKrV,EAAIknB,EAAoB7nB,KAAKqB,IAAIymB,GAC7CE,EAAOhS,EAAKpV,EAAIinB,EAAmB7nB,KAAKoB,IAAI0mB,GAEhD,OAAOxO,EAAMhZ,gBAAgBN,KAAKgB,MAAMgnB,EAAOnnB,EAAOD,EAAGmnB,EAAOlnB,EAAOF,IAOlE,SAASkkB,GAAqBhkB,EAAQmV,EAAMkG,EAAU+L,EAAerS,GAC1E,OAAIsS,GAAarnB,EAAQmV,EAAMkG,EAAU+L,GAGhC,CAACtnB,EAFAE,EAAOF,GAAME,EAAO4Q,OAAS,IAAMzR,KAAKqB,IAAI6a,GAE1Ctb,EADFC,EAAOD,GAAMC,EAAO4Q,OAAS,IAAMzR,KAAKoB,IAAI8a,GACvCA,YAGXtG,EAAiB,EAAR5V,KAAKS,GAAOQ,EAAEmL,sCAClB,CAACzL,EAAE,KAAMC,EAAE,KAAMsb,SAAS,MAE5B2I,GAAqBhkB,EAAQmV,EAAMkG,EAASjb,EAAEmL,sCACjD6b,IAAiBrS,GAGhB,SAASsS,GAAarnB,EAAQmV,EAAMkG,EAAU+L,GACnD,IADkE,EAC9DtnB,EAAIE,EAAOF,GAAME,EAAO4Q,OAAS,IAAMzR,KAAKqB,IAAI6a,GAChDtb,EAAIC,EAAOD,GAAMC,EAAO4Q,OAAS,IAAMzR,KAAKoB,IAAI8a,GAEhD7G,EAAUiE,EAAM3Z,gBAAgBgB,EAAEC,EAAGoV,EAAKrV,EAAGqV,EAAKpV,GAClDunB,EAAmBF,EAL2C,eAM7CpnB,EAAOoa,WANsC,IAMlE,2BAAuC,CAAC,IAA/BY,EAA8B,QAChC3B,EAAOZ,EAAM3Z,gBAAgBgB,EAAEC,EAAGib,EAASlb,EAAGkb,EAASjb,GACvDsZ,EAAO7E,IACTA,EAAU6E,EACViO,EAAmBtM,EAAS/U,QAViC,8BAalE,OAAQuO,EAAW4S,EAAc,EAAIE,EAAiB,EAAI,GAMrD,SAASC,GAAiBC,EAAQC,EAAQpJ,EAAcqJ,EAAiBC,GAC9E,IAAIC,EAAeC,OAAOH,GACtBI,MAAMF,KACRA,EAAe,GAEjB,IAAIG,EAAMH,EAMV,IAJwB,KAApBF,GAA2BF,EAAOnJ,GAAgBuJ,EAAe,KACnEG,EAAMP,EAAOnJ,IAGK,OAAhBsJ,EAAsB,CACxB,IAAIK,EAAYL,GAAeF,EAAO5c,SAAW4c,EAAO3c,KAAO2c,EAAO1c,SAClEid,EAAYD,IACdA,EAAMC,GAGVP,EAAOpJ,IAAiB0J,EACxBP,EAAOnJ,IAAiB0J,EAMnB,SAASE,GAAW9S,EAAMnV,GAC/BunB,GAAiBpS,EAAK/D,UAAWpR,EAAOoR,UAAU8I,OAAQ,WAAY/E,EAAK/D,UAAUvG,SAAU,MAC/F0c,GAAiBpS,EAAK/D,UAAWpR,EAAOoR,UAAU8I,OAAQ,OAAQ/E,EAAK/D,UAAUtG,KAAM,MACvFyc,GAAiBpS,EAAK/D,UAAWpR,EAAOoR,UAAU8I,OAAQ,UAAW/E,EAAK/D,UAAUrG,QAAS,MAQxF,SAASmd,GAAa/S,EAAMnV,GACjC,IAAMmoB,EAAahpB,KAAKsC,MAAM0T,EAAKhE,aAAe,GAC9CiX,EAAUjT,EAAKhE,cAAgBgE,EAAK/D,UAAUvG,SAAWsK,EAAK/D,UAAUtG,KAAOqK,EAAK/D,UAAUrG,SAClG,KAAIqd,GAAW,GAAf,CAKA,IAAMC,EAAkBF,GAAc,GAAKA,EAAa,GACpDhT,EAAK/D,UAAUvG,SAAWwd,GAC5Bd,GAAiBvnB,EAAOoR,UAAU8I,OAAQ/E,EAAK/D,UAAW,WAAYiX,EAAkBlT,EAAK/D,UAAUvG,SAAUsK,EAAKhE,cAEpHgE,EAAK/D,UAAUtG,KAAOqd,GACxBZ,GAAiBvnB,EAAOoR,UAAU8I,OAAQ/E,EAAK/D,UAAW,OAAQ+W,EAAahT,EAAK/D,UAAUtG,KAAMqK,EAAKhE,cAG3GiX,EAAUjT,EAAKhE,cAAgBgE,EAAK/D,UAAUvG,SAAWsK,EAAK/D,UAAUtG,KAAOqK,EAAK/D,UAAUrG,SAC1FoK,EAAK/D,UAAUrG,QAAUqd,GAC3Bb,GAAiBvnB,EAAOoR,UAAU8I,OAAQ/E,EAAK/D,UAAW,UAAWgX,EAASjT,EAAKhE,eAIhF,SAASmX,KACd,IAAI9lB,EAAQD,OAAOC,MACfxC,EAASwC,EAAM+S,eACfJ,EAAO3S,EAAM2S,KACboT,EAAU,CAACta,KAAM7N,EAAE6L,uBAJM,EAUR+X,GAAqBhkB,EAAQmV,EAH1B4R,GAA6B5R,EAAMnV,EAAQI,EAAE+L,eAGI/L,EAAE+L,cAAe,GAArFrM,EAVwB,EAUxBA,EAAEC,EAVsB,EAUtBA,EAAEsb,EAVoB,EAUpBA,SACC,OAANvb,GAIJyoB,EAAQtiB,MAAQ7F,EAAEsL,WAClB6c,EAAQzoB,EAAIA,EACZyoB,EAAQxoB,EAAIA,EACZwoB,EAAQlN,SAAWA,EACnBrb,EAAOoa,UAAUxX,KAAK2lB,GAGtBrN,GAAmBqN,EAASvoB,GAE5BghB,EAAKpC,gBAAgB5e,EAAQmV,EAAM/U,EAAE8L,cACrCsR,EAAI+D,eAbFxH,QAAQC,KAAK,2BAmBV,SAASwO,GAAUC,GACxB,IACIzoB,EADQuC,OAAOC,MACA+S,eACfmT,EAAU1H,EAAKlP,WAAW2W,EAAcroB,EAAEsK,QAC9C1K,EAAOqV,MAAMzS,KAAK8lB,GAOb,SAASC,GAAaD,GAC3B,IAAIE,EAAUrmB,OAAOC,MAAM2S,KACvBI,EAAiBhT,OAAOC,MAAM+S,eAC9BC,EAAmBjT,OAAOC,MAAMgT,iBACpC,GAAKqT,GAAsBH,EAASnT,GAApC,CAQA,GAJAuT,GAAiBF,EAASpT,GAE1BjT,OAAOC,MAAM2S,KAAOuT,EAEhBE,GAAWA,EAAQnM,OAASmM,EAAQtO,SACtCkD,EAAI0E,iBAAiB0G,GACC5H,EAAKxJ,cAAcoR,GAC3BnR,SAAU,EACxBmR,EAAQtO,SAAW,KAGrB,IAAMyO,EAAgB/H,EAAKxJ,cAAckR,GACzCK,EAActR,SAAU,EACxBiR,EAAQrN,SAAW9F,EAAe8E,eAClC0O,EAAc1N,SAAWqN,EAAQrN,SACjC0N,EAAcjjB,SAASuO,IAAIjU,EAAE8C,kBAAmB9C,EAAE+C,oBAElD,IAAIogB,EAAIhO,EAAe3E,OAAU8X,EAAQpN,YAAc,EACvDoN,EAAQ5oB,EAAIyV,EAAezV,EAAKyjB,EAAIpkB,KAAKqB,IAAIkoB,EAAQrN,UACrDqN,EAAQ3oB,EAAIwV,EAAexV,EAAKwjB,EAAIpkB,KAAKoB,IAAImoB,EAAQrN,UACrD9Y,OAAOC,MAAMgT,iBAAmBD,EAChCiI,EAAIoE,wBAxBF7H,QAAQC,KAAK,qCAAqC0O,EAAQ,WAAWnT,GA8BlE,SAASsT,GAAsB1T,EAAMnV,GAC1C,IAAIqV,EAAQrV,EAAOqV,MAAM2T,QAAO,SAAC5I,GAAD,OAAOA,IAAMjL,KACzC8T,EAAc5T,EAAMqD,OAAS1Y,EAAOqV,MAAMqD,OAE9C,OADA1Y,EAAOqV,MAAQA,EACR4T,EAGF,SAASH,GAAiB3T,EAAMnV,GAGjCmV,EAAKsH,OAAStH,EAAK1E,SAAW,GAChCzQ,EAAOqV,MAAMzS,KAAKuS,GAOf,SAAS+T,GAAWlpB,GAAS,IAAD,iBACZA,EAAOoa,WADK,IACjC,2BAAuC,CACrC,GADqC,QACxBnM,OAAS7N,EAAE6L,sBACtB,OAAO,GAHsB,8BAMjC,OAAO,EAGF,SAASkd,GAAWC,GACzB,IAAIppB,EAASuC,OAAOC,MAAM+S,eACtBjE,EAAQsE,KAAOC,UAAUuT,GAC7B9X,EAAM6K,GAAK5Z,OAAOC,MAAMsT,SACxB9V,EAAOsR,MAAM1O,KAAK0O,GAGb,SAAS+X,GAAalU,GAE3B,MAAO,CAACtK,UADesK,EAAK1E,SAAW0E,EAAK3E,OACT,EAAI1F,KAAK,EAAGC,QAAQ,GAGlD,SAASue,GAAWnU,EAAMnV,GAC/B,IAAImO,EAAOkb,GAAalU,GACpBoU,EAAWpU,EAAK1E,SAAW0E,EAAK3E,MACpC,IAAKwQ,EAAKrC,UAAU3e,EAAQmV,EAAMhH,GAAO,CACvC,IAAIqb,EAAiBxpB,EAAOoR,UAAU8I,OAAOrP,SAAWsK,EAAK/D,UAAUvG,SACvEsD,EAAKtD,SAAW2e,EAChBD,EAAWC,EAEbxI,EAAKpC,gBAAgB5e,EAAQmV,EAAMhH,GACnCgH,EAAK3E,OAAS+Y,EAGT,SAASE,GAAStU,EAAMuU,GACzBA,EAASzb,OAAS7N,EAAEqM,kBAElB0I,EAAK3E,QAAU2E,EAAK1E,WACtB0E,EAAK3E,OAASkZ,EAAS9a,UAEzBuG,EAAK1E,UAAYiZ,EAAS9a,UACjB8a,EAASzb,OAAS7N,EAAE2M,qBAC7BoI,EAAKhE,cAAgBuY,EAASjb,eAI3B,SAAS+V,GAA2BrP,GACzC,IAAK,IAAIoD,EAAE,EAAGA,EAAGpD,EAAK7D,MAAMoH,OAAQH,IAClC,GAAIpD,EAAK7D,MAAMiH,GAAGtK,OAAS7N,EAAEmM,4BAE3B,YADA4I,EAAKmH,6BAA+B/D,GAKxCpD,EAAKmH,8BAAgC,EAGhC,SAASqN,GAA0BxU,EAAMnV,EAAQ4pB,GAEtDzU,EAAK7D,MAAM1O,KAAKgnB,GAChBH,GAAStU,EAAMyU,GAEfhU,KAAOiU,OAAO7pB,EAAOsR,OAAO,SAACsP,GAAD,OAAOA,EAAEzE,KAAOyN,EAAYzN,MACxDqI,GAA2BrP,GAGtB,SAAS2U,GAA0B3U,EAAMnV,EAAQ4pB,GAGtD,GADA5pB,EAAOsR,MAAM1O,KAAKgnB,GACdA,EAAY3b,OAAS7N,EAAEqM,iBACzB0I,EAAK1E,UAAYmZ,EAAYhb,SACzBuG,EAAK3E,MAAQ2E,EAAK1E,WACpB0E,EAAK3E,MAAQ2E,EAAK1E,eAEf,GAAImZ,EAAY3b,OAAS7N,EAAE2M,mBAAoB,CACpDoI,EAAKhE,cAAgByY,EAAYnb,cACjC,IAAIsb,EAAgB5U,EAAK/D,UAAUvG,SAAWsK,EAAK/D,UAAUtG,KAAOqK,EAAK/D,UAAUrG,QACnF,GAAIgf,EAAgB5U,EAAKhE,aAAc,CACrC,IAAI6Y,EAAQC,KAAKC,eAAe/U,EAAM,WAAa4U,EAAgB5U,EAAKhE,cACpE6Y,EAAQ,IACVA,EAAQC,KAAKC,eAAe/U,EAAM,OAAQ6U,IAExCA,EAAQ,IACVA,EAAQC,KAAKC,eAAe/U,EAAM,UAAW6U,IAE3CA,EAAQ,GACVjQ,QAAQC,KAAK,sDAAsDgQ,IAKzEpU,KAAOiU,OAAO1U,EAAK7D,OAAO,SAACsP,GAAD,OAAOA,EAAEzE,KAAOyN,EAAYzN,MACtDqI,GAA2BrP,GAQtB,SAASgV,GAAanqB,EAAQsR,GACnCtR,EAAOoR,UAAU8I,OAAjB,UAAuC5I,EAAMnD,KAAKtD,SAAWzK,EAAE4L,aAC/DhM,EAAOoR,UAAU8I,OAAjB,MAAmC5I,EAAMnD,KAAKrD,KAAO1K,EAAE4L,aACvDhM,EAAOoR,UAAU8I,OAAjB,SAAsC5I,EAAMnD,KAAKpD,QAAU3K,EAAE4L,aAE7D4J,KAAOiU,OAAO7pB,EAAOsR,OAAO,SAACsP,GAAD,OAAOA,EAAEzE,KAAO7K,EAAM6K,MAQ7C,SAASiO,GAAYpqB,EAAQmV,GAAM,qBAEpBA,EAAK7D,OAFe,IAExC,2BAAgC,CAC9B6Y,GAAanqB,EADiB,UAFQ,+BAMxCA,EAAOoR,UAAU8I,OAAjB,UAAuC/E,EAAKhH,KAAKtD,SAAWzK,EAAE4L,aAC9DhM,EAAOoR,UAAU8I,OAAjB,MAAmC/E,EAAKhH,KAAKrD,KAAO1K,EAAE4L,aACtDhM,EAAOoR,UAAU8I,OAAjB,SAAsC/E,EAAKhH,KAAKpD,QAAU3K,EAAE4L,aAC5D6c,GAAsB1T,EAAMnV,GAExBmV,IAAS5S,OAAOC,MAAM2S,QACL6L,EAAKxJ,cAAcrC,GAC3BsC,SAAU,EACrBtC,EAAKsH,OAAQ,EACbtH,EAAKmF,SAAW,MASb,SAAS4P,GAAe/U,EAAMkJ,EAAcrd,GAEjD,GADAmU,EAAK/D,UAAUiN,IAAiBrd,EAC5BmU,EAAK/D,UAAUiN,GAAgB,EAAG,CACpC,IAAI2L,EAAQ7qB,KAAK6jB,IAAI7N,EAAK/D,UAAUiN,IAEpC,OADAlJ,EAAK/D,UAAUiN,GAAgB,EACxB2L,EAET,OAAO,EAMF,SAASK,GAASlV,EAAM7D,GAC7B,SAAK6D,GAASA,EAAK7D,OAAUA,OAIzB6D,EAAK7D,MAAMoH,QAAUvD,EAAK9D,aAI1B,CAAChF,GAAkBC,GAA2BE,IAAqB8d,SAAShZ,EAAMrD,QAChFkH,EAAK7D,MAAMiZ,MAAK,SAACC,GAAD,OAAQA,EAAGvc,OAASqD,EAAMrD,UCpc3C,SAAS6T,KACd,IAD2B,EACvB3M,EAAO5S,OAAOC,MAAM2S,KADG,eAET5S,OAAOC,MAAMC,OAAO+T,OAAOnB,OAFlB,IAE3B,2BAAoD,CAAC,IAA5CoE,EAA2C,QAClD,GAAKA,EAAMgD,OAAStH,IAASsE,EAA7B,CAGA,IAAIgR,GAAW,EAoBf,GAnBIhR,EAAM7H,SAAWxR,EAAEkN,iBACrBmd,EAAWC,GAAUjR,GAAO,GACnBA,EAAM7H,SAAWxR,EAAEoN,kBAC5Bid,EAAWC,GAAUjR,GAAO,GACnBA,EAAM7H,SAAWxR,EAAEsN,gBAC5B+c,EAAWE,GAASlR,EAAO,IAClBA,EAAM7H,SAAWxR,EAAEiN,gBAC5Bod,EAAWE,GAASlR,EAAO,KAClBA,EAAM7H,SAAWxR,EAAEuN,iBAC5B8c,EAAWG,GAAUnR,GACZA,EAAM7H,SAAWxR,EAAEmN,qBAC5Bsd,GAAapR,GAEXgR,IACF7F,GAA4BnL,GAC5BoL,GAA0BpL,IAIvBtE,EAAKrV,EAAIM,EAAE8C,kBAAoBuW,EAAM7I,QAAU6I,EAAM3Z,GACvDqV,EAAKrV,EAAIM,EAAE8C,kBAAoBuW,EAAM7I,QAAU6I,EAAM3Z,GACrDqV,EAAKpV,EAAIK,EAAE+C,mBAAqBsW,EAAM7I,QAAU6I,EAAM1Z,GACtDoV,EAAKpV,EAAIK,EAAE+C,mBAAqBsW,EAAM7I,QAAU6I,EAAM1Z,GAEvD,GAAI0Z,EAAMgD,MAAO,CAEf,IAAMqO,EAActT,GAAciC,GAClCqR,EAAYrT,SAAU,EACtBqT,EAAYzP,SAAW5B,EAAM4B,SAC7ByP,EAAYhrB,EAAK2Z,EAAM3Z,EAAIqV,EAAKrV,EAAKM,EAAE8C,kBACvC4nB,EAAY/qB,EAAK0Z,EAAM1Z,EAAIoV,EAAKpV,EAAKK,EAAE+C,yBAIzC,GAAIsW,EAAMa,SACY9C,GAAciC,GACtBhC,SAAU,EACtBgC,EAAMa,SAAW,OA5CI,+BA0DtB,SAASyQ,GAAQC,EAASlrB,EAAGC,EAAG0P,GACrCub,EAAQ3P,SAAW5C,EAAMhZ,gBAAgBN,KAAKgB,MAAMJ,EAAIirB,EAAQjrB,EAAGD,EAAIkrB,EAAQlrB,IAC/E0d,EAAIgD,kBAAkBwK,EAASvb,GAG1B,SAASkb,GAASM,EAAYxb,GAAS,IAAD,EACpByb,GAAyBD,GAAzCxD,EADoC,EACpCA,OAAQpO,EAD4B,EAC5BA,KACf,SAAKoO,IAAWA,EAAOhL,SAGnBpD,EAAOmE,EAAI+I,mBAAmB0E,IAChCF,GAAQE,EAAYxD,EAAO3nB,EAAG2nB,EAAO1nB,EAAG0P,IAEnC,GAGF,SAASob,GAAapR,GAC3B,IAAItE,EAAO5S,OAAOC,MAAM2S,KACxB,GAAKA,EAAKsH,MAAV,CAGA,IAAM0O,EAAmB1S,EAAM3Z,gBAAgB2a,EAAM3Z,EAAG2Z,EAAM1Z,EAAGoV,EAAKrV,EAAGqV,EAAKpV,GAC1EorB,EAAmB3N,EAAI+I,mBAAmB9M,IAC5CsR,GAAQtR,EAAOtE,EAAKrV,EAAGqV,EAAKpV,EAAG,IAE7BorB,EAAkC,EAAf/qB,EAAE8F,cACvBsX,EAAIiD,oBAAoBhH,GAEtBA,EAAMjJ,MAAQiJ,EAAMhJ,UACtB2a,GAAqB3R,IAQlB,SAASyR,GAAyB/V,GACvC,OAAQA,EAAKkH,QAAUjc,EAAEsK,OACrB2gB,GAAsBlW,EAAKrV,EAAGqV,EAAKpV,GACnCurB,GAAuBnW,EAAKrV,EAAGqV,EAAKpV,GAMnC,SAAS6qB,GAAUW,GAAU,IAAD,EACVL,GAAyBK,GAAzC9D,EAD0B,EAC1BA,OAAQpO,EADkB,EAClBA,KAEf,GAAIoO,GAAUpO,EAAOjZ,EAAE8F,aAAc,CACnC,IAAIslB,EAAc/S,EAAM/X,YAAY6qB,EAAQzrB,EAAGyrB,EAAQxrB,EAAG0nB,EAAO3nB,EAAG2nB,EAAO1nB,GADxC,EAEhB0Y,EAAM1X,cAAcyqB,EAAaD,EAAQta,YAAvDhQ,EAF8B,EAE9BA,KAAMC,EAFwB,EAExBA,KAKX,OAJAqqB,EAAQhP,IAAMtb,EACdsqB,EAAQ/O,IAAMtb,EACdqqB,EAAQzrB,GAAKyrB,EAAQhP,GACrBgP,EAAQxrB,GAAKwrB,EAAQ/O,IACd,EAGT,OAAO,EAOF,SAASkO,GAAUjR,GAA+B,IAAxBgS,EAAuB,wDAClDtW,EAAO5S,OAAOC,MAAM2S,KACxB,GAAKA,EAAKsH,MAAV,CAGA,IAAM9K,EAAY8H,EAAM9H,WAAavR,EAAE8F,aACnCwlB,GAAQ,EAN0C,EAOLR,GAAyBzR,GAA5DkS,EAPwC,EAO/ClE,OAA0BmE,EAPqB,EAO1BvS,KAC5B,GAAKsS,EAAL,CAGA,GAAIC,EAAeja,EAAW,CAC5B,IAD4B,EACxB6Z,EAAc/S,EAAM/X,YAAY+Y,EAAM3Z,EAAG2Z,EAAM1Z,EAAG4rB,EAAa7rB,EAAG6rB,EAAa5rB,GADvD,EAET0Y,EAAM1X,cAAcyqB,EAAa,GAAK/R,EAAMxI,YAA1DhQ,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,KAFiB,eAITqB,OAAOC,MAAMC,OAAO+T,OAAOlB,SAJlB,IAI5B,2BAAuD,CAAC,IAA/CtV,EAA8C,QACrD,GAAIyY,EAAM3Z,gBAAgB2a,EAAM3Z,EAAImB,EAAMwY,EAAM1Z,EAAImB,EAAMlB,EAAOF,EAAGE,EAAOD,GAAMC,EAAO4Q,OAAS6I,EAAM7I,OAAS,GAAK,CACnH,IAAMib,EAAcpT,EAAM/X,YAAY+Y,EAAM3Z,EAAG2Z,EAAM1Z,EAAGC,EAAOF,EAAGE,EAAOD,GACrEgjB,EAAU8I,EAAcL,EACxBM,EAAa/I,GAAW,GAAM,EAAI,EAClC5jB,KAAK6jB,IAAID,GAAW5jB,KAAKS,KAC3BksB,IAAyB,GAE3B,IAAMC,EAAUF,EAAeC,EAAY3sB,KAAKS,GAAK,EAP8D,EAQnG6Y,EAAM1X,cAAcgrB,EAAS,GAAKtS,EAAMxI,YAAtDhQ,EARiH,EAQjHA,KAAMC,EAR2G,EAQ3GA,OAbgB,+BAiBvBuqB,GAAmBG,EAAgBzW,EAAKmG,YAAc7B,EAAM7I,OAAS,KACxE3P,EAAO,EACPC,EAAO,GAnBmB,MAsBmBmqB,GAAsB5R,EAAM3Z,EAAImB,EAAMwY,EAAM1Z,EAAImB,EAAMuY,EAAM0C,IAA5F6P,EAtBa,EAsBrBvE,OAA2BwE,EAtBN,EAsBA5S,KACxB2S,GAAgBC,EAAaxS,EAAM7I,OAASob,EAAYpb,OAAS,KACnE3P,EAAO,EACPC,EAAO,GAELuY,EAAMjJ,MAAQiJ,EAAMhJ,UACtB2a,GAAqB3R,GAEvBA,EAAM3Z,GAAKmB,EACXwY,EAAM1Z,GAAKmB,EACXuY,EAAM4B,SAAWmQ,EACjBE,GAAQ,EAKV,OAHIE,EAAepO,EAAI+I,mBAAmB9M,IACxCsR,GAAQtR,EAAOkS,EAAa7rB,EAAG6rB,EAAa5rB,EAAG,KAE1C2rB,IAQF,SAASL,GAAsBvrB,EAAGC,GAAqB,IAAD,EAAjBmsB,EAAiB,uDAAR,OAC/CzE,EAAS,KACTjT,EAAU,KAF6C,eAGzCjS,OAAOC,MAAMC,OAAO+T,OAAOnB,OAHc,IAG3D,2BAAoD,CAAC,IAA5CoE,EAA2C,QAClD,GAAIA,EAAMgD,OAAShD,EAAM4C,QAAUjc,EAAEuK,OAAS8O,EAAM0C,KAAO+P,EAAQ,CACjE,IAAI7S,EAAOZ,EAAM3Z,gBAAgBgB,EAAGC,EAAG0Z,EAAM3Z,EAAG2Z,EAAM1Z,KACjD0nB,GAAWpO,EAAO7E,KACrBiT,EAAShO,EACTjF,EAAU6E,KAR2C,8BAY3D,MAAO,CAACoO,OAAQA,EAAQpO,KAAM7E,GAOzB,SAAS8W,GAAuBxrB,EAAGC,GACxC,IAD2C,EACrCoV,EAAO5S,OAAOC,MAAM2S,KACtBsS,EAAStS,EACTX,EAAUiE,EAAM3Z,gBAAgBgB,EAAGC,EAAGoV,EAAKrV,EAAGqV,EAAKpV,GAHZ,eAI1BwC,OAAOC,MAAMC,OAAO+T,OAAOnB,OAJD,IAI3C,2BAAmD,CAAC,IAA3CF,EAA0C,QACjD,GAAIA,EAAKsH,OAAStH,EAAKkH,QAAUjc,EAAEsK,OAAQ,CACzC,IAAI2O,EAAOZ,EAAM3Z,gBAAgBgB,EAAGC,EAAGoV,EAAKrV,EAAGqV,EAAKpV,KAC/C0nB,GAAWpO,EAAO7E,KACrBiT,EAAStS,EACTX,EAAU6E,KAT2B,8BAa3C,MAAO,CAACoO,OAAQA,EAAQpO,KAAM7E,GAIzB,SAASoQ,GAA4BnL,GAAQ,IAAD,iBAC9BlX,OAAOC,MAAMC,OAAO+T,OAAOlB,SADG,IACjD,2BAAuD,CAAC,IAA/CtV,EAA8C,QAC1CyY,EAAM3Z,gBAAgB2a,EAAM3Z,EAAG2Z,EAAM1Z,EAAGC,EAAOF,EAAGE,EAAOD,IACvD0Z,EAAM7I,OAAS5Q,EAAO4Q,QACjC4M,EAAImG,YAAYlK,EAAO,OAJsB,+BAS5C,SAASoL,GAA0B1P,GAAO,IAAD,iBACxB5S,OAAOC,MAAMC,OAAO+T,OAAOnB,OADH,IAC9C,2BAAwD,CAAC,IAAhD8W,EAA+C,QACtD,GAAIA,EAAU1P,OAAStH,IAASgX,EACnB1T,EAAM3Z,gBAAgBqW,EAAKrV,EAAGqV,EAAKpV,EAAGosB,EAAUrsB,EAAGqsB,EAAUpsB,IAC3DoV,EAAKvE,OAASub,EAAUvb,SACnC4M,EAAI4D,aAAajM,EAAMgX,GACnBhX,EAAKpH,OAAS3N,EAAEgT,wBAAwBrF,MAAQoe,EAAU9P,QAAUlH,EAAKkH,QAC3E8P,EAAU9P,MAAQlH,EAAKkH,SAPe,+BAczC,SAAS+O,GAAqBjW,GACnC,IAAMmQ,EAAc8G,GAAUjX,IACzBmQ,GAAeA,EAAYjW,KAAO,IAGvCmO,EAAIsH,aAAa3P,EAAMmQ,EAAYhV,QACnCgV,EAAYjW,KAAOiW,EAAYlW,UAG1B,SAASgd,GAAUjX,GACxB,IAAK,IAAIoD,EAAI,EAAGA,EAAIpD,EAAK7D,MAAMoH,OAAQH,IAAK,CAC1C,IAAMjH,EAAQ6D,EAAK7D,MAAMiH,GACzB,GAAKjH,EAAMrD,OAAS7N,EAAEmM,6BAAgC+E,EAAMhB,OAC1D,OAAOgB,EAGX,OAAO,KCvPF,SAAS+a,GAAiB5nB,EAAK6nB,GACnBC,aAAaC,QAAQ/nB,IAEpC8nB,aAAaE,WAAWhoB,GAE1B8nB,aAAaG,QAAQjoB,EAAKkoB,KAAKC,UAAUN,IAOpC,SAASO,GAAiBpoB,GAC/B,GAAKA,EAAL,CAIA,IAAMqoB,EAAYP,aAAaC,QAAQ/nB,GAEvC,OAAKqoB,EAGEH,KAAKI,MAAMD,GAFT,KANP/S,QAAQC,KAAK,6CAWjB,SAASgT,GAAUhoB,GACjB,IAAIioB,EAAKjoB,EAAMyiB,OAAOyF,OAClBloB,EAAMmoB,YAAc,GACtBF,EAAGG,kBApCa,SAsClBH,EAAGI,kBAtCe,QAsCgB,CAACC,QAAS,iBAOvC,SAASC,GAAU9oB,GACxB,IAAI+oB,EAAYC,UAAUC,KA7CZ,aACG,GA6CjBF,EAAUG,QAAU,SAAU3oB,GAC5B+U,QAAQuF,IAAI,SAAUta,IAExBwoB,EAAUI,gBAAkBZ,GAC5BQ,EAAUK,UAAY,SAAU7oB,GAC9B,IAGI8oB,EAHK9oB,EAAMyiB,OAAOyF,OACDa,YAAY,CArDjB,UAsDcC,YAtDd,SAuDUnV,IAAIpU,GAC9BqpB,EAAQH,QAAU,SAAU3oB,GAC1B+U,QAAQuF,IAAI,yBAA0Bta,IAExC8oB,EAAQD,UAAY,SAAU7oB,GAC5B,IAAMipB,EAAWH,EAAQZ,OACnBgB,EAAY3rB,OAAOC,MAAMC,OAC/BF,OAAOC,MAAQyrB,EACf1rB,OAAOC,MAAMC,OAASyrB,EAGtB3rB,OAAOC,MAAMC,OAAOmU,iBAAiBtB,QAAQ6Y,iBAC7C5rB,OAAOC,MAAMC,OAAOgU,kBAAoB,GACxClU,OAAOC,MAAMC,OAAOmU,iBAAiBvB,MAAM8Y,iBAC3C5rB,OAAOC,MAAMC,OAAOiU,gBAAkB,GACtCnU,OAAOC,MAAMC,OAAOkU,kBAAoB,IAAIvC,IAC5C7R,OAAOC,MAAMC,OAAO8T,QAAU,GAC9BhU,OAAOC,MAAMC,OAAOmU,iBAAiBL,QAAQ4X,iBAG7C5rB,OAAOC,MAAM2S,KAAKmF,SAAW,KACV0G,EAAKxJ,cAAcjV,OAAOC,MAAM2S,MACxCsC,SAAU,EACrB+F,EAAIoE,mBACJnJ,EAAMjT,UAAU,iBAMf,SAAS4oB,GAAU3pB,GACxB,IAAM4pB,EAAezY,KAAOC,UAAUD,KAAO0Y,KAAK/rB,OAAOC,MAAO,CAAC,YACjE6rB,EAAanZ,aAAezQ,EAE5B,IAAI+oB,EAAYC,UAAUC,KAxFZ,aACG,GAwFjBF,EAAUG,QAAU,SAAU3oB,GAC5B+U,QAAQuF,IAAI,oBAAqBta,IAEnCwoB,EAAUI,gBAAkBZ,GAC5BQ,EAAUK,UAAY,SAAU7oB,GAC9B,IAGIupB,EAHKvpB,EAAMyiB,OAAOyF,OACDa,YAAY,CAhGjB,SAgGgC,aAClBC,YAjGd,SAkGqBQ,IAAIH,GACzCE,EAAmBV,UAAY,SAAU7oB,GACvCyT,EAAMjT,UAAU,eAElB+oB,EAAmBZ,QAAU,SAAU3oB,GACrC+U,QAAQuF,IAAI,kBAAmBta,EAAMyiB,UAKpC,SAASgH,GAAYhqB,GAC1B,IAAI+oB,EAAYC,UAAUC,KA5GZ,aACG,GA4GjBF,EAAUG,QAAU,SAAU3oB,GAC5B+U,QAAQuF,IAAI,oBAAqBta,IAEnCwoB,EAAUI,gBAAkBZ,GAC5BQ,EAAUK,UAAY,SAAU7oB,GAC9B,IAGIupB,EAHKvpB,EAAMyiB,OAAOyF,OACDa,YAAY,CApHjB,SAoHgC,aAClBC,YArHd,SAsHqBU,OAAOjqB,GAC5C8pB,EAAmBV,UAAY,SAAU7oB,GACvCyT,EAAMjT,UAAU,gBAAkBf,IAEpC8pB,EAAmBZ,QAAU,SAAU3oB,GACrC+U,QAAQuF,IAAI,oBAAqBta,EAAMyiB,U,sBCzHhCkH,GACH,oBADGA,GAEN,kBAFMA,GAGJ,oBAGF,SAASC,GAAT,GAAqC,IAAnB3gB,EAAkB,EAAlBA,KAAM4gB,EAAY,EAAZA,KAAMrtB,EAAM,EAANA,IACnC,GAAIyM,IAAS0gB,IACX1gB,IAAS0gB,IACT1gB,IAAS0gB,GAET,OADA5U,QAAQC,KAAK,wBAAwB/L,GAC9B,+BAGT,IACM6gB,EAAU,IAlBC,KAiBLD,EAAOrtB,GAIfutB,EAAc,WAAW9gB,IAAS0gB,GAAcA,GAAcA,IAOlE,OAJI1gB,IAAS0gB,IAAkBG,EAAU,KACvCC,EAAc,4BAId,0BAAMC,UAAU,oBAAoBC,MAAO,CAAChpB,MAAMipB,OAAiB1T,OAAO2T,UACxE,0BAAMH,UAAU,gBACd,yBAAKI,IAAI,0BAA0BnpB,MAAOipB,OAAgB1T,OAAQ2T,QAAiBE,IAAI,UAEzF,0BAAML,UAAU,iBACd,yBAAKI,IAAKL,EAAa9oB,MAAOipB,OAAgB1T,OAAQ2T,QAAiBE,IAAI,OAAOJ,MAAO,CACvFK,SAAU,SAASR,EAAQ,wB,MChC9B,SAASS,GAAT,GAA2C,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,SAC9BC,EAAUF,EAAW,4BAA8B,6BACzD,OACE,yBAAKJ,IAAKM,EAASzpB,MAAOipB,OAAkB1T,OAAQ2T,OAAmBE,IAAI,SAASM,QAAS,WAC3FF,O,UCDAG,GACG,wBADHA,GAEC,sBAFDA,GAGI,yBAHJA,GAIG,wBAuBF,SAASC,GAAT,GAAoC,IAAD,EApB1C,SAAmBhB,EAAMrtB,GACvB,OAAKA,GAAOA,GAAO,EACV,CAACsuB,UAAW,EAAGf,YAAa,UAAYa,IAE7Cf,GAAQrtB,EACH,CAACsuB,UAAW,EAAGf,YAAa,UAAYa,IAG7Cf,EAAOrtB,EAlBM,GAqBR,CAACsuB,UAvBM,IAGH,EAmBgC,IAD/BjB,GAnBG,GAmBKrtB,KAEDutB,YAAa,UAAYa,IAKvC,CAACE,UA5BQ,IAGH,EAwB8B,KAD9BjB,EAxBI,GAwBIrtB,IAAsBA,GAAO,EAxBjC,OA0BEutB,YAAa,UAAYa,IAMXG,CAFO,EAAZlB,KAAY,EAANrtB,KAE3BsuB,EAFiC,EAEjCA,UAAWf,EAFsB,EAEtBA,YAElB,OACE,0BAAMC,UAAU,yBAAyBC,MAAO,CAAChpB,MAAOipB,OAAkB1T,OAAQ2T,SAChF,0BAAMH,UAAU,qBACd,yBAAKI,IAAK,UAAYQ,GAAc3pB,MAAOipB,OAAkB1T,OAAQ2T,OAAmBE,IAAI,YAE9F,0BAAML,UAAU,sBACd,yBAAKI,IAAKL,EAAa9oB,MAAOipB,OAAkB1T,OAAQ2T,OAAmBE,IAAI,OAAOJ,MAAO,CAC3FK,SAAU,aAAeQ,EAAY,mBCxCxC,SAASE,KACd,IAAM7a,EAAO5S,OAAOC,MAAM2S,KACpB7E,EAASkN,EAAIoF,kBAAkBzN,GAErC,OACE,yBAAK6Z,UAAU,UACVC,MAAO,CAACgB,gBAAiB,oCAAqCC,eAAgB,QAAS1U,OAAQ,SAClG,6BAAMrG,EAAKpH,MAEX,+BACE,+BACA,4BACE,wBAAIkhB,MAAO,CAACkB,aAAc,SAA1B,SACA,wCAGF,+BACA,4BACE,wBAAIlB,MAAO,CAACmB,UAAW,WACrB,kBAAC,GAAD,CAASniB,KAAM0gB,GAAeE,KAAM1Z,EAAK3E,MAAOhP,IAAK2T,EAAK1E,YAE5D,4BACGH,GAAUA,EAAOA,OAAOC,QACzB,8BACI,kBAAC,GAAD,CAAStC,KAAM0gB,GAAaE,KAAMve,EAAOA,OAAOd,SAAUhO,IAAK8O,EAAOA,OAAOI,cAC7E,kBAAC,GAAD,CAASzC,KAAM0gB,GAAeE,KAAMve,EAAOA,OAAOE,MAAOhP,IAAK8O,EAAOA,OAAOG,cAKpF,4BACE,4BACGtR,KAAKsC,MAAM0T,EAAK3E,OADnB,MAC8B2E,EAAK1E,UAEnC,iCACA,oCAKJ,yBAAKue,UAAU,WAAf,cAAqC7Z,EAAK9D,SAA1C,IACE,+BACE,+BACC8D,EAAK7D,MAAMjP,KAAI,SAACiP,EAAOiH,GACtB,OAAO,wBAAI9T,IAAK8T,EAAGyW,UAAU,SAC3B,4BACG1d,EAAMrD,OAAS7N,EAAEmM,6BAClB,kBAAC,GAAD,CAAYijB,SAAUjX,IAAMpD,EAAKmH,6BAA8BmT,SAAU,WACvEta,EAAKmH,6BAA+B/D,MAGxC,4BACE,kBAAC,GAAD,CAAcsW,KAAMvd,EAAMlC,SAAWkC,EAAMjC,KAAM7N,IAAK8P,EAAMlC,YAE9D,4BACGkC,EAAMvD,aAQjB,yBAAKihB,UAAU,WACb,+BACE,+BACA,4BACE,wBAAIA,UAAU,wBACZ,yBAAKA,UAAU,yBACb,yBAAKI,IAAI,yBAAyBJ,UAAU,UAAUK,IAAI,gBAE5D,yBAAKL,UAAU,mBACb,2BAAOqB,YAAY,KACjB,+BACA,4BACE,wBAAIC,QAAQ,QAAZ,eAGF,+BACA,4BACE,wCACA,4BAAKnxB,KAAKsC,MAAM0T,EAAK/D,UAAUvG,YAEjC,4BACE,oCACA,4BAAK1L,KAAKsC,MAAM0T,EAAK/D,UAAUtG,QAEjC,4BACE,uCACA,4BAAK3L,KAAKsC,MAAM0T,EAAK/D,UAAUrG,oB,YC3F5C,SAASwlB,KAAgB,IAAD,EACSC,mBAAS,IADlB,oBACtBC,EADsB,KACTC,EADS,OAECF,mBAAS,IAFV,oBAEtBG,EAFsB,KAEbC,EAFa,OAGOJ,mBAAS,IAHhB,oBAGtBK,EAHsB,KAGVC,EAHU,KAKzBtuB,EAAQD,OAAOC,MACfxC,EAASuC,OAAOC,MAAM+S,eACtBJ,EAAO5S,OAAOC,MAAM2S,KACpB4b,EAAiB/wB,IAAWuC,OAAOC,MAAMgT,kBAAqBL,EAAKsH,MACvE,OACE,yBAAKuS,UAAU,eACb,yBAAKA,UAAU,WAAU,4CAAzB,IAA+CxsB,EAAM+S,eAAexH,MACpE,yBAAKihB,UAAU,gBACb,4BACEgC,UAAWhQ,EAAKrC,UAAU3e,EAAS+wB,EAAe5b,EAAO,KAAO/U,EAAE2L,WAClE4jB,QAAS,kBAAM1U,EAAO4L,cAFxB,cADF,WAKWzmB,EAAE2L,UAAUlB,SALvB,MAKoCzK,EAAE2L,UAAUjB,MAEhD,yBAAKkkB,UAAU,gBACb,4BACEgC,UAAWhQ,EAAKrC,UAAU3e,EAAS+wB,EAAe5b,EAAO,KAAO/U,EAAE8L,cAClEyjB,QAAS,kBAAM1U,EAAOqN,iBAFxB,iBADF,WAKWloB,EAAE8L,aAAarB,SAL1B,MAKuCzK,EAAE8L,aAAapB,KALtD,MAK+D1K,EAAE8L,aAAanB,SAG9E,yBAAKkkB,MAAO,CAACgC,QAAQ9b,EAAKsH,MAAM,QAAQ,QAASuS,UAAU,gBACzD,yBAAKA,UAAU,WAAU,mCAAzB,KAAuC7vB,KAAK+xB,MAAM/b,EAAK3E,OAAQ,MAAO2E,EAAK1E,SAA3E,MACA,4BAAQwe,MAAO,CAACkC,WAAW,QACnBxB,QAAS,kBAAM1U,EAAOgN,WAAW9S,EAAMnV,KAD/C,UAIA,4BAAQivB,MAAO,CAACkC,WAAW,QACnBxB,QAAS,kBAAM1U,EAAOiN,aAAa/S,EAAMnV,KADjD,YAIA,4BAAQivB,MAAO,CAACkC,WAAW,QACnBxB,QAAS,kBAAM1U,EAAOqO,WAAWnU,EAAMnV,IACvCgxB,SAAU7b,EAAK1E,UAAY0E,EAAK3E,OAFxC,WAOF,yBAAKwe,UAAU,WACb,yCAEF,yBAAKA,UAAU,YAAf,YAAoC7vB,KAAKsC,MAAMzB,EAAOoR,UAAU+I,IAAItP,WACpE,yBAAKmkB,UAAU,YAAf,QAAgC7vB,KAAKsC,MAAMzB,EAAOoR,UAAU+I,IAAIrP,OAChE,yBAAKkkB,UAAU,YAAf,WAAmC7vB,KAAKsC,MAAMzB,EAAOoR,UAAU+I,IAAIpP,UAElEgmB,GAAgB,2BAAQ/B,UAAU,YACjC,+BACA,4BACE,wCACA,sCACA,wCACA,qCAAW7Z,EAAKhE,aAAhB,OAGF,+BACA,4BACE,wCACA,4BAAKhS,KAAKsC,MAAMzB,EAAOoR,UAAU8I,OAAOrP,WACxC,4BACI,0BAAMmkB,UAAU,kBACVW,QAAS,kBAAM1U,EAAOsM,iBAAiBpS,EAAK/D,UAAWpR,EAAOoR,UAAU8I,OACtE,WAAYuW,EAAarwB,EAAE8K,uBAAsB,uBAAG8jB,UAAU,oBAAb,MAC3D,2BAAO/gB,KAAK,OAAO+gB,UAAU,iBACtBoC,aAAcX,EACdhB,SAAU,SAACzqB,GAAD,OAAW0rB,EAAe1rB,EAAMyiB,OAAOjjB,UACxD,0BAAMwqB,UAAU,kBACVW,QAAS,kBAAM1U,EAAOsM,iBAAiBvnB,EAAOoR,UAAU8I,OAAQ/E,EAAK/D,UACnE,WAAYqf,EAAatb,EAAKhE,gBAAe,uBAAG6d,UAAU,qBAAb,OAEvD,4BAAK7vB,KAAKsC,MAAM0T,EAAK/D,UAAUvG,YAEjC,4BACE,oCACA,4BAAK1L,KAAKsC,MAAMzB,EAAOoR,UAAU8I,OAAOpP,OACxC,4BACI,0BAAMkkB,UAAU,kBACVW,QAAS,kBAAM1U,EAAOsM,iBAAiBpS,EAAK/D,UAAWpR,EAAOoR,UAAU8I,OACtE,OAAQyW,EAASvwB,EAAE8K,uBAAsB,uBAAG8jB,UAAU,oBAAb,MACnD,2BAAO/gB,KAAK,OAAO+gB,UAAU,iBACtBoC,aAAcT,EACdlB,SAAU,SAACzqB,GAAD,OAAW4rB,EAAW5rB,EAAMyiB,OAAOjjB,UACpD,0BAAMwqB,UAAU,kBACVW,QAAS,kBAAM1U,EAAOsM,iBAAiBvnB,EAAOoR,UAAU8I,OAAQ/E,EAAK/D,UACnE,OAAQuf,EAASxb,EAAKhE,gBAAe,uBAAG6d,UAAU,qBAAb,OAE/C,4BAAK7vB,KAAKsC,MAAM0T,EAAK/D,UAAUtG,QAEjC,4BACE,uCACA,4BAAK3L,KAAKsC,MAAMzB,EAAOoR,UAAU8I,OAAOnP,UACxC,4BACI,0BAAMikB,UAAU,kBACVW,QAAS,kBAAM1U,EAAOsM,iBAAiBpS,EAAK/D,UAAWpR,EAAOoR,UAAU8I,OACtE,UAAW2W,EAAYzwB,EAAE8K,uBAAsB,uBAAG8jB,UAAU,oBAAb,MACzD,2BAAO/gB,KAAK,OAAO+gB,UAAU,iBACtBoC,aAAcP,EACdpB,SAAU,SAACzqB,GAAD,OAAW8rB,EAAc9rB,EAAMyiB,OAAOjjB,UACvD,0BAAMwqB,UAAU,kBACVW,QAAS,kBAAM1U,EAAOsM,iBAAiBvnB,EAAOoR,UAAU8I,OAAQ/E,EAAK/D,UACnE,UAAWyf,EAAY1b,EAAKhE,gBAAe,uBAAG6d,UAAU,qBAAb,OAErD,4BAAK7vB,KAAKsC,MAAM0T,EAAK/D,UAAUrG,cAKjCgmB,GACF,+BACE,+BACA,4BACE,wCACA,wCAGF,+BACA,4BACE,wCACA,4BAAK5xB,KAAKsC,MAAMzB,EAAOoR,UAAU8I,OAAOrP,YAE1C,4BACE,oCACA,4BAAK1L,KAAKsC,MAAMzB,EAAOoR,UAAU8I,OAAOpP,QAE1C,4BACE,uCACA,4BAAK3L,KAAKsC,MAAMzB,EAAOoR,UAAU8I,OAAOnP,c,8CCpI3C,SAASsmB,GAAT,GAAuC,IAAZC,EAAW,EAAXA,SAC1B9uB,EAAQD,OAAOC,MACfxC,EAASwC,EAAM+S,eACfJ,EAAO3S,EAAM2S,KACfoc,EAAqBD,EAAStjB,UAAY5N,EAAEgN,SAC9CpN,EAAOqV,MAAM2T,QAAO,SAAA5I,GAAC,OAAGA,EAAErS,OAASujB,EAASvjB,QAAM2K,OAClD1Y,EAAOsR,MAAM0X,QAAO,SAAApI,GAAC,OAAGA,EAAE7S,OAASujB,EAASvjB,QAAM2K,OAepD,OAZIvD,EAAKsH,OAAS6U,EAASvjB,OAASoH,EAAKpH,OACvCwjB,GAAqB,GAYrB,4BACE,4BACGA,GAEH,4BACA,4BAAQvC,UAAU,iBAChBgC,UAAW/V,EAAOiO,WAAWlpB,KAAYghB,EAAKrC,UAAU3e,EAAQmV,EAAMmc,EAASnjB,MAC/EwhB,QAAS,WAhBf,IAAe6B,KAgBYF,GAfTtjB,UAAY5N,EAAEgN,SAC5B6N,EAAOuN,UAAUgJ,GACRA,EAAYxjB,UAAY5N,EAAE+M,WACnC8N,EAAOkO,WAAWqI,KAYiBF,EAASvjB,OAE5C,4BACE,0BAAMihB,UAAU,QAAQsC,EAASnjB,KAAKtD,SAAtC,KAAkDymB,EAASnjB,KAAKrD,KAAhE,KAAwEwmB,EAASnjB,KAAKpD,QAAtF,OC/BD,SAAS0mB,GAAT,GAA2C,IAAtBxjB,EAAqB,EAArBA,KAAMyjB,EAAe,EAAfA,aAChC,OACE,yBAAK1C,UAAU,wBAAwBC,MAAO,CAAC0C,UAAYvxB,EAAE8G,cAAgB,IAAM0qB,SAAS,UAC1F,+BACE,+BACGF,EAAarvB,KAAI,SAACivB,EAAU/Y,GAC3B,OAAO,kBAAC,GAAD,CAAkB9T,IAAKwJ,EAAKsK,EAAG+Y,SAAUA,UCJrD,SAASO,KACd,IAAMvgB,EAAQ/O,OAAOC,MAAMkT,WAAWpE,MAEhCwgB,EAAYxgB,EAAM0X,QAAO,SAACpI,GAAD,OAAOxgB,EAAEuT,eAAe4W,MAAK,SAAAlmB,GAAC,OAAIA,EAAE0J,OAAS6S,EAAE7S,WACxEgkB,EAAiBzgB,EAAM0X,QAAO,SAACpI,GAAD,OAAOxgB,EAAEwT,sBAAsB2W,MAAK,SAAAjoB,GAAC,OAAIA,EAAEyL,OAAS6S,EAAE7S,WACpFikB,EAAmB1gB,EAAM0X,QAAO,SAACpI,GAAD,OAAOxgB,EAAEyT,wBAAwB0W,MAAK,SAAAnK,GAAC,OAAIA,EAAErS,OAAS6S,EAAE7S,WACxFkkB,EAAS3gB,EAAM0X,QAAO,SAACpI,GAAD,OAAOxgB,EAAE0T,aAAayW,MAAK,SAAA1K,GAAC,OAAIA,EAAE9R,OAAS6S,EAAE7S,WAEzE,OACE,yBAAKihB,UAAU,gBACb,kBAACkD,GAAA,EAAD,CAAMC,iBAAiB,QAAQhW,GAAG,eAAe6S,UAAU,eACzD,kBAACoD,GAAA,EAAD,CAAKC,SAAS,QAAQzsB,MAAM,SAC1B,kBAAC,GAAD,CAAYqI,KAAK,OAAOyjB,aAAcnvB,OAAOC,MAAMkT,WAAWP,QAG/D2c,GAAYA,EAASpZ,OAAS,GAC/B,kBAAC0Z,GAAA,EAAD,CAAKC,SAAS,WAAWzsB,MAAM,YAC7B,kBAAC,GAAD,CAAYqI,KAAK,QAAQyjB,aAAcI,KAIxCC,GAAkBA,EAAerZ,OAAS,GAC3C,kBAAC0Z,GAAA,EAAD,CAAKC,SAAS,iBAAiBzsB,MAAM,mBACnC,kBAAC,GAAD,CAAYqI,KAAK,QAAQyjB,aAAcK,KAIxCC,GAAoBA,EAAiBtZ,OAAS,GAC/C,kBAAC0Z,GAAA,EAAD,CAAKC,SAAS,mBAAmBzsB,MAAM,qBACrC,kBAAC,GAAD,CAAYqI,KAAK,QAAQyjB,aAAcM,KAIxCC,GAAUA,EAAOvZ,OAAS,GAC3B,kBAAC0Z,GAAA,EAAD,CAAKC,SAAS,SAASzsB,MAAM,UAC3B,kBAAC,GAAD,CAAYqI,KAAK,QAAQyjB,aAAcO,O,MCtC1C,SAASK,KAAiB,IAAD,EACU9B,qBADV,oBACvB+B,EADuB,KACTC,EADS,KAE1BhwB,EAAQD,OAAOC,MACfxC,EAASwC,EAAM+S,eACfkd,EAAcjwB,EAAM2S,KACpB4b,EAAiB/wB,IAAWuC,OAAOC,MAAMgT,kBAAqBid,EAAYhW,OAiBzE8V,GAAgBxB,GACnByB,EAAgBC,GAGlB,IAAIC,EAAoB,GACxB,GAAIH,EAAc,CAAC,IAAD,iBACEA,EAAajhB,OADf,yBACPA,EADO,QAEdohB,EAAkB9vB,KAChB,yBAAKosB,UAAU,OAAOvqB,IAAK6M,EAAM6K,IAC9B7K,EAAMvD,KADT,QAEE,4BAAQ4hB,QAAS,kBAAM1U,EAAO6O,0BAA0ByI,EAAcvyB,EAAQsR,KAA9E,aAJN,2BAAuC,IADvB,+BAUlB,OACE,6BACE,yBAAK0d,UAAU,mBACb,yBAAKA,UAAU,SAAf,SACA,0BAAMA,UAAU,cACZ+B,EAAe,CAAC0B,GAAe,IAAIE,OAAO3yB,EAAOqV,OAAOhT,KAAI,SAAC8S,EAAMoD,GACnE,OAAO,yBAAK9T,IAAK8T,EACLoX,QAAS,kBArC/B,SAAkBxa,GAChBqd,EAAgBrd,GAoCmByd,CAASzd,IACxB6Z,UAAS,eAAUuD,IAAiBpd,EAAO,gBAAkB,sBAAwBA,EAAKpH,UAG1G,0BAAMihB,UAAU,gBACG,MAAhBuD,GACD,6BACE,yBAAKvD,UAAU,aACb,4BAAQW,QAAS,kBAxC3B1U,EAAO0N,aAAa4J,QACpBC,EAAgB,OAuCmCxB,SAAUuB,IAAiBE,GAApE,YACA,4BAAQ9C,QAAS,kBArC7B,SAAqB4C,GACnBtX,EAAOmP,YAAYpqB,EAAQuyB,GAC3BC,EAAgB,MAmCiBpI,CAAYmI,IAAetD,MAAO,CAACkC,WAAW,SAArE,YAEF,yBAAKnC,UAAU,aAAY,mCAA3B,IAAwCuD,EAAaxkB,KAArD,IAA4DwkB,EAAapW,IACzE,yBAAK6S,UAAU,aACb,qCADF,eAC4B7vB,KAAKsC,MAAgC,IAA1B8wB,EAAathB,YADpD,SAC6E9R,KAAKsC,MAA+B,IAAzB8wB,EAAarhB,YAErG,yBAAK8d,UAAU,aACb,sCADF,UACwB7vB,KAAKsC,MAAM8wB,EAAahhB,YADhD,UACoEpS,KAAKsC,MAAgC,GAA1B8wB,EAAa/gB,aAE5F,yBAAKwd,UAAU,aAAY,oCAA3B,QACG7vB,KAAKsC,MAAM8wB,EAAa/hB,OAD3B,OACuCrR,KAAKsC,MAAM8wB,EAAa9hB,UAD/D,OAEE,4BAAQkf,QAAS,kBAAM1U,EAAOqO,WAAWiJ,EAAcvyB,IAC/CgxB,SAAUuB,EAAa9hB,UAAY8hB,EAAa/hB,OADxD,WAFF,aAKerR,KAAKsC,MAAMwZ,EAAOoO,aAAakJ,GAAc1nB,UAL5D,aAOA,yBAAKmkB,UAAU,aAAY,4CAAqB7vB,KAAKsC,MAAM8wB,EAAaphB,eACxE,yBAAK6d,UAAU,aAAY,oCAA3B,SAA8CuD,EAAalhB,SAA3D,IACGqhB,MAOT,yBAAK1D,UAAU,mBACb,yBAAKA,UAAU,SAAf,aACA,0BAAMA,UAAU,cACbhvB,EAAOsR,MAAMjP,KAAI,SAACiP,EAAOiH,GACxB,OAAO,yBAAK9T,IAAK8T,EAAGyW,UAAU,QAC3B1d,EAAMvD,KADF,QAEL,4BAAQ4hB,QAAS,kBAAM1U,EAAO0O,0BAA0B4I,EAAcvyB,EAAQsR,IACtE0f,UAAW/V,EAAOoP,SAASkI,EAAcjhB,IADjD,SAIA,4BAAQqe,QAAS,kBAAM1U,EAAOkP,aAAanqB,EAAQsR,IAAQ2d,MAAO,CAACkC,WAAW,SAA9E,kB,MCtFP,SAAS0B,KACd,IAAMrwB,EAAQD,OAAOC,MACfswB,EAAYC,mBACdC,EAAYC,EAASpG,iBAAiBzsB,EAAE6G,6BAE5C,SAASisB,EAAeC,GACtBL,EAAUM,QAAQ5uB,MAAQ2uB,EAC1B3wB,EAAM0S,aAAeie,EACrBpZ,QAAQuF,IAAI,YAAc6T,GAM5B,SAASE,EAAYC,GACfA,IAAgBN,EAAU1I,SAASgJ,IACrCN,EAAUpwB,KAAK0wB,GAEjBL,EAAS5G,iBAAiBjsB,EAAE6G,4BAA6B+rB,GA0C3D,OAtCKA,IACHA,EAAY,GACZK,EAAY,OAqCZ,6BACE,yBAAKrE,UAAU,kBACb,yBAAKA,UAAU,WAAU,4CACzB,2BAAO/gB,KAAK,OAAOmjB,aAAc5uB,EAAM0S,aAAcqe,QAAS,kBAAM/wB,EAAMC,OAAOyT,UAAW,GACrFsd,OAAQ,kBAAMhxB,EAAMC,OAAOyT,UAAW,GAAOud,IAAKX,IACzD,4BAAQ/kB,KAAK,OAAO4hB,QAAS,kBAvCnC,WACE,IAAMza,EAAe4d,EAAUM,QAAQ5uB,MAClC0Q,GAKL+d,EAAS7E,UAAUlZ,GAEnBme,EAAYne,GACZge,EAAehe,IAPb1P,EAAU,iCAoC2BkuB,KAAnC,QACA,yBAAK1E,UAAU,WAAU,0CACxBgE,EAAU3wB,KAAI,SAAAsxB,GAAQ,OACrB,yBAAKlvB,IAAKkvB,EAAU3E,UAAW,kBAAoBxsB,EAAM0S,eAAiBye,EAAW,gBAAkB,KACrG,0BAAM3E,UAAU,kBAAiB,4BAAQW,QAAS,kBA9B5D,SAAkBgE,GAChBV,EAAS1F,UAAUoG,GACnBT,EAAeS,GA4BiDC,CAASD,KAAhC,UACjC,0BAAM3E,UAAU,kBAAiB,4BAAQW,QAAS,kBA1B5D,SAAoBgE,GACbpxB,OAAOsxB,QAAQ,mCAAqCF,EAAW,OAGpEV,EAASxE,YAAYkF,GACrBX,EAAYpd,KAAOiU,OAAOmJ,GAAW,SAACjlB,GAAD,OAAUA,IAAS4lB,KACxDV,EAAS5G,iBAAiBjsB,EAAE6G,4BAA6B+rB,GACrDxwB,EAAM0S,eAAiBye,IACzBnxB,EAAM0S,aAAe,MAEnB4d,EAAUM,QAAQ5uB,QAAUmvB,IAC9Bb,EAAUM,QAAQ5uB,MAAQ,KAeoCsvB,CAAWH,KAAlC,WACjC,0BAAM3E,UAAU,kBAAkB2E,S,YC1EvC,SAASI,KAAa,IAAD,EACpB9f,EAAK1R,OAAOC,MAAMkT,WAAWzB,GAE7BwB,EAAgBlT,OAAOC,MAAMiT,cAC/Bue,EAAe70B,KAAKsC,MAAOgU,EAAgB,KAAM,GACjDwe,EAAc,EACdD,EAAe,KACjBC,EAAc90B,KAAKsC,MAAMuyB,EAAe,IACxCA,EAAe70B,KAAKsC,MAAMuyB,EAA8B,GAAdC,IAG5C,IAAMC,GAAY,mBACf9zB,EAAEqJ,iBAAmB,eADN,cAEfrJ,EAAEoJ,gBAAkB,cAFL,cAGfpJ,EAAEkJ,kBAAoB,gBAHP,cAIflJ,EAAEmJ,mBAAqB,iBAJR,GAOlB,OACE,6BACE,yBAAKylB,UAAU,kBACb,yBAAKA,UAAU,WAAU,8CACzB,6BACE,2BAAOA,UAAU,aACf,+BACCmF,OAAOhZ,QAAQlH,GAAI5R,KAAI,SAAC+xB,GAAW,IAAD,eACZA,EADY,GAC1B3vB,EAD0B,KACrBD,EADqB,KAEjC,OAAIA,EACK,wBAAIC,IAAKA,GACd,4BAAI,2BAAIyvB,EAAazvB,IAAQA,IAC7B,4BAAKtF,KAAK+xB,MAAM1sB,KAGb,wBAAIC,IAAKA,SAIpB,yBAAKuqB,UAAU,cAAf,sBACsBiF,EAAcA,EAAc,SAASA,EAAc,EAAI,KAAM,KAAO,GAD1F,IAC+FD,EAD/F,WC/BH,SAASK,KAEd,OACE,kBAACnC,GAAA,EAAD,CAAMC,iBAAiB,SAAShW,GAAG,cAAcmY,cAAY,EAACC,eAAa,EAACvF,UAAU,eACpF,kBAACoD,GAAA,EAAD,CAAKC,SAAS,SAASzsB,MAAM,UAC3B,kBAAC,GAAD,OAGF,kBAACwsB,GAAA,EAAD,CAAKC,SAAS,UAAUzsB,MAAM,WAC5B,kBAACisB,GAAD,OAGF,kBAACO,GAAA,EAAD,CAAKC,SAAS,UAAUzsB,MAAM,WAC5B,kBAAC,GAAD,OAGF,kBAACwsB,GAAA,EAAD,CAAKC,SAAS,MAAMzsB,MAAM,OACxB,kBAAC,GAAD,OAGF,kBAACwsB,GAAA,EAAD,CAAKC,SAAS,SAASzsB,MAAM,UAC3B,kBAAC,GAAD,QCzBD,IAAM4uB,GAAb,uKAEI,IAAIhyB,EAAQD,OAAOC,MACnB,OAAIA,EAAMC,OAAOwT,YAAc7V,EAAEyG,WAAWG,OAClC,kBAAC,GAAD,MACCxE,EAAMC,OAAOwT,YAAc7V,EAAEyG,WAAWE,IACzC,kBAAC,GAAD,MAEF,wCARZ,GAA+B0tB,IAAMC,WCDhBC,G,kDAEnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA4BRC,cAAgB,WACd,IAAI7e,EAAM,IAAIzT,OAAOwV,KAAK+c,YAAY,CAAC7uB,MAAO7F,EAAE8F,aAAcsV,OAAQpb,EAAE8G,gBACxE8O,EAAI+e,SAASC,gBAAkB50B,EAAEmG,MACjC,EAAK0uB,QAAQ7B,QAAQ8B,YAAYlf,EAAIZ,MACrC7S,OAAOwV,KAAK4C,OACTwa,IAAI/0B,EAAEiI,kBACN8sB,IAAI/0B,EAAEmK,YACN6qB,KAAK,EAAKC,WACb9yB,OAAOC,MAAMC,OAAOuT,IAAMA,GArCT,EAyCnBqf,UAAY,WACVrU,EAAK9J,aACL,EAAKoe,yBACL,EAAKC,4BACLvU,EAAKtD,gBAAgBtd,EAAEyG,WAAWE,KAClCxE,OAAOC,MAAMC,OAAOuT,IAAI+e,SAASS,QAAQC,YAAYC,GAAG,eAAe,SAAC1wB,GACtEgc,EAAK7D,MAAMnY,MAEbzC,OAAOC,MAAMC,OAAOuT,IAAI2f,OAAOR,KAAI,SAAA5V,GAAK,OAAI,EAAKqW,SAASrW,OAjDzC,EAqDnBqW,SAAW,SAACrW,GACNhd,OAAOC,MAAMC,OAAO0T,WACtB5T,OAAOC,MAAMiT,eAAiB,EAC9BuL,EAAKhD,eACLR,EAAI2H,cACJ3H,EAAIuE,iBACJF,EAAGC,aACHvf,OAAOC,MAAMC,OAAO0T,SAASoJ,IAG/B,EAAKsW,eA/DY,EAkEnBP,uBAAyB,WACvB/yB,OAAOC,MAAMC,OAAOsT,KAAK2J,KAAOjH,EAAMlU,iBAAiB,aACvDhC,OAAOC,MAAMC,OAAOsT,KAAK6J,MAAQnH,EAAMlU,iBAAiB,cACxDhC,OAAOC,MAAMC,OAAOsT,KAAK+J,GAAKrH,EAAMlU,iBAAiB,WACrDhC,OAAOC,MAAMC,OAAOsT,KAAKoK,KAAO1H,EAAMlU,iBAAiB,aACvDhC,OAAOC,MAAMC,OAAOsT,KAAKwK,MAAQ9H,EAAMlU,iBAAiB,KACxDhC,OAAOC,MAAMC,OAAOsT,KAAKgK,EAAItH,EAAMlU,iBAAiB,KACpDhC,OAAOC,MAAMC,OAAOsT,KAAKxW,EAAIkZ,EAAMlU,iBAAiB,KACpDhC,OAAOC,MAAMC,OAAOsT,KAAKqK,EAAI3H,EAAMlU,iBAAiB,KACpDhC,OAAOC,MAAMC,OAAOsT,KAAK8J,EAAIpH,EAAMlU,iBAAiB,KACpDhC,OAAOC,MAAMC,OAAOsT,KAAK2K,EAAIjI,EAAMlU,iBAAiB,KACpDhC,OAAOC,MAAMC,OAAOsT,KAAK6K,EAAInI,EAAMlU,iBAAiB,KACpDhC,OAAOC,MAAMC,OAAOsT,KAAKjW,EAAI2Y,EAAMlU,iBAAiB,MA5EpDhC,OAAOC,MAAQwe,EAAK/L,mBACpB,EAAKggB,QAAUR,IAAMqB,YAHJ,E,gEAOjB7L,KAAK4K,kB,+BAIL,OACE,2BAAO7F,UAAU,WAAW/oB,MAAM,QAChC,+BACA,4BACE,4BACE,yBAAK+oB,UAAU,WAAWyE,IAAKxJ,KAAKgL,WAEtC,wBAAIjG,UAAU,aAAa/oB,MAAM,OAAOuV,QAASjZ,OAAOC,MAAMC,OAAOsU,cAAgB3W,EAAE8G,eAAiB,MACtG,yBAAK8nB,UAAU,cACb,kBAAC,GAAD,a,kDA8DVzsB,OAAO8C,iBAAiB,SAAU0wB,IAClCA,S,GArF6BtB,IAAMC,WAyFvC,SAASqB,KACP,IAAM/f,EAAMzT,OAAOC,MAAMC,OAAOuT,IAC1BggB,EAAI72B,KAAKqC,IAAIe,OAAO0zB,YAAc,GAAI,KACtClb,EAAQib,EAAI,IAClBzzB,OAAOC,MAAMC,OAAOuT,IAAI8B,MAAMiD,MAAM1G,IAAI0G,GACxC/E,EAAI+e,SAASmB,OAAOF,EAAGA,GACvBzzB,OAAOC,MAAMC,OAAOsU,aAAeif,EACnCzzB,OAAOC,MAAMC,OAAOC,YAAcqY,ECzFhBob,QACW,cAA7B5zB,OAAO6zB,SAASC,UAEe,UAA7B9zB,OAAO6zB,SAASC,UAEhB9zB,OAAO6zB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,GAAD,MACFC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvwB,MAAK,SAAAwwB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLld,QAAQkd,MAAMA,EAAMC,c","file":"static/js/main.02088c93.chunk.js","sourcesContent":["import { c } from './';\nimport Swal from \"sweetalert2\";\n\n/**\n * Returns the distance between two points \n */\nexport function distanceBetween(ax, ay, bx, by) {\n  return Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n}\n  \n/**\n * Returns array with [x,y] of midpoint between two points\n * Both params should be [x,y]\n */\nexport function midPoint(a, b) {\n  return [(a[0]+b[0])/2, (a[1]+b[1])/2];\n}\n\n/**\n * Convert the angle to 0 <= rad <= 2*PI \n */\nexport function normalizeRadian(radians) {\n  let retVal = radians;\n  if (retVal < 0) {\n    retVal += Math.PI * 2;\n  }\n  if (retVal > Math.PI * 2) {\n    retVal -= Math.PI * 2;\n  }\n  return retVal;\n}\n  \n/**\n * Calc gravity for point.\n * @return {x,y,dir} This will be the x and y forces applied to the object (not a point)\n */\nexport function calcGravity(x, y, planet) {\n  let distance = distanceBetween(x, y, planet.x, planet.y);\n  if (distance < 10) {\n    distance = 10;\n  }\n  let gravityDirection = Math.atan2(x - planet.x, y - planet.y);\n  let gravityX = c.GRAVITATIONAL_CONST * planet.mass / Math.pow(distance, 2) * -Math.sin(gravityDirection);\n  let gravityY = c.GRAVITATIONAL_CONST * planet.mass / Math.pow(distance, 2) * -Math.cos(gravityDirection);\n  return {x:gravityX, y:gravityY, dir:gravityDirection};\n}\n\n/**\n * @return the angle x1,y1 would need to face to point directly at x2,y2\n */\nexport function directionTo(x1,y1, x2,y2) {\n  return normalizeRadian(Math.atan2(y2 - y1, x2 - x1));\n}\n\n/**\n * @return {xAmt, yAmt} splitting the dir and amount into x,y portions\n */\nexport function dirComponents(dir, amount) {\n  let xAmt = amount * Math.cos(dir);\n  let yAmt = amount * Math.sin(dir);\n  return {xAmt, yAmt};\n}\n\n/**\n * @return an int between min and max inclusive\n */\nexport function randomInt(minP, maxP) {\n  let min = Math.ceil(minP);\n  let max = Math.floor(maxP);\n  return Math.floor(Math.random() * (max - min +1) + min); \n}\n\n/**\n * @return a random floating point number between min and max\n */\nexport function randomFloat(min, max) {\n  return min + (Math.random() * (max - min));\n}\n\n/**\n * @return true 50% of the time\n */\nexport function randomBool() {\n  return Math.random() > 0.5;\n}\n\n/**\n * @return add distance in direction to startX,startY \n */\nexport function getPointFrom(startX, startY, dir, distance) {\n  let x = startX + (distance * Math.cos(dir));\n  let y = startY + (distance * Math.sin(dir));\n  return {x,y};\n}\n\n/**\n * return a collection of points [[x,y],[x,y]] on a rectangular sprite that can be used for collision detection\n * param x,y global x,y position of sprite (on main map, not in viewport)\n * NOTE: This will scale based on the scaleFactor set by the window size\n */\nexport function getVertexData(x,y, sprite) {\n  sprite.calculateVertices();\n  const vertices = sprite.vertexData.map(p => p / window.world.system.screenScale);\n  let collisionPoints = []; // [[x,y],[x,y]]\n  collisionPoints.push(toGlobal(x, y, vertices[0], vertices[1])); // top left\n  collisionPoints.push(toGlobal(x, y, vertices[2], vertices[3])); // top right\n  collisionPoints.push(toGlobal(x, y, vertices[4], vertices[5])); // bottom right\n  collisionPoints.push(toGlobal(x, y, vertices[6], vertices[7])); // bottom left\n  // Add a few points between to help with border collisions (these have already been converted to global)\n  collisionPoints.push(midPoint(collisionPoints[0], collisionPoints[1]));\n  collisionPoints.push(midPoint(collisionPoints[1], collisionPoints[2]));\n  collisionPoints.push(midPoint(collisionPoints[2], collisionPoints[3]));\n  collisionPoints.push(midPoint(collisionPoints[3], collisionPoints[0]));\n  return collisionPoints;\n}\n\n/**\n * Converts the local sprite-based x,y to global based on ship's position\n * @return [x,y] in global map coordinates\n */\nexport function toGlobal(globalX,globalY, spriteX,spriteY) {\n  return [globalX + (spriteX - c.HALF_SCREEN_WIDTH), globalY+ (spriteY - c.HALF_SCREEN_HEIGHT)];\n}\n\n\n/**\n * return true if the pX,pY (global positions) is inside the sprite at x,y\n * param x,y global x,y position of sprite (on main map, not in viewport)\n */\nexport function pointInSprite(x,y, sprite, pX, pY) {\n  sprite.calculateVertices();\n  // scale the vertices for the screen scaling\n  const vertices = sprite.vertexData.map(p => p / window.world.system.screenScale);\n  const topLeft = (toGlobal(x, y, vertices[0], vertices[1])); // top left\n  const topRight = (toGlobal(x, y, vertices[2], vertices[3])); // top right\n  const bottomLeft = (toGlobal(x, y, vertices[6], vertices[7])); // bottom right\n  // Complicated math stuff\n  const AB = toVector(topLeft, topRight);\n  const AD = toVector(topLeft, bottomLeft);\n  const AM = toVector(topLeft, [pX, pY]);\n  const dotAMAB = dot(AM, AB);\n  const dotABAB = dot(AB, AB);\n  const dotAMAD = dot(AM, AD);\n  const dotADAD = dot(AD, AD);\n  return 0 <= dotAMAB && dotAMAB <= dotABAB && 0 <= dotAMAD && dotAMAD <= dotADAD;\n}\n\n// p1 and p2 are [x,y]\nfunction toVector(p1, p2) {\n  return [(p2[0] - p1[0]), (p2[1] - p1[1])];\n}\n\n// u and v are [x,y]\nfunction dot(u, v) {\n  return (u[0] * v[0]) + (u[1] * v[1]);\n}\n\n/**\n * Sets up a keyboard listener\n */\nexport function keyboardListener(value) {\n  let key = {};\n  key.value = value;\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = event => {\n    if (event.key === key.value) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n    }\n  };\n  //The `upHandler`\n  key.upHandler = event => {\n    if (event.key === key.value) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n    }\n  };\n  //Attach event listeners\n  const downListener = key.downHandler.bind(key);\n  const upListener = key.upHandler.bind(key);\n  window.addEventListener(\n    \"keydown\", downListener, false\n  );\n  window.addEventListener(\n    \"keyup\", upListener, false\n  );\n  // Detach event listeners\n  key.unsubscribe = () => {\n    window.removeEventListener(\"keydown\", downListener);\n    window.removeEventListener(\"keyup\", upListener);\n  };\n  return key;\n}\n\nexport function showToast(text) {\n  Swal.fire({\n    title: text,\n    timer: 5000,\n    position:'top-left',\n    showConfirmButton: false,\n    toast:true,\n    width: Math.floor(c.SCREEN_WIDTH/2)+'px',\n    showClass: {\n      popup: 'animate__animated animate__slideInDown'\n    },\n    hideClass: {\n      popup: 'animate__animated animate__slideOutUp'\n    }\n  }).then();\n}","// Colors\nexport const BLACK = 0X000000;\nexport const YELLOW = 0xCC55CC;\nexport const BLUE = 0x00AAFF;\nexport const WHITE = 0xFFFFFF;\nexport const DARK_GREY = 0x303030;\nexport const LIGHT_GREY = 0x909090;\n\nexport const GAME_STATE = {\n  INIT: \"init\",\n  FLY: \"fly\",\n  MANAGE: \"manage\"\n};\n\n// Saved games\nexport const LOCALSTORAGE_GAME_NAMES_KEY = 'saved-game-names';\n\n// Screen Layout\nexport const SCREEN_WIDTH = 1000;\nexport const SCREEN_HEIGHT = 1000;\nexport const HALF_SCREEN_WIDTH = SCREEN_WIDTH / 2;\nexport const HALF_SCREEN_HEIGHT = SCREEN_HEIGHT / 2;\nexport const NEARBY_WIDTH = SCREEN_WIDTH * 3;\nexport const NEARBY_HEIGHT = SCREEN_HEIGHT * 3;\n// size of minimap on screen\nexport const MINIMAP_WIDTH = 250;\nexport const MINIMAP_HEIGHT = 250;\nexport const HALF_MINIMAP_WIDTH = MINIMAP_WIDTH / 2;\nexport const HALF_MINIMAP_HEIGHT = MINIMAP_HEIGHT / 2;\n// how far the minimap can view\nexport const MINIMAP_VIEW_WIDTH = 8000;\nexport const MINIMAP_VIEW_HEIGHT = 8000;\nexport const HALF_MINIMAP_VIEW_WIDTH = MINIMAP_VIEW_WIDTH / 2;\nexport const HALF_MINIMAP_VIEW_HEIGHT = MINIMAP_VIEW_HEIGHT / 2;\n// convert minimap pixels to real pixels\nexport const MINIMAP_SCALE_X = MINIMAP_WIDTH / MINIMAP_VIEW_WIDTH;\nexport const MINIMAP_SCALE_Y = MINIMAP_HEIGHT / MINIMAP_VIEW_HEIGHT;\n// MiniMap colors\nexport const MINIMAP_BORDER_COLOR = LIGHT_GREY;\nexport const MINIMAP_BACKGROUND_COLOR = DARK_GREY;\nexport const MINIMAP_PLANET_COLOR = LIGHT_GREY;\nexport const MINIMAP_SELECTED_PLANET_COLOR = YELLOW;\nexport const MINIMAP_BUILDING_COLOR = BLUE;\nexport const MINIMAP_SHIP_COLOR = WHITE;\n\n// Files\nexport const SPRITESHEET_JSON = \"images/spritesheet.json\";\nexport const ALIEN_SHIP_BLACK_FILE = \"alien_black.png\";\nexport const ALIEN_SHIP_BLUE_FILE = \"alien_blue.png\";\nexport const ALIEN_SHIP_BLUE_LARGE_FILE = \"alien_blue_large.png\";\nexport const ALIEN_SHIP_BLUE_SMALL_FILE = \"alien_blue_small.png\";\nexport const ALIEN_SHIP_FIRE_FILE = \"alien_fire.png\";\nexport const ALIEN_SHIP_GREEN_FILE = \"alien_green.png\";\nexport const ALIEN_SHIP_GREEN_SMALL_FILE = \"alien_green_small.png\";\nexport const ALIEN_SHIP_GREEN_LARGE_FILE = \"alien_green_large.png\";\nexport const ALIEN_SHIP_RED_FILE = \"alien_red.png\";\nexport const ALIEN_SHIP_RED_SMALL_FILE = \"alien_red_small.png\";\nexport const ALIEN_SHIP_RED_LARGE_FILE = \"alien_red_large.png\";\nexport const BULLET_FILE = \"bullet.png\";\nexport const BULLET_BLUE_FILE = \"bullet_blue.png\";\nexport const BULLET_WHITE_FILE = \"bullet_white.png\";\nexport const FACTORY_FILE = \"factory.png\";\nexport const MINE_FILE = \"mine\"; // animation name in json\nexport const PLANET_GREEN_FILE = \"planet_green.png\";\nexport const PLANET_PURPLE_FILE = \"planet_purple.png\";\nexport const PLANET_RED_FILE = \"planet_red.png\";\nexport const PLANET_ROCK_FILE = \"planet_rock.png\";\nexport const SHIELD_BLUE_FILE = \"shield_blue.png\";\nexport const SHIELD_GREEN_FILE = \"shield_green.png\";\nexport const SHIELD_WHITE_FILE = \"shield_white.png\";\nexport const SHIP_BALL_FILE = \"ship_ball.png\";\nexport const SHIP_CARGO_FILE = \"ship_cargo.png\";\nexport const SHIP_EXPLORER_FILE = \"ship_explorer.png\";\nexport const SHIP_FAST_FILE = \"ship_fast.png\";\nexport const SHIP_FIGHTER_FILE = \"ship_fighter.png\";\nexport const SHIP_HEAVY_FILE = \"ship_heavy.png\";\nexport const SHIP_MISSILE_FILE = \"ship_missile.png\";\nexport const SHIP_RED_WINGS_FILE = \"ship_red_wings.png\";\nexport const SHIP_SKELETON_FILE = \"ship_skeleton.png\";\nexport const STAR_BACKGROUND_FILE = \"images/stars.png\";\nexport const CRASH_JSON = \"images/crash.json\";\nexport const CRASH = \"crash\"; // animation name in json\n\nexport const UNIVERSE_RADIUS = 35000;\nexport const PLAYER = \"player\";\nexport const ALIEN = \"alien\";\nexport const PLAYER_STARTING_RESOURCES = {titanium: 30, gold: 20, uranium: 0};\nexport const GRAVITATIONAL_CONST = 2;\nexport const ALLOWED_OVERLAP = 2; // overlap for fudging collision detection\nexport const TAKEOFF_SPEED = 10; // in units of planet gravity\nexport const PLANET_RESOURCE_MAX = 99999999;\nexport const PLAYER_START_X = -(UNIVERSE_RADIUS + 1000); // left of the universe\nexport const PLAYER_START_Y = 0;\nexport const MIN_ALIEN_DIST_TO_PLANET = 50;\nexport const MIN_ALIEN_DIST_TO_ALIEN = 3;\n\n// Buildings\nexport const BUILDING_PLACEMENT_ROTATION_INCREMENT = 0.05;\n// Mine\nexport const BUILDING_TYPE_MINE = \"mine\";\nexport const MINE_SCALE = 1;\nexport const MINE_WIDTH = 52;\nexport const MINE_ANIMATION_SPEED = 0.5;\nexport const MINE_SPEED_TITANIUM = 0.0166; // 1 every sec\nexport const MINE_SPEED_GOLD = 0.0083;  // 1 every 2 sec\nexport const MINE_SPEED_URANIUM = 0.0033; // 1 every 5 sec\nexport const MINE_COST = {titanium: 20, gold: 10, uranium: 0};\nexport const SALVAGE_RATE = 0.5; // amount returned when salvaging equipment or ships\n// Factory\nexport const BUILDING_TYPE_FACTORY = \"factory\";\nexport const FACTORY_COST = {titanium: 50, gold: 20, uranium: 10};\nexport const FACTORY_WIDTH = 91;\nexport const FACTORY_SCALE = 0.8;\n\n// Equipment\nexport const EQUIP_TYPE_BRAKE = \"Brake\";\nexport const EQUIP_TYPE_PRIMARY_WEAPON = \"Primary Weapon\";\nexport const EQUIP_TYPE_SECONDARY_WEAPON = \"Secondary Weapon\";\nexport const EQUIP_TYPE_THRUSTER = \"Thruster\";\nexport const EQUIP_TYPE_ARMOR = \"Armor\";\nexport const EQUIP_TYPE_REPAIR_DROID = \"Repair Droid\";\nexport const EQUIP_TYPE_GUNNERY_DROID = \"Gunnery Droid\";\nexport const EQUIP_TYPE_SHIELD_DROID = \"Shield Droid\";\nexport const EQUIP_TYPE_SPEED = \"Speed\";\nexport const EQUIP_TYPE_TURN = \"Turn\";\nexport const EQUIP_TYPE_STORAGE = \"Storage\";\nexport const EQUIP_TYPE_AUTOLANDER = \"Autolander\";\n\nexport const THRUST_MOMENTUM = \"Thrust Momentum\";\nexport const THRUST_BLINK = \"Thrust Blink\";\n\nexport const OBJ_EQUIP = \"Equip\";\nexport const OBJ_SHIP = \"Ship\";\n\nexport const ALIEN_AI_TURRET = \"ALIEN_AI_TURRET\";\nexport const ALIEN_AI_CREEPER = \"ALIEN_AI_CREEPER\";\nexport const ALIEN_AI_MOTHERSHIP = \"ALIEN_AI_MOTHERSHIP\";\nexport const ALIEN_AI_KAMIKAZI = \"ALIEN_AI_KAMIKAZI\";\nexport const EQUIP_AI_MINE = \"EQUIP_AI_MINE\";\nexport const EQUIP_AI_TURRET = \"EQUIP_AI_TURRET\";\nexport const EQUIP_AI_MISSILE = \"EQUIP_AI_MISSILE\";\n\nexport const DIR_AHEAD_OF_SHIP = \"ahead\";\nexport const DIR_BEHIND_SHIP = \"behind\";\n\n// Ship Upgrades\n// brakeSpeedPct is best between 0.02 - 0.1 (higher is ok)\nexport const EQUIP_BRAKE = {\n  name: \"Brake\", objType: OBJ_EQUIP, type: EQUIP_TYPE_BRAKE, brakeSpeedPct: 0.04,\n  cost: {titanium: 20, gold: 10, uranium: 0}\n};\nexport const EQUIP_BLINK_BRAKE = {\n  name: \"Blink Brake\", objType: OBJ_EQUIP, type: EQUIP_TYPE_BRAKE, brakeSpeedPct: 0,\n  cost: {titanium: 50, gold: 50, uranium: 30}\n};\nexport const EQUIP_SPEED_BOOST = {\n  name: \"Speed Booster\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SPEED, boostSpeed: 0.05,\n  cost: {titanium: 0, gold: 10, uranium: 20}\n};\nexport const EQUIP_TURN_BOOST = {\n  name: \"Turn Booster\", objType: OBJ_EQUIP, type: EQUIP_TYPE_TURN, boostSpeed: 0.05,\n  cost: {titanium: 0, gold: 10, uranium: 20}\n};\nexport const EQUIP_STORAGE = {\n  name: \"Storage\", objType: OBJ_EQUIP, type: EQUIP_TYPE_STORAGE, storageAmount: 100,\n  cost: {titanium: 50, gold: 0, uranium: 0}\n};\nexport const EQUIP_ENHANCED_STORAGE = {\n  name: \"Enhanced Storage\", objType: OBJ_EQUIP, type: EQUIP_TYPE_STORAGE, storageAmount: 300,\n  cost: {titanium: 200, gold: 0, uranium: 0}\n};\nexport const EQUIP_ARMOR = {\n  name: \"Armor Plate\", objType: OBJ_EQUIP, type: EQUIP_TYPE_ARMOR, armorAmt: 100,\n  cost: {titanium: 50, gold: 0, uranium: 0}\n};\nexport const EQUIP_ENHANCED_ARMOR = {\n  name: \"Enhanced Armor\", objType: OBJ_EQUIP, type: EQUIP_TYPE_ARMOR, armorAmt: 300,\n  cost: {titanium: 300, gold: 0, uranium: 0}\n};\nexport const EQUIP_THRUSTER = {\n  name: \"Thruster\", objType: OBJ_EQUIP, type: EQUIP_TYPE_THRUSTER, thrustSpeed: 0.08, thrustType: THRUST_MOMENTUM,\n  cost: {titanium: 40, gold: 40, uranium: 10}\n};\n// blink thrustSpeed is good from 2 to 10\nexport const EQUIP_BLINK_THRUSTER = {\n  name: \"Blink Thruster\", objType: OBJ_EQUIP, type: EQUIP_TYPE_THRUSTER, thrustSpeed: 2.5, thrustType: THRUST_BLINK,\n  cost: {titanium: 60, gold: 50, uranium: 10}\n};\nexport const EQUIP_AUTOLANDER = {\n  name: \"Auto Lander\", objType: OBJ_EQUIP, type: EQUIP_TYPE_AUTOLANDER,\n  cost: {titanium: 60, gold: 50, uranium: 10}\n};\n\n\n// Primary Weapons\n// Dmg:40/c Range:250\nexport const EQUIP_BLASTER = {\n  name: \"Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 25,\n  cool: 0,\n  damage: 10,\n  speed: 2.5,\n  lifetime: 100,\n  jitter: 0.05,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 10, gold: 0, uranium: 20}\n};\n// Dmg:100/c Range:320\nexport const EQUIP_FAST_BLASTER = {\n  name: \"Fast Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 10,\n  cool: 0,\n  damage: 10,\n  speed: 4,\n  lifetime: 80,\n  jitter: 0.05,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 20, gold: 20, uranium: 40}\n};\n// Dmg:300/c (but cannot aim) Range:375\nexport const EQUIP_SPRINKLER_BLASTER = {\n  name: \"Sprinkler Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 2,\n  cool: 1,\n  damage: 6,\n  speed: 2.5,\n  lifetime: 150,\n  jitter: 1,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 10, gold: 10, uranium: 80}\n};\n// Dmg 175/c Range:490\nexport const EQUIP_STREAM_BLASTER = {\n  name: \"Stream Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 4,\n  cool: 0,\n  damage: 7,\n  speed: 7,\n  lifetime: 70,\n  jitter: 0.04,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 30, gold: 30, uranium: 80}\n};\n// Dmg: 333/c Range:120\nexport const EQUIP_MELEE_GUN = {\n  name: \"Melee Gun\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 3,\n  cool: 0,\n  damage: 10,\n  speed: 3,\n  lifetime: 30,\n  jitter: 0.25,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 50, gold: 50, uranium: 80}\n};\n// Dmg: 120/c Range:800\nexport const EQUIP_SNIPER_RIFLE = {\n  name: \"Sniper Rifle\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 100,\n  cool: 0,\n  damage: 120,\n  speed: 8,\n  lifetime: 100,\n  jitter: 0.0,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 20, gold: 20, uranium: 160}\n};\n// Dmg 25/c Range:240\nexport const EQUIP_ALIEN_BLASTER = {\n  name: \"Alien Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 20,\n  cool: 0,\n  damage: 5,\n  speed: 2,\n  lifetime: 120,\n  jitter: 0.12,\n  bulletFile: BULLET_BLUE_FILE,\n  cost: {titanium: 0, gold: 0, uranium: 10}\n};\n// Dmg 120/c Range:480\nexport const EQUIP_ALIEN_BLASTER_FAST = {\n  name: \"Alien Fast Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 10,\n  cool: 0,\n  damage: 12,\n  speed: 4,\n  lifetime: 120,\n  jitter: 0.1,\n  bulletFile: BULLET_BLUE_FILE,\n  cost: {titanium: 10, gold: 30, uranium: 60}\n};\n// Dmg 200/c Range:600\nexport const EQUIP_ALIEN_BLASTER_LIGHTNING = {\n  name: \"Alien Lighting Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 10,\n  cool: 0,\n  damage: 20,\n  speed: 12,\n  lifetime: 50,\n  jitter: 0.08,\n  bulletFile: BULLET_BLUE_FILE,\n  cost: {titanium: 10, gold: 40, uranium: 100}\n};\n// Dmg 100/c Range:750\nexport const EQUIP_STAPLE_GUN = {\n  name: \"Staple Gun\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 3,\n  cool: 0,\n  damage: 3,\n  speed: 3,\n  lifetime: 250,\n  jitter: 0.2,\n  bulletFile: BULLET_WHITE_FILE,\n  cost: {titanium: 10, gold: 30, uranium: 60}\n};\n// Dmg 183/c Range:900\nexport const EQUIP_STAPLE_GUN_HEAVY = {\n  name: \"Heavy Staple Gun\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 3,\n  cool: 0,\n  damage: 5.5,\n  speed: 3,\n  lifetime: 300,\n  jitter: 0.15,\n  bulletFile: BULLET_WHITE_FILE,\n  cost: {titanium: 30, gold: 50, uranium: 120}\n};\n\n// Secondary (more at end of file after the ships)\nexport const EQUIP_SHIELD = {\n  name: \"Force Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 600,\n  shield: {\n    active: false,\n    armor: 500,\n    armorMax: 500,\n    lifetime: 240,\n    lifetimeMax: 240,\n    spriteFile: SHIELD_BLUE_FILE,\n    radius: 0\n  },\n  cost: {titanium: 0, gold: 0, uranium: 100}\n};\nexport const EQUIP_SHIELD_LONG = {\n  name: \"Long Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 1500,\n  shield: {\n    active: false,\n    armor: 300,\n    armorMax: 300,\n    lifetime: 1000,\n    lifetimeMax: 1000,\n    spriteFile: SHIELD_WHITE_FILE,\n    radius: 0\n  },\n  cost: {titanium: 0, gold: 0, uranium: 100}\n};\nexport const EQUIP_SHIELD_STRONG = {\n  name: \"Strong Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 750,\n  shield: {\n    active: false,\n    armor: 1500,\n    armorMax: 1500,\n    lifetime: 400,\n    lifetimeMax: 400,\n    spriteFile: SHIELD_GREEN_FILE,\n    radius: 0\n  },\n  cost: {titanium: 0, gold: 0, uranium: 100}\n};\nexport const EQUIP_SHIELD_ULTRA = {\n  name: \"Ultra Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 1500,\n  shield: {\n    active: false,\n    armor: 1000,\n    armorMax: 1000,\n    lifetime: 750,\n    lifetimeMax: 750,\n    spriteFile: SHIELD_BLUE_FILE,\n    radius: 0\n  },\n  cost: {titanium: 0, gold: 0, uranium: 100}\n};\n\nexport const SHIP_RED_MISSILE = {\n  name: \"Alien Missile\",\n  objType: OBJ_SHIP,\n  propulsion: 0.1, // best between 0.02 - 0.1\n  turnSpeed: 0.3, // // best between 0.3 - 0.07\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 0,\n  equip: [],\n  armorMax: 200,\n  armor: 200,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.8,\n  imageFile: ALIEN_SHIP_RED_SMALL_FILE,\n  cost: {titanium: 5, gold: 5, uranium: 10},\n  viewRange: SCREEN_WIDTH * 3,\n  aiType: ALIEN_AI_KAMIKAZI,\n};\n\nexport const EQUIP_ALIEN_MISSILE_LAUNCHER = {\n  name: \"Alien Missile Launcher\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 100, cool: 100,\n  createShip: {type: SHIP_RED_MISSILE, dir: DIR_AHEAD_OF_SHIP},\n  cost: {titanium: 50, gold: 50, uranium: 100}\n};\n\n// Droids\nexport const EQUIP_R2D2 = {\n  name: \"R2D2 Repair Droid\", objType: OBJ_EQUIP, type: EQUIP_TYPE_REPAIR_DROID, repairSpeed: 0.03,\n  cost: {titanium: 20, gold: 100, uranium: 50}\n};\nexport const EQUIP_GUNNERY_DROID = {\n  name: \"Gunnery Droid\", objType: OBJ_EQUIP, type: EQUIP_TYPE_GUNNERY_DROID,\n  weapon: EQUIP_FAST_BLASTER, cost: {titanium: 100, gold: 200, uranium: 300}\n};\nexport const EQUIP_SHIELD_DROID = {\n  name: \"Shield Droid\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SHIELD_DROID,\n  cost: {titanium: 300, gold: 200, uranium: 100}\n};\n\n// Ships\nexport const SHIP_EXPLORER = {\n  name: \"Explorer\",\n  objType: OBJ_SHIP,\n  propulsion: 0.05, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 50,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 3,\n  equip: [EQUIP_BRAKE, EQUIP_BLASTER],\n  armorMax: 50,\n  armor: 50,\n  crashSpeed: 2,\n  crashAngle: 0.5,\n  imageScale: 0.6,\n  imageFile: SHIP_EXPLORER_FILE,\n  cost: {titanium: 40, gold: 20, uranium: 10},\n};\n\nexport const SHIP_CARGO = {\n  name: \"Cargo\",\n  objType: OBJ_SHIP,\n  propulsion: 0.025, // best between 0.02 - 0.1\n  turnSpeed: 0.02, // // best between 0.3 - 0.07\n  resourcesMax: 750,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 2,\n  equip: [EQUIP_BRAKE],\n  armorMax: 20,\n  armor: 20,\n  crashSpeed: 1.2,\n  crashAngle: 0.3,\n  imageScale: 1,\n  imageFile: SHIP_CARGO_FILE,\n  cost: {titanium: 100, gold: 50, uranium: 50},\n};\n\nexport const SHIP_FAST = {\n  name: \"Fast\",\n  objType: OBJ_SHIP,\n  propulsion: 0.1, // best between 0.02 - 0.1\n  turnSpeed: 0.07, // // best between 0.3 - 0.07\n  resourcesMax: 40,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 5,\n  equip: [EQUIP_BRAKE],\n  armorMax: 50,\n  armor: 50,\n  crashSpeed: 2,\n  crashAngle: 0.5,\n  imageScale: 0.6,\n  imageFile: SHIP_FAST_FILE,\n  cost: {titanium: 200, gold: 100, uranium: 50},\n};\n\nexport const SHIP_SKELETON = {\n  name: \"Skeleton\",\n  objType: OBJ_SHIP,\n  propulsion: 0.03, // best between 0.02 - 0.1\n  turnSpeed: 0.03, // // best between 0.3 - 0.07\n  resourcesMax: 30,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 7,\n  equip: [],\n  armorMax: 50,\n  armor: 50,\n  crashSpeed: 2,\n  crashAngle: 0.5,\n  imageScale: 0.7,\n  imageFile: SHIP_SKELETON_FILE,\n  cost: {titanium: 200, gold: 200, uranium: 50},\n};\n\nexport const SHIP_HEAVY = {\n  name: \"Heavy\",\n  objType: OBJ_SHIP,\n  propulsion: 0.05, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 300,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 7,\n  equip: [EQUIP_BRAKE],\n  armorMax: 400,\n  armor: 400,\n  crashSpeed: 1.5,\n  crashAngle: 0.4,\n  imageScale: 0.5,\n  imageFile: SHIP_HEAVY_FILE,\n  cost: {titanium: 500, gold: 400, uranium: 300},\n};\n\nexport const SHIP_FIGHTER = {\n  name: \"Fighter\",\n  objType: OBJ_SHIP,\n  propulsion: 0.08, // best between 0.02 - 0.1\n  turnSpeed: 0.07, // // best between 0.3 - 0.07\n  resourcesMax: 200,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 8,\n  equip: [EQUIP_BRAKE],\n  armorMax: 300,\n  armor: 300,\n  crashSpeed: 1.5,\n  crashAngle: 0.6,\n  imageScale: 0.6,\n  imageFile: SHIP_FIGHTER_FILE,\n  cost: {titanium: 500, gold: 500, uranium: 500},\n};\n\nexport const SHIP_ALIEN_TURRET = {\n  name: \"Alien Turret\",\n  objType: OBJ_SHIP,\n  propulsion: 0.001, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 3,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER],\n  armorMax: 100,\n  armor: 100,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.8,\n  imageFile: ALIEN_SHIP_GREEN_SMALL_FILE,\n  cost: {titanium: 50, gold: 50, uranium: 50},\n  aiType: ALIEN_AI_TURRET,\n};\n\nexport const SHIP_ALIEN = {\n  name: \"Alien Ship\",\n  objType: OBJ_SHIP,\n  propulsion: 0.05, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 4,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER],\n  armorMax: 100,\n  armor: 100,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.9,\n  imageFile: ALIEN_SHIP_GREEN_FILE,\n  cost: {titanium: 150, gold: 100, uranium: 80},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const SHIP_ALIEN_LARGE = {\n  name: \"Alien Large\",\n  objType: OBJ_SHIP,\n  propulsion: 0.03, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 7,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER_FAST],\n  armorMax: 300,\n  armor: 300,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1,\n  imageFile: ALIEN_SHIP_GREEN_LARGE_FILE,\n  cost: {titanium: 150, gold: 100, uranium: 80},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const SHIP_ALIEN_STAPLE_TURRET = {\n  name: \"Alien Staple Turret\",\n  objType: OBJ_SHIP,\n  propulsion: 0.00,\n  turnSpeed: 0.001,\n  resourcesMax: 100,\n  resources: {\n     titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 3,\n  equip: [EQUIP_BRAKE, EQUIP_STAPLE_GUN_HEAVY],\n  armorMax: 200,\n  armor: 200,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1.3,\n  imageFile: ALIEN_SHIP_BLUE_SMALL_FILE,\n  cost: {titanium: 150, gold: 150, uranium: 200},\n  aiType: ALIEN_AI_TURRET,\n};\n\nexport const SHIP_ALIEN_FIRE = {\n  name: \"Alien Fire\",\n  objType: OBJ_SHIP,\n  propulsion: 0.08, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 7,\n  equip: [EQUIP_BRAKE, EQUIP_STAPLE_GUN, EQUIP_SHIELD_LONG],\n  armorMax: 250,\n  armor: 250,\n  crashSpeed: 2,\n  crashAngle: 0.4,\n  imageScale: 1.5,\n  imageFile: ALIEN_SHIP_FIRE_FILE,\n  cost: {titanium: 250, gold: 200, uranium: 80},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const SHIP_ALIEN_STEALTH = {\n  name: \"Alien Stealth\",\n  objType: OBJ_SHIP,\n  propulsion: 0.04, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 6,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER_FAST],\n  armorMax: 150,\n  armor: 150,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1.5,\n  imageFile: ALIEN_SHIP_BLACK_FILE,\n  cost: {titanium: 100, gold: 200, uranium: 150},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const SHIP_ALIEN_MOTHERSHIP = {\n  name: \"Alien Mothership\",\n  objType: OBJ_SHIP,\n  propulsion: 0.00,\n  turnSpeed: 0.001,\n  resourcesMax: 10000,\n  resources: {\n    titanium: 1000,\n    gold: 1000,\n    uranium: 5000,\n  },\n  equipMax: 10,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_MISSILE_LAUNCHER, EQUIP_SHIELD_ULTRA, EQUIP_ALIEN_BLASTER_LIGHTNING],\n  armorMax: 1000,\n  armor: 1000,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1.3,\n  imageFile: ALIEN_SHIP_RED_LARGE_FILE,\n  cost: {titanium: 1200, gold: 1000, uranium: 750},\n  aiType: ALIEN_AI_MOTHERSHIP,\n};\n\nexport const SHIP_DECOY = {\n  name: \"Decoy\",\n  objType: OBJ_SHIP,\n  propulsion: 0.0,\n  turnSpeed: 0.0,\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 0,\n  equip: [],\n  armorMax: 300,\n  armor: 300,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.55,\n  imageFile: SHIP_EXPLORER_FILE,\n  cost: {titanium: 5, gold: 0, uranium: 10},\n  aiType: EQUIP_AI_MINE,\n};\n\nexport const SHIP_TURRET = {\n  name: \"Turret\",\n  objType: OBJ_SHIP,\n  propulsion: 0.0,\n  turnSpeed: 0.0,\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 1,\n  equip: [EQUIP_FAST_BLASTER],\n  armorMax: 300,\n  armor: 300,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.6,\n  imageFile: ALIEN_SHIP_BLUE_LARGE_FILE,\n  cost: {titanium: 10, gold: 10, uranium: 20},\n  aiType: EQUIP_AI_TURRET,\n};\n\nexport const SHIP_MISSILE = {\n  name: \"Missile\",\n  objType: OBJ_SHIP,\n  propulsion: 0.08, // best between 0.02 - 0.1\n  turnSpeed: 0.25, // // best between 0.3 - 0.07\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 0,\n  equip: [],\n  armorMax: 250,\n  armor: 250,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1,\n  imageFile: SHIP_BALL_FILE,\n  cost: {titanium: 0, gold: 0, uranium: 10},\n  aiType: EQUIP_AI_MISSILE,\n};\n\nexport const SHIP_FRIENDSHIP_MISSILE = {\n  name: \"Friendship Missile\",\n  objType: OBJ_SHIP,\n  propulsion: 0.09, // best between 0.02 - 0.1\n  turnSpeed: 0.25, // // best between 0.3 - 0.07\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 0,\n  equip: [],\n  armorMax: 40,\n  armor: 40,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.5,\n  imageFile: ALIEN_SHIP_BLUE_FILE,\n  cost: {titanium: 0, gold: 10, uranium: 0},\n  aiType: EQUIP_AI_MISSILE,\n};\n\nexport const ALL_ALIENS = [SHIP_ALIEN_TURRET, SHIP_ALIEN, SHIP_ALIEN_LARGE, SHIP_ALIEN_STEALTH,  SHIP_ALIEN_STAPLE_TURRET, SHIP_ALIEN_FIRE, SHIP_ALIEN_MOTHERSHIP];\nexport const ALL_SHIPS = [SHIP_EXPLORER, SHIP_CARGO, SHIP_FAST, SHIP_SKELETON, SHIP_HEAVY, SHIP_FIGHTER, ...ALL_ALIENS];\n\n// This equipment needs to go after the ships (ugh)\nexport const EQUIP_DECOY_DEPLOYER = {\n  name: \"Decoy Deployer\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 25, cool: 0,\n  createShip: {type: SHIP_DECOY, dir: DIR_BEHIND_SHIP},\n  cost: {titanium: 30, gold: 50, uranium: 100}\n};\nexport const EQUIP_TURRET_DEPLOYER = {\n  name: \"Turret Deployer\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 100, cool: 0,\n  createShip: {type: SHIP_TURRET, dir: DIR_BEHIND_SHIP},\n  cost: {titanium: 100, gold: 100, uranium: 200}\n};\nexport const EQUIP_MISSILE_LAUNCHER = {\n  name: \"Missile Launcher\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 75, cool: 0,\n  createShip: {type: SHIP_MISSILE, dir: DIR_AHEAD_OF_SHIP},\n  cost: {titanium: 50, gold: 50, uranium: 150}\n};\nexport const EQUIP_FRIENDSHIP_GUN = {\n  name: \"Friendship Gun\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 100, cool: 0,\n  createShip: {type: SHIP_FRIENDSHIP_MISSILE, dir: DIR_AHEAD_OF_SHIP},\n  cost: {titanium: 100, gold: 300, uranium: 100}\n};\n\n\nexport const EQUIP_UPGRADES = [EQUIP_BRAKE, EQUIP_BLINK_BRAKE, EQUIP_THRUSTER, EQUIP_BLINK_THRUSTER, EQUIP_ARMOR, EQUIP_SPEED_BOOST, EQUIP_TURN_BOOST,\n  EQUIP_STORAGE, EQUIP_ENHANCED_ARMOR, EQUIP_ENHANCED_STORAGE, EQUIP_AUTOLANDER];\nexport const EQUIP_PRIMARY_WEAPONS = [EQUIP_BLASTER, EQUIP_FAST_BLASTER, EQUIP_STREAM_BLASTER, EQUIP_SPRINKLER_BLASTER, EQUIP_MELEE_GUN, EQUIP_SNIPER_RIFLE, EQUIP_ALIEN_BLASTER, EQUIP_STAPLE_GUN, EQUIP_STAPLE_GUN_HEAVY, EQUIP_ALIEN_BLASTER_FAST, EQUIP_ALIEN_BLASTER_LIGHTNING];\nexport const EQUIP_SECONDARY_WEAPONS = [EQUIP_DECOY_DEPLOYER, EQUIP_TURRET_DEPLOYER, EQUIP_MISSILE_LAUNCHER, EQUIP_SHIELD, EQUIP_SHIELD_LONG, EQUIP_SHIELD_STRONG, EQUIP_SHIELD_ULTRA];\nexport const EQUIP_DROIDS = [EQUIP_R2D2, EQUIP_GUNNERY_DROID, EQUIP_SHIELD_DROID];\nexport const ALL_EQUIP = [...EQUIP_UPGRADES, ...EQUIP_PRIMARY_WEAPONS, ...EQUIP_SECONDARY_WEAPONS, ...EQUIP_DROIDS];\n\nexport const XP_LEVELS = {\n  // Mining resources\n  [PLANET_ROCK_FILE]: [\n    {xp: 1, obj: EQUIP_BLASTER},\n    {xp: 10, obj: EQUIP_BRAKE},\n    {xp: 50, obj: SHIP_EXPLORER},\n    {xp: 100, obj: SHIP_CARGO},\n    {xp: 200, obj: EQUIP_ARMOR},\n    {xp: 1000, obj: EQUIP_SPEED_BOOST},\n  ],\n  [PLANET_RED_FILE]: [\n    {xp: 10, obj: EQUIP_STORAGE},\n    {xp: 50, obj: EQUIP_BLINK_BRAKE},\n    {xp: 100, obj: EQUIP_THRUSTER},\n    {xp: 500, obj: SHIP_FAST},\n    {xp: 1000, obj: EQUIP_BLINK_THRUSTER},\n  ],\n  [PLANET_GREEN_FILE]: [\n    {xp: 10, obj: SHIP_SKELETON},\n    {xp: 50, obj: EQUIP_R2D2},\n    {xp: 500, obj: SHIP_HEAVY},\n    {xp: 1000, obj: EQUIP_AUTOLANDER},\n  ],\n  [PLANET_PURPLE_FILE]: [\n    {xp: 10, obj: EQUIP_TURN_BOOST},\n    {xp: 300, obj: EQUIP_SHIELD_STRONG},\n    {xp: 750, obj: EQUIP_GUNNERY_DROID},\n    {xp: 1000, obj: SHIP_FIGHTER}\n  ],\n  // Killing aliens\n  [SHIP_ALIEN_TURRET.name]: [\n    {xp: 1, obj: EQUIP_FAST_BLASTER},\n    {xp: 5, obj: EQUIP_ALIEN_BLASTER},\n    {xp: 10, obj: EQUIP_ALIEN_BLASTER_FAST},\n  ],\n  [SHIP_ALIEN.name]: [\n    {xp: 1, obj: EQUIP_SHIELD},\n    {xp: 5, obj: EQUIP_DECOY_DEPLOYER},\n    {xp: 10, obj: EQUIP_SHIELD_LONG},\n    {xp: 20, obj: SHIP_ALIEN},\n  ],\n  [SHIP_ALIEN_LARGE.name]: [\n    {xp: 1, obj: EQUIP_STREAM_BLASTER},\n    {xp: 5, obj: EQUIP_TURRET_DEPLOYER},\n    {xp: 10, obj: EQUIP_SNIPER_RIFLE},\n    {xp: 20, obj: SHIP_ALIEN_LARGE},\n  ],\n  [SHIP_ALIEN_STEALTH.name]: [\n    {xp: 1, obj: EQUIP_MISSILE_LAUNCHER},\n    {xp: 5, obj: EQUIP_SPRINKLER_BLASTER},\n    {xp: 10, obj: EQUIP_FRIENDSHIP_GUN},\n  ],\n  [SHIP_ALIEN_STAPLE_TURRET.name]: [\n    {xp: 1, obj: EQUIP_STAPLE_GUN},\n    {xp: 3, obj: EQUIP_MELEE_GUN},\n    {xp: 7, obj: EQUIP_ENHANCED_STORAGE},\n    {xp: 10, obj: EQUIP_SHIELD_DROID},\n  ],\n  [SHIP_ALIEN_FIRE.name]: [\n    {xp: 1, obj: EQUIP_STAPLE_GUN_HEAVY},\n    {xp: 4, obj: EQUIP_ENHANCED_ARMOR},\n    {xp: 7, obj: EQUIP_SHIELD_ULTRA},\n    {xp: 15, obj: SHIP_ALIEN_FIRE},\n  ],\n  [SHIP_ALIEN_MOTHERSHIP.name]: [\n    {xp: 1, obj: EQUIP_ALIEN_BLASTER_LIGHTNING},\n  ]\n}\n\nexport const PLANET_DENSITY = new Map();\nPLANET_DENSITY.set(PLANET_GREEN_FILE, 0.01)\nPLANET_DENSITY.set(PLANET_PURPLE_FILE, 0.015)\nPLANET_DENSITY.set(PLANET_RED_FILE, 0.019)\nPLANET_DENSITY.set(PLANET_ROCK_FILE, 0.025)\n\n// Universe Rings\nexport const UNIVERSE_RINGS = [\n  {\n    planetCount: 1,\n    minDist: 1, maxDist: 2,\n    minDistToOtherPlanet: 10,\n    minPlanetRadius: 1500, maxPlanetRadius: 1501,\n    planetFiles: [PLANET_PURPLE_FILE],\n    aliens: [{count: 0, file: null}],\n  },\n  {\n    planetCount: 0,\n    minDist: 1700, maxDist: 2500,\n    minDistToOtherPlanet: 10,\n    minPlanetRadius: 10, maxPlanetRadius: 10,\n    planetFiles: [],\n    aliens: [\n      {count: 50, file: SHIP_ALIEN_STEALTH},\n      {count: 60, file: SHIP_ALIEN_FIRE},\n      {count: 30, file: SHIP_ALIEN_STAPLE_TURRET},\n    ],\n  },\n  {\n    planetCount: 200,\n    minDist: 2500, maxDist: 10000,\n    minDistToOtherPlanet: 150,\n    minPlanetRadius: 280, maxPlanetRadius: 500,\n    planetFiles: [PLANET_RED_FILE, PLANET_PURPLE_FILE, PLANET_GREEN_FILE],\n    aliens: [\n      {count: 400, file: SHIP_ALIEN_STAPLE_TURRET},\n      {count: 600, file: SHIP_ALIEN_LARGE},\n      {count: 300, file: SHIP_ALIEN_STEALTH},\n    ],\n  },\n  {\n    planetCount: 0,\n    minDist: 8000, maxDist: 12000,\n    minDistToOtherPlanet: 10,\n    minPlanetRadius: 10, maxPlanetRadius: 10,\n    planetFiles: [PLANET_RED_FILE],\n    aliens: [\n      {count: 100, file: SHIP_ALIEN_STAPLE_TURRET},\n      {count: 400, file: SHIP_ALIEN_STEALTH},\n    ],\n  },\n  {\n    planetCount: 520,\n    minDist: 10000, maxDist: 15000,\n    minDistToOtherPlanet: 150,\n    minPlanetRadius: 180, maxPlanetRadius: 300,\n    planetFiles: [PLANET_ROCK_FILE, PLANET_RED_FILE, PLANET_GREEN_FILE],\n    aliens: [\n      {count: 300, file: SHIP_ALIEN_TURRET},\n      {count: 700, file: SHIP_ALIEN},\n      {count: 300, file: SHIP_ALIEN_LARGE},\n    ],\n  },\n  {\n    planetCount: 2000,\n    minDist: 15000, maxDist: 25000,\n    minDistToOtherPlanet: 200,\n    minPlanetRadius: 150, maxPlanetRadius: 200,\n    planetFiles: [PLANET_ROCK_FILE, PLANET_RED_FILE],\n    aliens: [\n      {count: 1200, file: SHIP_ALIEN_TURRET},\n      {count: 350, file: SHIP_ALIEN}\n    ],\n  },\n  {\n    planetCount: 1000,\n    minDist: 25000, maxDist: 30000,\n    minDistToOtherPlanet: 300,\n    minPlanetRadius: 150, maxPlanetRadius: 180,\n    planetFiles: [PLANET_ROCK_FILE],\n    aliens: [{count: 500, file: SHIP_ALIEN_TURRET}],\n  },\n  {\n    planetCount: 800,\n    minDist: 30000, maxDist: UNIVERSE_RADIUS,\n    minDistToOtherPlanet: 500,\n    minPlanetRadius: 80, maxPlanetRadius: 150,\n    planetFiles: [PLANET_ROCK_FILE],\n    aliens: [],\n  },\n];\n","import {c, fly, manage, utils} from './';\nimport lodash from 'lodash';\n\n/**\n * Creates an empty world object, with only basic properties.\n * This will be populated by setupWorld()\n */\nexport function createEmptyWorld() {\n  return {\n    saveGameName: null, // name of last game saved/loaded\n    ship: null,\n    view: { // global XY for current view (in manage mode, always ship.xy in fly mode)\n      x: 0,\n      y: 0,\n    },\n    ships: [],\n    planets: [],\n    selectedPlanet: {resources: {}},\n    lastPlanetLanded: null,\n    gameTickCount : 0,\n    blueprints: {\n      ship: [],\n      equip: [],\n      xp: {\n        [c.PLANET_ROCK_FILE]: 0,\n        [c.PLANET_RED_FILE]: 0,\n        [c.PLANET_GREEN_FILE]: 0,\n        [c.PLANET_PURPLE_FILE]: 0,\n        [c.SHIP_ALIEN_TURRET.name]: 0,\n        [c.SHIP_ALIEN.name]: 0,\n        [c.SHIP_ALIEN_LARGE.name]: 0,\n        [c.SHIP_ALIEN_STEALTH.name]: 0,\n        [c.SHIP_ALIEN_STAPLE_TURRET.name]: 0,\n        [c.SHIP_ALIEN_FIRE.name]: 0,\n        [c.SHIP_ALIEN_MOTHERSHIP.name]: 0,\n      },\n      xpLevels: lodash.cloneDeep(c.XP_LEVELS),\n    },\n    nextId: 100, // unique ID for sprites, equip, etc...\n    // everything in system is transient and not serialized when saving the game\n    system: {\n      keys: {}, // Global keypress handlers\n      app: null, // Pixi App\n      gameState: c.GAME_STATE.INIT, // Current game state\n      isTyping: false, // used to stop keypress events ('w') when user is typing in input\n      gameLoop: null, // loop function in this state\n      bgSprite: null, // star background\n      explosionSheet: null, // spritesheet for explosions\n      explosions: [], //contains sprites\n      bullets: [], // contains all the bullets\n      nearby: {planets: [], ships: []}, // ships and planets near enough for collision detection and running AI\n      planetSpriteCache: {}, // {\"green_planet.png\" : Map(id:sprite, id:sprite)... }\n      shipSpriteCache: {}, // {\"alien_small.png\" : Map(id:sprite, id:sprite)... }\n      shieldSpriteCache: new Map(), // These sprites are each added to a ship and not reused\n      spriteContainers: {background: null, planets: null, bullets: null, ships: null, minimap: null, explosions:null},\n      screenHeight: c.SCREEN_HEIGHT, // changed based on window size\n      screenScale: 1, // scale due to window sizing\n      miniMapGraphics: null, // used as a canvas for drawing the miniMap\n      initializing: true, // set to false when the game fully running (after first draw)\n    },\n  };\n}\n\nexport function setupWorld() {\n  const world = window.world;\n  setupSpriteContainers();\n  createBackground();\n  createPlanets();\n  // Default selectedPlanet, shouldn't be displayed\n  world.selectedPlanet = world.planets[0];\n  window.world.shipStartX = c.PLAYER_START_X;\n  //window.world.shipStartX = -2500;\n  window.world.shipStartY = c.PLAYER_START_Y;\n  world.ship = createShip(c.SHIP_EXPLORER, c.PLAYER);\n  const shipSprite = getShipSprite(world.ship);\n  shipSprite.visible = true;\n  world.ship.resources = c.PLAYER_STARTING_RESOURCES;\n\n  // DEBUG SHIP\n  // world.ship.armorMax = 55000;\n  // world.ship.armor = 55000;\n  // world.ship.resources = {titanium: 10000, gold: 10000, uranium: 10000};\n  // world.ship.resourcesMax = 100000;\n  // world.ship.equip = [c.EQUIP_BLINK_BRAKE, lodash.cloneDeep(c.EQUIP_MELEE_GUN),\n  //   lodash.cloneDeep(c.EQUIP_SHIELD_DROID), lodash.cloneDeep(c.EQUIP_SHIELD_ULTRA), lodash.cloneDeep(c.EQUIP_SHIELD_ULTRA),\n  //   lodash.cloneDeep(c.EQUIP_AUTOLANDER), lodash.cloneDeep(c.EQUIP_MISSILE_LAUNCHER)];\n  // world.ship.equipMax = world.ship.equip.length;\n  // world.blueprints.equip = [...c.ALL_EQUIP];\n  // world.blueprints.ship = [...c.ALL_SHIPS];\n\n  // DEBUG test alien\n  // createAlien(c.SHIP_ALIEN_TURRET, c.PLAYER_START_X + 450, c.PLAYER_START_Y + 70);\n  // createAlien(c.SHIP_ALIEN_LARGE, c.PLAYER_START_X + 450, c.PLAYER_START_Y - 70);\n\n  // DEBUG Planet\n  // let testPlanet = createPlanet(c.PLANET_ROCK_FILE, \"home\", 100, 200, {\n  //   titanium: 20500,\n  //   gold: 51000,\n  //   uranium: 5000,\n  // });\n  // testPlanet.x = c.PLAYER_START_X - 150;\n  // testPlanet.y = c.PLAYER_START_Y;\n  // testPlanet.resources.stored = {titanium: 10000, gold: 10000, uranium: 10000};\n\n  createAliens();\n  setupMiniMap();\n  setupExplosionSheet();\n}\n\n/**\n * Sets up the sprite containers in the correct display order\n */\nexport function setupSpriteContainers() {\n  let mainStage = window.world.system.app.stage;\n  let spriteContainers = window.world.system.spriteContainers;\n  spriteContainers.background = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.background);\n\n  spriteContainers.planets = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.planets);\n\n  spriteContainers.bullets = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.bullets);\n\n  spriteContainers.ships = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.ships);\n\n  spriteContainers.explosions = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.explosions);\n\n  spriteContainers.minimap = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.minimap);\n}\n\nexport function createBackground() {\n  let container = window.world.system.spriteContainers.background;\n  window.world.system.bgSprite = new window.PIXI.TilingSprite(\n    window.PIXI.Texture.from(c.STAR_BACKGROUND_FILE),\n    c.SCREEN_WIDTH,\n    c.SCREEN_HEIGHT,\n  );\n  container.addChild(window.world.system.bgSprite);\n}\n\nexport function createPlanets() {\n  let container = window.world.system.spriteContainers.planets;\n  for (let ring of c.UNIVERSE_RINGS) {\n    for (let i = 0; i < ring.planetCount; i++) {\n      let fileName = ring.planetFiles[utils.randomInt(0, ring.planetFiles.length - 1)];\n      let name = String.fromCharCode(65 + Math.floor(Math.random() * 26)) + utils.randomInt(1000, 999999);\n      let radius = utils.randomInt(ring.minPlanetRadius, ring.maxPlanetRadius);\n      let mass = radius * radius * c.PLANET_DENSITY.get(fileName);\n      let maxResource = mass * 2 * 0.3;\n      let minResource = mass * 0.1;\n      // Setup the planet\n      let planet = createPlanet(fileName, name, radius, mass, {\n        titanium: utils.randomInt(minResource, maxResource),\n        gold: utils.randomInt(minResource, maxResource),\n        uranium: utils.randomInt(minResource, maxResource),\n      }, container);\n      let {x, y} = getFreeXy(planet, ring.minDistToOtherPlanet, 0, ring.minDist, ring.maxDist);\n      planet.x = x;\n      planet.y = y;\n    }\n  }\n}\n\n/**\n * Distance to the nearest planet that is not equal to origPlanet\n * @return {{nearestPlanetDist: number, nearestPlanet: null}}\n */\nfunction nearestPlanetDistance(origPlanet, x, y) {\n  let minDist = 99999999999;\n  let nearestPlanet = null;\n  for (let planet of window.world.planets) {\n    if (planet !== origPlanet) {\n      let dist = utils.distanceBetween(x, y, planet.x, planet.y) - planet.radius;\n      if (origPlanet) {\n        dist -= origPlanet.radius;\n      }\n      if (!nearestPlanet || (dist < minDist)) {\n        minDist = dist;\n        nearestPlanet = planet;\n      }\n    }\n  } // for planet\n  return {nearestPlanet: nearestPlanet, nearestPlanetDist: minDist};\n}\n\n/**\n * Distance to the nearest alien\n * @return {{nearestAlien: null, nearestAlienDist: number}}\n */\nfunction nearestAlienDistance(x, y) {\n  let minDist = 99999999999;\n  let nearestAlien = null;\n  for (let alien of window.world.system.nearby.ships) {\n    if (alien === window.world.ship) {\n      continue;\n    }\n    // This assumes the calling code alien is the same size\n    let dist = utils.distanceBetween(x, y, alien.x, alien.y) - (alien.radius * 2);\n    if (!nearestAlien || (dist < minDist)) {\n      minDist = dist;\n      nearestAlien = alien;\n    }\n  } // for\n  return {nearestAlien: nearestAlien, nearestAlienDist: minDist};\n}\n\n/**\n * Find a free spot of space to stick something\n * This will recurse until it finds a free spot.\n * @return {{x, y}}\n */\nfunction getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, failCount = 0) {\n  let dir = utils.randomFloat(0, Math.PI * 2);\n  let dist = utils.randomInt(minDist, maxDist);\n  let {x, y} = utils.getPointFrom(0, 0, dir, dist);\n  let np = 9999;\n  if (minDistToPlanet > 0) {\n    let {nearestPlanetDist} = nearestPlanetDistance(planet, x, y);\n    if (nearestPlanetDist < minDistToPlanet) {\n      return getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, ++failCount);\n    }\n    np = nearestPlanetDist;\n  }\n  if (minDistToAlien > 0) {\n    let {nearestAlienDist} = nearestAlienDistance(x, y);\n    if (nearestAlienDist < minDistToAlien) {\n      return getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, ++failCount);\n    }\n  }\n  if (failCount > 200) {\n    console.warn(\"Had a hard time finding a spot, it took \" + failCount + \" tries on ring \" + minDist + \" np=\" + np);\n  }\n  return {x, y};\n}\n\n// Creates and returns a planet (and adds it to the app)\nexport function createPlanet(planetFile, name, radius, mass, resources) {\n  let planet = {};\n  planet.name = name;\n  planet.x = 0; // temp should get reset\n  planet.y = 0; // temp should get reset\n  planet.mass = mass;\n  planet.resources = {\n    stored: {titanium: 0, gold: 0, uranium: 0},\n    raw: resources\n  };\n  planet.ships = []; // stored ships \n  planet.equip = []; // stored equipment\n  planet.buildings = []; // mines, factories\n  planet.radius = radius;\n  planet.lastLandingDir = 0;\n  planet.spriteFile = planetFile;\n  planet.spriteId = null; // no sprite created yet\n  window.world.planets.push(planet);\n  return planet;\n}\n\n/**\n * Finds or creates a planet sprite.\n * This cache works a little different, no sprites are re-used.\n * Once a planetSprite is created the buildings are added and it stays attached to the planet\n * Otherwise we would have to empty out the container and redraw the planet and buildings each time\n */\nexport function getPlanetSprite(planet) {\n  let planetSpriteCache = window.world.system.planetSpriteCache[planet.spriteFile];\n  // No cache for this file yet - create an empty cache\n  if (!planetSpriteCache) {\n    planetSpriteCache = new Map();\n    window.world.system.planetSpriteCache[planet.spriteFile] = planetSpriteCache;\n  }\n  // Lookup the sprite in the cache by ID\n  let planetContainer = planetSpriteCache.get(planet.spriteId);\n  if (planetContainer) {\n    return planetContainer;\n  }\n  // Setup the planet container sprite (contains planet plus buildings)\n  planetContainer = new window.PIXI.Container();\n  planetContainer.x = 0; // will be set on every draw\n  planetContainer.y = 0;\n  planetContainer.visible = true;\n  window.world.system.spriteContainers.planets.addChild(planetContainer);\n\n  // Setup the planet sprite itself\n  const planetSprite = new window.PIXI.Sprite(\n    window.PIXI.loader.resources[c.SPRITESHEET_JSON].textures[planet.spriteFile]);\n  planetSprite.anchor.set(0.5, 0.5);\n  let spriteScale = planet.radius * 2 / planetSprite.width;\n  // Planets with atmosphere are a little smaller than the full image size\n  if ((planet.spriteFile === c.PLANET_PURPLE_FILE) || (planet.spriteFile === c.PLANET_GREEN_FILE)) {\n    spriteScale = spriteScale * 1.08;\n  }\n  planetSprite.scale.set(spriteScale, spriteScale);\n  planetContainer.addChild(planetSprite);\n\n  for (const building of planet.buildings) {\n    manage.makeBuildingSprite(building, planet, planetContainer);\n  }\n\n  // Cache the new sprite\n  planet.spriteId = window.world.nextId++;\n  planetSpriteCache.set(planet.spriteId, planetContainer);\n  return planetContainer;\n}\n\n/**\n * Finds or creates a sprite for the ship\n * NOTE: This will return a non-visible sprite, the calling code is responsible for making the sprite visible\n */\nexport function getShipSprite(ship) {\n  // if (!ship.alive) {\n  //   console.warn('You should not get sprites for dead ships.');\n  //   console.trace();\n  //   window.error(); // does not exist... thus an error!\n  //   return;\n  // }\n  let shipSpriteCache = window.world.system.shipSpriteCache[ship.imageFile];\n  // No cache for this file yet - create an empty cache\n  if (!shipSpriteCache) {\n    shipSpriteCache = new Map();\n    window.world.system.shipSpriteCache[ship.imageFile] = shipSpriteCache;\n  }\n  // Lookup the sprite in the cache by ID\n  let sprite = shipSpriteCache.get(ship.spriteId);\n  if (sprite) {\n    return sprite;\n  }\n  // Lookup a free sprite (dead or off-screen alien)\n  for (let [spriteId, foundSprite] of shipSpriteCache.entries()) {\n    if (!foundSprite.visible) {\n      foundSprite.visible = false;\n      foundSprite.rotation = ship.rotation;\n      foundSprite.scale.set(ship.imageScale, ship.imageScale);\n      ship.spriteWidth = foundSprite.width;\n      ship.spriteHeight = foundSprite.height;\n      ship.radius = foundSprite.width / 2; // used for circular aliens\n      ship.spriteId = spriteId;\n      //console.log('found old sprite '+spriteId+' '+ship.imageFile);\n      return foundSprite;\n    }\n  } // foundSprite\n\n  // No sprite found - create a new one\n  let spriteSheet = window.PIXI.loader.resources[c.SPRITESHEET_JSON];\n  sprite = new window.PIXI.Sprite(spriteSheet.textures[ship.imageFile]);\n  sprite.position.set(c.HALF_SCREEN_WIDTH, c.HALF_SCREEN_HEIGHT);\n  sprite.anchor.set(0.5, 0.5);  // pivot on ship center\n  sprite.scale.set(ship.imageScale, ship.imageScale);\n  sprite.rotation = ship.rotation;\n  sprite.visible = false;\n  ship.spriteWidth = sprite.width;\n  ship.spriteHeight = sprite.height;\n  ship.radius = sprite.width / 2; // used for circular aliens\n  ship.spriteId = window.world.nextId++;\n  shipSpriteCache.set(ship.spriteId, sprite);\n  window.world.system.spriteContainers.ships.addChild(sprite);\n  //console.log('created new ship sprite '+ship.imageFile, sprite);\n  return sprite;\n}\n\n/**\n * @return The original width/height of the sprite before scaling was applied\n *   {width, height}\n */\nexport function getSpriteOrigWithHeight(sprite) {\n  const origWidth = sprite.width;\n  const origHeight = sprite.height;\n  sprite.scale.set(1, 1);\n  const width = sprite.width;\n  const height = sprite.height;\n  sprite.width = origWidth;\n  sprite.height = origHeight;\n  return {width, height};\n}\n\nexport function setShieldRadius(ship, shield, shieldSprite) {\n  const shipSprite = getShipSprite(ship);\n  shieldSprite.anchor.set(0.5, 0.5);  // pivot on center\n  const {width, height} = getSpriteOrigWithHeight(shipSprite);\n  // Radius within the scaled ship sprite\n  const shieldWidth = Math.max(width, height) * 1.5; // 1.5 to make it larger than the ship\n  shieldSprite.width = shieldWidth;\n  shieldSprite.height = shieldWidth;\n  shield.radius = (shieldWidth * ship.imageScale) / 2; // size without ship scaling\n}\n\nexport function getShieldSprite(ship, shield) {\n  const cacheId = ship.id + '~' + shield.spriteFile;\n  // Lookup the sprite in the cache by ID\n  let shieldSprite = window.world.system.shieldSpriteCache.get(cacheId);\n  if (shieldSprite) {\n    setShieldRadius(ship, shield, shieldSprite);\n    return shieldSprite;\n  }\n  // Add a new shield image to the ship\n  const shipSprite = getShipSprite(ship);\n  let spriteSheet = window.PIXI.loader.resources[c.SPRITESHEET_JSON];\n  shieldSprite = new window.PIXI.Sprite(spriteSheet.textures[shield.spriteFile]);\n  setShieldRadius(ship, shield, shieldSprite);\n  shipSprite.addChild(shieldSprite);\n  window.world.system.shieldSpriteCache.set(cacheId, shieldSprite);\n  return shieldSprite;\n}\n\n// Creates and returns a ship object\nexport function createShip(shipType, owner) {\n  let ship = lodash.cloneDeep(shipType);\n  ship.id = window.world.nextId++;\n  ship.selectedSecondaryWeaponIndex = -1;\n  for (let i=0; i<ship.equip.length; i++) {\n    const equip = ship.equip[i];\n    equip.id = window.world.nextId++;\n    if (ship.selectedSecondaryWeaponIndex < 0 && equip.type === c.EQUIP_TYPE_SECONDARY_WEAPON) {\n      ship.selectedSecondaryWeaponIndex = i;\n    }\n  }\n  ship.owner = owner;\n  ship.vx = 0; // velocityX\n  ship.vy = 0; // velocityY\n  ship.x = window.world.shipStartX;\n  ship.y = window.world.shipStartY;\n  ship.spriteId = null; // no sprite yet\n  ship.alive = true; // set to false if it blows up\n  ship.spriteWidth = null; //We won't know until we load the sprite\n  ship.rotation = 0;\n  window.world.system.nearby.ships.push(ship);\n  return ship;\n}\n\nexport function createAlien(shipType, x, y) {\n  let alien = createShip(shipType, c.ALIEN);\n  window.world.ships.push(alien);\n  alien.x = x;\n  alien.y = y;\n  alien.radius = 50; // will be set to a real value when sprite loads\n  return alien;\n}\n\nexport function createAliens() {\n  // Create motherships\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, 1700, 200);\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, 0, 1700);\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, -1700, 0);\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, 0, -1700);\n\n  for (let ring of c.UNIVERSE_RINGS) {\n    for (const alienInfo of ring.aliens) {\n      for (let i = 0; i < alienInfo.count; i++) {\n        let {x, y} = getFreeXy(null, c.MIN_ALIEN_DIST_TO_PLANET, c.MIN_ALIEN_DIST_TO_ALIEN, ring.minDist, ring.maxDist);\n        createAlien(alienInfo.file, x, y);\n      } // for i\n    } // for alienInfo\n  } // for ring\n}\n\nexport function setupMiniMap() {\n  let container = window.world.system.spriteContainers.minimap;\n  let miniMapContainer = new window.PIXI.Container();\n  container.addChild(miniMapContainer);\n\n  // Mask so drawings don't spill out of the map\n  let mask = new window.PIXI.Graphics();\n  mask.drawRect(0, c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT, c.MINIMAP_WIDTH, c.SCREEN_HEIGHT);\n  mask.renderable = true;\n  mask.cacheAsBitmap = true;\n  miniMapContainer.addChild(mask);\n  miniMapContainer.mask = mask;\n\n  // Graphics for drawing shapes on\n  let g = new window.PIXI.Graphics();\n  miniMapContainer.addChild(g);\n  window.world.system.miniMapGraphics = g;\n}\n\n/**\n * Called when the user clicks on the screen\n */\nexport function click(event) {\n  let x = event.data.global.x;\n  let y = event.data.global.y;\n  const screenScale = window.world.system.screenScale;\n  let scaledX = x / screenScale;\n  let scaledY = y / screenScale;\n  if ((scaledX < c.MINIMAP_WIDTH) && (scaledY > (c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT))) {\n    fly.clickOnMinimap(scaledX, scaledY);\n  }\n}\n\nexport function changeGameState(newState) {\n  const world = window.world;\n  world.system.gameState = newState;\n  if (newState === c.GAME_STATE.FLY) {\n    fly.enterFlyState();\n    world.system.gameLoop = fly.flyLoop;\n  } else if (newState === c.GAME_STATE.MANAGE) {\n    manage.enterManageState();\n    world.system.gameLoop = manage.manageLoop;\n  } else {\n    world.system.gameLoop = null;\n  }\n}\n\n/**\n * Loop to run building, runs in any game mode (fly + manage)\n */\nexport function runBuildings() {\n  const world = window.world;\n  for (let planet of world.planets) {\n    for (let building of planet.buildings) {\n      if (building.type === c.BUILDING_TYPE_MINE) {\n        mineResource(planet, 'titanium', c.MINE_SPEED_TITANIUM);\n        mineResource(planet, 'gold', c.MINE_SPEED_GOLD);\n        mineResource(planet, 'uranium', c.MINE_SPEED_URANIUM);\n      }\n    } // for building\n    // If planet is out of resources stop the mine animations\n    if ((planet.resources.raw.titanium === 0)\n      && (planet.resources.raw.gold === 0)\n      && (planet.resources.raw.uranium === 0)) {\n      const planetSprite = getPlanetSprite(planet);\n      for (const buildingSprite of planetSprite.children) {\n        // all animated sprites stop (this may not be true if new building types are added)\n        if (buildingSprite.animationSpeed) {\n          buildingSprite.animationSpeed = 0;\n        }\n      }\n    }\n  } // for planet\n}\n\nfunction mineResource(planet, resourceType, amount) {\n  if (planet.resources.raw[resourceType] > 0) {\n    planet.resources.raw[resourceType] -= amount;\n    planet.resources.stored[resourceType] += amount;\n    if (planet.resources.raw[resourceType] <= 0) {\n      planet.resources.raw[resourceType] = 0;\n    }\n    addMiningXp(amount, planet);\n  }\n}\n\nfunction addMiningXp(amount, planet) {\n  let blueprints = window.world.blueprints;\n  const xp = blueprints.xp[planet.spriteFile] += amount;\n  let nextLevel = blueprints.xpLevels[planet.spriteFile][0];\n  if (nextLevel && (nextLevel.xp <= xp)) {\n    addBlueprint(nextLevel);\n    // Remove the item\n    blueprints.xpLevels[planet.spriteFile].shift();\n  }\n}\n\nexport function addAlienXp(ship) {\n  let blueprints = window.world.blueprints;\n  let xp = blueprints.xp[ship.name];\n  if (!xp) {\n    xp = 1;\n  }  else {\n    xp += 1;\n  }\n  blueprints.xp[ship.name] = xp;\n  if (blueprints.xpLevels[ship.name]) {\n    let nextLevel = blueprints.xpLevels[ship.name][0];\n    if (nextLevel && (nextLevel.xp <= xp)) {\n      addBlueprint(nextLevel);\n      // Remove the item\n      blueprints.xpLevels[ship.name].shift();\n    }\n  }\n}\n\nexport function addBlueprint(nextLevel) {\n  utils.showToast('New plan: ' + nextLevel.obj.name);\n  let blueprints = window.world.blueprints;\n  if (nextLevel.obj.objType === c.OBJ_EQUIP) {\n    blueprints.equip.push(nextLevel.obj);\n  } else if (nextLevel.obj.objType === c.OBJ_SHIP) {\n    blueprints.ship.push(nextLevel.obj);\n  } else {\n    console.warn(\"Could not find blueprint of type \" + nextLevel.obj.objType + \" nextLevel=\", nextLevel);\n  }\n}\n\n/**\n * Checks if the combined resources of planet and ship can afford the resources\n * Call this before calling payResourceCost\n * @return true if there are enough resources available\n */\nexport function canAfford(planet, ship, resources) {\n  let titanium = 0;\n  let gold = 0;\n  let uranium = 0;\n  if (planet) {\n    titanium += planet.resources.stored.titanium;\n    gold += planet.resources.stored.gold;\n    uranium += planet.resources.stored.uranium;\n  }\n  if (ship) {\n    titanium += ship.resources.titanium;\n    gold += ship.resources.gold;\n    uranium += ship.resources.uranium;\n  }\n  return (titanium >= resources.titanium)\n    && (gold >= resources.gold)\n    && (uranium >= resources.uranium);\n}\n\n/**\n * Pays the cost, taking from the planet and the ship as available\n * NOTE: This will not ensure you have enough resources, you can go into debt if you call this without checking\n * first using canAfford()\n * @param planet planet to get resources from\n * @param ship ship to get resources from\n * @param resources amount to pay\n */\nexport function payResourceCost(planet, ship, resources) {\n  payResource(planet, ship, 'titanium', resources.titanium);\n  payResource(planet, ship, 'gold', resources.gold);\n  payResource(planet, ship, 'uranium', resources.uranium);\n}\n\nexport function payResource(planet, ship, resourceType, amount) {\n  let paid = -amount; // amount owing (overwritten if some payment comes from the planet)\n  if (planet) {\n    paid = planet.resources.stored[resourceType] - amount;\n    if (paid >= 0) {\n      planet.resources.stored[resourceType] -= amount;\n      return;\n    } else {\n      // Planet can't afford this purchase, take some from the ship\n      planet.resources.stored[resourceType] = 0;\n    }\n  }\n  if (ship) {\n    ship.resources[resourceType] = ship.resources[resourceType] + paid;\n    if (ship.resources[resourceType] < 0) {\n      console.warn(\"Ship is in debt \" + ship.resources[resourceType] + \" \" + resourceType);\n    }\n  } else if (paid < 0) {\n    planet.resources.stored[resourceType] = planet.resources.stored[resourceType] + paid;\n    console.warn(\"Planet is in debt \" + planet.resources.stored[resourceType] + \" \" + resourceType);\n  }\n}\n\nexport function setupExplosionSheet() {\n  window.world.system.explosionSheet = window.PIXI.Loader.shared.resources[c.CRASH_JSON].spritesheet;\n  // Preload an explosion sprite animation (these will be cached and reused in world.system.explosions)\n  createExplosionSprite();\n}\n\nexport function createExplosionSprite() {\n  let sprite = new window.PIXI.AnimatedSprite(window.world.system.explosionSheet.animations[c.CRASH]);\n  sprite.animationSpeed = 0.4;\n  sprite.loop = false;\n  sprite.anchor.set(0.5, 0.5);\n  sprite.scale.set(2, 2);\n  sprite.x = c.HALF_SCREEN_WIDTH;\n  sprite.y = c.HALF_SCREEN_WIDTH;\n  sprite.loop = true;\n  sprite.visible = false;\n  window.world.system.explosions.push(sprite);\n  window.world.system.spriteContainers.explosions.addChild(sprite);\n  return sprite;\n}\n","import {ai, c, game, manage, utils} from './';\n\nexport function enterFlyState() {\n  console.log(\"Take off\");\n}\n\n// Main play mode - flying\nexport function flyLoop(delta) {\n  if (delta > 1.005) {\n    console.log('Lagging with delta=' + delta);\n  }\n  let world = window.world;\n  let ship = window.world.ship;\n\n  // Cache all the nearby planets and ships\n  setupNearby();\n\n  // When ship.alive is false the ship is exploding\n  if (ship.alive) {\n    runDroids(ship);\n    // Keypress handling\n    if (world.system.keys.left.isDown || world.system.keys.a.isDown) {\n      turnShip(ship, true);\n    }\n    if (world.system.keys.right.isDown || world.system.keys.d.isDown) {\n      turnShip(ship, false);\n    }\n    if (world.system.keys.up.isDown || world.system.keys.w.isDown) {\n      propelShip(ship);\n    }\n    if (world.system.keys.down.isDown || world.system.keys.s.isDown) {\n      brakeShip(ship);\n    }\n    if (world.system.keys.space.isDown) {\n      firePrimaryWeapon(ship, 0.05);\n    }\n    if (world.system.keys.x.isDown) {\n      fireSecondaryWeapon(ship);\n    }\n    if (world.system.keys.q.isDown) {\n      thrustShip(ship, true);\n    }\n    if (world.system.keys.e.isDown) {\n      thrustShip(ship, false);\n    }\n\n    // Find planets in view\n    let planetsInView = [];\n    for (let planet of world.system.nearby.planets) {\n      if (planetInView(ship, planet)) {\n        planetsInView.push(planet);\n      }\n    }\n\n    // Gravity\n    for (let planet of planetsInView) {\n      let grav = utils.calcGravity(ship.x, ship.y, planet);\n      ship.vx += grav.x;\n      ship.vy += grav.y;\n    }\n\n    // move the ship\n    ship.x += ship.vx;\n    ship.y += ship.vy;\n    world.view.x = ship.x;\n    world.view.y = ship.y;\n\n    let shipSprite = game.getShipSprite(ship);\n    shipSprite.rotation = ship.rotation;\n\n    // Don't detect collisions until all the drawing is done\n    // Pixijs sometimes gets the sprite locations wrong when they haven't been rendered yet\n    if (!world.system.initializing) {\n      // Ship-Planet Collisions\n      for (let planet of planetsInView) {\n        if (detectCollisionWithPlanet(ship, shipSprite, planet)) {\n          landShip(ship, planet);\n          return; // exit loop\n        }\n      } // for planet\n      // Ship-Alien collision\n      for (let alien of world.system.nearby.ships) {\n        if (alien.alive && detectCollisionWithAlien(ship, shipSprite, alien)) {\n          shipsCollide(ship, alien);\n        }\n      }\n    }\n  }\n\n  moveExplosions(); // especially alien explosions\n  moveBackground(ship);\n  drawMiniMap();\n  // first draw is done\n  if (world.system.initializing) {\n    world.system.initializing = false;\n  }\n}\n\n\n/**\n * Creates a cache of all nearby planets and ships\n */\nexport function setupNearby() {\n  const nearby = window.world.system.nearby;\n  const ship = window.world.ship;\n  const minX = ship.x - c.NEARBY_WIDTH / 2;\n  const maxX = ship.x + c.NEARBY_WIDTH / 2;\n  const minY = ship.y - c.NEARBY_HEIGHT / 2;\n  const maxY = ship.y + c.NEARBY_HEIGHT / 2;\n\n  nearby.planets = [];\n  // for every planet\n  for (const planet of window.world.planets) {\n    if ((planet.x + planet.radius >= minX) && (planet.x - planet.radius <= maxX) &&\n      (planet.y + planet.radius >= minY) && (planet.y - planet.radius <= maxY)) {\n      nearby.planets.push(planet);\n    }\n  } // for planet\n\n  // for every ship\n  nearby.ships = [window.world.ship]; // ship is always nearby\n  for (const ship of window.world.ships) {\n    if ((ship.x + ship.radius >= minX) && (ship.x - ship.radius <= maxX) &&\n      (ship.y + ship.radius >= minY) && (ship.y - ship.radius <= maxY)) {\n      nearby.ships.push(ship);\n    }\n  } // for ship\n}\n\n/**\n * Redraw all planets and aliens\n */\nexport function repositionScreen() {\n  const ship = window.world.ship;\n  // Reposition all the planets\n  for (let planet of window.world.planets) {\n    planetInView(ship, planet);\n  }\n  for (const ship of window.world.ships) {\n    if (ship.spriteId) {\n      game.getShipSprite(ship).visible = false;\n      ship.spriteId = null;\n    }\n  }\n  setupNearby();\n  // Reposition all the aliens\n  ai.moveAliens();\n  drawMiniMap();\n}\n\n/**\n * Cools all ship weapons, run in mainLoop\n */\nexport function coolAllWeapons() {\n  // Ship is in nearby\n  for (let ship of window.world.system.nearby.ships) {\n    coolWeapons(ship);\n  }\n}\n\n/**\n * called in flyLoop to cool weapons\n */\nexport function coolWeapons(ship) {\n  for (let equip of ship.equip) {\n    // If equip has a cool time\n    if (equip.cool) {\n      equip.cool -= 1;\n    }\n    // Gunnery Droids are equip with weapons\n    if (equip.weapon && equip.weapon.cool) {\n      equip.weapon.cool -= 1;\n    }\n    if (equip.shield && equip.shield.active) {\n      equip.shield.lifetime -= 1;\n      if (equip.shield.lifetime <= 0) {\n        equip.shield.lifetime = 0;\n        disableShield(ship, equip.shield);\n      }\n    }\n  }\n}\n\nexport function resetWeaponsCool(ship) {\n  for (let equip of ship.equip) {\n    if ((equip.type === c.EQUIP_TYPE_PRIMARY_WEAPON) && (equip.cool > 0)) {\n      equip.cool = 0;\n    }\n  }\n}\n\nexport function runDroids(ship) {\n  for (let droid of ship.equip) {\n    if ((droid.type === c.EQUIP_TYPE_REPAIR_DROID) && (ship.armor < ship.armorMax)) {\n      let cost = {titanium: 0, gold: 0, uranium: 0};\n      if (game.canAfford(null, ship, cost)) {\n        ship.armor += droid.repairSpeed;\n        game.payResourceCost(null, ship, cost);\n      }\n    } else if (droid.type === c.EQUIP_TYPE_GUNNERY_DROID) {\n      shootAtNearestAlien(ship, droid.weapon);\n    }\n    // NOTE: Shield droid runs in checkForBulletCollision\n  } // for\n}\n\n/**\n * Fires the weapon in the direction of the nearest alien (if able to )\n */\nexport function shootAtNearestAlien(ship, weapon) {\n  // If we can't shoot, don't waste our time\n  if (weapon.cool > 0) {\n    return;\n  }\n  let nearestAlien = null;\n  let nearestAlienDist = null;\n  for (let alien of window.world.system.nearby.ships) {\n    if (alien.alive && alien.owner === c.ALIEN) {\n      let dist = utils.distanceBetween(ship.x, ship.y, alien.x, alien.y);\n      if (!nearestAlien || (dist < nearestAlienDist)) {\n        nearestAlien = alien;\n        nearestAlienDist = dist;\n      }\n    }\n  } // for\n  if (nearestAlien && (nearestAlienDist <= weaponRange(weapon))) {\n    const origDir = ship.rotation;\n    ship.rotation = utils.normalizeRadian(Math.atan2(nearestAlien.y - ship.y, nearestAlien.x - ship.x));\n    fireWeapon(weapon, ship, 0.1);\n    ship.rotation = origDir;\n  }\n}\n\nexport function moveBackground(ship) {\n  let bgSprite = window.world.system.bgSprite;\n  bgSprite.tilePosition.x = (100 - ship.x) + c.HALF_SCREEN_WIDTH;\n  bgSprite.tilePosition.y = (100 - ship.y) + c.HALF_SCREEN_HEIGHT;\n}\n\n/**\n * @return true if the planet is in view of the ship, false otherwise\n * NOTE: This will set the sprite.visible and sprite x/y attributes for the planet\n */\nexport function planetInView(ship, planet) {\n  // Right side\n  if ((ship.x + c.HALF_SCREEN_WIDTH + planet.radius < planet.x) || // Right\n    (ship.x - c.HALF_SCREEN_WIDTH - planet.radius > planet.x) || // Left\n    (ship.y + c.HALF_SCREEN_HEIGHT + planet.radius < planet.y) || // Bottom\n    (ship.y - c.HALF_SCREEN_HEIGHT - planet.radius > planet.y)) { // Top\n    // Planet is not currently visible, but if it has an Id then it used to be visible\n    if (planet.spriteId) {\n      const sprite = game.getPlanetSprite(planet);\n      if (sprite.visible) {\n        sprite.visible = false;\n      }\n    }\n    return false;\n  }\n  // Here we know this planet is in view\n  const sprite = game.getPlanetSprite(planet);\n  sprite.visible = true;\n  // Set planet relative to the ship's viewport\n  sprite.x = (planet.x - ship.x) + c.HALF_SCREEN_WIDTH;\n  sprite.y = (planet.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n  return true;\n}\n\n/**\n * @return the first active shield the ship is equipped with\n * NOTE: This returns equip.shield (NOT the full equip object)\n */\nexport function getActiveShield(ship) {\n  for (const equip of ship.equip) {\n    if (equip.shield && equip.shield.active) {\n      return equip.shield;\n    }\n  }\n  return null;\n}\n\n/**\n * @returns The first shield that is not currently used and cooled enough to re-use\n * NOTE: This returns the whole equip (not just the shield)\n */\nexport function getAvailableShieldEquip(ship) {\n  for (const equip of ship.equip) {\n    if (equip.shield && !equip.shield.active && equip.cool === 0) {\n      return equip;\n    }\n  }\n  return null;\n}\n\n/**\n * @returns true if the ship is equipped with a shield droid\n */\nexport function hasShieldDroid(ship) {\n  for (const equip of ship.equip) {\n    if (equip.type === c.EQUIP_TYPE_SHIELD_DROID) {\n      return equip;\n    }\n  }\n  return null;\n}\n\n/**\n * @return the first active shield equip in the ship, and if none are active, returns the first shield it finds.\n * returns an equip (not equip.shield like getActiveShield)\n */\nexport function getEquippedShield(ship) {\n  let shield = null;\n  for (const equip of ship.equip) {\n    if (equip.shield) {\n      shield = equip;\n      if (equip.shield.active) {\n        return shield;\n      }\n    }\n  } // for equip\n  return shield;\n}\n\n// Returns true if there is a collision and false otherwise\nexport function detectCollisionWithPlanet(ship, shipSprite, planet) {\n  const shield = getActiveShield(ship);\n  if (shield) {\n    // shield collision is round\n    return utils.distanceBetween(ship.x, ship.y, planet.x, planet.y) < (planet.radius + shield.radius);\n  }\n  // [[x,y],[x,y]]\n  let collisionPoints = utils.getVertexData(ship.x, ship.y, shipSprite);\n  for (let point of collisionPoints) {\n    let dist = utils.distanceBetween(point[0], point[1], planet.x, planet.y);\n    if (dist < planet.radius - c.ALLOWED_OVERLAP) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// Returns true if there is a collision and false otherwise\nexport function detectCollisionWithAlien(ship, shipSprite, alien) {\n  if (ship === alien) {\n    return false;\n  }\n  const shield = getActiveShield(ship);\n  if (shield) {\n    // shield collision is round\n    return utils.distanceBetween(ship.x, ship.y, alien.x, alien.y) < (alien.radius + shield.radius);\n  }\n  let collisionPoints = utils.getVertexData(ship.x, ship.y, shipSprite);\n  for (let point of collisionPoints) {\n    // Only works with circular aliens (need different logic for squares)\n    if (alien.radius) {\n      let dist = utils.distanceBetween(point[0], point[1], alien.x, alien.y);\n      if (dist < alien.radius - c.ALLOWED_OVERLAP) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * Land the ship on the planet\n * NOTE: This will cause damage to the ship attempting to land (side-effects)\n */\nfunction landShip(ship, planet) {\n  // atan2 has parameters (y,x)\n  let planetDir = utils.normalizeRadian(Math.atan2(ship.y - planet.y, ship.x - planet.x));\n  let dirDiff = Math.abs(ship.rotation - planetDir);\n  let speed = Math.abs(ship.vx) + Math.abs(ship.vy);\n  // 0 and PI*2 are right beside each other, so large values are very close to small values\n  let success = ((dirDiff < ship.crashAngle) || (dirDiff > (Math.PI * 2 - ship.crashAngle))) &&\n                (speed < ship.crashSpeed);\n  const hasAutolander = !!getEquip(ship, c.EQUIP_TYPE_AUTOLANDER);\n  // Stop moving\n  ship.vx = 0;\n  ship.vy = 0;\n  if (!success && !hasAutolander) {\n    // The landing was rough - do damage\n    let speedDiff = Math.max(speed - ship.crashSpeed, 0); // 0 if negative\n    let dirDiffAdj = Math.max(dirDiff - ship.crashAngle, 0); // 0 if negative\n    if (dirDiffAdj > Math.PI) {\n      dirDiffAdj = (Math.PI * 2) - dirDiff - ship.crashAngle;\n    }\n    let dmgPct = (speedDiff / 3) + dirDiffAdj;\n    let dmg = dmgPct * ship.armorMax;\n    damageShip(ship, dmg, resetGame);\n  }\n  // Disable shields when landing\n  const shield = getActiveShield(ship);\n  if (shield) {\n    disableShield(ship, shield);\n  }\n  // If the ship survived the landing\n  if (ship.armor > 0) {\n    window.world.selectedPlanet = planet; // currently selected planet (for manage UI)\n    window.world.lastPlanetLanded = planet; // last planet landed on\n    //Set ship position and angle on the planet surface\n    let dir = utils.directionTo(planet.x, planet.y, ship.x, ship.y)\n    let r = planet.radius + ship.spriteWidth / 2;\n    let {xAmt, yAmt} = utils.dirComponents(dir, r);\n    ship.x = planet.x + xAmt;\n    ship.y = planet.y + yAmt;\n    ship.rotation = dir;\n    planet.lastLandingDir = dir;\n    game.getShipSprite(ship).rotation = dir;\n    repositionScreen();\n    game.changeGameState(c.GAME_STATE.MANAGE);\n  }\n}\n\nexport function getExplosionSprite(ship) {\n  let sprite = null;\n  for (let explosionSprite of window.world.system.explosions) {\n    if (!explosionSprite.visible) {\n      sprite = explosionSprite;\n      break;\n    }\n  }\n  if (!sprite) {\n    sprite = game.createExplosionSprite();\n  }\n  let playerShip = window.world.ship;\n  sprite.visible = true;\n  sprite.globalX = ship.x;\n  sprite.globalY = ship.y;\n  sprite.x = (ship.x - playerShip.x) + c.HALF_SCREEN_WIDTH;\n  sprite.y = (ship.y - playerShip.y) + c.HALF_SCREEN_HEIGHT;\n  return sprite\n}\n\n/**\n * Destroys the ship playing an explosion animation\n * @param ship: the one to explode\n * @param afterExplosion: function to run after exploding (or null if nothing to do)\n */\nexport function destroyShip(ship, afterExplosion) {\n  if (ship.owner === c.ALIEN) {\n    game.addAlienXp(ship);\n  }\n  let explosionSprite = getExplosionSprite(ship);\n  const shipSprite = game.getShipSprite(ship);\n  shipSprite.visible = false;\n  ship.alive = false;\n  ship.spriteId = null;\n  explosionSprite.play();\n  // This function runs after the animation finishes a loop\n  explosionSprite.onLoop = () => {\n    explosionSprite.stop(); // pause until we crash again\n    explosionSprite.visible = false;\n    if (afterExplosion) {\n      afterExplosion();\n    }\n  };\n}\n\nfunction resetGame() {\n  // loadNewShip will setup a new ship but not position it\n  let ship = window.world.ship;\n  let planet = window.world.selectedPlanet;\n  // The current ship is gone\n  ship.resourcesMax = 0;\n  ship.resources = {titanium: 0, gold: 0, uranium: 0};\n  ship.equip = [];\n  ship.armorMax = 0;\n  ship.armor = 0;\n\n  // If the most recently used planet doesn't have any buildings\n  if (!planet || (planet.buildings.length === 0)) {\n    // find a planet with a mine\n    for (let planet of window.world.planets) {\n      if (planet.buildings.length > 0) {\n        window.world.selectedPlanet = planet;\n        break;\n      }\n    }\n    // No buildings on any planet- game over! \n    if (!planet) {\n      window.world.selectedPlanet = window.world.planets[0];\n    }\n  }\n  let {x, y, rotation} = manage.getAvailablePlanetXY(planet, ship, planet.lastLandingDir, 20, 0);\n  ship.x = x;\n  ship.y = y;\n  ship.vx = 0;\n  ship.vy = 0;\n  ship.rotation = rotation;\n  repositionScreen();\n  game.changeGameState(c.GAME_STATE.MANAGE);\n}\n\n/**\n * Explosion position update on screen as ship moves\n * This is called in the fly loop\n */\nfunction moveExplosions() {\n  let ship = window.world.ship;\n  for (let sprite of window.world.system.explosions) {\n    sprite.x = (sprite.globalX - ship.x) + c.HALF_SCREEN_WIDTH;\n    sprite.y = (sprite.globalY - ship.y) + c.HALF_SCREEN_HEIGHT;\n  }\n}\n\nfunction turnShip(ship, left) {\n  let turnSpeed = ship.turnSpeed;\n  let turnBooster = getEquip(ship, c.EQUIP_TYPE_TURN);\n  if (turnBooster) {\n    turnSpeed += turnBooster.boostSpeed;\n  }\n  ship.rotation = utils.normalizeRadian(ship.rotation + turnSpeed * (left ? -1 : 1));\n}\n\nfunction propelShip(ship) {\n  let propulsion = ship.propulsion;\n  let booster = getEquip(ship, c.EQUIP_TYPE_TURN);\n  if (booster) {\n    propulsion += booster.boostSpeed;\n  }\n  ship.vx += propulsion * Math.cos(ship.rotation);\n  ship.vy += propulsion * Math.sin(ship.rotation);\n}\n\nfunction brakeShip(ship) {\n  let brake = getEquip(ship, c.EQUIP_TYPE_BRAKE);\n  if (brake) {\n    if (brake.brakeSpeedPct > 0) {\n      ship.vx -= ship.vx * brake.brakeSpeedPct;\n      ship.vy -= ship.vy * brake.brakeSpeedPct;\n    } else {\n      // Blink brake pct is 0, immediate stop (no momentum)\n      ship.vx = 0;\n      ship.vy = 0;\n    }\n  }\n}\n\nfunction thrustShip(ship, left) {\n  let thruster = getEquip(ship, c.EQUIP_TYPE_THRUSTER);\n  if (thruster) {\n    let dir = utils.normalizeRadian(ship.rotation + ((left ? -1 : 1) * Math.PI / 2)); // 90 deg turn\n    const thrustX = thruster.thrustSpeed * Math.cos(dir);\n    const thrustY = thruster.thrustSpeed * Math.sin(dir);\n    if (thruster.thrustType === c.THRUST_MOMENTUM) {\n      ship.vx += thrustX;\n      ship.vy += thrustY\n    } else if (thruster.thrustType === c.THRUST_BLINK) {\n      ship.x += thrustX;\n      ship.y += thrustY;\n    } else {\n      console.warn(\"Unable to use thruster with type \" + thruster.thrustType);\n    }\n  }\n}\n\n/**\n * Fires the weapon from the location and direction of the ship\n */\nexport function fireWeapon(weapon, ship, jitter) {\n  if (weapon && (weapon.cool <= 0)) {\n    fireBullet(ship, weapon, jitter);\n    weapon.cool = weapon.coolTime; // this is decremented in coolWeapons\n  }\n}\n\nexport function firePrimaryWeapon(ship, jitter) {\n  let gun = getEquip(ship, c.EQUIP_TYPE_PRIMARY_WEAPON);\n  if (gun) {\n    fireWeapon(gun, ship, gun.jitter ? gun.jitter : jitter);\n  }\n}\n\nexport function getSecondaryWeapon(ship) {\n  if (!ship.selectedSecondaryWeaponIndex || ship.selectedSecondaryWeaponIndex < 0) {\n    // Just find any secondary weapon - none was selected\n    return getEquip(ship, c.EQUIP_TYPE_SECONDARY_WEAPON);\n  }\n  // Find the equipped weapon\n  const equip = ship.equip[ship.selectedSecondaryWeaponIndex];\n  if (equip.type !== c.EQUIP_TYPE_SECONDARY_WEAPON) {\n    manage.selectFirstSecondaryWeapon(ship);\n    return getEquip(ship, c.EQUIP_TYPE_SECONDARY_WEAPON);\n  }\n  return equip;\n}\n\nexport function fireSecondaryWeapon(ship) {\n  let weapon = getSecondaryWeapon(ship);\n  if (weapon && (weapon.cool <= 0)) {\n    if (weapon.createShip) {\n      if (!game.canAfford(null, ship, weapon.createShip.type.cost)) {\n        // We don't fire the weapon - we can't afford it\n        return;\n      }\n      game.payResourceCost(null, ship, weapon.createShip.type.cost);\n      const child = game.createShip(weapon.createShip.type, ship.owner);\n      const childSprite = game.getShipSprite(child);\n      const shipRadius = ship.spriteWidth || (ship.radius * 2);\n      const childDistFromShip = (shipRadius / 2) + (child.spriteWidth / 2) + 20;\n      const dir = weapon.createShip.dir === c.DIR_AHEAD_OF_SHIP ? utils.normalizeRadian(ship.rotation - Math.PI) : ship.rotation;\n      const {xAmt, yAmt} = utils.dirComponents(dir, childDistFromShip);\n      child.x = ship.x - xAmt;\n      child.y = ship.y - yAmt;\n      if (child.propulsion) {\n        child.vx = ship.vx;\n        child.vy = ship.vy;\n      }\n      child.rotation = utils.normalizeRadian(dir - Math.PI);\n      childSprite.x = (child.x - window.world.ship.x) + c.HALF_SCREEN_WIDTH;\n      childSprite.y = (child.y - window.world.ship.y) + c.HALF_SCREEN_HEIGHT;\n      childSprite.visible = true;\n      window.world.ships.push(child);\n      // Since it may not move we need to check if it collides with anything\n      ai.checkForCollisionWithPlanet(child);\n      ai.checkForCollisionWithShip(child);\n    }\n    if (weapon.shield) {\n      // If another shield is already in use - we won't reset the cool\n      if (getActiveShield(ship) !== null) {\n        return;\n      }\n      enableShield(ship, weapon.shield);\n    }\n    weapon.cool = weapon.coolTime; // this is decremented in coolWeapons\n  }\n}\n\n/**\n * Called to enable a ship's shield.\n * This will add a shield sprite to the ship and set it to visible\n */\nexport function enableShield(ship, shield) {\n  if (getActiveShield(ship) !== null) {\n    console.log('not enabling shield, as there is already one enabled')\n    return;\n  }\n  const shieldSprite = game.getShieldSprite(ship, shield);\n  shieldSprite.visible = true;\n  shield.active = true;\n  shield.lifetime = shield.lifetimeMax;\n  shield.armor = shield.armorMax;\n  // Increase the ship size to the size of the shield\n  ship.spriteWidth = shield.radius * 2;\n  ship.spriteHeight = shield.radius * 2;\n}\n\n/**\n * Called to disable, and stop drawing a shield on a ship\n */\nexport function disableShield(ship, shield) {\n  const shieldSprite = game.getShieldSprite(ship, shield);\n  shieldSprite.visible = false;\n  shield.active = false;\n  // Reset the ship size back to regular\n  const shipSprite = game.getShipSprite(ship);\n  ship.spriteWidth = shipSprite.width;\n  ship.spriteHeight = shipSprite.height;\n}\n\n/**\n * Fires a bullet from the ship\n */\nexport function fireBullet(ship, gun, jitter) {\n  let bullet = findOrCreateBullet(gun.bulletFile);\n  bullet.lifetime = gun.lifetime;\n  bullet.damage = gun.damage;\n  const jitterAmt = jitter ? (jitter * Math.random() * (utils.randomBool() ? -1 : 1)) : 0;\n  const rotation = ship.rotation + jitterAmt;\n  bullet.vx = ship.vx + gun.speed * Math.cos(rotation);\n  bullet.vy = ship.vy + gun.speed * Math.sin(rotation);\n  bullet.x = ship.x + Math.sqrt(ship.spriteWidth * ship.spriteWidth + ship.spriteHeight * ship.spriteHeight) / 2 * Math.cos(rotation);\n  bullet.y = ship.y + Math.sqrt(ship.spriteWidth * ship.spriteWidth + ship.spriteHeight * ship.spriteHeight) / 2 * Math.sin(rotation);\n}\n\n/**\n * Gets the next available bullet (one that is not visible)\n */\nfunction findOrCreateBullet(bulletFile) {\n  for (let bullet of window.world.system.bullets) {\n    if (!bullet.active && (bullet.fileName === bulletFile)) {\n      bullet.active = true;\n      bullet.sprite.visible = true;\n      return bullet;\n    }\n  }\n  // Create a new bullet\n  let bullet = {active: true, damage: 0, x: 0, y: 0, vx: 0, vy: 0, lifetime: 1, fileName: bulletFile};\n  // Setup sprite\n  let spritesheet = window.PIXI.loader.resources[c.SPRITESHEET_JSON];\n  let sprite = new window.PIXI.Sprite(spritesheet.textures[bulletFile]);\n  sprite.x = -100;\n  sprite.y = -100;\n  sprite.anchor.set(0.5, 0.5);\n  sprite.scale.set(0.5, 0.5);\n  window.world.system.spriteContainers.bullets.addChild(sprite);\n  bullet.sprite = sprite;\n  window.world.system.bullets.push(bullet);\n  return bullet;\n}\n\nfunction killBullet(bullet) {\n  bullet.active = false;\n  bullet.sprite.visible = false;\n  bullet.sprite.x = -100;\n  bullet.sprite.y = -100;\n  bullet.vx = 0;\n  bullet.vy = 0;\n}\n\n/**\n * Moves all the bullets (called every draw cycle from app.js mainLoop)\n */\nexport function moveBullets() {\n  let ship = window.world.ship;\n  for (let bullet of window.world.system.bullets) {\n    if (bullet.active) {\n      bullet.x = bullet.x + bullet.vx;\n      bullet.y = bullet.y + bullet.vy;\n      bullet.sprite.x = (bullet.x - ship.x) + c.HALF_SCREEN_WIDTH;\n      bullet.sprite.y = (bullet.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n      bullet.lifetime = bullet.lifetime - 1;\n      if (bullet.lifetime <= 0) {\n        killBullet(bullet);\n      }\n      checkForBulletCollision(bullet);\n    }\n  } // for bullet\n}\n\nfunction checkForBulletCollision(bullet) {\n  let ship = window.world.ship;\n  // Collision with planet\n  for (let planet of window.world.system.nearby.planets) {\n    if (utils.distanceBetween(planet.x, planet.y, bullet.x, bullet.y) < planet.radius) {\n      killBullet(bullet);\n    }\n  }\n  // Collision with ship\n  if (ship.alive) {\n    const shipSprite = game.getShipSprite(ship);\n    const bulletWillHitShip = utils.pointInSprite(ship.x, ship.y, shipSprite, bullet.x, bullet.y);\n    let shield = getActiveShield(ship);\n    if (!shield && hasShieldDroid(ship)) {\n      const shieldEquip = getAvailableShieldEquip(ship);\n      if (shieldEquip && bulletWillHitShip) {\n        shieldEquip.cool = shieldEquip.coolTime;\n        enableShield(ship, shieldEquip.shield);\n        shield = shieldEquip.shield;\n      }\n    }\n    if (shield && utils.distanceBetween(ship.x, ship.y, bullet.x, bullet.y) < shield.radius) {\n      bulletHitShip(bullet, ship, resetGame);\n    } else if (bulletWillHitShip) {\n      bulletHitShip(bullet, ship, resetGame);\n    }\n  }\n  // Collision with alien ship\n  for (let alien of window.world.system.nearby.ships) {\n    if ((alien !== ship) && alien.alive && alien.radius) {\n      const shield = getActiveShield(alien);\n      if ((shield && utils.distanceBetween(alien.x, alien.y, bullet.x, bullet.y) < shield.radius) || // hit alien shield\n        (utils.distanceBetween(alien.x, alien.y, bullet.x, bullet.y) <= alien.radius)) { // hit alien ship\n        bulletHitShip(bullet, alien, null);\n      }\n    }\n  } // for alien\n}\n\n/**\n * Apply damage from bullet to ship, also kills the bullet\n */\nfunction bulletHitShip(bullet, ship, afterExplosion) {\n  damageShip(ship, bullet.damage, afterExplosion);\n  killBullet(bullet);\n}\n\n/**\n * applies damage to the ship, destroying the ship if needed\n */\nexport function damageShip(ship, damage, afterExplosion) {\n  const shield = getActiveShield(ship);\n  if (shield) {\n    shield.armor -= damage;\n    if (shield.armor <= 0) {\n      shield.armor = 0;\n      disableShield(ship, shield);\n    }\n  } else { // no shield\n    ship.armor = ship.armor - damage;\n    if (ship.armor <= 0) {\n      ship.armor = 0;\n      destroyShip(ship, afterExplosion);\n    }\n  }\n}\n\n/**\n * collision between player ship and alien (sometimes alien and alien)\n */\nexport function shipsCollide(ship, alien) {\n  if (ship === alien) {\n    return; // can't collide with yourself\n  }\n  let shipDamage = ship.armor;\n  let alienDamage = alien.armor;\n  damageShip(alien, shipDamage, (window.world.ship === alien) ? resetGame : null);\n  damageShip(ship, alienDamage, (window.world.ship === ship) ? resetGame : null);\n  // If you died hitting an alien, stop moving\n  if (!ship.alive) {\n    ship.vx = 0;\n    ship.vy = 0;\n  }\n}\n\n/**\n * @return matching acc equipment type if it is found, null otherwise\n */\nexport function getEquip(ship, equipType) {\n  for (let equip of ship.equip) {\n    if (equip.type === equipType) {\n      return equip;\n    }\n  }\n  return null;\n}\n\nexport function drawMiniMap() {\n  let g = window.world.system.miniMapGraphics;\n  let view = window.world.view;\n  let l = 0;\n  let t = c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT;\n  let r = c.MINIMAP_WIDTH;\n  let b = c.SCREEN_HEIGHT;\n  g.clear();\n  // Background\n  g.beginFill(c.MINIMAP_BACKGROUND_COLOR);\n  g.lineStyle(1, c.MINIMAP_BORDER_COLOR);\n  g.drawRect(l, t, r, b);\n  g.endFill();\n  // Planets\n  for (let planet of window.world.planets) {\n    if (planetOnMap(view, planet)) {\n      let x = l + c.HALF_MINIMAP_WIDTH + ((planet.x - view.x) * c.MINIMAP_SCALE_X);\n      let y = t + c.HALF_MINIMAP_HEIGHT + ((planet.y - view.y) * c.MINIMAP_SCALE_Y);\n      const planetColor = window.world.selectedPlanet === planet ? c.MINIMAP_SELECTED_PLANET_COLOR : c.MINIMAP_PLANET_COLOR;\n      g.lineStyle(2, planetColor);\n      g.drawCircle(x, y, planet.radius * c.MINIMAP_SCALE_X);\n      // Buildings\n      for (let building of planet.buildings) {\n        let buildingX = l + c.HALF_MINIMAP_WIDTH + ((building.x - view.x) * c.MINIMAP_SCALE_X) - 1.5;\n        let buildingY = t + c.HALF_MINIMAP_HEIGHT + ((building.y - view.y) * c.MINIMAP_SCALE_Y) - 1.5;\n        g.lineStyle(1, c.MINIMAP_BUILDING_COLOR);\n        g.drawRect(buildingX, buildingY, 2, 2);\n      }\n    }\n  }\n  // Ship\n  g.lineStyle(1, c.MINIMAP_SHIP_COLOR);\n  const x = l + c.HALF_MINIMAP_WIDTH + ((window.world.ship.x - view.x) * c.MINIMAP_SCALE_X);\n  const y = t + c.HALF_MINIMAP_HEIGHT + ((window.world.ship.y - view.y) * c.MINIMAP_SCALE_Y);\n  g.drawCircle(x, y, 2);\n}\n\n/**\n * Handles clicks on the minimap\n */\nexport function clickOnMinimap(clickX, clickY) {\n  if (window.world.system.gameState === c.GAME_STATE.MANAGE) {\n    const view = window.world.view\n    let globalX = view.x + ((clickX - c.HALF_MINIMAP_WIDTH) * (1 / c.MINIMAP_SCALE_X));\n    let globalY = view.y + (((clickY - (c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT)) - c.HALF_MINIMAP_HEIGHT) * (1 / c.MINIMAP_SCALE_X));\n    for (let planet of window.world.planets) {\n      if (utils.distanceBetween(globalX, globalY, planet.x, planet.y) <= planet.radius) {\n        window.world.selectedPlanet = planet;\n      }\n    }\n    view.x = globalX;\n    view.y = globalY;\n    drawMiniMap();\n  }\n}\n\nfunction planetOnMap(view, planet) {\n  // Right side\n  return !((view.x + c.HALF_MINIMAP_VIEW_WIDTH + planet.radius < planet.x) || // Right\n    (view.x - c.HALF_MINIMAP_VIEW_WIDTH - planet.radius > planet.x) || // Left\n    (view.y + c.HALF_MINIMAP_VIEW_HEIGHT + planet.radius < planet.y) || // Bottom\n    (view.y - c.HALF_MINIMAP_VIEW_HEIGHT - planet.radius > planet.y));\n}\n\n/**\n * @return the max range of the weapon\n */\nexport function weaponRange(weapon) {\n  if (!weapon) {\n    return 0;\n  }\n  // Not sure what the fudge factor is, but the range seems a little short without it\n  return weapon.speed * weapon.lifetime * 1.4;\n}\n\n/**\n * @return the max range of the primary weapon on the ship\n */\nexport function primaryWeaponRange(ship) {\n  let gun = getEquip(ship, c.EQUIP_TYPE_PRIMARY_WEAPON);\n  return weaponRange(gun);\n}","import { c, utils, fly, game } from './';\nimport lodash from 'lodash';\nimport {EQUIP_TYPE_BRAKE, EQUIP_TYPE_PRIMARY_WEAPON, EQUIP_TYPE_THRUSTER} from \"./constants\";\nimport {getExplosionSprite} from \"./fly\";\n\nexport function enterManageState() {\n  console.log(\"enter manage state\");\n}\n\n// When managing planet resources - loop runs 60/s\nexport function manageLoop(delta) {\n  if ((window.world.system.keys.up.isDown || window.world.system.keys.w.isDown)) {\n    if (window.world.ship.alive && !window.world.system.isTyping) {\n      takeOff();\n    }\n  }\n}\n\nfunction takeOff() {\n  let world = window.world;\n  let ship = world.ship;\n  game.changeGameState(c.GAME_STATE.FLY);\n  let gravity = utils.calcGravity(ship.x, ship.y, world.selectedPlanet);\n  ship.vx = gravity.x * -c.TAKEOFF_SPEED;\n  ship.vy = gravity.y * -c.TAKEOFF_SPEED;\n}\n\n/**\n * @return Correct set of constants for the building type.\n * Maybe these constants could be moved into a variable or something\n */\nfunction getBuildingInfo(buildingType) {\n  if (buildingType === c.BUILDING_TYPE_FACTORY) {\n    return {spriteScale:c.FACTORY_SCALE, spriteFile:c.FACTORY_FILE, animation:false};\n  } else if (buildingType === c.BUILDING_TYPE_MINE) {\n    return {spriteScale:c.MINE_SCALE, spriteFile:c.MINE_FILE, animation:true};\n  }\n  console.warn('Unknown building type ', buildingType);\n  return {}\n}\n\n/**\n * Creates a factory sprite and adds it to the planet container using the factory x,y and rotation\n * NOTE: The building x,y,rot need to be set before calling this\n * @param building building to build\n * @param planet planet to build on\n * @param planetSprite optional, if null this will lookup the sprite using getPlanetSprite()\n */\nexport function makeBuildingSprite(building, planet, planetSprite = null) {\n  const { spriteScale, spriteFile, animation } = getBuildingInfo(building.type);\n  let spritesheet = window.PIXI.Loader.shared.resources[c.SPRITESHEET_JSON].spritesheet;\n  let buildingSprite;\n  if (animation) {\n    buildingSprite = new window.PIXI.AnimatedSprite(spritesheet.animations[spriteFile]);\n    buildingSprite.animationSpeed = c.MINE_ANIMATION_SPEED;\n    buildingSprite.play();\n  } else {\n    buildingSprite = new window.PIXI.Sprite(spritesheet.textures[spriteFile]);\n  }\n  buildingSprite.anchor.set(0.5, 0.5);\n  buildingSprite.scale.set(spriteScale, spriteScale);\n  buildingSprite.rotation = building.rotation;\n  buildingSprite.x = (building.x - planet.x);\n  buildingSprite.y = (building.y - planet.y);\n  buildingSprite.visible = true;\n  if (!planetSprite) {\n    planetSprite = game.getPlanetSprite(planet);\n  }\n  planetSprite.addChild(buildingSprite);\n}\n\nexport function buildMine() {\n  let world = window.world;\n  let mine = {type: c.BUILDING_TYPE_MINE};\n  let planet = world.selectedPlanet;\n  let ship = world.ship;\n  // Place the mine (to the right of the ship)\n  const initRotation = getBuildingPlacementRotation(ship, planet, c.MINE_WIDTH);\n  // Calculate an X,Y point near the ship on surface of the planet\n  // NOTE: we use sprite.height for width because all sprites face to the right (0 rotation)\n  let {x,y,rotation} = getAvailablePlanetXY(planet, ship, initRotation, c.MINE_WIDTH, 0);\n  if (x === null) {\n    console.warn(\"Unable to place mine\");\n    return;\n  }\n  mine.width = c.MINE_WIDTH;\n  mine.x = x;\n  mine.y = y;\n  mine.rotation = rotation;\n  // Setup the graphics\n  makeBuildingSprite(mine, planet);\n  game.payResourceCost(planet, ship, c.MINE_COST);\n  planet.buildings.push(mine);\n  fly.drawMiniMap(); // add building to minimap\n}\n\n/**\n * @return the rotation direction of a place some distance to the right of the ship\n */\nexport function getBuildingPlacementRotation(ship, planet, distanceFromShip) {\n  let deg = ship.rotation + Math.PI/2; // 90 deg (right of the ship)\n  let degX = ship.x + distanceFromShip  * Math.cos(deg); // Some point Xpx to the right of the ship\n  let degY = ship.y + distanceFromShip * Math.sin(deg);\n  // Calculate the rotation direction to get to that point\n  return utils.normalizeRadian(Math.atan2(degY - planet.y, degX - planet.x));\n\n}\n\n/**\n * @return {x,y} for the next free space to the right of the ship on the planet circumfrence \n */\nexport function getAvailablePlanetXY(planet, ship, rotation, buildingWidth, count) {\n  if (buildingFits(planet, ship, rotation, buildingWidth)) {\n    let x = planet.x + ((planet.radius + 10) * Math.cos(rotation));\n    let y = planet.y + ((planet.radius + 10) * Math.sin(rotation));\n    return {x,y, rotation};\n  }\n  // If we have done a full circle then give up\n  if (count > (Math.PI*2 / c.BUILDING_PLACEMENT_ROTATION_INCREMENT)) {\n    return {x:null, y:null, rotation:null};\n  }\n  return getAvailablePlanetXY(planet, ship, rotation+c.BUILDING_PLACEMENT_ROTATION_INCREMENT\n    , buildingWidth, ++count);\n}\n\nexport function buildingFits(planet, ship, rotation, buildingWidth) {\n  let x = planet.x + ((planet.radius + 10) * Math.cos(rotation));\n  let y = planet.y + ((planet.radius + 10) * Math.sin(rotation));\n  // Min distance to building\n  let minDist = utils.distanceBetween(x,y, ship.x, ship.y);\n  let minBuildingWidth = buildingWidth;\n  for (let building of planet.buildings) {\n     let dist = utils.distanceBetween(x,y, building.x, building.y);\n     if (dist < minDist) {\n       minDist = dist;\n       minBuildingWidth = building.width;\n     }\n  } \n  return (minDist > (buildingWidth/2 + minBuildingWidth/2 + 15));\n}\n\n/**\n * Move a resource ship <-> planet \n */\nexport function transferResource(source, target, resourceType, requestedAmtStr, maxCapacity) {\n  let requestedAmt = Number(requestedAmtStr);\n  if (isNaN(requestedAmt)) {\n    requestedAmt = 0;\n  }\n  let amt = requestedAmt;\n  // requesting '' is requesting the entire source (same as requesting too much)\n  if (requestedAmtStr === '' || (source[resourceType] - requestedAmt < 0)) {\n    amt = source[resourceType];\n  }\n  // Cap to max capacity of target\n  if (maxCapacity !== null) {\n    let spaceLeft = maxCapacity - (target.titanium + target.gold + target.uranium);\n    if (spaceLeft < amt) {\n      amt = spaceLeft;\n    }\n  }\n  target[resourceType] += amt;\n  source[resourceType] -= amt;\n}\n\n/**\n * Move all resources to the planet\n */\nexport function unloadShip(ship, planet) {\n  transferResource(ship.resources, planet.resources.stored, 'titanium', ship.resources.titanium, null);\n  transferResource(ship.resources, planet.resources.stored, 'gold', ship.resources.gold, null);\n  transferResource(ship.resources, planet.resources.stored, 'uranium', ship.resources.uranium, null);\n}\n\n/**\n * Choose some default resources to resupply the ship with.\n * This is for quick restocking of resources\n * NOTE: This may need to do multiple passes to fill up the space properly especially when planets are low on uranium\n */\nexport function resupplyShip(ship, planet) {\n  const desiredAmt = Math.floor(ship.resourcesMax / 3);\n  let freeAmt = ship.resourcesMax - (ship.resources.titanium + ship.resources.gold + ship.resources.uranium);\n  if (freeAmt <= 0) {\n    // no space for more resources\n    return;\n  }\n  // 20 is the min required to build a mine - you probably want at least 20\n  const desiredTitanium = desiredAmt >= 20 ? desiredAmt : 20;\n  if (ship.resources.titanium < desiredTitanium) {\n    transferResource(planet.resources.stored, ship.resources, 'titanium', desiredTitanium - ship.resources.titanium, ship.resourcesMax);\n  }\n  if (ship.resources.gold < desiredAmt) {\n    transferResource(planet.resources.stored, ship.resources, 'gold', desiredAmt - ship.resources.gold, ship.resourcesMax);\n  }\n  // Fill up the rest of the space with uranium (it's the rarest)\n  freeAmt = ship.resourcesMax - (ship.resources.titanium + ship.resources.gold + ship.resources.uranium);\n  if (ship.resources.uranium < freeAmt) {\n    transferResource(planet.resources.stored, ship.resources, 'uranium', freeAmt, ship.resourcesMax);\n  }\n}\n\nexport function buildFactory() {\n  let world = window.world;\n  let planet = world.selectedPlanet;\n  let ship = world.ship;\n  let factory = {type: c.BUILDING_TYPE_FACTORY};\n\n  // Place the mine (to the right of the ship)\n  const initialRotation = getBuildingPlacementRotation(ship, planet, c.FACTORY_WIDTH);\n  // Calculate an X,Y point near the ship on surface of the planet\n  // NOTE: we use sprite.height for width because all sprites face to the right (0 rotation)\n  let {x,y,rotation} = getAvailablePlanetXY(planet, ship, initialRotation, c.FACTORY_WIDTH, 0);\n  if (x === null) {\n    console.warn(\"Unable to place factory\");\n    return;\n  }\n  factory.width = c.MINE_WIDTH;\n  factory.x = x;\n  factory.y = y;\n  factory.rotation = rotation;\n  planet.buildings.push(factory);\n\n  // Setup the graphics\n  makeBuildingSprite(factory, planet);\n\n  game.payResourceCost(planet, ship, c.FACTORY_COST);\n  fly.drawMiniMap(); // add to minimap\n}\n\n/**\n * Called when the factory finishes building a new ship \n */\nexport function buildShip(shipTemplate) {\n  let world = window.world;\n  let planet = world.selectedPlanet;\n  let newShip = game.createShip(shipTemplate, c.PLAYER);\n  planet.ships.push(newShip);\n}\n\n/**\n * Called when the user clicks to switch to a new ship \n * NOTE: the new ship should already be created and stored in a planet\n */\nexport function switchToShip(newShip) {\n  let oldShip = window.world.ship;\n  let selectedPlanet = window.world.selectedPlanet;\n  let lastPlanetLanded = window.world.lastPlanetLanded;\n  if (!removeShipFromStorage(newShip, selectedPlanet)) {\n    console.warn(\"Unable to remove ship from planet \",newShip,\" planet=\",selectedPlanet);\n    return;\n  }\n  addShipToStorage(oldShip, lastPlanetLanded);\n\n  window.world.ship = newShip;\n  // check to ensure oldShip is not destroyed\n  if (oldShip && oldShip.alive && oldShip.spriteId) {\n    fly.resetWeaponsCool(oldShip);\n    const oldShipSprite = game.getShipSprite(oldShip);\n    oldShipSprite.visible = false;\n    oldShip.spriteId = null;\n  }\n  // Get the new sprite (adds it to the container)\n  const newShipSprite = game.getShipSprite(newShip);\n  newShipSprite.visible = true;\n  newShip.rotation = selectedPlanet.lastLandingDir;\n  newShipSprite.rotation = newShip.rotation;\n  newShipSprite.position.set(c.HALF_SCREEN_WIDTH, c.HALF_SCREEN_HEIGHT);\n\n  let r = selectedPlanet.radius + (newShip.spriteWidth / 2);\n  newShip.x = selectedPlanet.x + (r * Math.cos(newShip.rotation));\n  newShip.y = selectedPlanet.y + (r * Math.sin(newShip.rotation));\n  window.world.lastPlanetLanded = selectedPlanet;\n  fly.repositionScreen();\n}\n\n/**\n * Removes a ship from the planet, returns null if no matching ship was found\n */\nexport function removeShipFromStorage(ship, planet) {\n  let ships = planet.ships.filter((s) => s !== ship);\n  let removedShip = ships.length < planet.ships.length;\n  planet.ships = ships;\n  return removedShip;\n}\n\nexport function addShipToStorage(ship, planet) {\n  // If the ship is not visible (and armorMax is zero) it has been destroyed\n  // Some ships might be non-visible because they are not currently being used\n  if (ship.alive && ship.armorMax > 0) {\n    planet.ships.push(ship);\n  }\n}\n\n/**\n * @return true if the planet has a factory for the player\n */\nexport function hasFactory(planet) {\n  for (let building of planet.buildings) {\n    if (building.type === c.BUILDING_TYPE_FACTORY) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function buildEquip(equipTemplate) {\n  let planet = window.world.selectedPlanet;\n  let equip = lodash.cloneDeep(equipTemplate);\n  equip.id = window.world.nextId++;\n  planet.equip.push(equip);\n}\n\nexport function costToRepair(ship) {\n  const damageToRepair = ship.armorMax - ship.armor;\n  return {titanium:(damageToRepair / 5), gold:0, uranium:0};\n}\n\nexport function repairShip(ship, planet) {\n  let cost = costToRepair(ship);\n  let addArmor = ship.armorMax - ship.armor; // armor needed\n  if (!game.canAfford(planet, ship, cost)) {\n    let titaniumOnHand = planet.resources.stored.titanium + ship.resources.titanium;\n    cost.titanium = titaniumOnHand;\n    addArmor = titaniumOnHand;\n  } \n  game.payResourceCost(planet, ship, cost);\n  ship.armor += addArmor;\n}\n\nexport function addEquip(ship, newEquip) {\n  if (newEquip.type === c.EQUIP_TYPE_ARMOR) {\n    // Only add armor if the ship is in full repair\n    if (ship.armor === ship.armorMax) {\n      ship.armor += newEquip.armorAmt;\n    }\n    ship.armorMax += newEquip.armorAmt;\n  } else if (newEquip.type === c.EQUIP_TYPE_STORAGE) {\n    ship.resourcesMax += newEquip.storageAmount;\n  }\n}\n\nexport function selectFirstSecondaryWeapon(ship) {\n  for (let i=0; i< ship.equip.length; i++) {\n    if (ship.equip[i].type === c.EQUIP_TYPE_SECONDARY_WEAPON) {\n      ship.selectedSecondaryWeaponIndex = i;\n      return;\n    }\n  } // for\n  // Couldn't find a secondary weapon\n  ship.selectedSecondaryWeaponIndex = -1;\n}\n\nexport function moveEquipFromPlanetToShip(ship, planet, equipToMove) {\n  // Remove from the planet\n  ship.equip.push(equipToMove);\n  addEquip(ship, equipToMove);\n  // Remove the oldEquip from the planet\n  lodash.remove(planet.equip, (e) => e.id === equipToMove.id);\n  selectFirstSecondaryWeapon(ship);\n}\n\nexport function moveEquipFromShipToPlanet(ship, planet, equipToMove) {\n  // Add to the planet\n  planet.equip.push(equipToMove);\n  if (equipToMove.type === c.EQUIP_TYPE_ARMOR) {\n    ship.armorMax -= equipToMove.armorAmt;\n    if (ship.armor > ship.armorMax) {\n      ship.armor = ship.armorMax;\n    }\n  } else if (equipToMove.type === c.EQUIP_TYPE_STORAGE) {\n    ship.resourcesMax -= equipToMove.storageAmount;\n    let shipResources = ship.resources.titanium + ship.resources.gold + ship.resources.uranium;\n    if (shipResources > ship.resourcesMax) {\n      let owing = this.removeResource(ship, 'titanium', (shipResources - ship.resourcesMax));\n      if (owing > 0) {\n        owing = this.removeResource(ship, 'gold', owing);\n      }\n      if (owing > 0) {\n        owing = this.removeResource(ship, 'uranium', owing);\n      }\n      if (owing > 0) {\n        console.warn(\"Cannot remove more resources from ship still owing \"+owing);\n      }\n    }\n  }\n  // Remove the oldEquip from the ship (no new equipment added)\n  lodash.remove(ship.equip, (e) => e.id === equipToMove.id);\n  selectFirstSecondaryWeapon(ship);\n}\n\n/**\n * Destroys unwanted equipment and recovers some material cost\n * @param planet location resources will be added to\n * @param equip to destroy\n */\nexport function salvageEquip(planet, equip) {\n  planet.resources.stored['titanium'] += equip.cost.titanium * c.SALVAGE_RATE;\n  planet.resources.stored['gold'] += equip.cost.gold * c.SALVAGE_RATE;\n  planet.resources.stored['uranium'] += equip.cost.uranium * c.SALVAGE_RATE;\n  // Remove the equip from the planet\n  lodash.remove(planet.equip, (e) => e.id === equip.id);\n}\n\n/**\n * Destroys unwanted ships and recovers some material cost\n * @param planet location resources will be added to\n * @param ship to destroy\n */\nexport function salvageShip(planet, ship) {\n  // First salvage all equipment on the ship\n  for (const equip of ship.equip) {\n    salvageEquip(planet, equip);\n  }\n  // Salvage the ship itself\n  planet.resources.stored['titanium'] += ship.cost.titanium * c.SALVAGE_RATE;\n  planet.resources.stored['gold'] += ship.cost.gold * c.SALVAGE_RATE;\n  planet.resources.stored['uranium'] += ship.cost.uranium * c.SALVAGE_RATE;\n  removeShipFromStorage(ship, planet);\n  // If ship is currently being used - stop using it!\n  if (ship === window.world.ship) {\n    const shipSprite = game.getShipSprite(ship);\n    shipSprite.visible = false;\n    ship.alive = false;\n    ship.spriteId = null;\n  }\n}\n\n\n/**\n * Removes the resource from the ship\n * @return the amount still owing after removing\n */\nexport function removeResource(ship, resourceType, amount) {\n  ship.resources[resourceType] -= amount;\n  if (ship.resources[resourceType] < 0) {\n    let owing = Math.abs(ship.resources[resourceType]);\n    ship.resources[resourceType] = 0;\n    return owing;\n  }\n  return 0;\n}\n\n/**\n * @return true if the equip can be added to the ship\n */\nexport function canEquip(ship, equip) {\n  if (!ship || !ship.equip || !equip) {\n    return false;\n  }\n  // No more space\n  if (ship.equip.length >= ship.equipMax) {\n    return false;\n  }\n  // Some equip you can only have one\n  if ([EQUIP_TYPE_BRAKE, EQUIP_TYPE_PRIMARY_WEAPON, EQUIP_TYPE_THRUSTER].includes(equip.type)) {\n    if (ship.equip.find((eq) => eq.type === equip.type)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n","import {c, fly, utils} from './';\nimport {getShipSprite} from \"./game\";\n\nexport function moveAliens() {\n  let ship = window.world.ship;\n  for (let alien of window.world.system.nearby.ships) {\n    if (!alien.alive || ship === alien) {\n      continue;\n    }\n    let hasMoved = false;\n    if (alien.aiType === c.ALIEN_AI_CREEPER) {\n      hasMoved = creeperAi(alien, false);\n    } else if (alien.aiType === c.ALIEN_AI_KAMIKAZI) {\n      hasMoved = creeperAi(alien, true);\n    } else if (alien.aiType === c.EQUIP_AI_TURRET) {\n      hasMoved = turretAi(alien, 0.7);\n    } else if (alien.aiType === c.ALIEN_AI_TURRET) {\n      hasMoved = turretAi(alien, 0.25);\n    } else if (alien.aiType === c.EQUIP_AI_MISSILE) {\n      hasMoved = missileAi(alien);\n    } else if (alien.aiType === c.ALIEN_AI_MOTHERSHIP) {\n      mothershipAi(alien);\n    }\n    if (hasMoved) {\n      checkForCollisionWithPlanet(alien);\n      checkForCollisionWithShip(alien);\n    }\n\n    // If alien is in the viewport\n    if ((ship.x + c.HALF_SCREEN_WIDTH + alien.radius >= alien.x) && // Right\n      (ship.x - c.HALF_SCREEN_WIDTH - alien.radius <= alien.x) && // Left\n      (ship.y + c.HALF_SCREEN_HEIGHT + alien.radius >= alien.y) && // Bottom\n      (ship.y - c.HALF_SCREEN_HEIGHT - alien.radius <= alien.y)) { // Top\n      // alien may have died in a collision\n      if (alien.alive) {\n        // Set alien ship relative to the ship's viewport\n        const alienSprite = getShipSprite(alien);\n        alienSprite.visible = true;\n        alienSprite.rotation = alien.rotation;\n        alienSprite.x = (alien.x - ship.x) + c.HALF_SCREEN_WIDTH;\n        alienSprite.y = (alien.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n      }\n    } else { // alien is not in view\n      // Release the sprite if the alien is not in the view\n      if (alien.spriteId) {\n        const alienSprite = getShipSprite(alien);\n        alienSprite.visible = false;\n        alien.spriteId = null;\n      }\n    }\n  } // for alien\n}\n\n/**\n * Fire primary weapon in the direction of x,y\n * @ship ship with gun to fire\n * @x/y  the location to aim at\n * @jitter amount (in radians) of randomness added to direction component\n *         0 - shoots directly at player\n *         PI - shoot completely randomly\n */\nexport function shootAt(shooter, x, y, jitter) {\n  shooter.rotation = utils.normalizeRadian(Math.atan2(y - shooter.y, x - shooter.x));\n  fly.firePrimaryWeapon(shooter, jitter);\n}\n\nexport function turretAi(turretShip, jitter) {\n  const {target, dist} = getNearestOpponentTarget(turretShip);\n  if (!target || !target.alive) {\n    return false;\n  }\n  if (dist < fly.primaryWeaponRange(turretShip)) {\n    shootAt(turretShip, target.x, target.y, jitter);\n  }\n  return false;\n}\n\nexport function mothershipAi(alien) {\n  let ship = window.world.ship;\n  if (!ship.alive) {\n    return;\n  }\n  const distanceToPlayer = utils.distanceBetween(alien.x, alien.y, ship.x, ship.y);\n  if (distanceToPlayer < fly.primaryWeaponRange(alien)) {\n    shootAt(alien, ship.x, ship.y, 0.3);\n  }\n  if (distanceToPlayer < c.SCREEN_WIDTH*3) {\n    fly.fireSecondaryWeapon(alien);\n  }\n  if (alien.armor < alien.armorMax) {\n    enableShieldIfNeeded(alien);\n  }\n}\n\n/**\n * Finds the nearest ship on the other team\n * @param ship ship to determine x,y and player\n */\nexport function getNearestOpponentTarget(ship) {\n  return (ship.owner === c.PLAYER)\n    ? getNearestAlienTarget(ship.x, ship.y)\n    : getNearestPlayerTarget(ship.x, ship.y);\n}\n\n/**\n * Simple AI for missiles - find nearest target and move toward it attempting to crash\n */\nexport function missileAi(missile) {\n  const {target, dist} = getNearestOpponentTarget(missile);\n  // Missiles don't track targets really far away\n  if (target && dist < c.SCREEN_WIDTH) {\n    let dirToTarget = utils.directionTo(missile.x, missile.y, target.x, target.y);\n    let {xAmt, yAmt} = utils.dirComponents(dirToTarget, missile.propulsion);\n    missile.vx += xAmt;\n    missile.vy += yAmt;\n    missile.x += missile.vx;\n    missile.y += missile.vy;\n    return true;\n  }\n  // Don't move if there's nobody to move towards\n  return false;\n}\n\n/**\n * AI for aliens that move toward the player and shoots\n * @return true if alien moved false otherwise\n */\nexport function creeperAi(alien, crashIntoPlayer=false) {\n  let ship = window.world.ship;\n  if (!ship.alive) {\n    return;\n  }\n  const viewRange = alien.viewRange || c.SCREEN_WIDTH;\n  let moved = false;\n  const {target:playerTarget, dist:distToPlayer} = getNearestOpponentTarget(alien);\n  if (!playerTarget) {\n    return;\n  }\n  if (distToPlayer < viewRange) {\n    let dirToTarget = utils.directionTo(alien.x, alien.y, playerTarget.x, playerTarget.y);\n    let {xAmt, yAmt} = utils.dirComponents(dirToTarget, 25 * alien.propulsion);\n    // Check if we are too close to a planet (need to move around the planet)\n    for (let planet of window.world.system.nearby.planets) {\n      if (utils.distanceBetween(alien.x + xAmt, alien.y + yAmt, planet.x, planet.y) < (planet.radius + alien.radius + 10)) {\n        const dirToPlanet = utils.directionTo(alien.x, alien.y, planet.x, planet.y);\n        let dirDiff = dirToPlanet - dirToTarget;\n        let rightLeft = (dirDiff >= 0) ? -1 : 1;\n        if (Math.abs(dirDiff) > Math.PI) {\n          rightLeft = rightLeft * -1;\n        }\n        const turnDir = dirToPlanet + (rightLeft * Math.PI / 2);\n        ({xAmt, yAmt} = utils.dirComponents(turnDir, 20 * alien.propulsion));\n      }\n    } // for planet\n    // Too close to player, don't move closer\n    if (!crashIntoPlayer && distToPlayer < (ship.spriteWidth + alien.radius + 20)) {\n      xAmt = 0;\n      yAmt = 0;\n    }\n    // Don't crash into other aliens\n    const {target: alienTarget, dist: alienDist} = getNearestAlienTarget(alien.x + xAmt, alien.y + yAmt, alien.id);\n    if (alienTarget && (alienDist < (alien.radius + alienTarget.radius + 10))) {\n      xAmt = 0;\n      yAmt = 0;\n    }\n    if (alien.armor < alien.armorMax) {\n      enableShieldIfNeeded(alien);\n    }\n    alien.x += xAmt;\n    alien.y += yAmt;\n    alien.rotation = dirToTarget;\n    moved = true;\n  }\n  if (distToPlayer < fly.primaryWeaponRange(alien)) {\n    shootAt(alien, playerTarget.x, playerTarget.y, 0.15);\n  }\n  return moved;\n}\n\n/**\n * Finds the nearest alien target to the x,y location\n * @shipId : any alien except the one with a matching shipId\n * returns {target:X, dist:Y }  x and y will be null if no living targets are found\n */\nexport function getNearestAlienTarget(x, y, shipId = 'none') {\n  let target = null;\n  let minDist = null;\n  for (let alien of window.world.system.nearby.ships) {\n    if (alien.alive && alien.owner === c.ALIEN && alien.id !== shipId) {\n      let dist = utils.distanceBetween(x, y, alien.x, alien.y);\n      if (!target || (dist < minDist)) {\n        target = alien;\n        minDist = dist;\n      }\n    }\n  } // for\n  return {target: target, dist: minDist};\n}\n\n/**\n * Finds the nearest player target to the x,y location\n * returns {target:X, dist:Y }  x and y will be null if no living targets are found\n */\nexport function getNearestPlayerTarget(x, y) {\n  const ship = window.world.ship;\n  let target = ship;\n  let minDist = utils.distanceBetween(x, y, ship.x, ship.y);;\n  for (let ship of window.world.system.nearby.ships) {\n    if (ship.alive && ship.owner === c.PLAYER) {\n      let dist = utils.distanceBetween(x, y, ship.x, ship.y);\n      if (!target || (dist < minDist)) {\n        target = ship;\n        minDist = dist;\n      }\n    }\n  } // for\n  return {target: target, dist: minDist};\n}\n\n\nexport function checkForCollisionWithPlanet(alien) {\n  for (let planet of window.world.system.nearby.planets) {\n    let dist = utils.distanceBetween(alien.x, alien.y, planet.x, planet.y);\n    if (dist <= (alien.radius + planet.radius)) {\n      fly.destroyShip(alien, null);\n    }\n  } // for\n}\n\nexport function checkForCollisionWithShip(ship) {\n  for (let otherShip of window.world.system.nearby.ships) {\n    if (otherShip.alive && ship !== otherShip) {\n      let dist = utils.distanceBetween(ship.x, ship.y, otherShip.x, otherShip.y);\n      if (dist <= (ship.radius + otherShip.radius)) {\n        fly.shipsCollide(ship, otherShip);\n        if (ship.name === c.SHIP_FRIENDSHIP_MISSILE.name && otherShip.owner !== ship.owner) {\n          otherShip.owner = ship.owner;\n        }\n      }\n    }\n  } // for\n}\n\nexport function enableShieldIfNeeded(ship) {\n  const shieldEquip = getShield(ship);\n  if (!shieldEquip || shieldEquip.cool > 0) {\n    return;\n  }\n  fly.enableShield(ship, shieldEquip.shield);\n  shieldEquip.cool = shieldEquip.coolTime;\n}\n\nexport function getShield(ship) {\n  for (let i = 0; i < ship.equip.length; i++) {\n    const equip = ship.equip[i];\n    if ((equip.type === c.EQUIP_TYPE_SECONDARY_WEAPON) && equip.shield) {\n      return equip;\n    }\n  } // for\n  return null;\n}","import {fly, game, utils} from './';\nimport lodash from 'lodash';\n\n// IndexedDB constants\nconst WORLD_STORE = 'world';\nconst DB_NAME = 'astrominer';\nconst DB_VERSION = 1;\n\n/** Saves an object in localstorage.\n * @param key key to store/retrieve\n * @param objToSave: should be an Object or Array, NOT a primitive as the JSON.parse will fail\n */\nexport function saveLocalStorage(key, objToSave) {\n  const existing = localStorage.getItem(key);\n  if (existing) {\n    localStorage.removeItem(key);\n  }\n  localStorage.setItem(key, JSON.stringify(objToSave));\n}\n\n/**\n *  Loads an object from localstorage.\n * NOTE: The item stored must be an Object or Array as primitives will fail the JSON.parse\n */\nexport function loadLocalStorage(key) {\n  if (!key) {\n    console.warn('Unable to from localStorage without a key');\n    return;\n  }\n  const objString = localStorage.getItem(key)\n  //console.log('loaded objString ='+objString);\n  if (!objString) {\n    return null;\n  }\n  return JSON.parse(objString);\n}\n\nfunction upgradeDB(event) {\n  let db = event.target.result;\n  if (event.oldVersion >= 1) {\n    db.deleteObjectStore(WORLD_STORE);\n  }\n  db.createObjectStore(WORLD_STORE, {keyPath: \"saveGameName\"});\n}\n\n/**\n * Start using a newWorld, the old world and it's state will be discarded.\n * param key:  storage key where the world is kept\n */\nexport function loadWorld(key) {\n  let dbRequest = indexedDB.open(DB_NAME, DB_VERSION);\n  dbRequest.onerror = function (event) {\n    console.log('error ', event);\n  };\n  dbRequest.onupgradeneeded = upgradeDB;\n  dbRequest.onsuccess = function (event) {\n    let db = event.target.result;\n    let transaction = db.transaction([WORLD_STORE]);\n    let objectStore = transaction.objectStore(WORLD_STORE);\n    let request = objectStore.get(key);\n    request.onerror = function (event) {\n      console.log('Request error loading:', event);\n    };\n    request.onsuccess = function (event) {\n      const newWorld = request.result;\n      const oldSystem = window.world.system;\n      window.world = newWorld;\n      window.world.system = oldSystem;\n\n      // Clear the old containers of whatever they had\n      window.world.system.spriteContainers.planets.removeChildren();\n      window.world.system.planetSpriteCache = {};\n      window.world.system.spriteContainers.ships.removeChildren();\n      window.world.system.shipSpriteCache = {};\n      window.world.system.shieldSpriteCache = new Map();\n      window.world.system.bullets = []; // remove all active bullets from the screen\n      window.world.system.spriteContainers.bullets.removeChildren();\n\n      // Reset/Redraw all the sprites\n      window.world.ship.spriteId = null;\n      const shipSprite = game.getShipSprite(window.world.ship);\n      shipSprite.visible = true;\n      fly.repositionScreen();\n      utils.showToast('Loaded game');\n    };\n  }\n\n}\n\nexport function saveWorld(key) {\n  const worldToStore = lodash.cloneDeep(lodash.omit(window.world, ['system']));\n  worldToStore.saveGameName = key;\n\n  let dbRequest = indexedDB.open(DB_NAME, DB_VERSION);\n  dbRequest.onerror = function (event) {\n    console.log('DB Request Error:', event);\n  };\n  dbRequest.onupgradeneeded = upgradeDB;\n  dbRequest.onsuccess = function (event) {\n    let db = event.target.result;\n    let transaction = db.transaction([WORLD_STORE], \"readwrite\");\n    let objectStore = transaction.objectStore(WORLD_STORE);\n    let objectStoreRequest = objectStore.put(worldToStore);\n    objectStoreRequest.onsuccess = function (event) {\n      utils.showToast('Saved game');\n    };\n    objectStoreRequest.onerror = function (event) {\n      console.log('failed to save ', event.target);\n    }\n  }\n}\n\nexport function deleteWorld(key) {\n  let dbRequest = indexedDB.open(DB_NAME, DB_VERSION);\n  dbRequest.onerror = function (event) {\n    console.log('DB Request Error:', event);\n  };\n  dbRequest.onupgradeneeded = upgradeDB;\n  dbRequest.onsuccess = function (event) {\n    let db = event.target.result;\n    let transaction = db.transaction([WORLD_STORE], \"readwrite\");\n    let objectStore = transaction.objectStore(WORLD_STORE);\n    let objectStoreRequest = objectStore.delete(key);\n    objectStoreRequest.onsuccess = function (event) {\n      utils.showToast('Deleted game ' + key);\n    };\n    objectStoreRequest.onerror = function (event) {\n      console.log('failed to delete ', event.target);\n    }\n  }\n}\n","import React from 'react';\nimport './Heatbar.css';\n\nconst IMG_HEIGHT = 100;\nconst IMG_WIDTH = 24;\n\nexport const HEATBAR = {\n  GREEN : 'heatbar-green.png',\n  RED: 'heatbar-red.png',\n  COLOR: 'heatbar-color.png'\n};\n\nexport function Heatbar({type, curr, max}) {\n  if (type !== HEATBAR.GREEN &&\n    type !== HEATBAR.RED &&\n    type !== HEATBAR.COLOR) {\n    console.warn('unknown heatbar type '+type);\n    return <span />;\n  }\n\n  const pct = curr / max;\n  const topFree = 100 - (pct * IMG_HEIGHT );\n\n  // Use red or green as the base\n  let colorImgSrc = 'images/'+(type === HEATBAR.RED ? HEATBAR.RED : HEATBAR.GREEN);\n\n  // Multicolor is based off green\n  if (type === HEATBAR.COLOR && (topFree > 60)) {\n    colorImgSrc = 'images/heatbar-color.png'\n  }\n\n  return (\n    <span className='heatbar-container' style={{width:IMG_WIDTH+'px',  height:IMG_HEIGHT+'px'}}>\n      <span className='heatbar-base'>\n        <img src='images/heatbar-base.png' width={IMG_WIDTH+'px'} height={IMG_HEIGHT+'px'} alt='heat' />\n      </span>\n      <span className='heatbar-color'>\n        <img src={colorImgSrc} width={IMG_WIDTH+'px'} height={IMG_HEIGHT+'px'} alt='heat' style={{\n          clipPath: 'inset('+topFree+'px 0px 00px 0px)'\n        }}\n        />\n      </span>\n    </span>);\n}\n\n","import React from 'react';\nimport './PushButton.css';\n\nconst IMG_HEIGHT = 26;\nconst IMG_WIDTH = 44;\n\nexport function PushButton({selected, onChange}) {\n  const imgFile = selected ? 'images/button_push_on.png' : 'images/button_push_off.png';\n  return (\n    <img src={imgFile} width={IMG_WIDTH + 'px'} height={IMG_HEIGHT + 'px'} alt='button' onClick={() => {\n      onChange();\n    }}/>\n  );\n}\n","import React from 'react';\nimport './StatusButton.css';\n\nconst IMG_HEIGHT = 24;\nconst IMG_WIDTH = 48;\n// pct at which red turns into yellow\nconst YELLOW_PCT = 0.7; // pct to change to yellow at\nconst BORDER = 5; // width of button border (non drawing part of button)\n\nconst BUTTON = {\n  GREEN: 'button_long_green.png',\n  RED: 'button_long_red.png',\n  YELLOW: 'button_long_yellow.png',\n  BLACK: 'button_long_black.png'\n};\n\nfunction getStatus(curr, max) {\n  if (!max || max <= 0) {\n    return {rightFree: 0, colorImgSrc: 'images/' + BUTTON.BLACK};\n  }\n  if (curr >= max) {\n    return {rightFree: 0, colorImgSrc: 'images/' + BUTTON.GREEN};\n  }\n  // Red\n  if (curr / max < YELLOW_PCT) {\n    const pct = curr / (max * YELLOW_PCT);\n    const rightFree = IMG_WIDTH - (BORDER + pct * (IMG_WIDTH - (2 * BORDER)));\n    return {rightFree, colorImgSrc: 'images/' + BUTTON.RED};\n  }\n  // Yellow\n  const pct = (curr - (max * YELLOW_PCT)) / (max * (1 - YELLOW_PCT));\n  const rightFree = IMG_WIDTH - (BORDER + pct * (IMG_WIDTH - (2 * BORDER)));\n  return {rightFree, colorImgSrc: 'images/' + BUTTON.YELLOW};\n}\n\n\nexport function StatusButton({curr, max}) {\n\n  const {rightFree, colorImgSrc} = getStatus(curr, max);\n\n  return (\n    <span className='statusbutton-container' style={{width: IMG_WIDTH + 'px', height: IMG_HEIGHT + 'px'}}>\n      <span className='statusbutton-base'>\n        <img src={'images/' + BUTTON.BLACK} width={IMG_WIDTH + 'px'} height={IMG_HEIGHT + 'px'} alt='status'/>\n      </span>\n      <span className='statusbutton-color'>\n        <img src={colorImgSrc} width={IMG_WIDTH + 'px'} height={IMG_HEIGHT + 'px'} alt='heat' style={{\n          clipPath: 'inset(0px ' + rightFree + 'px 0px 0px)'\n        }}\n        />\n      </span>\n    </span>);\n}\n\n","import React from 'react';\nimport {c, fly} from '../functions';\nimport './InfoFly.css';\nimport {HEATBAR, Heatbar} from \"./Heatbar\";\nimport {PushButton} from \"./PushButton\";\nimport {StatusButton} from \"./StatusButton\";\n\nexport function InfoFly() {\n  const ship = window.world.ship;\n  const shield = fly.getEquippedShield(ship);\n\n  return (\n    <div className='section'\n         style={{backgroundImage: 'url(\"images/metalbackground.png\")', backgroundSize: 'cover', height: '100%'}}>\n      <div>{ship.name}</div>\n\n      <table>\n        <thead>\n        <tr>\n          <th style={{paddingRight: '10px'}}>Armor</th>\n          <th>Shield</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <td style={{textAlign: 'center'}}>\n            <Heatbar type={HEATBAR.COLOR} curr={ship.armor} max={ship.armorMax}/>\n          </td>\n          <td>\n            {shield && shield.shield.active &&\n            <span>\n                <Heatbar type={HEATBAR.RED} curr={shield.shield.lifetime} max={shield.shield.lifetimeMax}/>\n                <Heatbar type={HEATBAR.COLOR} curr={shield.shield.armor} max={shield.shield.armorMax}/>\n              </span>\n            }\n          </td>\n        </tr>\n        <tr>\n          <td>\n            {Math.floor(ship.armor)} / {ship.armorMax}\n          </td>\n          <td> </td>\n          <td> </td>\n        </tr>\n        </tbody>\n      </table>\n\n      <div className='section'>Equip (max {ship.equipMax})\n        <table>\n          <tbody>\n          {ship.equip.map((equip, i) => {\n            return <tr key={i} className='equip'>\n              <td>\n                {equip.type === c.EQUIP_TYPE_SECONDARY_WEAPON &&\n                <PushButton selected={i === ship.selectedSecondaryWeaponIndex} onChange={() => {\n                  ship.selectedSecondaryWeaponIndex = i;\n                }}/>}\n              </td>\n              <td>\n                <StatusButton curr={equip.coolTime - equip.cool} max={equip.coolTime}/>\n              </td>\n              <td>\n                {equip.name}\n              </td>\n            </tr>\n          })}\n          </tbody>\n        </table>\n      </div>\n\n      <div className='section'>\n        <table>\n          <tbody>\n          <tr>\n            <td className='bluescreen-container'>\n              <div className='bluescreen-background'>\n                <img src='images/blue_screen.png' className='stretch' alt='bluescreen'/>\n              </div>\n              <div className='bluescreen-text'>\n                <table cellPadding='4'>\n                  <thead>\n                  <tr>\n                    <th colSpan='100%'>Resources</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  <tr>\n                    <td>Titatium</td>\n                    <td>{Math.floor(ship.resources.titanium)}</td>\n                  </tr>\n                  <tr>\n                    <td>Gold</td>\n                    <td>{Math.floor(ship.resources.gold)}</td>\n                  </tr>\n                  <tr>\n                    <td>Uranium</td>\n                    <td>{Math.floor(ship.resources.uranium)}</td>\n                  </tr>\n                  </tbody>\n                </table>\n              </div>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n\n    </div>\n  );\n}\n\n\n","import React, {useState} from 'react';\nimport {c, game, manage} from '../functions';\nimport './ManagePlanet.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nexport function ManagePlanet() {\n  const [titaniumAmt, setTitaniumAmt] = useState('');\n  const [goldAmt, setGoldAmt] = useState('');\n  const [uraniumAmt, setUraniumAmt] = useState('');\n\n  let world = window.world;\n  let planet = window.world.selectedPlanet;\n  let ship = window.world.ship;\n  let shipOnPlanet = ((planet === window.world.lastPlanetLanded) && ship.alive);\n  return (\n    <div className='planet-info'>\n      <div className='section'><b>Planet Name: </b> {world.selectedPlanet.name}</div>\n      <div className='build-button'>\n        <button\n          disabled={!game.canAfford(planet, (shipOnPlanet ? ship : null), c.MINE_COST)}\n          onClick={() => manage.buildMine()}>Build Mine\n        </button>\n        Cost: T:{c.MINE_COST.titanium} G:{c.MINE_COST.gold}\n      </div>\n      <div className='build-button'>\n        <button\n          disabled={!game.canAfford(planet, (shipOnPlanet ? ship : null), c.FACTORY_COST)}\n          onClick={() => manage.buildFactory()}>Build Factory\n        </button>\n        Cost: T:{c.FACTORY_COST.titanium} G:{c.FACTORY_COST.gold} U:{c.FACTORY_COST.uranium}\n      </div>\n\n      <div style={{display:ship.alive?'block':'none'}} className='build-button'>\n        <div className='section'><b>Ship</b> ({Math.round(ship.armor) +' / '+ ship.armorMax}) </div>\n        <button style={{marginLeft:'10px'}}\n                onClick={() => manage.unloadShip(ship, planet)}>\n          Unload\n        </button>\n        <button style={{marginLeft:'10px'}}\n                onClick={() => manage.resupplyShip(ship, planet)}>\n            Resupply\n        </button>\n        <button style={{marginLeft:'10px'}}\n                onClick={() => manage.repairShip(ship, planet)}\n                disabled={ship.armorMax <= ship.armor}>\n          Repair\n        </button>\n      </div>\n\n      <div className='section'>\n        <b>Resources</b>\n      </div>\n      <div className=\"row-item\">Titanium {Math.floor(planet.resources.raw.titanium)}</div>\n      <div className=\"row-item\">Gold {Math.floor(planet.resources.raw.gold)}</div>\n      <div className=\"row-item\">Uranium {Math.floor(planet.resources.raw.uranium)}</div>\n\n      {shipOnPlanet && <table  className=\"row-item\">\n        <thead>\n        <tr>\n          <th>Resource</th>\n          <th>Planet</th>\n          <th>Transfer</th>\n          <th>Ship ({ship.resourcesMax})</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <td>Titanium</td>\n          <td>{Math.floor(planet.resources.stored.titanium)}</td>\n          <td>\n              <span className='transfer-button'\n                    onClick={() => manage.transferResource(ship.resources, planet.resources.stored,\n                      'titanium', titaniumAmt, c.PLANET_RESOURCE_MAX)}><i className=\"fa fa-arrow-left\"> </i></span>\n            <input type='text' className='transfer-input'\n                   defaultValue={titaniumAmt}\n                   onChange={(event) => setTitaniumAmt(event.target.value)}/>\n            <span className='transfer-button'\n                  onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                    'titanium', titaniumAmt, ship.resourcesMax)}><i className=\"fa fa-arrow-right\"> </i></span>\n          </td>\n          <td>{Math.floor(ship.resources.titanium)}</td>\n        </tr>\n        <tr>\n          <td>Gold</td>\n          <td>{Math.floor(planet.resources.stored.gold)}</td>\n          <td>\n              <span className='transfer-button'\n                    onClick={() => manage.transferResource(ship.resources, planet.resources.stored,\n                      'gold', goldAmt, c.PLANET_RESOURCE_MAX)}><i className=\"fa fa-arrow-left\"> </i></span>\n            <input type='text' className='transfer-input'\n                   defaultValue={goldAmt}\n                   onChange={(event) => setGoldAmt(event.target.value)}/>\n            <span className='transfer-button'\n                  onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                    'gold', goldAmt, ship.resourcesMax)}><i className=\"fa fa-arrow-right\"> </i></span>\n          </td>\n          <td>{Math.floor(ship.resources.gold)}</td>\n        </tr>\n        <tr>\n          <td>Uranium</td>\n          <td>{Math.floor(planet.resources.stored.uranium)}</td>\n          <td>\n              <span className='transfer-button'\n                    onClick={() => manage.transferResource(ship.resources, planet.resources.stored,\n                      'uranium', uraniumAmt, c.PLANET_RESOURCE_MAX)}><i className=\"fa fa-arrow-left\"> </i></span>\n            <input type='text' className='transfer-input'\n                   defaultValue={uraniumAmt}\n                   onChange={(event) => setUraniumAmt(event.target.value)}/>\n            <span className='transfer-button'\n                  onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                    'uranium', uraniumAmt, ship.resourcesMax)}><i className=\"fa fa-arrow-right\"> </i></span>\n          </td>\n          <td>{Math.floor(ship.resources.uranium)}</td>\n        </tr>\n        </tbody>\n      </table>}\n\n      {!shipOnPlanet &&\n      <table>\n        <thead>\n        <tr>\n          <th>Resource</th>\n          <th>Planet</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <td>Titanium</td>\n          <td>{Math.floor(planet.resources.stored.titanium)}</td>\n        </tr>\n        <tr>\n          <td>Gold</td>\n          <td>{Math.floor(planet.resources.stored.gold)}</td>\n        </tr>\n        <tr>\n          <td>Uranium</td>\n          <td>{Math.floor(planet.resources.stored.uranium)}</td>\n        </tr>\n        </tbody>\n      </table>}\n    </div>);\n}\n\n","import React from 'react';\nimport { c, manage, game} from '../../functions';\nimport './FactoryButtonRow.css';\n\nexport function FactoryButtonRow({template}) {\n  const world = window.world;\n  const planet = world.selectedPlanet;\n  const ship = world.ship;\n  let existingInventory = (template.objType === c.OBJ_SHIP) ?\n    planet.ships.filter(s=> s.name === template.name).length:\n    planet.equip.filter(e=> e.name === template.name).length;\n\n  // We pretend the current ship is in storage in the planet\n  if (ship.alive && template.name === ship.name) {\n    existingInventory += 1;\n  }\n\n  function build(templateArg) {\n    if (templateArg.objType === c.OBJ_SHIP) {\n      manage.buildShip(templateArg);\n    } else if (templateArg.objType === c.OBJ_EQUIP) {\n      manage.buildEquip(templateArg);\n    }\n  }\n\n  return (\n    <tr>\n      <td>\n        {existingInventory}\n      </td>\n      <td>\n      <button className=\"factory-button\"\n        disabled={!manage.hasFactory(planet) || !game.canAfford(planet, ship, template.cost)}\n        onClick={() => build(template)}>{template.name}</button>\n      </td>\n      <td>\n        <span className='cost'>{template.cost.titanium}T {template.cost.gold}G {template.cost.uranium}U</span>\n      </td>\n    </tr>);\n};\n\n","import React from 'react';\nimport { c } from '../../functions/';\nimport './FactoryTab.css';\nimport {FactoryButtonRow} from \"./FactoryButtonRow\";\n\nexport function FactoryTab({type, templateList}) {\n  return (\n    <div className='container factory-tab' style={{maxHeight: (c.SCREEN_HEIGHT - 200), minWidth:'400px'}}>\n      <table>\n        <tbody>\n          {templateList.map((template, i) => {\n            return <FactoryButtonRow key={type+i} template={template} />;\n          })}\n        </tbody>\n      </table>\n    </div>);\n}\n\n","import React from 'react';\nimport { c } from '../../functions/';\nimport './ManageFactory.css';\nimport {Tab, Tabs} from \"react-bootstrap\";\nimport {FactoryTab} from \"./FactoryTab\";\n\n\nexport function FactoryTabs() {\n  const equip = window.world.blueprints.equip;\n\n  const upgrades =  equip.filter((e) => c.EQUIP_UPGRADES.find(u => u.name === e.name));\n  const primaryWeapons = equip.filter((e) => c.EQUIP_PRIMARY_WEAPONS.find(p => p.name === e.name));\n  const secondaryWeapons = equip.filter((e) => c.EQUIP_SECONDARY_WEAPONS.find(s => s.name === e.name));\n  const droids = equip.filter((e) => c.EQUIP_DROIDS.find(d => d.name === e.name));\n\n  return (\n    <div className='factory-info'>\n      <Tabs defaultActiveKey='ships' id='factory-tabs' className=\"flex-nowrap\">\n        <Tab eventKey='ships' title=\"Ships\">\n          <FactoryTab type='ship' templateList={window.world.blueprints.ship} />\n        </Tab>\n\n        {upgrades && upgrades.length > 0 &&\n        <Tab eventKey='upgrades' title=\"Upgrades\">\n          <FactoryTab type='equip' templateList={upgrades} />\n        </Tab>\n        }\n\n        {primaryWeapons && primaryWeapons.length > 0 &&\n        <Tab eventKey='primaryWeapons' title=\"Primary Weapons\">\n          <FactoryTab type='equip' templateList={primaryWeapons} />\n        </Tab>\n        }\n\n        {secondaryWeapons && secondaryWeapons.length > 0 &&\n        <Tab eventKey='secondaryWeapons' title=\"Secondary Weapons\">\n          <FactoryTab type='equip' templateList={secondaryWeapons} />\n        </Tab>\n        }\n\n        {droids && droids.length > 0 &&\n        <Tab eventKey='droids' title=\"Droids\">\n          <FactoryTab type='equip' templateList={droids} />\n        </Tab>\n        }\n\n      </Tabs>\n    </div>);\n}\n\n","import React, {useState} from 'react';\nimport {manage} from '../functions';\nimport './ManageStorage.css';\n\nexport function ManageStorage() {\n  const [selectedShip, setSelectedShip] = useState();\n  let world = window.world;\n  let planet = world.selectedPlanet;\n  let currentShip = world.ship;\n  let shipOnPlanet = ((planet === window.world.lastPlanetLanded) && currentShip.alive);\n\n  function viewShip(ship) {\n    setSelectedShip(ship);\n  }\n\n  function startUsingShip() {\n    manage.switchToShip(selectedShip);\n    setSelectedShip(null);\n  }\n\n  function salvageShip(selectedShip) {\n    manage.salvageShip(planet, selectedShip);\n    setSelectedShip(null);\n  }\n\n  // Default to selecting the current ship\n  if (!selectedShip && shipOnPlanet) {\n    setSelectedShip(currentShip);\n  }\n\n  let selectedShipEquip = [];\n  if (selectedShip) {\n    for (let equip of selectedShip.equip) {\n      selectedShipEquip.push(\n        <div className=\"item\" key={equip.id}>\n          {equip.name} &nbsp;\n          <button onClick={() => manage.moveEquipFromShipToPlanet(selectedShip, planet, equip)}>Remove</button>\n        </div>);\n    }\n  }\n\n  return (\n    <div>\n      <div className='storage-section'>\n        <div className='title'>Ships</div>\n        <span className='item-list'>\n          {(shipOnPlanet ? [currentShip] : []).concat(planet.ships).map((ship, i) => {\n            return <div key={i}\n                        onClick={() => viewShip(ship)}\n                        className={`ship ${selectedShip === ship ? 'selected-item' : 'non-selected-item'}`}>{ship.name}</div>\n          })}\n        </span>\n        <span className='item-details'>\n          {selectedShip != null && // exclude this block if no ship selected\n          <div>\n            <div className='item-attr'>\n              <button onClick={() => startUsingShip()} disabled={selectedShip === currentShip}>Use Ship</button>\n              <button onClick={() => salvageShip(selectedShip)} style={{marginLeft:'10px'}}>Salvage</button>\n            </div>\n            <div className='item-attr'><b>Name</b> {selectedShip.name} {selectedShip.id}</div>\n            <div className='item-attr'>\n              <b>Engine</b> Propulsion:{Math.floor(selectedShip.propulsion * 100)} Turn:{Math.floor(selectedShip.turnSpeed * 100)}\n            </div>\n            <div className='item-attr'>\n              <b>Landing</b> Speed:{Math.floor(selectedShip.crashSpeed)} Angle:{Math.floor(selectedShip.crashAngle * 10)}\n            </div>\n            <div className='item-attr'><b>Armor</b> &nbsp;\n              {Math.floor(selectedShip.armor)} of {Math.floor(selectedShip.armorMax)}&nbsp;\n              <button onClick={() => manage.repairShip(selectedShip, planet)}\n                      disabled={selectedShip.armorMax <= selectedShip.armor}> Repair\n              </button>\n              &nbsp; Cost {Math.floor(manage.costToRepair(selectedShip).titanium)} titanium\n            </div>\n            <div className='item-attr'><b>Resources Max</b>{Math.floor(selectedShip.resourcesMax)}</div>\n            <div className='item-attr'><b>Equip</b> (Max {selectedShip.equipMax})\n              {selectedShipEquip}\n            </div>\n          </div>\n          }\n        </span>\n      </div>\n\n      <div className='storage-section'>\n        <div className='title'>Equipment</div>\n        <span className='equip-list'>\n          {planet.equip.map((equip, i) => {\n            return <div key={i} className='item'>\n              {equip.name} &nbsp;\n              <button onClick={() => manage.moveEquipFromPlanetToShip(selectedShip, planet, equip)}\n                      disabled={!manage.canEquip(selectedShip, equip)}\n              >Equip\n              </button>\n              <button onClick={() => manage.salvageEquip(planet, equip)} style={{marginLeft:'10px'}}>Salvage</button>\n            </div>\n          })}\n        </span>\n      </div>\n    </div>);\n}\n\n","import React, {useRef} from 'react';\nimport {c, savegame} from '../functions';\nimport './ManageSystem.css';\nimport lodash from 'lodash';\nimport {showToast} from \"../functions/utils\";\n\nexport function ManageSystem() {\n  const world = window.world;\n  const nameInput = useRef();\n  let gameNames = savegame.loadLocalStorage(c.LOCALSTORAGE_GAME_NAMES_KEY);\n\n  function setCurrentGame(newName) {\n    nameInput.current.value = newName;\n    world.saveGameName = newName;\n    console.log('new name ' + newName);\n  }\n\n  /**\n   * Adds a game name to the list of saved game names.\n   */\n  function addGameName(newGameName) {\n    if (newGameName && !gameNames.includes(newGameName)) {\n      gameNames.push(newGameName)\n    }\n    savegame.saveLocalStorage(c.LOCALSTORAGE_GAME_NAMES_KEY, gameNames);\n  }\n\n  // If no games are saved, setup an empty list of game names\n  if (!gameNames) {\n    gameNames = [];\n    addGameName(null);\n  }\n\n  function saveGame() {\n    const saveGameName = nameInput.current.value;\n    if (!saveGameName) {\n      showToast('Cannot save game without name');\n      return;\n    }\n    // Save the world in indexedDB\n    savegame.saveWorld(saveGameName);\n    // Save the game name in localStorage\n    addGameName(saveGameName);\n    setCurrentGame(saveGameName);\n  }\n\n  function loadGame(gameName) {\n    savegame.loadWorld(gameName);\n    setCurrentGame(gameName);\n  }\n\n  function deleteGame(gameName) {\n    if (!window.confirm(\"Are you sure you want to delete \" + gameName + \"?\")) {\n      return;\n    }\n    savegame.deleteWorld(gameName);\n    gameNames = lodash.remove(gameNames, (name) => name !== gameName);\n    savegame.saveLocalStorage(c.LOCALSTORAGE_GAME_NAMES_KEY, gameNames);\n    if (world.saveGameName === gameName) {\n      world.saveGameName = null;\n    }\n    if (nameInput.current.value === gameName) {\n      nameInput.current.value = '';\n    }\n  }\n\n  return (\n    <div>\n      <div className='system-section'>\n        <div className='section'><b>Current Game</b></div>\n        <input type='text' defaultValue={world.saveGameName} onFocus={() => world.system.isTyping = true}\n               onBlur={() => world.system.isTyping = false} ref={nameInput}/>\n        <button name=\"Save\" onClick={() => saveGame()}>Save</button>\n        <div className='section'><b>Saved Game</b></div>\n        {gameNames.map(gameName => (\n          <div key={gameName} className={'game-list-row ' + (world.saveGameName === gameName ? 'selected-game' : '')}>\n            <span className='game-list-item'><button onClick={() => loadGame(gameName)}>Load </button></span>\n            <span className='game-list-item'><button onClick={() => deleteGame(gameName)}>Delete</button></span>\n            <span className='game-list-item'>{gameName}</span>\n          </div>\n        ))}\n      </div>\n    </div>);\n}\n\n","import React from 'react';\nimport {c} from '../functions';\nimport './ManageLog.css';\n\nexport function ManageLog() {\n  const xp = window.world.blueprints.xp;\n\n  const gameTickCount = window.world.gameTickCount;\n  let timeSpentMin = Math.floor((gameTickCount / 360))/10;\n  let timeSpentHr = 0;\n  if (timeSpentMin > 60) {\n    timeSpentHr = Math.floor(timeSpentMin / 60);\n    timeSpentMin = Math.floor(timeSpentMin - (timeSpentHr * 60));\n  }\n\n  const translations = {\n    [c.PLANET_ROCK_FILE]: 'Rock Planet',\n    [c.PLANET_RED_FILE]: 'Red Planet',\n    [c.PLANET_GREEN_FILE]: 'Green Planet',\n    [c.PLANET_PURPLE_FILE]: 'Purple Planet',\n  }\n\n  return (\n    <div>\n      <div className='system-section'>\n        <div className='section'><b>Experience Log</b></div>\n        <div>\n          <table className=\"log-table\">\n            <tbody>\n            {Object.entries(xp).map((entry) => {\n              const [key, value] = entry;\n              if (value) {\n                return <tr key={key}>\n                  <td><b>{translations[key] || key}</b></td>\n                  <td>{Math.round(value)}</td>\n                </tr>;\n              }\n              return <tr key={key}/>;\n              })}\n            </tbody>\n          </table>\n          <div className=\"tick-count\">\n            Total time spent : {timeSpentHr ? timeSpentHr + ' hour'+(timeSpentHr > 1 ? 's ': ' ') : ''} {timeSpentMin} min\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { ManagePlanet } from './ManagePlanet';\nimport './ManageTabs.css';\nimport { FactoryTabs } from './factory/FactoryTabs';\nimport { ManageStorage } from './ManageStorage';\nimport {ManageSystem} from \"./ManageSystem\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Tab, Tabs} from \"react-bootstrap\";\nimport {ManageLog} from \"./ManageLog\";\n\nexport function ManageTabs() {\n\n  return (\n    <Tabs defaultActiveKey='planet' id='manage-tabs' mountOnEnter unmountOnExit className=\"flex-nowrap\">\n      <Tab eventKey='planet' title='Planet'>\n        <ManagePlanet/>\n      </Tab>\n\n      <Tab eventKey='factory' title='Factory'>\n        <FactoryTabs/>\n      </Tab>\n\n      <Tab eventKey='storage' title='Storage'>\n        <ManageStorage/>\n      </Tab>\n\n      <Tab eventKey='log' title='Log'>\n        <ManageLog/>\n      </Tab>\n\n      <Tab eventKey='system' title='System'>\n        <ManageSystem/>\n      </Tab>\n    </Tabs>);\n}\n\n","import React from 'react';\nimport { c } from './functions';\nimport './InfoPanel.css';\nimport { InfoFly } from './fly/InfoFly';\nimport { ManageTabs } from './manage/ManageTabs';\n\nexport class InfoPanel extends React.Component {\n  render() {\n    let world = window.world;\n    if (world.system.gameState === c.GAME_STATE.MANAGE) {\n      return (<ManageTabs/>);\n    } else if (world.system.gameState === c.GAME_STATE.FLY) {\n      return (<InfoFly/>);\n    }\n    return (<div>...</div>);\n  }\n}\n\n","import React from 'react';\nimport './App.css';\nimport {InfoPanel} from './InfoPanel';\nimport {ai, c, fly, game, utils} from './functions';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    window.world = game.createEmptyWorld();\n    this.pixiRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.createPixiApp();\n  }\n\n  render() {\n    return (\n      <table className='root-app' width='100%'>\n        <tbody>\n        <tr>\n          <td>\n            <div className='viewport' ref={this.pixiRef}/>\n          </td>\n          <td className='info-panel' width='100%' height={(window.world.system.screenHeight || c.SCREEN_HEIGHT) + 'px'}>\n            <div className='scroll-box'>\n              <InfoPanel/>\n            </div>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    );\n  }\n\n  createPixiApp = () => {\n    let app = new window.PIXI.Application({width: c.SCREEN_WIDTH, height: c.SCREEN_HEIGHT});\n    app.renderer.backgroundColor = c.BLACK;\n    this.pixiRef.current.appendChild(app.view);\n    window.PIXI.loader\n      .add(c.SPRITESHEET_JSON)\n      .add(c.CRASH_JSON)\n      .load(this.setupGame);\n    window.world.system.app = app;\n  }\n\n  // Setup the App\n  setupGame = () => {\n    game.setupWorld();\n    this.setupKeyboardListeners();\n    this.setupWindowResizeListener();\n    game.changeGameState(c.GAME_STATE.FLY);\n    window.world.system.app.renderer.plugins.interaction.on('pointerdown', (event) => {\n      game.click(event);\n    });\n    window.world.system.app.ticker.add(delta => this.mainLoop(delta));\n  }\n\n  // Main loop runs 60 times per sec\n  mainLoop = (delta) => {\n    if (window.world.system.gameLoop) {\n      window.world.gameTickCount += 1;\n      game.runBuildings();\n      fly.moveBullets();\n      fly.coolAllWeapons();\n      ai.moveAliens();\n      window.world.system.gameLoop(delta);\n    }\n    // Redraw react HTML\n    this.forceUpdate();\n  }\n\n  setupKeyboardListeners = () => {\n    window.world.system.keys.left = utils.keyboardListener(\"ArrowLeft\");\n    window.world.system.keys.right = utils.keyboardListener(\"ArrowRight\");\n    window.world.system.keys.up = utils.keyboardListener(\"ArrowUp\");\n    window.world.system.keys.down = utils.keyboardListener(\"ArrowDown\");\n    window.world.system.keys.space = utils.keyboardListener(\" \");\n    window.world.system.keys.w = utils.keyboardListener(\"w\"); // up\n    window.world.system.keys.a = utils.keyboardListener(\"a\"); // left\n    window.world.system.keys.s = utils.keyboardListener(\"s\"); // down\n    window.world.system.keys.d = utils.keyboardListener(\"d\"); // right\n    window.world.system.keys.q = utils.keyboardListener(\"q\"); // thrust left\n    window.world.system.keys.e = utils.keyboardListener(\"e\"); // thrust right\n    window.world.system.keys.x = utils.keyboardListener(\"x\"); // secondary weapon\n  }\n\n  setupWindowResizeListener() {\n    window.addEventListener('resize', resizeScreenToWindow);\n    resizeScreenToWindow();\n  }\n}\n\nfunction resizeScreenToWindow() {\n  const app = window.world.system.app;\n  const h = Math.max(window.innerHeight - 10, 550);\n  const scale = h / 1000;\n  window.world.system.app.stage.scale.set(scale);\n  app.renderer.resize(h, h);\n  window.world.system.screenHeight = h;\n  window.world.system.screenScale = scale;\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}