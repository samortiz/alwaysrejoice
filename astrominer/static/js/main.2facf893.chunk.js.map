{"version":3,"sources":["functions/utils.js","functions/constants.js","functions/game.js","functions/fly.js","functions/manage.js","functions/ai.js","InfoFly.js","manage/ManagePlanet.js","manage/FactoryButton.js","manage/ManageFactory.js","manage/EquipSelect.js","manage/ManageStorage.js","manage/ManageTabs.js","InfoPanel.js","App.js","serviceWorker.js","index.js"],"names":["distanceBetween","ax","ay","bx","by","Math","sqrt","pow","midPoint","a","b","normalizeRadian","radians","retVal","PI","calcGravity","x","y","planet","distance","gravityDirection","atan2","c","GRAVITATIONAL_CONST","mass","sin","cos","dir","directionTo","x1","y1","x2","y2","dirComponents","amount","xAmt","yAmt","randomInt","minP","maxP","min","ceil","max","floor","random","randomFloat","randomBool","getPointFrom","startX","startY","getVertexData","sprite","calculateVertices","collisionPoints","push","toGlobal","vertexData","globalX","globalY","spriteX","spriteY","HALF_SCREEN_WIDTH","HALF_SCREEN_HEIGHT","keyboardListener","value","key","isDown","isUp","press","undefined","release","downHandler","event","preventDefault","upHandler","downListener","bind","upListener","window","addEventListener","unsubscribe","removeEventListener","BLACK","RED","BLUE","WHITE","MED_GREY","DARK_GREY","LIGHT_GREY","GAME_STATE","INIT","FLY","MANAGE","SCREEN_WIDTH","SCREEN_HEIGHT","MINIMAP_WIDTH","MINIMAP_HEIGHT","HALF_MINIMAP_WIDTH","HALF_MINIMAP_HEIGHT","MINIMAP_VIEW_WIDTH","MINIMAP_VIEW_HEIGHT","HALF_MINIMAP_VIEW_WIDTH","HALF_MINIMAP_VIEW_HEIGHT","MINIMAP_SCALE_X","MINIMAP_SCALE_Y","SPRITESHEET_JSON","ROCK_PLANET_FILE","RED_PLANET_FILE","PURPLE_PLANET_FILE","GREEN_PLANET_FILE","MINE_FILE","FACTORY_FILE","SHIP_CARGO_FILE","SHIP_EXPLORER_FILE","SHIP_FAST_FILE","SHIP_FIGHTER_FILE","SHIP_HEAVY_FILE","STAR_BACKGROUND_FILE","CRASH_JSON","CRASH","BULLET_FILE","BULLET_BLUE_FILE","BULLET_STAPLE_FILE","ALIEN_SHIP_FILE","ALIEN_SHIP_SMALL_FILE","ALIEN_SHIP_LARGE_FILE","ALIEN_SHIP_FIRE_FILE","UNIVERSE_RADIUS","PLANET_CACHE_STEP_SIZE","PLANET_CACHE_NUM_STEPS","PLAYER","ALIEN","PLAYER_STARTING_RESOURCES","titanium","gold","uranium","ALLOWED_OVERLAP","TAKEOFF_SPEED","PLANET_RESOURCE_MAX","PLAYER_START_X","PLAYER_START_Y","NUM_ALIENS","MIN_ALIEN_DIST_TO_PLANET","MIN_ALIEN_DIST_TO_ALIEN","CRIT_TYPE_BRAKE","CRIT_TYPE_STEER_LEFT","CRIT_TYPE_STEER_RIGHT","CRIT_TYPE_ENGINE","CRIT_TYPE_GUN","CRIT_TYPE_THRUSTER","CRIT_TYPE_MISC","BUILDING_PLACEMENT_ROTATION_INCREMENT","BUILDING_TYPE_MINE","MINE_SCALE","MINE_PLACEMENT_FROM_SHIP","MINE_ANIMATION_SPEED","MINE_SPEED_TITATIUM","MINE_SPEED_GOLD","MINE_SPEED_URANIUM","MINE_COST","BUILDING_TYPE_FACTORY","FACTORY_COST","FACTORY_SCALE","FACTORY_PLACEMENT_FROM_SHIP","EQUIP_TYPE_BRAKE","EQUIP_TYPE_PRIMARY_WEAPON","EQUIP_TYPE_THRUSTER","EQUIP_TYPE_ARMOR","EQUIP_TYPE_REPAIR_DROID","EQUIP_TYPE_MISC","EQUIP_TYPE_SPEED","EQUIP_TYPE_TURN","EQUIP_TYPE_STORAGE","THRUST_MOMENTUM","THRUST_BLINK","OBJ_EQUIP","OBJ_SHIP","ALIEN_AI_TURRET","ALIEN_AI_CREEPER","EQUIP_BRAKE","name","objType","type","brakeSpeedPct","crit","maxHits","hits","pctLoss","cost","EQUIP_BLINK_BRAKE","EQUIP_SPEED_BOOST","boostSpeed","EQUIP_TURN_BOOST","EQUIP_STORAGE","storageAmount","EQUIP_BLASTER","coolTime","cool","damage","speed","lifetime","bulletFile","EQUIP_FAST_BLASTER","EQUIP_STREAM_BLASTER","EQUIP_THRUSTER","thrustSpeed","thrustType","EQUIP_BLINK_THRUSTER","EQUIP_R2D2","repairSpeed","EQUIP_ALIEN_BLASTER","EQUIP_STAPLE_GUN","EQUIP_ARMOR","armorAmt","ALL_EQUIP","SHIP_EXPLORER","propulsion","turnSpeed","resourcesMax","resources","equipMax","equip","crits","armorMax","armor","crashSpeed","crashAngle","imageScale","imageFile","SHIP_CARGO","SHIP_FAST","SHIP_HEAVY","SHIP_FIGHTER","SHIP_ALIEN_TURRET","aiType","SHIP_ALIEN","SHIP_ALIEN_LARGE","SHIP_ALIEN_FIRE","ALL_SHIPS","UNIVERSE_RINGS","planetCount","minDist","maxDist","minDistToOtherPlanet","minPlanetScale","maxPlanetScale","planetFiles","aliens","count","file","MINING_XP_LEVELS","xp","obj","ALIEN_XP_LEVELS","createEmptyWorld","ship","bullets","planets","keys","app","gameState","gameLoop","selectedPlanet","bgSprite","explosions","explosionSheet","blueprints","miningXp","miningXpLevels","lodash","cloneDeep","alienXp","alienXpLevels","setupWorld","container","world","stage","createBackground","createPlanets","shipStartX","shipStartY","createShip","addChild","createAliens","setupMiniMap","setupExplosionSheet","setupPlanetCache","PIXI","TilingSprite","Texture","from","ring","i","fileName","utils","length","String","fromCharCode","scale","maxResource","minResource","createPlanet","getFreeXy","nearestPlanetDistance","origPlanet","nearestPlanet","dist","radius","nearestPlanetDist","nearestAlienDistance","nearestAlien","alien","nearestAlienDist","minDistToPlanet","minDistToAlien","failCount","np","console","warn","stored","raw","ships","buildings","Container","planetSprite","Sprite","loader","textures","anchor","set","width","shipType","owner","id","uniqueId","vx","vy","spritesheet","position","createAlien","alienInfo","miniMapContainer","mask","Graphics","drawRect","renderable","cacheAsBitmap","g","miniMapGraphics","click","data","global","fly","clickOnMinimap","changeGameState","newState","enterFlyState","flyLoop","manage","enterManageState","manageLoop","runBuildings","mineResource","animationSpeed","resourceType","nextLevel","addBlueprint","shift","addMiningXp","addAlienXp","log","canAfford","payResourceCost","payResource","paid","Loader","shared","createExplosionSprite","AnimatedSprite","animations","loop","visible","planetCache","Array","stepX","stepY","minX","maxX","minY","maxY","stepPlanets","getPlanetsNear","delta","runRepairDroids","left","turnShip","right","d","up","w","booster","getEquip","rotation","propelShip","down","s","brake","brakeShip","space","firePrimaryWeapon","q","thrustShip","e","planetsInView","planetInView","grav","moveExplosions","moveBackground","detectCollisionWithPlanet","successfulLanding","landShip","crash","detectCollisionWithAlien","shipsCollide","drawMiniMap","coolAllWeapons","coolWeapons","resetWeaponsCool","droid","game","tilePosition","point","planetDir","dirDiff","abs","success","speedDiff","dirDiffAdj","damageShip","resetGame","r","destroyShip","getExplosionSprite","explosionSprite","playerShip","afterExplosion","play","onLoop","stop","getAvailablePlanetXY","turnBooster","thruster","gun","fireBullet","bullet","active","findOrCreateBullet","height","killBullet","moveBullets","checkForBulletCollision","containsPoint","bulletHitShip","shipDamage","alienDamage","equipType","t","clear","beginFill","lineStyle","endFill","planetOnMap","drawCircle","building","buildingX","buildingY","clickX","clickY","gravity","takeOff","buildMine","mine","sheet","getBuildingPlacementRotation","distanceFromShip","deg","degX","degY","buildingWidth","buildingFits","minBuildingWidth","transferResource","source","target","requestedAmtStr","maxCapacity","requestedAmt","Number","isNaN","amt","spaceLeft","buildFactory","factory","buildShip","shipTemplate","newShip","switchToShip","oldShip","removeShipFromStorage","addShipToStorage","beginUsingShip","filter","removedShip","removeChild","hasFactory","buildEquip","equipTemplate","costToRepair","repairShip","addArmor","titaniumOnHand","moveAliens","hasMoved","turretAi","creeperAi","checkForCollisionWithPlanet","checkForCollisionWithAlien","shootAtPlayer","jitter","dirToPlayer","jitterAmt","moved","dirToPlanet","rightLeft","turnDir","otherAlien","InfoFly","className","map","React","Component","ManagePlanet","props","state","Object","assign","this","setState","disabled","onClick","onChange","valueChanged","FactoryButton","template","build","ManageFactory","EquipSelect","oldEquip","removeEquip","newEquip","remove","oldEquipIndex","findIndex","splice","addEquip","shipResources","owing","removeResource","selectedOption","changeEquip","ManageStorage","selectedShip","selectedEquip","currentShip","selectedShipEquip","concat","viewShip","startUsingShip","viewEquip","ManageTabs","activeTab","InfoPanel","App","createPixiApp","Application","renderer","backgroundColor","pixiRef","current","appendChild","view","add","load","setupGame","setupKeyboardListeners","plugins","interaction","on","ticker","mainLoop","ai","forceUpdate","createRef","ref","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2facf893.chunk.js","sourcesContent":["import { c } from './';\n\n/**\n * Returns the distance between two points \n */\nexport function distanceBetween(ax, ay, bx, by) {\n  return Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n}\n  \n/**\n * Returns array with [x,y] of midpoint between two points\n * Both params should be [x,y]\n */\nexport function midPoint(a, b) {\n  return [(a[0]+b[0])/2, (a[1]+b[1])/2];\n}\n\n/**\n * Convert the angle to 0 <= rad <= 2*PI \n */\nexport function normalizeRadian(radians) {\n  let retVal = radians;\n  if (retVal < 0) {\n    retVal += Math.PI * 2;\n  }\n  if (retVal > Math.PI * 2) {\n    retVal -= Math.PI * 2;\n  }\n  return retVal;\n}\n  \n/**\n * Calc gravity for point.\n * @return {x,y,dir} This will be the x and y forces applied to the object (not a point)\n */\nexport function calcGravity(x, y, planet) {\n  let distance = distanceBetween(x, y, planet.x, planet.y);\n  if (distance < 10) {\n    distance = 10;\n  }\n  let gravityDirection = Math.atan2(x - planet.x, y - planet.y);\n  let gravityX = c.GRAVITATIONAL_CONST * planet.mass / Math.pow(distance, 2) * -Math.sin(gravityDirection);\n  let gravityY = c.GRAVITATIONAL_CONST * planet.mass / Math.pow(distance, 2) * -Math.cos(gravityDirection);\n  return {x:gravityX, y:gravityY, dir:gravityDirection};\n}\n\n/**\n * @return the angle x1,y1 would need to face to point directly at x2,y2\n */\nexport function directionTo(x1,y1, x2,y2) {\n  return normalizeRadian(Math.atan2(x1 - x2, y1 - y2));\n}\n\n/**\n * @return {xAmt, yAmt} splitting the dir and amount into x,y portions\n */\nexport function dirComponents(dir, amount) {\n  let xAmt = amount * -Math.sin(dir);\n  let yAmt = amount * -Math.cos(dir);\n  return {xAmt, yAmt};\n}\n\n/**\n * @return an int between min and max inclusive\n */\nexport function randomInt(minP, maxP) {\n  let min = Math.ceil(minP);\n  let max = Math.floor(maxP);\n  return Math.floor(Math.random() * (max - min +1) + min); \n}\n\n/**\n * @return a random floating point number between min and max\n */\nexport function randomFloat(min, max) {\n  return min + (Math.random() * (max - min));\n}\n\n/**\n * @return true 50% of the time\n */\nexport function randomBool() {\n  return Math.random() > 0.5;\n}\n\n/**\n * @return add distance in direction to startX,startY \n */\nexport function getPointFrom(startX, startY, dir, distance) {\n  let x = startX + (distance * Math.cos(dir));\n  let y = startY + (distance * Math.sin(dir));\n  return {x,y};\n}\n\n/**\n * @return a collection of points [[x,y],[x,y]] on a rectangular sprite that can be used for collision detection\n * @param x,y global x,y position of sprite (on main map, not in viewport)\n */\nexport function getVertexData(x,y, sprite) {\n  sprite.calculateVertices();\n  let collisionPoints = []; // [[x,y],[x,y]]\n  collisionPoints.push(toGlobal(x, y, sprite.vertexData[0], sprite.vertexData[1])); // top left\n  collisionPoints.push(toGlobal(x, y, sprite.vertexData[2], sprite.vertexData[3])); // top right\n  collisionPoints.push(toGlobal(x, y, sprite.vertexData[4], sprite.vertexData[5])); // bottom right\n  collisionPoints.push(toGlobal(x, y, sprite.vertexData[6], sprite.vertexData[7])); // bottom left\n  // Add a few points between to help with border collisions (these have already been converted to global)\n  collisionPoints.push(midPoint(collisionPoints[0], collisionPoints[1]));\n  collisionPoints.push(midPoint(collisionPoints[1], collisionPoints[2]));\n  collisionPoints.push(midPoint(collisionPoints[2], collisionPoints[3]));\n  collisionPoints.push(midPoint(collisionPoints[3], collisionPoints[0]));\n  return collisionPoints;\n}\n\n/**\n * Converts the local sprite-based x,y to global based on ship's position\n * @return [x,y] in global map coordinates\n */\nexport function toGlobal(globalX, globalY, spriteX,spriteY) {\n  return [globalX + (spriteX - c.HALF_SCREEN_WIDTH), globalY+ (spriteY - c.HALF_SCREEN_HEIGHT)];\n}\n\n/**\n * Sets up a keyboard listener\n */\nexport function keyboardListener(value) {\n  let key = {};\n  key.value = value;\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = event => {\n    if (event.key === key.value) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n      event.preventDefault();\n    }\n  };\n\n  //The `upHandler`\n  key.upHandler = event => {\n    if (event.key === key.value) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n      event.preventDefault();\n    }\n  };\n\n  //Attach event listeners\n  const downListener = key.downHandler.bind(key);\n  const upListener = key.upHandler.bind(key);\n  \n  window.addEventListener(\n    \"keydown\", downListener, false\n  );\n  window.addEventListener(\n    \"keyup\", upListener, false\n  );\n  \n  // Detach event listeners\n  key.unsubscribe = () => {\n    window.removeEventListener(\"keydown\", downListener);\n    window.removeEventListener(\"keyup\", upListener);\n  };\n  \n  return key;\n}","// Colors\nimport {c} from \"./index\";\n\nexport const BLACK = 0X000000;\nexport const RED = 0xFF0000;\nexport const BLUE = 0x0000FF;\nexport const WHITE = 0xFFFFFF;\nexport const MED_GREY = 0x808080;\nexport const DARK_GREY = 0x303030;\nexport const LIGHT_GREY = 0x909090;\n\nexport const GAME_STATE = {\n  INIT: \"init\",\n  FLY: \"fly\",\n  MANAGE: \"manage\"\n};\n\n// Screen Layout\nexport const SCREEN_WIDTH = 1000;\nexport const SCREEN_HEIGHT = 1000;\nexport const HALF_SCREEN_WIDTH = SCREEN_WIDTH / 2;\nexport const HALF_SCREEN_HEIGHT = SCREEN_HEIGHT / 2;\n// size of minimap on screen\nexport const MINIMAP_WIDTH = 120; \nexport const MINIMAP_HEIGHT = 120;\nexport const HALF_MINIMAP_WIDTH = MINIMAP_WIDTH / 2; \nexport const HALF_MINIMAP_HEIGHT = MINIMAP_HEIGHT / 2;\n// how far the minimap can view\nexport const MINIMAP_VIEW_WIDTH = 4000; \nexport const MINIMAP_VIEW_HEIGHT = 4000; \nexport const HALF_MINIMAP_VIEW_WIDTH = MINIMAP_VIEW_WIDTH / 2;\nexport const HALF_MINIMAP_VIEW_HEIGHT = MINIMAP_VIEW_HEIGHT / 2;\n// convert minimap pixels to real pixels\nexport const MINIMAP_SCALE_X = MINIMAP_WIDTH / MINIMAP_VIEW_WIDTH;  \nexport const MINIMAP_SCALE_Y = MINIMAP_HEIGHT / MINIMAP_VIEW_HEIGHT; \n\n// Files\nexport const SPRITESHEET_JSON = \"images/spritesheet.json\";\nexport const ROCK_PLANET_FILE = \"rock_planet.png\";\nexport const RED_PLANET_FILE = \"red_planet.png\";\nexport const PURPLE_PLANET_FILE = \"purple_planet.png\";\nexport const GREEN_PLANET_FILE = \"green_planet.png\";\nexport const MINE_FILE = \"mine\"; // animation name in json\nexport const FACTORY_FILE = \"factory.png\";\nexport const SHIP_CARGO_FILE = \"ship_cargo.png\";\nexport const SHIP_EXPLORER_FILE = \"ship_explorer.png\";\nexport const SHIP_FAST_FILE = \"ship_fast.png\";\nexport const SHIP_FIGHTER_FILE = \"ship_fighter.png\";\nexport const SHIP_HEAVY_FILE = \"ship_heavy.png\";\nexport const STAR_BACKGROUND_FILE = \"images/stars.png\";\nexport const CRASH_JSON = \"images/crash.json\";\nexport const CRASH = \"crash\"; // animation name in json\nexport const BULLET_FILE = \"bullet.png\";\nexport const BULLET_BLUE_FILE = \"bullet_blue.png\";\nexport const BULLET_STAPLE_FILE = \"bullet_white.png\";\nexport const ALIEN_SHIP_FILE = \"alien.png\";\nexport const ALIEN_SHIP_SMALL_FILE = \"alien_small.png\";\nexport const ALIEN_SHIP_LARGE_FILE = \"alien_large.png\";\nexport const ALIEN_SHIP_FIRE_FILE = \"alien_fire.png\";\n\nexport const UNIVERSE_RADIUS = 17000;\nexport const PLANET_CACHE_STEP_SIZE = SCREEN_WIDTH;\nexport const PLANET_CACHE_NUM_STEPS = UNIVERSE_RADIUS * 2 / PLANET_CACHE_STEP_SIZE;\nexport const PLAYER = \"player\";\nexport const ALIEN = \"alien\";\nexport const PLAYER_STARTING_RESOURCES = {titanium:30, gold:20, uranium:0};\nexport const GRAVITATIONAL_CONST = 2;\nexport const ALLOWED_OVERLAP = 2; // overlap for fudging collision detection\nexport const TAKEOFF_SPEED = 10; // in units of planet gravity\nexport const PLANET_RESOURCE_MAX = 99999999;\nexport const PLAYER_START_X = -(UNIVERSE_RADIUS + 1000); // left of the universe\nexport const PLAYER_START_Y = 0;\nexport const NUM_ALIENS = 1000;\nexport const MIN_ALIEN_DIST_TO_PLANET = 50;\nexport const MIN_ALIEN_DIST_TO_ALIEN = 3;\n\n// Critical Hits\nexport const CRIT_TYPE_BRAKE = \"Brake\"\nexport const CRIT_TYPE_STEER_LEFT = \"Steer Left\";\nexport const CRIT_TYPE_STEER_RIGHT = \"Steer Right\";\nexport const CRIT_TYPE_ENGINE = \"Engine\";\nexport const CRIT_TYPE_GUN = \"Engine\";\nexport const CRIT_TYPE_THRUSTER = \"Thruster\";\nexport const CRIT_TYPE_MISC = \"Misc\";\n\n// Buildings\nexport const BUILDING_PLACEMENT_ROTATION_INCREMENT = 0.1;\n// Mine\nexport const BUILDING_TYPE_MINE = \"mine\";\nexport const MINE_SCALE = 0.25;\nexport const MINE_PLACEMENT_FROM_SHIP = 50; // mine is 50px to the right of the ship\nexport const MINE_ANIMATION_SPEED = 0.5;\nexport const MINE_SPEED_TITATIUM = 0.0166; // 1 every sec\nexport const MINE_SPEED_GOLD = 0.0083;  // 1 every 2 sec\nexport const MINE_SPEED_URANIUM = 0.0033; // 1 every 5 sec\nexport const MINE_COST = {titanium:20, gold:10, uranium:0};\n// Factory\nexport const BUILDING_TYPE_FACTORY = \"factory\";\nexport const FACTORY_COST = {titanium:50, gold:20, uranium:10};\nexport const FACTORY_SCALE = 0.25;\nexport const FACTORY_PLACEMENT_FROM_SHIP = 50; // how far factory is to the right of the ship TODO: should be based on sprite.height/2\n\n// Equipment\nexport const EQUIP_TYPE_BRAKE = \"Brake\";\nexport const EQUIP_TYPE_PRIMARY_WEAPON = \"Primary Weapon\";\nexport const EQUIP_TYPE_THRUSTER = \"Thruster\";\nexport const EQUIP_TYPE_ARMOR = \"Armor\";\nexport const EQUIP_TYPE_REPAIR_DROID = \"Repair Droid\";\nexport const EQUIP_TYPE_MISC = \"Misc\";\nexport const EQUIP_TYPE_SPEED = \"Speed\";\nexport const EQUIP_TYPE_TURN = \"Turn\";\nexport const EQUIP_TYPE_STORAGE = \"Storage\";\n\nexport const THRUST_MOMENTUM = \"Thrust Momentum\";\nexport const THRUST_BLINK = \"Thrust Blink\";\n\n// Object type\nexport const OBJ_EQUIP = \"Equip\";\nexport const OBJ_SHIP = \"Ship\";\n\nexport const ALIEN_AI_TURRET = \"ALIEN_AI_TURRET\";\nexport const ALIEN_AI_CREEPER = \"ALIEN_AI_CREEPER\";\n\n// brakeSpeedPct is best between 0.02 - 0.1 (higher is ok)  \nexport const EQUIP_BRAKE = {name: \"Brake\", objType:OBJ_EQUIP, type:EQUIP_TYPE_BRAKE, brakeSpeedPct:0.04, \n                            crit: {type:CRIT_TYPE_BRAKE, maxHits:1, hits:0, pctLoss:0.95},\n                            cost: {titanium:20, gold:10, uranium:0} };\nexport const EQUIP_BLINK_BRAKE = {name: \"Blink Brake\", objType:OBJ_EQUIP, type:EQUIP_TYPE_BRAKE, brakeSpeedPct:0, \n                            crit:{type:CRIT_TYPE_BRAKE, maxHits:1, hits:0, pctLoss:1},\n                            cost: {titanium:50, gold:50, uranium:30}};\nexport const EQUIP_SPEED_BOOST = {name: \"Speed Booster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_SPEED, boostSpeed:0.05, \n                            crit:{type:CRIT_TYPE_MISC, maxHits:1, hits:0, pctLoss:1},\n                            cost: {titanium:0, gold:10, uranium:20}};\nexport const EQUIP_TURN_BOOST = {name: \"Turn Booster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_TURN, boostSpeed:0.05, \n                            crit:{type:CRIT_TYPE_MISC, maxHits:1, hits:0, pctLoss:1},\n                            cost: {titanium:0, gold:10, uranium:20}};\nexport const EQUIP_STORAGE = {name: \"Storage\", objType:OBJ_EQUIP, type:EQUIP_TYPE_STORAGE, storageAmount:100, \n                            crit:{type:CRIT_TYPE_MISC, maxHits:1, hits:0, pctLoss:1},\n                            cost: {titanium:50, gold:0, uranium:0}};\nexport const EQUIP_BLASTER = {name: \"Blaster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_PRIMARY_WEAPON, coolTime:25, cool:0, damage:10, speed:2.5, lifetime:100, bulletFile:BULLET_FILE,\n                            crit: {type:CRIT_TYPE_GUN, maxHits:1, hits:0},\n                            cost: {titanium:10, gold:0, uranium:20}};\nexport const EQUIP_FAST_BLASTER = {name: \"Fast Blaster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_PRIMARY_WEAPON, coolTime:10, cool:0, damage:10, speed:4, lifetime:80, bulletFile:BULLET_FILE,\n                            crit: {type:CRIT_TYPE_GUN, maxHits:1, hits:0},\n                            cost: {titanium:20, gold:20, uranium:40}};\nexport const EQUIP_STREAM_BLASTER = {name: \"Stream Blaster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_PRIMARY_WEAPON, coolTime:3, cool:0, damage:7, speed:6, lifetime:70, bulletFile:BULLET_FILE,\n                            crit: {type:CRIT_TYPE_GUN, maxHits:1, hits:0},\n                            cost: {titanium:30, gold:30, uranium:60}};\nexport const EQUIP_THRUSTER = {name: \"Thruster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_THRUSTER, thrustSpeed:0.08, thrustType:THRUST_MOMENTUM,\n                            crit:{type:CRIT_TYPE_THRUSTER, maxHits:1, hits:0, pctLoss:0.95},\n                            cost: {titanium:40, gold:40, uranium:10}};\n// blink thrustSpeed is good from 2 to 10                            \nexport const EQUIP_BLINK_THRUSTER = {name: \"Blink Thruster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_THRUSTER, thrustSpeed:2.5, thrustType:THRUST_BLINK,\n                            crit:{type:CRIT_TYPE_THRUSTER, maxHits:1, hits:0, pctLoss:0.95},\n                            cost: {titanium:60, gold:50, uranium:10}};\nexport const EQUIP_R2D2 = {name: \"R2D2 Repair Droid\", objType:OBJ_EQUIP, type:EQUIP_TYPE_REPAIR_DROID, repairSpeed:0.03, \n                            crit:{type:CRIT_TYPE_MISC, maxHits:1, hits:0, pctLoss:1},\n                            cost: {titanium:20, gold:100, uranium:50}};\nexport const EQUIP_ALIEN_BLASTER = {name: \"Alien Blaster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_PRIMARY_WEAPON, coolTime:20, cool:0, damage:4, speed:2, lifetime:120, bulletFile:BULLET_BLUE_FILE,\n                            crit: {type:CRIT_TYPE_GUN, maxHits:1, hits:0},\n                            cost: {titanium:10, gold:30, uranium:50}};\nexport const EQUIP_STAPLE_GUN = {name: \"Staple Gun\", objType:OBJ_EQUIP, type:EQUIP_TYPE_PRIMARY_WEAPON, coolTime:3, cool:0, damage:1.5, speed:3, lifetime:300, bulletFile:BULLET_STAPLE_FILE,\n  crit: {type:CRIT_TYPE_GUN, maxHits:1, hits:0},\n  cost: {titanium:10, gold:30, uranium:50}};\n\nexport const EQUIP_ARMOR = {name: \"Armor Plate\", objType:OBJ_EQUIP, type:EQUIP_TYPE_ARMOR, armorAmt:100,\n                            crit:{type:CRIT_TYPE_MISC, maxHits:1, hits:0, pctLoss:1},\n                            cost: {titanium:50, gold:0, uranium:0}};\nexport const ALL_EQUIP = [EQUIP_BRAKE, EQUIP_BLINK_BRAKE, EQUIP_SPEED_BOOST, EQUIP_TURN_BOOST, EQUIP_BLASTER, EQUIP_FAST_BLASTER, EQUIP_STREAM_BLASTER,\n   EQUIP_THRUSTER, EQUIP_BLINK_THRUSTER, EQUIP_R2D2, EQUIP_ALIEN_BLASTER, EQUIP_ARMOR];\n\n// Ships\nexport const SHIP_EXPLORER = {\n  name: \"Explorer\",\n  objType:OBJ_SHIP,\n  propulsion: 0.05, // best bewteen 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 50,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 2,\n  equip : [EQUIP_BRAKE, EQUIP_BLASTER], // DEBUG blaster\n  crits: [{type:CRIT_TYPE_STEER_LEFT, maxHits:1, hits:0, pctLoss:0.95}\n        , {type:CRIT_TYPE_STEER_RIGHT, maxHits:1, hits:0, pctLoss:0.95}\n        , {type:CRIT_TYPE_ENGINE, maxHits:1, hits:0, pctLoss:0.80}\n  ],\n  armorMax: 50,\n  armor: 50,\n  crashSpeed: 2,\n  crashAngle: 0.5,\n  imageScale: 0.6,\n  imageFile: SHIP_EXPLORER_FILE,\n  cost: {titanium:40, gold:30, uranium:30},\n};\n\nexport const SHIP_CARGO = {\n  name: \"Cargo\",\n  objType:OBJ_SHIP,\n  propulsion: 0.025, // best bewteen 0.02 - 0.1\n  turnSpeed: 0.04, // // best between 0.3 - 0.07\n  resourcesMax: 600,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 2,\n  equip : [EQUIP_BRAKE],\n  armorMax: 20,\n  armor: 20,\n  crashSpeed: 1.2,\n  crashAngle: 0.3,\n  imageScale: 0.4,\n  imageFile: SHIP_CARGO_FILE,\n  cost: {titanium:100, gold:50, uranium:50},\n};\n\nexport const SHIP_FAST = {\n  name: \"Fast\",\n  objType:OBJ_SHIP,\n  propulsion: 0.1, // best bewteen 0.02 - 0.1\n  turnSpeed: 0.08, // // best between 0.3 - 0.07\n  resourcesMax: 40,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 3,\n  equip : [EQUIP_BRAKE],\n  armorMax : 50,\n  armor: 50,\n  crashSpeed: 2,\n  crashAngle: 0.5,\n  imageScale: 0.3,\n  imageFile: SHIP_FAST_FILE,\n  cost: {titanium:200, gold:100, uranium:50},\n};\n\nexport const SHIP_HEAVY = {\n  name: \"Heavy\",\n  objType:OBJ_SHIP,\n  propulsion: 0.05, // best bewteen 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 300,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 6,\n  equip : [EQUIP_BRAKE],\n  armorMax : 300,\n  armor: 300,\n  crashSpeed: 1.5,\n  crashAngle: 0.4,\n  imageScale: 0.4,\n  imageFile: SHIP_HEAVY_FILE,\n  cost: {titanium:500, gold:300, uranium:150},\n};\n\nexport const SHIP_FIGHTER = {\n  name: \"Fighter\",\n  objType:OBJ_SHIP,\n  propulsion: 0.08, // best bewteen 0.02 - 0.1\n  turnSpeed: 0.07, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 5,\n  equip : [EQUIP_BRAKE],\n  armorMax : 200,\n  armor: 200,\n  crashSpeed: 1.5,\n  crashAngle: 0.6,\n  imageScale: 0.5,\n  imageFile: SHIP_FIGHTER_FILE,\n  cost: {titanium:500, gold:500, uranium:500},\n};\n\nexport const SHIP_ALIEN_TURRET = {\n  name: \"Alien Turret\",\n  objType:OBJ_SHIP,\n  propulsion: 0.05, // best bewteen 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 3,\n  equip : [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER],\n  crits: [{type:CRIT_TYPE_STEER_LEFT, maxHits:1, hits:0, pctLoss:0.95}\n        , {type:CRIT_TYPE_STEER_RIGHT, maxHits:1, hits:0, pctLoss:0.95}\n        , {type:CRIT_TYPE_ENGINE, maxHits:1, hits:0, pctLoss:0.80}\n  ],\n  armorMax: 100,\n  armor: 100,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.8,\n  imageFile: ALIEN_SHIP_SMALL_FILE,\n  cost: {titanium:50, gold:50, uranium:50},\n  aiType: ALIEN_AI_TURRET,\n};\n\nexport const SHIP_ALIEN = {\n  name: \"Alien Ship\",\n  objType:OBJ_SHIP,\n  propulsion: 0.05, // best bewteen 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 3,\n  equip : [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER],\n  crits: [{type:CRIT_TYPE_STEER_LEFT, maxHits:1, hits:0, pctLoss:0.95}\n    , {type:CRIT_TYPE_STEER_RIGHT, maxHits:1, hits:0, pctLoss:0.95}\n    , {type:CRIT_TYPE_ENGINE, maxHits:1, hits:0, pctLoss:0.80}\n  ],\n  armorMax: 100,\n  armor: 100,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.9,\n  imageFile: ALIEN_SHIP_FILE,\n  cost: {titanium:150, gold:100, uranium:80},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const SHIP_ALIEN_LARGE = {\n  name: \"Alien Ship\",\n  objType:OBJ_SHIP,\n  propulsion: 0.03, // best bewteen 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 3,\n  equip : [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER],\n  crits: [{type:CRIT_TYPE_STEER_LEFT, maxHits:1, hits:0, pctLoss:0.95}\n    , {type:CRIT_TYPE_STEER_RIGHT, maxHits:1, hits:0, pctLoss:0.95}\n    , {type:CRIT_TYPE_ENGINE, maxHits:1, hits:0, pctLoss:0.80}\n  ],\n  armorMax: 300,\n  armor: 300,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1,\n  imageFile: ALIEN_SHIP_LARGE_FILE,\n  cost: {titanium:150, gold:100, uranium:80},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const SHIP_ALIEN_FIRE = {\n  name: \"Alien Fire\",\n  objType:OBJ_SHIP,\n  propulsion: 0.08, // best bewteen 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 3,\n  equip : [EQUIP_BRAKE, EQUIP_STAPLE_GUN],\n  crits: [{type:CRIT_TYPE_STEER_LEFT, maxHits:1, hits:0, pctLoss:0.95}\n    , {type:CRIT_TYPE_STEER_RIGHT, maxHits:1, hits:0, pctLoss:0.95}\n    , {type:CRIT_TYPE_ENGINE, maxHits:1, hits:0, pctLoss:0.80}\n  ],\n  armorMax: 250,\n  armor: 250,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1.5,\n  imageFile: ALIEN_SHIP_FIRE_FILE,\n  cost: {titanium:250, gold:200, uranium:80},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const ALL_SHIPS = [SHIP_EXPLORER, SHIP_CARGO, SHIP_FAST, SHIP_HEAVY, SHIP_FIGHTER, SHIP_ALIEN_TURRET];\n\n// Universe Rings\nexport const UNIVERSE_RINGS = [\n  { planetCount: 1,\n    minDist: 1, maxDist: 2,\n    minDistToOtherPlanet:10,\n    minPlanetScale:400, maxPlanetScale:401,\n    planetFiles:[GREEN_PLANET_FILE],\n    aliens: [{count: 0, file: null}],\n  },\n  { planetCount: 90,\n    minDist: 1400, maxDist: 5000,\n    minDistToOtherPlanet:150,\n    minPlanetScale:100, maxPlanetScale:180,\n    planetFiles:[RED_PLANET_FILE, PURPLE_PLANET_FILE, GREEN_PLANET_FILE],\n    aliens: [{count: 500, file: SHIP_ALIEN_LARGE}, {count: 500, file: SHIP_ALIEN_FIRE}, {count: 200, file: SHIP_ALIEN_TURRET}],\n  },\n  { planetCount: 550,\n    minDist: 5000, maxDist: 10000,\n    minDistToOtherPlanet:150,\n    minPlanetScale:60, maxPlanetScale:100,\n    planetFiles:[ROCK_PLANET_FILE, RED_PLANET_FILE],\n    aliens: [{count: 1500, file: SHIP_ALIEN}, {count: 100, file: SHIP_ALIEN_LARGE}],\n  },\n  { planetCount: 1200,\n    minDist: 10000, maxDist: 15000,\n    minDistToOtherPlanet:150,\n    minPlanetScale:20, maxPlanetScale:90,\n    planetFiles:[ROCK_PLANET_FILE],\n    aliens: [{count: 750, file: SHIP_ALIEN_TURRET}, {count: 75, file: SHIP_ALIEN}],\n  },\n  { planetCount: 350,\n    minDist: 15000, maxDist: UNIVERSE_RADIUS,\n    minDistToOtherPlanet:300,\n    minPlanetScale:20, maxPlanetScale:90,\n    planetFiles:[ROCK_PLANET_FILE],\n    aliens: [],\n  },\n];\n\nexport const MINING_XP_LEVELS = [\n  {xp:10, obj:EQUIP_BLASTER},\n  {xp:100, obj:SHIP_CARGO},\n  {xp:200, obj:EQUIP_ARMOR},\n  {xp:400, obj:SHIP_FAST},\n  {xp:1000, obj:EQUIP_FAST_BLASTER},\n  {xp:1500, obj:EQUIP_SPEED_BOOST},\n  {xp:2000, obj:EQUIP_TURN_BOOST},\n  {xp:3000, obj:EQUIP_STORAGE},\n  {xp:5000, obj:EQUIP_THRUSTER},\n  {xp:8000, obj:SHIP_HEAVY},\n  {xp:10000, obj:SHIP_FIGHTER},\n]\n\nexport const ALIEN_XP_LEVELS = [\n  {xp:100, obj:EQUIP_ALIEN_BLASTER},\n  {xp:300, obj:EQUIP_BLINK_BRAKE},\n  {xp:500, obj:EQUIP_BLINK_THRUSTER},\n  {xp:1000, obj:EQUIP_STREAM_BLASTER},\n  {xp:1500, obj:EQUIP_R2D2},\n  {xp:2000, obj:SHIP_ALIEN_TURRET},\n];","import { c, utils, fly, manage } from './';\n\nimport lodash from 'lodash';\n\n/**\n * Creates an empty world object, with only basic properties. \n * This will be populated by setupWorld()\n */\nexport function createEmptyWorld() {\n  return {\n    ship:null, \n    aliens:[],\n    bullets: [],\n    planets:[],\n    keys: {}, // Global keypress handlers\n    app: null, // Pixi App\n    gameState: c.GAME_STATE.INIT, // Curent game state \n    gameLoop: null, // loop function in this state\n    selectedPlanet: {resources:{}}, \n    bgSprite: null, // star background\n    explosions : [], //contains sprites\n    explosionSheet: null, // spritesheet for explosions\n    blueprints: {\n      ship:[c.SHIP_EXPLORER],\n      equip:[c.EQUIP_BRAKE],\n      miningXp: 0, // total amount mined\n      miningXpLevels: lodash.cloneDeep(c.MINING_XP_LEVELS),\n      alienXp: 0, // aliens killed \n      alienXpLevels: lodash.cloneDeep(c.ALIEN_XP_LEVELS),\n    },\n  };\n}\n\nexport function setupWorld() {\n  let container = window.world.app.stage;\n  const world = window.world;\n  createBackground(container);\n  createPlanets(container);\n  // Default selectedPlanet, shouldn't be displayed\n  world.selectedPlanet = world.planets[0];\n  window.world.shipStartX = c.PLAYER_START_X;\n  window.world.shipStartY = c.PLAYER_START_Y;\n  world.ship = createShip(c.SHIP_EXPLORER, c.PLAYER);\n  //world.ship = createShip(c.SHIP_FAST, c.PLAYER);\n\n  container.addChild(world.ship.sprite);\n  // Initial Resources\n  world.ship.resources = c.PLAYER_STARTING_RESOURCES;\n\n   // DEBUG test alien\n  // createAlien(container, c.SHIP_ALIEN_FIRE, c.PLAYER_START_X - 250, c.PLAYER_START_Y);\n  // createAlien(container, c.SHIP_ALIEN_LARGE, c.PLAYER_START_X - 250, c.PLAYER_START_Y+250);\n  //\n  // world.ship.armorMax = 10000;\n  // world.ship.armor = 10000;\n  // world.ship.equip[0] = c.EQUIP_BLINK_THRUSTER;\n  // world.ship.equip[1] = c.EQUIP_STREAM_BLASTER;\n  // world.ship.equip[2] = c.EQUIP_BLINK_BRAKE;\n  // let testPlanet = createPlanet(c.GREEN_PLANET_FILE, \"home\", 0.7, 200, {\n  //   titanium : 20500,\n  //   gold : 51000,\n  //   uranium : 5000,\n  // }, container);\n  // testPlanet.x = c.PLAYER_START_X + 250;\n  // testPlanet.y = c.PLAYER_START_Y - 300;\n\n  createAliens(container);\n  setupMiniMap(container);\n  setupExplosionSheet();\n  setupPlanetCache();\n}\n\nexport function createBackground(container) {\n  window.world.bgSprite = new window.PIXI.TilingSprite(\n    window.PIXI.Texture.from(c.STAR_BACKGROUND_FILE),\n    c.SCREEN_WIDTH,\n    c.SCREEN_HEIGHT,\n  );\n  container.addChild(window.world.bgSprite);\n}\n\nexport function createPlanets(container) {\n  for (let ring of c.UNIVERSE_RINGS) {\n    for (let i=0; i<ring.planetCount; i++) {\n      let fileName = ring.planetFiles[utils.randomInt(0, ring.planetFiles.length-1)];\n      let name = String.fromCharCode(65+Math.floor(Math.random() * 26)) + utils.randomInt(1000,999999);\n      let scale = utils.randomInt(ring.minPlanetScale, ring.maxPlanetScale) / 100;\n      let mass = scale * 500;\n      let maxResource = scale * scale * 800; // exponentially grow resources\n      let minResource = scale * scale * 20; // exponentially grow resources\n      // Setup the planet\n      let planet = createPlanet(fileName, name, scale, mass, {\n        titanium : utils.randomInt(minResource, maxResource),\n        gold : utils.randomInt(minResource, maxResource),\n        uranium : utils.randomInt(minResource, maxResource),\n      }, container);\n      let {x,y} = getFreeXy(planet, ring.minDistToOtherPlanet, 0, ring.minDist, ring.maxDist);\n      planet.x = x;\n      planet.y = y;\n    }\n  }\n}\n\n/**\n * Distance to the nearest planet that is not equal to origPlanet\n * @return {nearestAlien, nearestDist} \n */\nfunction nearestPlanetDistance(origPlanet, x, y) {\n  let minDist = 99999999999; \n  let nearestPlanet = null;\n  for (let planet of window.world.planets) {\n    if (planet !== origPlanet) {\n      let dist = utils.distanceBetween(x,y, planet.x,planet.y) - planet.radius;\n      if (origPlanet) {\n        dist -= origPlanet.radius;\n      }\n      if (!nearestPlanet || (dist < minDist)) {\n        minDist = dist;\n        nearestPlanet = planet;\n      }\n    }\n  } // for planet\n  return {nearestPlanet:nearestPlanet, nearestPlanetDist:minDist};\n}\n\n/**\n * Distance to the nearest alien\n * @return {nearestAlien, nearestDist} \n */\nfunction nearestAlienDistance(x, y) {\n  let minDist = 99999999999; \n  let nearestAlien = null;\n  for (let alien of window.world.aliens) {\n    // This assumes the calling code alien is the same size\n    let dist = utils.distanceBetween(x,y, alien.x, alien.y) - (alien.radius * 2);\n    if (!nearestAlien || (dist < minDist)) {\n      minDist = dist;\n      nearestAlien = alien;\n    }\n  } // for\n  return {nearestAlien:nearestAlien, nearestAlienDist:minDist};\n}\n\n/**\n * Find a free spot of space to stick something\n * This will recurse until it finds a free spot.\n * @return {x,y}\n */\nfunction getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, failCount=0) {\n  let dir = utils.randomFloat(0, Math.PI*2);\n  let dist = utils.randomInt(minDist, maxDist);\n  let {x,y} = utils.getPointFrom(0,0, dir, dist);\n  let np = 9999;\n  if (minDistToPlanet > 0) {\n    let {nearestPlanet, nearestPlanetDist} = nearestPlanetDistance(planet, x,y);\n    if (nearestPlanetDist < minDistToPlanet) {\n      return getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, ++failCount);\n    }\n    np = nearestPlanetDist;\n  }\n  if (minDistToAlien > 0) {\n    let {nearestAlien, nearestAlienDist} = nearestAlienDistance(x,y);\n    if (nearestAlienDist < minDistToAlien) {\n      return getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, ++failCount);\n    }\n  }\n  if (failCount > 200) {\n    console.warn(\"Had a hard time finding a spot, it took \"+failCount+\" tries on ring \"+minDist+\" np=\"+np);\n  }\n  return {x,y};\n}\n\n// Creates and returns a planet (and adds it to the app)\nexport function createPlanet(fileName, name, scale, mass, resources, container) {\n  let planet = {};\n  planet.name = name; \n  planet.x = 0; // temp should get reset\n  planet.y = 0; // temp should get reset\n  planet.mass = mass;\n  planet.resources = {\n    stored: {titanium:0, gold:0, uranium:0},\n    raw: resources\n  };\n  planet.ships = []; // stored ships \n  planet.equip = []; // stored equipment\n  planet.buildings = []; // mines, factories\n\n  // Setup the planet container sprite (contains planet plus buildings)\n  planet.sprite = new window.PIXI.Container();\n  planet.sprite.x = 0; // will be set on every draw\n  planet.sprite.y = 0; \n\n  // Setup the planet sprite itself\n  let planetSprite = new window.PIXI.Sprite(\n    window.PIXI.loader.resources[c.SPRITESHEET_JSON].textures[fileName]);\n  planetSprite.anchor.set(0.5, 0.5);\n  planetSprite.scale.set(scale, scale);\n  planet.sprite.addChild(planetSprite);\n\n  planet.radius = planet.sprite.width / 2; // save the calculation later\n  // Planets with atmosphere are a little smaller\n  if ((fileName === c.PURPLE_PLANET_FILE) || (fileName === c.GREEN_PLANET_FILE)) {\n    planet.radius = planet.radius * 0.93; \n  }\n  container.addChild(planet.sprite);\n  window.world.planets.push(planet);\n  return planet;\n}\n\n// Creates and returns a ship object\nexport function createShip(shipType, owner) {\n  let ship = lodash.cloneDeep(shipType);\n  ship.id = lodash.uniqueId();\n  for (let equip of ship.equip) {\n    equip.id = lodash.uniqueId();\n  }\n  ship.owner = owner;\n  ship.vx = 0; // velocityX\n  ship.vy = 0; // velocityY\n  ship.x = window.world.shipStartX;\n  ship.y = window.world.shipStartY;\n\n  // Graphics Sprite\n  let spritesheet = window.PIXI.loader.resources[c.SPRITESHEET_JSON];\n  ship.sprite = new window.PIXI.Sprite(spritesheet.textures[ship.imageFile]);\n  ship.sprite.position.set(c.HALF_SCREEN_WIDTH, c.HALF_SCREEN_HEIGHT);\n  ship.sprite.anchor.set(0.5, 0.5);  // pivot on ship center\n  ship.sprite.scale.set(ship.imageScale, ship.imageScale);\n  return ship;\n}\n\nexport function createAlien(container, shipType, x, y) {\n  let alien = createShip(shipType, c.ALIEN);\n  window.world.aliens.push(alien);\n  alien.x = x;\n  alien.y = y;\n  alien.radius = alien.sprite.width/2; // Only for circular aliens\n  alien.sprite.x += 100;\n  container.addChild(alien.sprite);\n  return alien;\n}\n\nexport function createAliens(container) {\n\n  for (let ring of c.UNIVERSE_RINGS) {\n    for (const alienInfo of ring.aliens) {\n      for (let i=0; i<alienInfo.count; i++) {\n        let {x, y} = getFreeXy(null, c.MIN_ALIEN_DIST_TO_PLANET, c.MIN_ALIEN_DIST_TO_ALIEN, ring.minDist, ring.maxDist);\n        createAlien(container, alienInfo.file, x, y);\n      } // for i\n    } // for alienInfo\n  } // for ring\n}\n\nexport function setupMiniMap(container) {\n  let miniMapContainer = new window.PIXI.Container();\n  container.addChild(miniMapContainer);\n\n  // Mask so drawings don't spill out of the map\n  var mask = new window.PIXI.Graphics();\n  mask.drawRect(0, c.SCREEN_HEIGHT-c.MINIMAP_HEIGHT, c.MINIMAP_WIDTH, c.SCREEN_HEIGHT);\n  mask.renderable = true;\n  mask.cacheAsBitmap = true;\n  miniMapContainer.addChild(mask);\n  miniMapContainer.mask = mask;  \n\n  // Graphics for drawing shapes on\n  var g = new window.PIXI.Graphics();\n  miniMapContainer.addChild(g);  \n  window.world.miniMapGraphics = g;\n}\n\n/**\n * Called when the user clicks on the screen \n */\nexport function click(event) {\n  let x = event.data.global.x;\n  let y = event.data.global.y;\n  if ((x < c.MINIMAP_WIDTH) && (y> c.SCREEN_HEIGHT-c.MINIMAP_HEIGHT)) {\n    fly.clickOnMinimap(x,y);\n  }\n}\n\nexport function changeGameState(newState) {\n  const world = window.world;\n  world.gameState = newState;\n  if (newState === c.GAME_STATE.FLY) {\n    fly.enterFlyState();\n    world.gameLoop = fly.flyLoop;\n  } else if (newState === c.GAME_STATE.MANAGE) {\n    manage.enterManageState();\n    world.gameLoop = manage.manageLoop;\n  } else {\n    world.gameLoop = null;\n  }\n}\n\n/**\n * Loop to run building, runs in any game mode (fly,manage)\n */\nexport function runBuildings() {\n  const world = window.world;\n  for (let planet of world.planets) {\n    for (let building of planet.buildings) {\n      if (building.type === c.BUILDING_TYPE_MINE) {\n        mineResource(planet, 'titanium', c.MINE_SPEED_TITATIUM);\n        mineResource(planet, 'gold', c.MINE_SPEED_GOLD);\n        mineResource(planet, 'uranium', c.MINE_SPEED_URANIUM);\n      }\n    } // for building\n    // If planet is out of resources stop the mine animations\n    if ( (planet.resources.raw.titanium === 0) \n      && (planet.resources.raw.gold === 0)\n      && (planet.resources.raw.uranium === 0)) {\n        for (let building of planet.buildings) {\n          building.sprite.animationSpeed = 0;\n        }\n    }\n  } // for planet\n}\n\nfunction mineResource(planet, resourceType, amount) {\n  if (planet.resources.raw[resourceType] > 0) {\n    planet.resources.raw[resourceType] -= amount;\n    planet.resources.stored[resourceType] += amount;\n    if (planet.resources.raw[resourceType] <= 0) {\n      planet.resources.raw[resourceType] = 0;\n    }\n    addMiningXp(amount);\n  }\n}\n\nfunction addMiningXp(amount) {\n  let blueprints = window.world.blueprints;\n  blueprints.miningXp += amount;\n  let nextLevel = blueprints.miningXpLevels[0];\n  if (nextLevel && (nextLevel.xp <= blueprints.miningXp)) {\n    addBlueprint(nextLevel);\n    // Remove the item\n    blueprints.miningXpLevels.shift();\n  }\n}\n\nexport function addAlienXp(ship) {\n  let blueprints = window.world.blueprints;\n  blueprints.alienXp += ship.armorMax;\n  let nextLevel = blueprints.alienXpLevels[0];\n  if (nextLevel && (nextLevel.xp <= blueprints.alienXp)) {\n    addBlueprint(nextLevel);\n    // Remove the item\n    blueprints.alienXpLevels.shift();\n  }\n}\n\nexport function addBlueprint(nextLevel) {\n  console.log(\"Level up \",nextLevel.obj.name); // TODO Toast\n  let blueprints = window.world.blueprints;\n  if (nextLevel.obj.objType === c.OBJ_EQUIP) {\n    blueprints.equip.push(nextLevel.obj);\n  } else if (nextLevel.obj.objType === c.OBJ_SHIP) {\n    blueprints.ship.push(nextLevel.obj);\n  } else {\n    console.warn(\"Could not find blueprint of type \"+nextLevel.obj.objType+\" nextLevel=\",nextLevel);\n  }\n}\n\nexport function canAfford(planet, ship, resources) {\n  let titanium = 0;\n  let gold = 0;\n  let uranium = 0;\n  if (planet) {\n    titanium += planet.resources.stored.titanium;\n    gold += planet.resources.stored.gold;\n    uranium += planet.resources.stored.uranium;\n  }\n  if (ship) {\n    titanium += ship.resources.titanium;\n    gold += ship.resources.gold;\n    uranium += ship.resources.uranium;\n  }\n  return (titanium >= resources.titanium)\n      && (gold >= resources.gold)\n      && (uranium >= resources.uranium);\n}\n\nexport function payResourceCost(planet, ship, resources) {\n  payResource(planet, ship, 'titanium', resources.titanium);\n  payResource(planet, ship, 'gold', resources.gold);\n  payResource(planet, ship, 'uranium', resources.uranium);\n}\n\nexport function payResource(planet, ship, resourceType, amount) {\n  let paid = -amount; // amount owing (overwritten if some payment comes from the planet)\n  if (planet) {\n    paid = planet.resources.stored[resourceType] - amount; \n    if (paid >= 0) {\n      planet.resources.stored[resourceType] -= amount;\n      return;\n    } else {\n      // Planet can't afford this purchase, take some from the ship\n      planet.resources.stored[resourceType] = 0;\n    }\n  }\n  if (ship) { \n    ship.resources[resourceType] = ship.resources[resourceType] + paid;\n    if (ship.resources[resourceType] < 0) {\n      console.warn(\"Ship is in debt \"+ship.resources[resourceType]+\" \"+resourceType);\n    }\n  } else if (paid < 0) {\n    planet.resources.stored[resourceType] = planet.resources.stored[resourceType] + paid;\n    console.warn(\"Planet is in debt \"+planet.resources.stored[resourceType]+\" \"+resourceType);\n  }\n}\n\nexport function setupExplosionSheet() {\n  window.world.explosionSheet = window.PIXI.Loader.shared.resources[c.CRASH_JSON].spritesheet;\n  // Preload an explosion sprite animation (these will be cached and reused in world.explosions)\n  window.world.explosions.push(createExplosionSprite());\n}\n\nexport function createExplosionSprite() {\n  let sprite = new window.PIXI.AnimatedSprite(window.world.explosionSheet.animations[c.CRASH]);\n  sprite.animationSpeed = 0.4;\n  sprite.loop = false;\n  sprite.anchor.set(0.5, 0.5);\n  sprite.scale.set(2, 2);\n  sprite.x = c.HALF_SCREEN_WIDTH;\n  sprite.y = c.HALF_SCREEN_WIDTH;\n  sprite.loop = true;\n  sprite.visible = false;\n  window.world.explosions.push(sprite);\n  window.world.app.stage.addChild(sprite);\n  return sprite;\n}\n\n/**\n * Creates a cache for all positions in the universe and stores the nearby planets\n */\nexport function setupPlanetCache() {\n  const planetCache = new Array(c.PLANET_CACHE_NUM_STEPS);\n  // for every position in the universe\n  for (let stepX=0; stepX <c.PLANET_CACHE_NUM_STEPS; stepX++) {\n    planetCache[stepX] = new Array(c.PLANET_CACHE_NUM_STEPS);\n    for (let stepY=0; stepY<c.PLANET_CACHE_NUM_STEPS; stepY++) {\n      const minX = ((stepX - 1) * c.PLANET_CACHE_STEP_SIZE) - c.UNIVERSE_RADIUS;\n      const maxX = ((stepX + 2) * c.PLANET_CACHE_STEP_SIZE) - c.UNIVERSE_RADIUS;\n      const minY = ((stepY - 1) * c.PLANET_CACHE_STEP_SIZE) - c.UNIVERSE_RADIUS;\n      const maxY = ((stepY + 2) * c.PLANET_CACHE_STEP_SIZE) - c.UNIVERSE_RADIUS;\n      //console.log('Step ('+stepX+','+stepY+')  x:'+minX+' to '+maxX+'   y:'+minY+' to '+maxY);\n      const stepPlanets = new Array();\n      // Find planets within view of this location\n      for (const planet of window.world.planets) {\n        if ((planet.x  - planet.radius >= minX) && (planet.x + planet.radius <= maxX ) &&\n            (planet.y - planet.radius >= minY) && (planet.y + planet.radius <= maxY )) {\n          stepPlanets.push(planet);\n        }\n      } // for planets\n      planetCache[stepX][stepY] = { planets: stepPlanets };\n    } // for stepY\n  } // for stepX\n\n  window.world.planetCache = planetCache;\n}\n\n/**\n * Find planets from the planetCache that are somewhat near (within SCREEN_SIZE)\n */\nexport function getPlanetsNear(x, y) {\n  let stepX = Math.floor((x + c.UNIVERSE_RADIUS) / c.PLANET_CACHE_STEP_SIZE);\n  let stepY = Math.floor((y + c.UNIVERSE_RADIUS) / c.PLANET_CACHE_STEP_SIZE);\n  if (stepX < 0) {\n    stepX = 0;\n  }\n  if (stepX >= c.PLANET_CACHE_NUM_STEPS) {\n    stepX = c.PLANET_CACHE_NUM_STEPS - 1;\n  }\n  if (stepY < 0) {\n    stepY = 0;\n  }\n  if (stepY >= c.PLANET_CACHE_NUM_STEPS) {\n    stepY = c.PLANET_CACHE_NUM_STEPS - 1;\n  }\n  ;\n  return window.world.planetCache[stepX][stepY].planets;\n}\n\n","import { utils, c, game, manage, ai } from './';\n\nexport function enterFlyState() {\n  console.log(\"Take off\");\n}\n\n// Main play mode - flying\nexport function flyLoop(delta) {\n  let world = window.world;\n  let ship = world.ship;\n  // When sprite.visible is false the ship is exploding\n  if (ship.sprite.visible) {\n    runRepairDroids(ship);\n    // Keypress handling\n    if (world.keys.left.isDown || world.keys.a.isDown) {\n      turnShip(ship, true);\n    }\n    if (world.keys.right.isDown || world.keys.d.isDown) {\n      turnShip(ship, false);\n    }\n    if (world.keys.up.isDown || world.keys.w.isDown) {\n      propelShip(ship);\n    }\n    if (world.keys.down.isDown || world.keys.s.isDown) {\n      brakeShip(ship);\n    }\n    if (world.keys.space.isDown) {\n      firePrimaryWeapon(ship);\n    }\n    if (world.keys.q.isDown) {\n      thrustShip(ship, true);\n    }\n    if (world.keys.e.isDown) {\n      thrustShip(ship, false);\n    }\n  }\n  // Find planets in view\n  let planetsInView = [];\n  for (let planet of world.planets) {\n    if (planetInView(ship, planet)) {\n      planetsInView.push(planet);\n    }\n  }\n  if (ship.sprite.visible) {\n    // Gravity\n    for (let planet of planetsInView) {\n      let grav = utils.calcGravity(ship.x, ship.y, planet);\n      ship.vx += grav.x;\n      ship.vy += grav.y;\n    }\n  }\n  // move the ship\n  ship.x += ship.vx;\n  ship.y += ship.vy;\n  moveExplosions(); // especially alien explosions\n  moveBackground(ship);\n  // if ship is not busy exploding\n  if (ship.sprite.visible) { \n    // Ship-Planet Collisions\n    for (let planet of planetsInView) {\n      if (detectCollisionWithPlanet(ship, planet)) {\n        if (successfulLanding(ship, planet)) {\n          landShip(ship, planet);\n        } else {\n          crash(ship);\n        }\n        return; // exit loop\n      }\n    } // for planet\n    // Ship-Alien collision\n    for (let alien of world.aliens) {\n      if (alien.sprite.visible && detectCollisionWithAlien(ship, alien)) {\n        shipsCollide(ship, alien);\n      }\n    }\n  }\n  drawMiniMap();\n}\n\n/**\n * Cools all ship weapons, run in mainLoop \n */\nexport function coolAllWeapons() {\n  coolWeapons(window.world.ship);\n  for (let alien of window.world.aliens) {\n    coolWeapons(alien);\n  }\n}\n\n/**\n * called in flyLoop to cool weapons\n */\nexport function coolWeapons(ship) {\n  for (let equip of ship.equip) {\n    if ((equip.type === c.EQUIP_TYPE_PRIMARY_WEAPON) && (equip.cool > 0)) {\n      equip.cool -= 1;\n    }\n  }\n}\n\nexport function resetWeaponsCool(ship) {\n  for (let equip of ship.equip) {\n    if ((equip.type === c.EQUIP_TYPE_PRIMARY_WEAPON) && (equip.cool > 0)) {\n      equip.cool = 0;\n    }\n  }\n}\n\nexport function runRepairDroids(ship) {\n  for (let droid of ship.equip) {\n    if ((droid.type === c.EQUIP_TYPE_REPAIR_DROID) && (ship.armor < ship.armorMax)) {\n      let cost = {titanium:droid.repairSpeed, gold:0, uranium:0};\n      if (game.canAfford(null, ship, cost)) {\n        ship.armor += droid.repairSpeed;\n        game.payResourceCost(null, ship, cost);\n      }\n    }\n  } // for\n}\n\nexport function moveBackground(ship) {\n  let bgSprite = window.world.bgSprite;\n  bgSprite.tilePosition.x = (100 - ship.x) + c.HALF_SCREEN_WIDTH;\n  bgSprite.tilePosition.y = (100 - ship.y) + c.HALF_SCREEN_HEIGHT;\n}\n\n/**\n * @return true if the planet is in view of the ship, false otherwise\n * NOTE: This will set the sprite.visible and sprite x/y attributes for the planet\n */\nexport function planetInView(ship, planet) {\n  // Right side\n  if ((ship.x + c.HALF_SCREEN_WIDTH + planet.radius < planet.x) || // Right\n      (ship.x - c.HALF_SCREEN_WIDTH - planet.radius > planet.x) || // Left\n      (ship.y + c.HALF_SCREEN_HEIGHT + planet.radius < planet.y) || // Bottom\n      (ship.y - c.HALF_SCREEN_HEIGHT - planet.radius > planet.y)) { // Top\n     planet.sprite.visible = false;\n    return false;\n  }\n  planet.sprite.visible = true;\n  // Set planet relative to the ship's viewport\n  planet.sprite.x = (planet.x - ship.x) + c.HALF_SCREEN_WIDTH;\n  planet.sprite.y = (planet.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n  return true;\n}\n\n// Returns true if there is a collision and false otherwise\nexport function detectCollisionWithPlanet(ship, planet) {\n  // [[x,y],[x,y]]\n  let collisionPoints = utils.getVertexData(ship.x, ship.y, ship.sprite); \n  for (let point of collisionPoints) {\n    let dist = utils.distanceBetween(point[0], point[1], planet.x, planet.y);\n    if (dist < planet.radius - c.ALLOWED_OVERLAP) { \n      return true;\n    } \n  }\n  return false;\n}\n\n// Returns true if there is a collision and false otherwise\nexport function detectCollisionWithAlien(ship, alien) {\n  let collisionPoints = utils.getVertexData(ship.x, ship.y, ship.sprite); \n  for (let point of collisionPoints) {\n    // Only works with circular aliens (need different logic for squares)\n    if (alien.radius) {\n      let dist = utils.distanceBetween(point[0], point[1], alien.x, alien.y);\n      if (dist < alien.radius - c.ALLOWED_OVERLAP) { \n        return true;\n      } \n    }\n  }\n  return false;\n}\n\n/**\n * @return true if the landing was successful\n * NOTE: This will cause damage to the ship attempting to land (side-effects)\n */\nfunction successfulLanding(ship, planet) {\n  // atan2 has parameters (y,x)\n  let planetDir = utils.normalizeRadian(Math.atan2(ship.y - planet.y, ship.x - planet.x));\n  let dirDiff = Math.abs(ship.sprite.rotation - planetDir);\n  let speed = Math.abs(ship.vx) + Math.abs(ship.vy);\n  // 0 and PI*2 are right beside each other, so large values are very close to small values\n  let success = ((dirDiff < ship.crashAngle) || (dirDiff > (Math.PI * 2 - ship.crashAngle)))\n                && (speed < ship.crashSpeed)\n  if (success) {\n    // The landing was good - no damage done\n    return success;\n  }\n  // damage ship for poor landing\n  let speedDiff = Math.max(speed - ship.crashSpeed, 0); // 0 if negative\n  let dirDiffAdj = Math.max(dirDiff - ship.crashAngle, 0); // 0 if negative\n  if (dirDiffAdj > Math.PI) {\n    dirDiffAdj = (Math.PI * 2) - dirDiff - ship.crashAngle;\n  }\n  let dmgPct = (speedDiff/3) + dirDiffAdj;\n  let dmg = dmgPct * ship.armorMax;\n  damageShip(ship, dmg, resetGame);\n  // If the ship survived return true\n  return ship.armor > 0;\n}\n\nfunction landShip(ship, planet) {\n  window.world.selectedPlanet = planet;\n  // Stop moving (even though the event loop stops movement)\n  ship.vx = 0;\n  ship.vy = 0;\n  //Set ship position and angle on the planet surface\n  let dir = utils.normalizeRadian(Math.atan2(ship.y - planet.y, ship.x - planet.x));\n  let r = planet.radius + ship.sprite.width/2; \n  ship.x = planet.x + (r * Math.cos(dir));\n  ship.y = planet.y + (r * Math.sin(dir));\n  ship.sprite.rotation = dir;\n  game.changeGameState(c.GAME_STATE.MANAGE);\n}\n\nexport function crash(ship) {\n  // Hit a planet so stop moving suddenly\n  ship.vx = 0;\n  ship.vy = 0;\n  destroyShip(ship, resetGame);\n}\n\nexport function getExplosionSprite(ship) {\n  let sprite = null;\n  for (let explosionSprite of window.world.explosions) {\n    if (!explosionSprite.visible) {\n      sprite = explosionSprite;\n      break;\n    }\n  }\n  if (!sprite) {\n    sprite = game.createExplosionSprite();\n  }\n  let playerShip = window.world.ship;\n  sprite.visible = true;\n  sprite.globalX = ship.x;\n  sprite.globalY = ship.y;\n  sprite.x = (ship.x - playerShip.x) + c.HALF_SCREEN_WIDTH;\n  sprite.y = (ship.y - playerShip.y) + c.HALF_SCREEN_HEIGHT;\n  return sprite\n}\n\n/**\n * Destroys the ship playing an explosion animation\n * @param ship : the one to explode\n * @param afterExplosion : function to run after exploding (or null if nothing to do)\n */\nexport function destroyShip(ship, afterExplosion) {\n  if (ship !== window.world.ship) {\n    game.addAlienXp(ship);\n  }\n  let explosionSprite = getExplosionSprite(ship);\n  ship.sprite.visible = false;\n  explosionSprite.play();\n  // This function runs after the animation finishes a loop\n  explosionSprite.onLoop= () => {\n    explosionSprite.stop(); // pause until we crash again\n    explosionSprite.visible = false;\n    if (afterExplosion) {\n      afterExplosion();\n    }\n  };\n}\n\nfunction resetGame() {\n  // loadNewShip will setup a new ship but not position it\n  let ship = window.world.ship;\n  let planet = window.world.selectedPlanet;\n  // The current ship is gone\n  ship.sprite.visible = false;\n  ship.resourcesMax = 0;\n  ship.resources = {titanium : 0,gold : 0,uranium : 0};\n  ship.equip = [];\n  ship.armorMax = 0;\n  ship.armor = 0;\n\n  // If the most recently used planet doesn't have any buildings\n  if (!planet || (planet.buildings.length === 0)) {\n    console.log(\"Looking for suitable planet\");\n    // find a planet with a mine\n    for (let planet of window.world.planets) {\n      if (planet.buildings.length > 0) {\n        console.log(\"Found \"+planet.name+\" with buildings\");\n        window.world.selectedPlanet = planet;\n        break;\n      }\n    }\n    // No buildings on any planet- game over! \n    if (!planet) {\n      console.log(\"no planets with buildings\");\n      window.world.selectedPlanet = window.world.planets[0];\n    }\n  }\n  let {x,y,rotation} = manage.getAvailablePlanetXY(planet, ship, 0, 20, 0);\n  ship.x = x;\n  ship.y = y;\n  ship.vx = 0;\n  ship.vy = 0;\n  ship.sprite.rotation = rotation;\n  flyLoop(0); // redraw the screen once\n  game.changeGameState(c.GAME_STATE.MANAGE);\n}\n\n/**\n * Explosion position update on screen as ship moves\n * This is called in the fly loop\n */\nfunction moveExplosions() {\n  let ship = window.world.ship;\n  for (let sprite of window.world.explosions) {\n    sprite.x = (sprite.globalX - ship.x) + c.HALF_SCREEN_WIDTH;\n    sprite.y = (sprite.globalY - ship.y) + c.HALF_SCREEN_HEIGHT;\n  }\n}\n\nfunction turnShip(ship, left) {\n  let turnSpeed = ship.turnSpeed;\n  let turnBooster = getEquip(ship, c.EQUIP_TYPE_TURN);\n  if (turnBooster) {\n    turnSpeed += turnBooster.boostSpeed;\n  }\n  ship.sprite.rotation = utils.normalizeRadian(ship.sprite.rotation + turnSpeed * (left ? -1 : 1));\n}\n\nfunction propelShip(ship) {\n  let propulsion = ship.propulsion;\n  let booster = getEquip(ship, c.EQUIP_TYPE_TURN);\n  if (booster) {\n    propulsion += booster.boostSpeed;\n  }\n  ship.vx += propulsion * Math.cos(ship.sprite.rotation);\n  ship.vy += propulsion * Math.sin(ship.sprite.rotation);\n}\n\nfunction brakeShip(ship) {\n  let brake = getEquip(ship, c.EQUIP_TYPE_BRAKE);\n  if (brake) {\n    if (brake.brakeSpeedPct > 0) {\n      ship.vx -= ship.vx * brake.brakeSpeedPct;\n      ship.vy -= ship.vy * brake.brakeSpeedPct;\n    } else {\n      // Blink brake pct is 0, immediate stop (no momentum)\n      ship.vx = 0;\n      ship.vy = 0;\n    }\n  }\n}\n\nfunction thrustShip(ship, left) {\n  let thruster = getEquip(ship, c.EQUIP_TYPE_THRUSTER);\n  if (thruster) {\n    let dir =utils.normalizeRadian(ship.sprite.rotation + ((left ? -1 : 1) * Math.PI/2)); // 90 deg turn\n    if (thruster.thrustType === c.THRUST_MOMENTUM) {\n      ship.vx += thruster.thrustSpeed * Math.cos(dir);\n      ship.vy += thruster.thrustSpeed * Math.sin(dir);\n    } else if (thruster.thrustType === c.THRUST_BLINK) {\n      ship.x += thruster.thrustSpeed * Math.cos(dir);\n      ship.y += thruster.thrustSpeed * Math.sin(dir);\n    } else {\n      console.warn(\"Unable to use thruster with type \"+thruster.thrustType);\n    }\n  }\n}\n\nexport function firePrimaryWeapon(ship) {\n  let gun = getEquip(ship, c.EQUIP_TYPE_PRIMARY_WEAPON);\n  if (gun && (gun.cool <= 0)) {\n    fireBullet(ship, gun);\n    gun.cool = gun.coolTime; // this is decremented in coolWeapons\n  }\n}\n\n/**\n * Fires a bullet from the ship\n */\nexport function fireBullet(ship, gun) {\n  let bullet = findOrCreateBullet(gun.bulletFile);\n  bullet.lifetime = gun.lifetime;\n  bullet.damage = gun.damage;\n  bullet.vx = ship.vx + gun.speed * Math.cos(ship.sprite.rotation);\n  bullet.vy = ship.vy + gun.speed * Math.sin(ship.sprite.rotation);\n  bullet.x = ship.x + Math.max(ship.sprite.width, ship.sprite.height)/2 * Math.cos(ship.sprite.rotation);\n  bullet.y = ship.y + Math.max(ship.sprite.width, ship.sprite.height)/2 * Math.sin(ship.sprite.rotation);\n}\n\n/**\n * Gets the next available bullet (one that is not visible)\n */\nfunction findOrCreateBullet(bulletFile) {\n  for (let bullet of window.world.bullets) {\n    if (!bullet.active && (bullet.fileName === bulletFile)) {\n      bullet.active = true;\n      bullet.sprite.visible = true;\n      return bullet;\n    }\n  }\n  // Create a new bullet\n  let bullet = {active:true, damage:0, x:0, y:0, vx:0, vy:0, lifetime:1, fileName:bulletFile};\n  // Setup sprite\n  let spritesheet = window.PIXI.loader.resources[c.SPRITESHEET_JSON];\n  let sprite = new window.PIXI.Sprite(spritesheet.textures[bulletFile]);\n  sprite.x = -100;\n  sprite.y = -100;\n  sprite.anchor.set(0.5, 0.5);\n  sprite.scale.set(0.5, 0.5);\n  window.world.app.stage.addChild(sprite);\n  bullet.sprite = sprite;\n  window.world.bullets.push(bullet);\n  return bullet;\n}\n\nfunction killBullet(bullet) {\n  bullet.active = false;\n  bullet.sprite.visible = false;\n  bullet.sprite.x = -100;\n  bullet.sprite.y = -100;\n  bullet.vx = 0;\n  bullet.vy = 0;\n}\n\n/**\n * Moves all the bullets (called every draw cycle from app.js mainLoop)\n */\nexport function moveBullets() {\n  let ship = window.world.ship;\n  for (let bullet of window.world.bullets) {\n    if (bullet.active) {\n      bullet.x = bullet.x + bullet.vx;\n      bullet.y = bullet.y + bullet.vy;\n      bullet.sprite.x = (bullet.x - ship.x) + c.HALF_SCREEN_WIDTH;\n      bullet.sprite.y = (bullet.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n      bullet.lifetime =  bullet.lifetime - 1;\n      if (bullet.lifetime <= 0) {\n        killBullet(bullet);\n      }\n      checkForBulletCollision(bullet);\n    }\n  } // for bullet\n}\n\nfunction checkForBulletCollision(bullet) {\n  let ship = window.world.ship;\n  // Collision with planet\n  for (let planet of window.world.planets) {\n    if (utils.distanceBetween(planet.x, planet.y, bullet.x, bullet.y) < planet.radius) {\n      // TODO: Check for building damage\n      killBullet(bullet);\n    }\n  }\n  // Collision with ship\n  if (ship.sprite.visible && ship.sprite.containsPoint({x:bullet.sprite.x, y:bullet.sprite.y})) {\n    bulletHitShip(bullet, ship, resetGame);\n  } \n  // Collision with alien ship\n  for (let alien of window.world.aliens) {\n    // This check will only work with circular aliens, need a separate check for rectangular ones\n    if (alien.sprite.visible && alien.radius && utils.distanceBetween(alien.x, alien.y, bullet.x, bullet.y) <= alien.radius) {\n      bulletHitShip(bullet, alien, null);\n    }\n  }\n}\n\n/**\n * Apply damage from bullet to ship, also kills the bullet\n */\nfunction bulletHitShip(bullet, ship, afterExplosion) {\n  damageShip(ship, bullet.damage, afterExplosion);\n  killBullet(bullet);\n}\n\n/**\n * applies damage to the ship, destroying the ship if needed\n */\nexport function damageShip(ship, damage, afterExplosion) {\n  ship.armor = ship.armor - damage;\n  if (ship.armor <= 0) {\n    ship.armor = 0;\n    destroyShip(ship, afterExplosion);\n  }\n}\n\n/**\n * collision between player ship and alien\n */\nexport function shipsCollide(ship, alien) {\n  let shipDamage = ship.armor;\n  let alienDamage = alien.armor;\n  damageShip(alien, shipDamage, null);\n  damageShip(ship, alienDamage, (window.world.ship === ship) ? resetGame : null);\n  // If you died hitting an alien, stop moving\n  if (!ship.sprite.visible) {\n    ship.vx = 0;\n    ship.vy = 0;\n  }\n}\n\n/**\n * @return matching acc equipment type if it is found, null otherwise\n */\nexport function getEquip(ship, equipType) {\n  for (let equip of ship.equip) {\n    if (equip.type === equipType) {\n      return equip;\n    }\n  }\n  return null;\n}\n\nexport function drawMiniMap() {\n  let g = window.world.miniMapGraphics;\n  let ship = window.world.ship;\n  let l = 0;\n  let t = c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT;\n  let r = c.MINIMAP_WIDTH;\n  let b = c.SCREEN_HEIGHT;\n  g.clear();\n  // Background\n  g.beginFill(c.DARK_GREY);\n  g.lineStyle(1, c.MED_GREY); \n  g.drawRect(l, t, r, b);\n  g.endFill();\n  // Planets\n  for (let planet of window.world.planets) {\n    if (planetOnMap(ship, planet)) {\n      let x = l + c.HALF_MINIMAP_WIDTH + ((planet.x - ship.x) * c.MINIMAP_SCALE_X);\n      let y = t + c.HALF_MINIMAP_HEIGHT + ((planet.y - ship.y) * c.MINIMAP_SCALE_Y);\n      g.lineStyle(1, c.LIGHT_GREY);\n      g.drawCircle(x,y, planet.radius * c.MINIMAP_SCALE_X);\n      // Buildings\n      for (let building of planet.buildings) {\n        let buildingX = l + c.HALF_MINIMAP_WIDTH + ((building.x - ship.x) * c.MINIMAP_SCALE_X) -1.5; \n        let buildingY = t + c.HALF_MINIMAP_HEIGHT + ((building.y - ship.y) * c.MINIMAP_SCALE_Y) -1.5;\n        g.lineStyle(1, c.RED); \n        g.drawRect(buildingX,buildingY,3,3); \n      }\n    }\n  }\n  // Ship\n  g.lineStyle(1, c.WHITE);\n  g.drawCircle(l+c.MINIMAP_WIDTH/2,t+c.MINIMAP_HEIGHT/2, 2);\n}\n\n/**\n * Handles clicks on the minimap \n */\nexport function clickOnMinimap(clickX, clickY) {\n  if (window.world.gameState === c.GAME_STATE.MANAGE) {\n    let ship = window.world.ship;\n    let globalX = ship.x + ((clickX - c.HALF_MINIMAP_WIDTH) * (1/c.MINIMAP_SCALE_X));\n    let globalY = ship.y + (((clickY - (c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT)) - c.HALF_MINIMAP_HEIGHT) * (1/c.MINIMAP_SCALE_X));\n    for (let planet of window.world.planets) {\n      if (utils.distanceBetween(globalX, globalY, planet.x, planet.y) <= planet.radius) {\n        window.world.selectedPlanet = planet;\n        // TODO: redraw based on what ship?\n      }\n    }\n  }\n}\n\n\nfunction planetOnMap(ship, planet) {\n  // Right side\n  if ((ship.x + c.HALF_MINIMAP_VIEW_WIDTH + planet.radius < planet.x) || // Right\n      (ship.x - c.HALF_MINIMAP_VIEW_WIDTH - planet.radius > planet.x) || // Left\n      (ship.y + c.HALF_MINIMAP_VIEW_HEIGHT + planet.radius < planet.y) || // Bottom\n      (ship.y - c.HALF_MINIMAP_VIEW_HEIGHT - planet.radius > planet.y)) { // Top\n    return false;\n  }\n  return true;\n}\n\n","import { c, utils, fly, game } from './';\nimport lodash from 'lodash';\n\nexport function enterManageState() {\n  console.log(\"enter manage state\");\n}\n\n// When managing planet resources - loop runs 60/s\nexport function manageLoop(delta) {\n  if ((window.world.keys.up.isDown || window.world.keys.w.isDown)) {\n    if (window.world.ship.sprite.visible) {\n      takeOff();\n    }\n  }\n}\n\nfunction takeOff() {\n  let world = window.world;\n  let ship = world.ship;\n  game.changeGameState(c.GAME_STATE.FLY);\n  let gravity = utils.calcGravity(ship.x, ship.y, world.selectedPlanet);\n  ship.vx = gravity.x * -c.TAKEOFF_SPEED;\n  ship.vy = gravity.y * -c.TAKEOFF_SPEED;\n}\n\nexport function buildMine() {\n  let world = window.world;\n  let mine = {type: c.BUILDING_TYPE_MINE};\n  let planet = world.selectedPlanet;\n  let ship = world.ship;\n\n  //Setup the graphics\n  let sheet = window.PIXI.Loader.shared.resources[c.SPRITESHEET_JSON].spritesheet;\n  mine.sprite = new window.PIXI.AnimatedSprite(sheet.animations[c.MINE_FILE]);\n  mine.sprite.animationSpeed = c.MINE_ANIMATION_SPEED; \n  mine.sprite.play();\n  mine.sprite.anchor.set(0.5, 0.5);\n  mine.sprite.scale.set(c.MINE_SCALE, c.MINE_SCALE);\n\n  // Place the mine (to the right of the ship)\n  mine.sprite.rotation = getBuildingPlacementRotation(ship, planet, c.MINE_PLACEMENT_FROM_SHIP);\n  // Calculate an X,Y point near the ship on surface of the planet\n  // NOTE: we use sprite.height for width because all sprites face to the right (0 rotation)\n  let {x,y,rotation} = getAvailablePlanetXY(planet, ship, mine.sprite.rotation, mine.sprite.height/2, 0);\n  if (x === null) {\n    console.warn(\"Unable to place mine\");\n    return;\n  }\n  mine.x = x;\n  mine.y = y;\n  mine.sprite.rotation = rotation;\n  mine.sprite.x = (mine.x - planet.x);\n  mine.sprite.y = (mine.y - planet.y);\n\n  planet.sprite.addChild(mine.sprite);\n  game.payResourceCost(planet, ship, c.MINE_COST);\n  planet.buildings.push(mine);\n  fly.drawMiniMap(); // add building to minimap\n}\n\n/**\n * @return the rotation direction of a place some distance to the right of the ship\n */\nexport function getBuildingPlacementRotation(ship, planet, distanceFromShip) {\n  let deg = ship.sprite.rotation + Math.PI/2; // 90 deg (right of the ship)\n  let degX = ship.x + distanceFromShip  * Math.cos(deg); // Some point Xpx to the right of the ship\n  let degY = ship.y + distanceFromShip * Math.sin(deg);\n  // Calculate the rotation direction to get to that point\n  return utils.normalizeRadian(Math.atan2(degY - planet.y, degX - planet.x));\n\n}\n\n/**\n * @return {x,y} for the next free space to the right of the ship on the planet circumfrence \n */\nexport function getAvailablePlanetXY(planet, ship, rotation, buildingWidth, count) {\n  if (buildingFits(planet, ship, rotation, buildingWidth)) {\n    let x = planet.x + ((planet.radius + 10) * Math.cos(rotation));\n    let y = planet.y + ((planet.radius + 10) * Math.sin(rotation));\n    return {x,y, rotation};\n  }\n  // If we have done a full circle then give up\n  if (count > (Math.PI*2 / c.BUILDING_PLACEMENT_ROTATION_INCREMENT)) {\n    return {x:null, y:null, rotation:null};\n  }\n  return getAvailablePlanetXY(planet, ship, rotation+c.BUILDING_PLACEMENT_ROTATION_INCREMENT\n    , buildingWidth, ++count);\n}\n\nexport function buildingFits(planet, ship, rotation, buildingWidth) {\n  let x = planet.x + ((planet.radius + 10) * Math.cos(rotation));\n  let y = planet.y + ((planet.radius + 10) * Math.sin(rotation));\n  // Min distance to building\n  let minDist = utils.distanceBetween(x,y, ship.x, ship.y);\n  let minBuildingWidth = ship.sprite.height/2;\n  for (let building of planet.buildings) {\n     let dist = utils.distanceBetween(x,y, building.x, building.y);\n     if (dist < minDist) {\n       minDist = dist;\n       minBuildingWidth = building.sprite.height;\n     }\n  } \n  return (minDist > (buildingWidth/2 + minBuildingWidth/2 + 15));\n}\n\n/**\n * Move a resource ship <-> planet \n */\nexport function transferResource(source, target, resourceType, requestedAmtStr, maxCapacity) {\n  let requestedAmt = Number(requestedAmtStr);\n  if (isNaN(requestedAmt)) {\n    requestedAmt = 0;\n  }\n  let amt = requestedAmt;\n  // requesting '' is requesting the entire source (same as requesting too much)\n  if (requestedAmtStr === '' || (source[resourceType] - requestedAmt < 0)) {\n    amt = source[resourceType];\n  }\n  // Cap to max capacity of target\n  let spaceLeft =  maxCapacity - (target.titanium + target.gold + target.uranium);\n  if (spaceLeft < amt) {\n    amt = spaceLeft;\n  }\n  \n  target[resourceType] += amt;\n  source[resourceType] -= amt;\n}\n\nexport function buildFactory() {\n  let world = window.world;\n  let planet = world.selectedPlanet;\n  let ship = world.ship;\n  let factory = {type: c.BUILDING_TYPE_FACTORY};\n\n  //Setup the graphics\n  let spritesheet = window.PIXI.Loader.shared.resources[c.SPRITESHEET_JSON].spritesheet;\n  factory.sprite =  new window.PIXI.Sprite(spritesheet.textures[c.FACTORY_FILE]);\n  factory.sprite.anchor.set(0.5, 0.5);\n  factory.sprite.scale.set(c.FACTORY_SCALE, c.FACTORY_SCALE);\n\n  // Place the mine (to the right of the ship)\n  factory.sprite.rotation = getBuildingPlacementRotation(ship, planet, c.FACTORY_PLACEMENT_FROM_SHIP);\n  // Calculate an X,Y point near the ship on surface of the planet\n  // NOTE: we use sprite.height for width because all sprites face to the right (0 rotation)\n  let {x,y,rotation} = getAvailablePlanetXY(planet, ship, factory.sprite.rotation, factory.sprite.height/2, 0);\n  if (x === null) {\n    console.warn(\"Unable to place factory\");\n    return;\n  }\n  factory.x = x;\n  factory.y = y;\n  factory.sprite.rotation = rotation;\n  factory.sprite.x = (factory.x - planet.x);\n  factory.sprite.y = (factory.y - planet.y);\n\n  planet.sprite.addChild(factory.sprite);\n  game.payResourceCost(planet, ship, c.FACTORY_COST);\n  planet.buildings.push(factory);\n  fly.drawMiniMap(); // add to minimap\n} \n\n/**\n * Called when the factory finishes building a new ship \n */\nexport function buildShip(shipTemplate) {\n  let world = window.world;\n  let planet = world.selectedPlanet;\n  let newShip = game.createShip(shipTemplate);\n  planet.ships.push(newShip);\n}\n\n/**\n * Called when the user clicks to switch to a new ship \n * NOTE: the new ship should already be created and stored in a planet\n */\nexport function switchToShip(newShip, planet) {\n  let oldShip = window.world.ship;\n  if (!removeShipFromStorage(newShip, planet)) {\n    console.warn(\"Unable to remove ship from planet \",newShip,\" planet=\",planet);\n    return;\n  }\n  addShipToStorage(oldShip, planet);\n  beginUsingShip(newShip);\n  let r = planet.radius + newShip.sprite.width/2; \n  newShip.x = planet.x + (r * Math.cos(newShip.sprite.rotation));\n  newShip.y = planet.y + (r * Math.sin(newShip.sprite.rotation));\n  // Set the sprite.x/y position of all the planets (moves your viewport slightly)\n  for (let planet of window.world.planets) {\n    fly.planetInView(newShip, planet);\n  }\n}\n\n/**\n * Removes a ship from the planet, returns null if no matching ship was found\n */\nexport function removeShipFromStorage(ship, planet) {\n  let ships = planet.ships.filter((s) => s !== ship);\n  let removedShip = ships.length < planet.ships.length;\n  planet.ships = ships;\n  return removedShip;\n}\n\nexport function addShipToStorage(ship, planet) {\n  // If the ship is not visible (and armorMax is zero) it has been destroyed\n  // Some ships might be non-visible because they are not currently being used\n  if (ship.sprite.visible && ship.armorMax > 0) {\n    planet.ships.push(ship);\n  }\n}\n\nexport function beginUsingShip(newShip) {\n  let container = window.world.app.stage;\n  let oldShip = window.world.ship;\n  window.world.ship = newShip;\n  // oldShip might have been destroyed\n  if (oldShip) {\n    newShip.sprite.rotation= oldShip.sprite.rotation;\n    fly.resetWeaponsCool(oldShip);\n    container.removeChild(oldShip.sprite);\n  }\n  container.addChild(newShip.sprite);\n  return newShip;\n}\n\n/**\n * @return true if the planet has a factory for the player\n */\nexport function hasFactory(planet) {\n  for (let building of planet.buildings) {\n    if (building.type === c.BUILDING_TYPE_FACTORY) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function buildEquip(equipTemplate) {\n  let planet = window.world.selectedPlanet;\n  let equip = lodash.cloneDeep(equipTemplate);\n  equip.id = lodash.uniqueId();\n  planet.equip.push(equip);\n}\n\nexport function costToRepair(ship) {\n  return {titanium:(ship.armorMax - ship.armor), gold:0, uranium:0};\n}\n\nexport function repairShip(planet, ship) {\n  let cost = costToRepair(ship);\n  let addArmor = ship.armorMax - ship.armor; // armor needed\n  if (!game.canAfford(planet, ship, cost)) {\n    let titaniumOnHand = planet.resources.stored.titanium + ship.resources.titanium;\n    cost.titanium = titaniumOnHand;\n    addArmor = titaniumOnHand;\n  } \n  game.payResourceCost(planet, ship, cost);\n  ship.armor += addArmor;\n}\n","import { c, game, fly, utils} from './';\n\nexport function moveAliens() {\n  let ship = window.world.ship;\n  for (let alien of window.world.aliens) {\n    if (!alien.sprite.visible) {\n      continue;\n    }\n    let hasMoved = false;\n    if (alien.aiType === c.ALIEN_AI_TURRET) {\n      turretAi(alien);\n    } else if (alien.aiType === c.ALIEN_AI_CREEPER) {\n      hasMoved = creeperAi(alien);\n    }\n\n    if (hasMoved) {\n      checkForCollisionWithPlanet(alien);\n      checkForCollisionWithAlien(alien);\n    }\n\n    // Set alien ship relative to the ship's viewport\n    alien.sprite.x = (alien.x - ship.x) + c.HALF_SCREEN_WIDTH;\n    alien.sprite.y = (alien.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n  } // for\n}\n\n/**\n * Fire primary weapon in the direction of the player\n * @jitter amount (in radians) of randomness added to direction component\n *         0 - shoots directly at player\n *         PI - shoot completely randomly\n */\nexport function shootAtPlayer(alien, jitter) {\n  let ship = window.world.ship;\n  let dirToPlayer = utils.normalizeRadian(Math.atan2(ship.y - alien.y, ship.x - alien.x));\n  let jitterAmt = jitter * Math.random() * (utils.randomBool() ? -1 : 1);\n  alien.sprite.rotation = utils.normalizeRadian(dirToPlayer + jitterAmt);\n  fly.firePrimaryWeapon(alien);\n  alien.sprite.rotation = dirToPlayer;\n}\n\nexport function turretAi(alien) {\n  let ship = window.world.ship;\n  if (utils.distanceBetween(alien.x, alien.y, ship.x, ship.y) < 300) {\n    shootAtPlayer(alien, 0.7);\n  }\n}\n\n/**\n * Runs the AI for moving aliens.\n * @return true if alien moved false otherwise\n */\nexport function creeperAi(alien) {\n    let ship = window.world.ship;\n    let moved = false;\n    // Close enough to player to move\n    if (utils.distanceBetween(alien.x, alien.y, ship.x, ship.y) < c.SCREEN_WIDTH) {\n      let dirToPlayer = utils.directionTo(alien.x, alien.y, ship.x, ship.y);\n      let { xAmt, yAmt} = utils.dirComponents(dirToPlayer, 25 * alien.propulsion);\n\n      // Check if we are too close to a planet (need to move around the planet)\n      for (let planet of game.getPlanetsNear(alien.x, alien.y)) {\n        if (utils.distanceBetween(alien.x+xAmt, alien.y+yAmt, planet.x, planet.y) < (planet.radius + alien.radius + 10)) {\n           const dirToPlanet = utils.directionTo(alien.x, alien.y, planet.x, planet.y);\n           let dirDiff = dirToPlanet - dirToPlayer;\n           let rightLeft = (dirDiff >= 0) ? -1 : 1;\n           if (Math.abs(dirDiff) > Math.PI) {\n             rightLeft = rightLeft * -1;\n           }\n           const turnDir = dirToPlanet + (rightLeft * Math.PI/2);\n           ({xAmt, yAmt} = utils.dirComponents(turnDir, 20 * alien.propulsion));\n        }\n      }\n\n      alien.x += xAmt;\n      alien.y += yAmt;\n      moved = true;\n    }\n    if (utils.distanceBetween(alien.x, alien.y, ship.x, ship.y) < 300) {\n      shootAtPlayer(alien, 0.15);\n    }\n    return moved;\n}\n\n\nexport function checkForCollisionWithPlanet(alien) {\n  // This may need optimizing\n  for (let planet of window.world.planets) {\n    if (!planet.sprite.visible) {\n      continue;\n    }\n    let dist = utils.distanceBetween(alien.x, alien.y, planet.x, planet.y);\n    if (dist <= (alien.radius + planet.radius)) {\n      fly.destroyShip(alien, null);\n    }\n  } // for\n}\n\nexport function checkForCollisionWithAlien(alien) {\n  for (let otherAlien of window.world.aliens) {\n    if (otherAlien.sprite.visible && alien !== otherAlien) {\n      let dist = utils.distanceBetween(alien.x, alien.y, otherAlien.x, otherAlien.y);\n      if (dist <= (alien.radius + otherAlien.radius)) {\n        fly.shipsCollide(alien, otherAlien);\n      }\n    }\n  } // for\n}","import React from 'react';\nimport './InfoFly.css';\n\nexport class InfoFly extends React.Component {\n\n  render() {\n    let world = window.world;\n    return (\n    <div className='section'>\n      <div>Ship</div>\n      <div>Armor {Math.floor(world.ship.armor)} / {world.ship.armorMax} </div>\n      <div>Equip (max {world.ship.equipMax})\n        {world.ship.equip.map((equip, i) => {\n          return <span key={i} className='equip'>{equip.name}</span>\n        })}\n      </div>\n      <div className='section'>Resources</div>\n      <div> Titatium {Math.floor(world.ship.resources.titanium)}</div>\n      <div> Gold {Math.floor(world.ship.resources.gold)}</div>\n      <div> Uranium {Math.floor(world.ship.resources.uranium)}</div>\n    </div>\n    );\n  }\n}\n\n","import React from 'react';\nimport { c, manage, game } from '../functions';\nimport './ManagePlanet.css';\n\nexport class ManagePlanet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {titanium:'', gold:'', uranium:''};\n  }\n\n  valueChanged(event, resourceType) {\n    let newState = Object.assign({}, this.state);\n    newState[resourceType] = event.target.value;\n    this.setState(newState);\n  }\n\n  render() {\n    let world = window.world;\n    let planet = window.world.selectedPlanet;\n    let ship = window.world.ship;\n    return (\n      <div className='planet-info'> \n        <div className='section'><b>Name</b> {world.selectedPlanet.name}</div>\n        <div className='build-button'>\n          <button \n            disabled={!game.canAfford(planet, ship, c.MINE_COST)} \n            onClick={() => manage.buildMine()}>Build Mine</button>\n            Cost: T:{c.MINE_COST.titanium} G:{c.MINE_COST.gold}\n        </div>\n        <div className='build-button'>\n          <button \n            disabled={!game.canAfford(planet, ship, c.FACTORY_COST)} \n            onClick={() => manage.buildFactory()}>Build Factory</button>\n            Cost: T:{c.FACTORY_COST.titanium} G:{c.FACTORY_COST.gold} U:{c.FACTORY_COST.uranium}\n        </div>\n        <div className='section'><b>Resources</b></div>\n        <div>Titatium {Math.floor(planet.resources.raw.titanium)}</div>\n        <div>Gold {Math.floor(planet.resources.raw.gold)}</div>\n        <div>Uranium {Math.floor(planet.resources.raw.uranium)}</div>\n\n        <table>\n          <thead>\n            <tr>\n              <th>Resource</th>\n              <th>Planet</th>\n              <th>Transfer</th>\n              <th>Ship ({ship.resourcesMax})</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Titanium</td>\n              <td>{Math.floor(planet.resources.stored.titanium)}</td>\n              <td>\n                <span className='transfer-button' \n                        onClick={() => manage.transferResource(ship.resources, planet.resources.stored, \n                        'titanium', this.state.titanium, c.PLANET_RESOURCE_MAX)}>{'\\u2bc7'}</span>\n                  <input type='text' className='transfer-input' \n                  value={this.state.titanium} \n                  onChange={(event)=>this.valueChanged(event, 'titanium')}/>\n                  <span className='transfer-button' \n                        onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                        'titanium', this.state.titanium, ship.resourcesMax)}>{'\\u2bc8'}</span>\n              </td>\n              <td>{Math.floor(ship.resources.titanium)}</td>\n            </tr>\n            <tr>\n              <td>Gold</td>\n              <td>{Math.floor(planet.resources.stored.gold)}</td>\n              <td>\n                <span className='transfer-button' \n                        onClick={() => manage.transferResource(ship.resources, planet.resources.stored, \n                        'gold', this.state.gold, c.PLANET_RESOURCE_MAX)}>{'\\u2bc7'}</span>\n                  <input type='text' className='transfer-input' \n                  value={this.state.gold} \n                  onChange={(event)=>this.valueChanged(event, 'gold')}/>\n                  <span className='transfer-button' \n                        onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                        'gold', this.state.gold, ship.resourcesMax)}>{'\\u2bc8'}</span>\n              </td>\n              <td>{Math.floor(ship.resources.gold)}</td>\n            </tr>\n            <tr>\n              <td>Uranium</td>\n              <td>{Math.floor(planet.resources.stored.uranium)}</td>\n              <td>\n                <span className='transfer-button' \n                        onClick={() => manage.transferResource(ship.resources, planet.resources.stored, \n                        'uranium', this.state.uranium, c.PLANET_RESOURCE_MAX)}>{'\\u2bc7'}</span>\n                  <input type='text' className='transfer-input' \n                  value={this.state.uranium} \n                  onChange={(event)=>this.valueChanged(event, 'uranium')}/>\n                  <span className='transfer-button' \n                        onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                        'uranium', this.state.uranium, ship.resourcesMax)}>{'\\u2bc8'}</span>\n              </td>\n              <td>{Math.floor(ship.resources.uranium)}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>);\n  }\n}\n\n","import React from 'react';\nimport { c, manage, game} from '../functions';\nimport './FactoryButton.css';\n\nexport class FactoryButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  build(template) {\n    if (template.objType === c.OBJ_SHIP) {\n      manage.buildShip(this.props.template);\n    } else if (template.objType === c.OBJ_EQUIP) {\n      manage.buildEquip(this.props.template);\n    }\n  }\n\n  render() {\n    let world = window.world;\n    let planet = world.selectedPlanet;\n    let ship = world.ship;\n    \n    return (\n      <div className='build-button'>\n        <button \n          disabled={!manage.hasFactory(planet) || !game.canAfford(planet, ship, this.props.template.cost)} \n          onClick={() => this.build(this.props.template)}>{this.props.template.name}</button>\n          <span className='cost'>Cost: T:{this.props.template.cost.titanium} G:{this.props.template.cost.gold} U:{this.props.template.cost.uranium}</span>\n      </div>);\n  }\n}\n\n","import React from 'react';\nimport { c } from '../functions';\nimport './ManageFactory.css';\nimport { FactoryButton } from './FactoryButton';\n\nexport class ManageFactory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className='factory-info'> \n        <div className='title'> Ships </div>\n        <div className='build-ship'>\n        {window.world.blueprints.ship.map((shipTemplate, i) => {\n          return <FactoryButton key={'ship'+i} template={shipTemplate} />;\n        })}\n        </div>\n\n        <div className='title'> Equipment </div>\n        <div className='build-equip'>\n        {window.world.blueprints.equip.map((equipTemplate, i) => {\n          return <FactoryButton key={'equip'+i} template={equipTemplate} />;\n        })}\n        </div>\n      </div>);\n  }\n}\n\n","import React from 'react';\nimport { c } from '../functions';\nimport lodash from 'lodash';\nimport './EquipSelect.css';\n\nexport const EMPTY_ID = \"\";\n\nexport class EquipSelect extends React.Component {\n  \n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  changeEquip(planet, ship, oldEquip, event) {\n    // Add old equip to the planet\n    if (oldEquip) {\n      planet.equip.push(oldEquip);\n      this.removeEquip(ship, oldEquip);\n    } \n    // Remove newEquip from planet\n    let newEquip = lodash.remove(planet.equip, (e) => e.id === event.target.value)[0];\n\n    if (newEquip) {\n      // Add new equip to the ship\n      if (!oldEquip) {\n        ship.equip.push(newEquip);\n      } else {\n        let oldEquipIndex = lodash.findIndex(ship.equip, {id: oldEquip.id});  \n        if (oldEquipIndex >= 0) {\n          // Replace oldEquip with newEquip\n          ship.equip.splice(oldEquipIndex,1, newEquip);\n        } else {\n          console.warn(\"index \"+oldEquipIndex+\" Could not find oldEquip \", oldEquip, \"on ship \",ship);\n        }\n      }\n      this.addEquip(ship, newEquip);\n    } else {\n      // Remove the oldEquip from the ship (no new equipment added)\n      lodash.remove(ship.equip, (e) => e.id === oldEquip.id);\n    }\n  }\n\n  addEquip(ship, newEquip) {\n    if (newEquip.type === c.EQUIP_TYPE_ARMOR) {\n      // Only add armor if the ship is in full repair\n      if (ship.armor === ship.armorMax) {\n        ship.armor += newEquip.armorAmt;\n      }\n      ship.armorMax += newEquip.armorAmt;\n    } else if (newEquip.type === c.EQUIP_TYPE_STORAGE) {\n      ship.resourcesMax += newEquip.storageAmount;\n    }\n  }\n\n  removeEquip(ship, oldEquip) {\n    if (oldEquip.type === c.EQUIP_TYPE_ARMOR) {\n      ship.armorMax -= oldEquip.armorAmt;\n      if (ship.armor > ship.armorMax) {\n        ship.armor = ship.armorMax;\n      }\n    } else if (oldEquip.type === c.EQUIP_TYPE_STORAGE) {\n      ship.resourcesMax -= oldEquip.storageAmount;\n      let shipResources = ship.resources.titanium + ship.resources.gold + ship.resources.uranium;\n      if (shipResources > ship.resourcesMax) {\n        let owing = this.removeResource(ship, 'titanium', (shipResources - ship.resourcesMax));\n        if (owing > 0) {\n          owing = this.removeResource(ship, 'gold', owing);\n        }\n        if (owing > 0) {\n          owing = this.removeResource(ship, 'uranium', owing);\n        }\n        if (owing > 0) {\n          console.warn(\"Cannot remove more resources from ship still owing \"+owing);\n        }\n      }\n    }\n  }\n\n  /**\n   * Removes the resource from the ship\n   * @return the amount still owing after removing\n   */\n  removeResource(ship, resourceType, amount) {\n    ship.resources[resourceType] -= amount;\n    if (ship.resources[resourceType] < 0) {\n      let owing = Math.abs(ship.resources[resourceType]);\n      ship.resources[resourceType] = 0;\n      return owing;\n    }\n    return 0;\n  }\n\n  render() {\n    let selectedOption = !this.props.equip ? null : \n     <option key={'selectedequip'} value={this.props.equip.id}>{this.props.equip.name} ({this.props.equip.id})</option>;\n\n    return (\n      <span> \n        <select value={this.props.equip ? this.props.equip.id : EMPTY_ID} \n                onChange={(event) => this.changeEquip(this.props.planet, this.props.ship, this.props.equip, event)}>\n          <option key='none' value=\"none\">Choose...</option>\n          {selectedOption}\n          {this.props.planet.equip.map((equip, i) => {\n            return <option key={'equip-'+i} value={equip.id}>{equip.name} ({equip.id})</option>\n          })}\n        </select>                \n      </span>\n    );\n  }\n}\n\n","import React from 'react';\nimport { manage, game } from '../functions';\nimport './ManageStorage.css';\nimport { EquipSelect } from './EquipSelect';\n\nexport class ManageStorage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {selectedShip:null, selectedEquip:null};\n  }\n\n  viewShip(ship) {\n    this.setState({selectedShip:ship});\n  }\n\n  viewEquip(equip) {\n    this.setState({selectedEquip:equip});\n  }\n\n  startUsingShip() {\n    manage.switchToShip(this.state.selectedShip, window.world.selectedPlanet);    \n    this.setState({selectedShip:null});\n  }\n\n  render() {\n    let world = window.world;\n    let planet = world.selectedPlanet;\n    let currentShip = world.ship;\n    let selectedShip = this.state.selectedShip;\n    \n    // Default to selecting the current ship\n    if (!selectedShip && currentShip.sprite.visible) {\n      selectedShip = currentShip;\n    }\n\n    let selectedShipEquip = [];\n    if (selectedShip) {\n      for (let i=0; i<selectedShip.equipMax; i++) {\n        let equip = selectedShip.equip.length > i ? selectedShip.equip[i] : null;\n        selectedShipEquip.push(<EquipSelect key={equip ? equip.id : 'empty-'+i} planet={planet} ship={selectedShip} equip={equip} />);\n      }\n    }\n\n    return (\n      <div>\n        <div className='storage-section'> \n          <div className='title'>Ships</div>\n          <span className='item-list'>\n            {(currentShip.sprite.visible ? [currentShip] : []).concat(planet.ships).map((ship, i) => {\n              return <div key={i} \n                          onClick={() => this.viewShip(ship)} \n                          className={`ship ${selectedShip===ship ? 'selected-item' : 'non-selected-item'}`} >{ship.name}</div>\n            })}\n          </span>\n          <span className='item-details'>\n            { selectedShip != null && // exclude this block if no ship selected\n            <div>\n              <div className='button-row'>\n                <button onClick={() => this.startUsingShip()} disabled={selectedShip === currentShip}>Use Ship</button>\n              </div>             \n              <div className='item-attr'><b>Name</b> {selectedShip.name} {selectedShip.id}</div>\n              <div className='item-attr'><b>Engine</b> Propulsion:{Math.floor(selectedShip.propulsion*100)} Turn:{Math.floor(selectedShip.turnSpeed*100)}</div>\n              <div className='item-attr'><b>Landing</b> Speed:{Math.floor(selectedShip.crashSpeed)} Angle:{Math.floor(selectedShip.crashAngle*10)}</div>\n              <div className='item-attr'><b>Armor</b> \n                {Math.floor(selectedShip.armor)} of {Math.floor(selectedShip.armorMax)} \n                <button onClick={() => manage.repairShip(planet, selectedShip)}\n                        disabled={selectedShip.armorMax <= selectedShip.armor} >Repair</button> \n                 &nbsp; Cost {Math.floor(selectedShip.armorMax - selectedShip.armor)} titanium\n              </div>\n              <div className='item-attr'><b>Resources</b> Max:{Math.floor(selectedShip.resourcesMax)}</div>\n              <div className='item-attr'><b>Equip</b> Max:{selectedShip.equipMax}\n                {selectedShipEquip}\n              </div>\n            </div>\n            }\n          </span>\n        </div>\n        <div className='storage-section'> \n          <div className='title'>Equipment</div>\n          <span className='item-list'>\n            {planet.equip.map((equip, i) => {\n              return <div key={i} \n                          onClick={() => this.viewEquip(equip)} \n                          className={`item ${this.state.selectedEquip===equip ? 'selected-item' : 'non-selected-item'}`} >{equip.name}</div>\n            })}\n          </span>\n          <span className='item-details'>\n            { this.state.selectedEquip != null && // exclude this block if no equip selected\n            <div>\n              <div className='item-attr'><b>Name</b> {this.state.selectedEquip.name} {this.state.selectedEquip.id}</div>\n            </div>\n            }\n          </span>\n        </div>\n      </div>);\n  }\n}\n\n","import React from 'react';\nimport { ManagePlanet } from './ManagePlanet';\nimport './ManageTabs.css';\nimport { ManageFactory } from './ManageFactory';\nimport { ManageStorage } from './ManageStorage';\n\nexport class ManageTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {activeTab:'planet'};\n  }\n\n  isActive() {\n    return 'active-tab';\n  }\n\n  render() {\n    return (\n      <div className='tab-set'>\n        <span className={`tab ${this.state.activeTab==='planet'?'active-tab':'non-active-tab'}`}\n              onClick={() => this.setState({activeTab:'planet'})}\n           >Planet</span>\n        <span className={`tab ${this.state.activeTab==='factory'?'active-tab':'non-active-tab'}`}\n              onClick={() => this.setState({activeTab:'factory'})}\n           >Factory</span>\n        <span className={`tab ${this.state.activeTab==='storage'?'active-tab':'non-active-tab'}`}\n              onClick={() => this.setState({activeTab:'storage'})}\n           >Storage</span>\n        <div className={`tab-body ${this.state.activeTab==='planet'?'':'tab-hidden'}`}>\n          <ManagePlanet/> \n        </div>\n        <div className={`tab-body ${this.state.activeTab==='factory'?'':'tab-hidden'}`}>\n          <ManageFactory/> \n        </div>\n        <div className={`tab-body ${this.state.activeTab==='storage'?'':'tab-hidden'}`}>\n          <ManageStorage/> \n        </div>\n\n      </div>);\n  }\n}\n\n","import React from 'react';\nimport { c } from './functions';\nimport './InfoPanel.css';\nimport { InfoFly } from './InfoFly';\nimport { ManageTabs } from './manage/ManageTabs';\n\nexport class InfoPanel extends React.Component {\n  render() {\n    let world = window.world;\n    if (world.gameState === c.GAME_STATE.MANAGE) {\n      return (<ManageTabs/>);\n    } else if (world.gameState === c.GAME_STATE.FLY) {\n      return (<InfoFly/>);\n    }\n    return (<div>...</div>);\n  }\n}\n\n","import React from 'react';\nimport './App.css';\nimport { InfoPanel } from './InfoPanel';\nimport { utils, c, game, fly, ai } from './functions';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    console.log(\"created world\");\n    window.world = game.createEmptyWorld();\n    this.pixiRef = React.createRef();\n  }\n\ncomponentDidMount() {\n  console.log(\"mounted\");\n  this.createPixiApp();\n}\n\nrender() {\n  return (\n    <table>\n      <tbody>\n      <tr>\n        <td>\n        <div ref={this.pixiRef} />\n        </td>\n        <td className='info-panel'>\n          <InfoPanel />\n        </td>\n      </tr>\n      </tbody>\n    </table>\n   );\n  }\n\n  createPixiApp = () => {\n    console.log(\"Creating PIXI app\");\n    let app = new window.PIXI.Application({width: c.SCREEN_WIDTH, height: c.SCREEN_HEIGHT});\n    app.renderer.backgroundColor = c.BLACK;\n    this.pixiRef.current.appendChild(app.view);\n    window.PIXI.loader\n      .add(c.SPRITESHEET_JSON)\n      .add(c.CRASH_JSON)\n      .load(this.setupGame);\n    window.world.app = app;\n  }\n\n  // Setup the App\n  setupGame = () => {\n    game.setupWorld();\n    this.setupKeyboardListeners();\n    game.changeGameState(c.GAME_STATE.FLY);\n    window.world.app.renderer.plugins.interaction.on('pointerdown', (event) => { \n      game.click(event);\n    });\n    window.world.app.ticker.add(delta => this.mainLoop(delta));\n  }\n  \n  // Main loop runs 60 times per sec\n  mainLoop = (delta) => {\n    if (window.world.gameLoop) {\n      game.runBuildings();\n      fly.moveBullets();\n      fly.coolAllWeapons();\n      ai.moveAliens();\n      window.world.gameLoop(delta);\n    }\n    this.forceUpdate()\n  }\n\n  setupKeyboardListeners = () => {\n    window.world.keys.left = utils.keyboardListener(\"ArrowLeft\");\n    window.world.keys.right = utils.keyboardListener(\"ArrowRight\");\n    window.world.keys.up = utils.keyboardListener(\"ArrowUp\");\n    window.world.keys.down = utils.keyboardListener(\"ArrowDown\");\n    window.world.keys.space = utils.keyboardListener(\" \");\n    window.world.keys.w = utils.keyboardListener(\"w\"); // up\n    window.world.keys.a = utils.keyboardListener(\"a\"); // left\n    window.world.keys.s = utils.keyboardListener(\"s\"); // down\n    window.world.keys.d = utils.keyboardListener(\"d\"); // right\n    window.world.keys.q = utils.keyboardListener(\"q\"); // thrust left\n    window.world.keys.e = utils.keyboardListener(\"e\"); // thrust right\n  }\n  \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}