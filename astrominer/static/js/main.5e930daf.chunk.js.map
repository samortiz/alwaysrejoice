{"version":3,"sources":["functions/utils.js","functions/constants.js","functions/game.js","functions/fly.js","functions/manage.js","functions/ai.js","functions/savegame.js","InfoFly.js","manage/ManagePlanet.js","manage/factory/FactoryButton.js","manage/factory/FactoryTab.js","manage/factory/FactoryTabs.js","manage/ManageStorage.js","manage/ManageSystem.js","manage/ManageTabs.js","InfoPanel.js","App.js","serviceWorker.js","index.js"],"names":["distanceBetween","ax","ay","bx","by","Math","sqrt","pow","midPoint","a","b","normalizeRadian","radians","retVal","PI","calcGravity","x","y","planet","distance","gravityDirection","atan2","c","GRAVITATIONAL_CONST","mass","sin","cos","dir","directionTo","x1","y1","x2","y2","dirComponents","amount","xAmt","yAmt","randomInt","minP","maxP","min","ceil","max","floor","random","randomFloat","randomBool","getPointFrom","startX","startY","getVertexData","sprite","calculateVertices","collisionPoints","push","toGlobal","vertexData","globalX","globalY","spriteX","spriteY","HALF_SCREEN_WIDTH","HALF_SCREEN_HEIGHT","keyboardListener","value","key","isDown","isUp","press","undefined","release","downHandler","event","upHandler","downListener","bind","upListener","window","addEventListener","unsubscribe","removeEventListener","showToast","text","Swal","fire","title","timer","position","showConfirmButton","toast","width","SCREEN_WIDTH","showClass","popup","hideClass","then","BLACK","YELLOW","BLUE","WHITE","DARK_GREY","LIGHT_GREY","GAME_STATE","INIT","FLY","MANAGE","LOCALSTORAGE_GAME_NAMES_KEY","DB_GAME_PREFIX","SCREEN_HEIGHT","NEARBY_WIDTH","NEARBY_HEIGHT","MINIMAP_WIDTH","MINIMAP_HEIGHT","HALF_MINIMAP_WIDTH","HALF_MINIMAP_HEIGHT","MINIMAP_VIEW_WIDTH","MINIMAP_VIEW_HEIGHT","HALF_MINIMAP_VIEW_WIDTH","HALF_MINIMAP_VIEW_HEIGHT","MINIMAP_SCALE_X","MINIMAP_SCALE_Y","MINIMAP_BORDER_COLOR","MINIMAP_BACKGROUND_COLOR","MINIMAP_PLANET_COLOR","MINIMAP_SELECTED_PLANET_COLOR","MINIMAP_BUILDING_COLOR","MINIMAP_SHIP_COLOR","SPRITESHEET_JSON","ROCK_PLANET_FILE","RED_PLANET_FILE","PURPLE_PLANET_FILE","GREEN_PLANET_FILE","MINE_FILE","FACTORY_FILE","SHIP_CARGO_FILE","SHIP_EXPLORER_FILE","SHIP_FAST_FILE","SHIP_SKELETON_FILE","SHIP_FIGHTER_FILE","SHIP_HEAVY_FILE","SHIP_BALL_FILE","STAR_BACKGROUND_FILE","CRASH_JSON","CRASH","BULLET_FILE","BULLET_BLUE_FILE","BULLET_STAPLE_FILE","SHIELD_BLUE_FILE","SHIELD_WHITE_FILE","SHIELD_GREEN_FILE","ALIEN_SHIP_FILE","ALIEN_SHIP_SMALL_FILE","ALIEN_SHIP_LARGE_FILE","ALIEN_SHIP_FIRE_FILE","ALIEN_SHIP_BLUE_FILE","ALIEN_SHIP_LARGE_BLUE_FILE","ALIEN_SHIP_BLACK_FILE","UNIVERSE_RADIUS","PLAYER","ALIEN","PLAYER_STARTING_RESOURCES","titanium","gold","uranium","ALLOWED_OVERLAP","TAKEOFF_SPEED","PLANET_RESOURCE_MAX","PLAYER_START_X","PLAYER_START_Y","MIN_ALIEN_DIST_TO_PLANET","MIN_ALIEN_DIST_TO_ALIEN","BUILDING_PLACEMENT_ROTATION_INCREMENT","BUILDING_TYPE_MINE","MINE_SCALE","MINE_WIDTH","MINE_ANIMATION_SPEED","MINE_SPEED_TITANIUM","MINE_SPEED_GOLD","MINE_SPEED_URANIUM","MINE_COST","BUILDING_TYPE_FACTORY","FACTORY_COST","FACTORY_WIDTH","FACTORY_SCALE","EQUIP_TYPE_BRAKE","EQUIP_TYPE_PRIMARY_WEAPON","EQUIP_TYPE_SECONDARY_WEAPON","EQUIP_TYPE_THRUSTER","EQUIP_TYPE_ARMOR","EQUIP_TYPE_REPAIR_DROID","EQUIP_TYPE_GUNNERY_DROID","EQUIP_TYPE_SPEED","EQUIP_TYPE_TURN","EQUIP_TYPE_STORAGE","THRUST_MOMENTUM","THRUST_BLINK","OBJ_EQUIP","OBJ_SHIP","ALIEN_AI_TURRET","ALIEN_AI_CREEPER","EQUIP_AI_MINE","EQUIP_AI_TURRET","EQUIP_AI_MISSILE","DIR_AHEAD_OF_SHIP","DIR_BEHIND_SHIP","EQUIP_BRAKE","name","objType","type","brakeSpeedPct","cost","EQUIP_BLINK_BRAKE","EQUIP_SPEED_BOOST","boostSpeed","EQUIP_TURN_BOOST","EQUIP_STORAGE","storageAmount","EQUIP_ENHANCED_STORAGE","EQUIP_ARMOR","armorAmt","EQUIP_ENHANCED_ARMOR","EQUIP_THRUSTER","thrustSpeed","thrustType","EQUIP_BLINK_THRUSTER","EQUIP_BLASTER","coolTime","cool","damage","speed","lifetime","jitter","bulletFile","EQUIP_FAST_BLASTER","EQUIP_SPRINKLER_BLASTER","EQUIP_STREAM_BLASTER","EQUIP_ALIEN_BLASTER","EQUIP_ALIEN_BLASTER_FAST","EQUIP_ALIEN_BLASTER_LIGHTNING","EQUIP_STAPLE_GUN","EQUIP_STAPLE_GUN_HEAVY","EQUIP_SHIELD","shield","active","armor","armorMax","lifetimeMax","spriteFile","radius","EQUIP_SHIELD_LONG","EQUIP_SHIELD_STRONG","EQUIP_SHIELD_ULTRA","EQUIP_R2D2","repairSpeed","EQUIP_GUNNERY_DROID","weapon","SHIP_EXPLORER","propulsion","turnSpeed","resourcesMax","resources","equipMax","equip","crashSpeed","crashAngle","imageScale","imageFile","SHIP_CARGO","SHIP_FAST","SHIP_SKELETON","SHIP_HEAVY","SHIP_FIGHTER","SHIP_ALIEN_TURRET","aiType","SHIP_ALIEN","SHIP_ALIEN_LARGE","SHIP_ALIEN_FIRE","SHIP_ALIEN_STEALTH","SHIP_MINE","aiData","mineDistance","SHIP_TURRET","SHIP_MISSILE","ALL_SHIPS","EQUIP_MINE_DEPLOYER","createShip","EQUIP_TURRET_DEPLOYER","EQUIP_MISSILE_LAUNCHER","EQUIP_UPGRADES","EQUIP_PRIMARY_WEAPONS","EQUIP_SECONDARY_WEAPONS","EQUIP_DROIDS","ALL_EQUIP","XP_LEVELS","xp","obj","PLANET_DENSITY","Map","set","UNIVERSE_RINGS","planetCount","minDist","maxDist","minDistToOtherPlanet","minPlanetRadius","maxPlanetRadius","planetFiles","aliens","count","file","createEmptyWorld","saveGameName","ship","view","ships","planets","selectedPlanet","lastPlanetLanded","blueprints","xpLevels","lodash","cloneDeep","nextId","system","keys","app","gameState","isTyping","gameLoop","bgSprite","explosionSheet","explosions","bullets","nearby","planetSpriteCache","shipSpriteCache","shieldSpriteCache","spriteContainers","background","minimap","miniMapGraphics","initializing","setupWorld","world","setupSpriteContainers","createBackground","createPlanets","shipStartX","shipStartY","getShipSprite","visible","createAliens","setupMiniMap","setupExplosionSheet","mainStage","stage","PIXI","Container","addChild","container","TilingSprite","Texture","from","ring","i","fileName","utils","length","String","fromCharCode","get","maxResource","minResource","createPlanet","getFreeXy","nearestPlanetDistance","origPlanet","nearestPlanet","dist","nearestPlanetDist","nearestAlienDistance","nearestAlien","alien","nearestAlienDist","minDistToPlanet","minDistToAlien","failCount","np","console","warn","planetFile","stored","raw","buildings","lastLandingDir","spriteId","getPlanetSprite","planetContainer","planetSprite","Sprite","loader","textures","anchor","spriteScale","scale","building","manage","makeBuildingSprite","entries","foundSprite","rotation","spriteWidth","spriteHeight","height","spriteSheet","getSpriteOrigWithHeight","origWidth","origHeight","getShieldSprite","cacheId","id","shieldSprite","shipSprite","shieldWidth","shipType","owner","vx","vy","alive","createAlien","alienInfo","miniMapContainer","mask","Graphics","drawRect","renderable","cacheAsBitmap","g","click","data","global","fly","clickOnMinimap","changeGameState","newState","enterFlyState","flyLoop","enterManageState","manageLoop","runBuildings","mineResource","children","buildingSprite","animationSpeed","resourceType","nextLevel","addBlueprint","shift","addMiningXp","addAlienXp","canAfford","payResourceCost","payResource","paid","Loader","shared","spritesheet","createExplosionSprite","AnimatedSprite","animations","loop","log","delta","setupNearby","runDroids","left","turnShip","right","d","up","w","booster","getEquip","propelShip","down","s","brake","brakeShip","space","firePrimaryWeapon","fireSecondaryWeapon","q","thrustShip","e","planetsInView","planetInView","grav","game","detectCollisionWithPlanet","landShip","detectCollisionWithAlien","shipsCollide","moveExplosions","moveBackground","drawMiniMap","minX","maxX","minY","maxY","repositionScreen","ai","moveAliens","coolAllWeapons","coolWeapons","disableShield","resetWeaponsCool","droid","shootAtNearestAlien","weaponRange","origDir","fireWeapon","tilePosition","getActiveShield","point","planetDir","dirDiff","abs","success","speedDiff","dirDiffAdj","damageShip","resetGame","r","getExplosionSprite","explosionSprite","playerShip","destroyShip","afterExplosion","play","onLoop","stop","getAvailablePlanetXY","turnBooster","thruster","thrustX","thrustY","fireBullet","gun","mine","mineSprite","mineDistFromShip","checkForCollisionWithPlanet","checkForCollisionWithShip","enableShield","bullet","findOrCreateBullet","jitterAmt","killBullet","moveBullets","checkForBulletCollision","bulletHitShip","containsPoint","shipDamage","alienDamage","equipType","t","clear","beginFill","lineStyle","endFill","planetOnMap","planetColor","drawCircle","buildingX","buildingY","clickX","clickY","primaryWeaponRange","gravity","takeOff","getBuildingInfo","buildingType","animation","buildMine","getBuildingPlacementRotation","distanceFromShip","deg","degX","degY","buildingWidth","buildingFits","minBuildingWidth","transferResource","source","target","requestedAmtStr","maxCapacity","requestedAmt","Number","isNaN","amt","spaceLeft","resupplyShip","desiredAmt","freeAmt","desiredTitanium","buildFactory","factory","buildShip","shipTemplate","newShip","switchToShip","oldShip","removeShipFromStorage","addShipToStorage","newShipSprite","filter","removedShip","hasFactory","buildEquip","equipTemplate","costToRepair","repairShip","addArmor","titaniumOnHand","addEquip","newEquip","moveEquipFromPlanetToShip","equipToMove","remove","moveEquipFromShipToPlanet","shipResources","owing","this","removeResource","canEquip","includes","find","eq","hasMoved","turretAi","creeperAi","playerTurretAi","playerMissileAi","alienSprite","shootAt","shooter","turret","getNearestAlienTarget","missile","dirToTarget","moved","distanceToPlayer","dirToPlayer","dirToPlanet","rightLeft","turnDir","otherShip","saveLocalStorage","objToSave","localStorage","getItem","removeItem","setItem","JSON","stringify","loadLocalStorage","objString","parse","upgradeDB","db","result","oldVersion","deleteObjectStore","createObjectStore","keyPath","loadWorld","dbRequest","indexedDB","open","onerror","onupgradeneeded","onsuccess","request","transaction","objectStore","newWorld","oldSystem","removeChildren","saveWorld","worldToStore","omit","objectStoreRequest","put","deleteWorld","delete","InfoFly","className","map","React","Component","ManagePlanet","useState","titaniumAmt","setTitaniumAmt","goldAmt","setGoldAmt","uraniumAmt","setUraniumAmt","shipOnPlanet","disabled","onClick","defaultValue","onChange","FactoryButton","template","existingInventory","Row","Col","xs","templateArg","FactoryTab","templateList","style","maxHeight","FactoryTabs","upgrades","u","primaryWeapons","p","secondaryWeapons","droids","Tabs","defaultActiveKey","Tab","eventKey","ManageStorage","selectedShip","setSelectedShip","currentShip","selectedShipEquip","concat","viewShip","ManageSystem","nameInput","useRef","gameNames","savegame","addGameName","newGameName","onFocus","onBlur","ref","current","saveGame","gameName","deleteGame","ManageTabs","mountOnEnter","unmountOnExit","InfoPanel","App","props","createPixiApp","Application","renderer","backgroundColor","pixiRef","appendChild","add","load","setupGame","setupKeyboardListeners","plugins","interaction","on","ticker","mainLoop","forceUpdate","createRef","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5e930daf.chunk.js","sourcesContent":["import { c } from './';\nimport Swal from \"sweetalert2\";\n\n/**\n * Returns the distance between two points \n */\nexport function distanceBetween(ax, ay, bx, by) {\n  return Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n}\n  \n/**\n * Returns array with [x,y] of midpoint between two points\n * Both params should be [x,y]\n */\nexport function midPoint(a, b) {\n  return [(a[0]+b[0])/2, (a[1]+b[1])/2];\n}\n\n/**\n * Convert the angle to 0 <= rad <= 2*PI \n */\nexport function normalizeRadian(radians) {\n  let retVal = radians;\n  if (retVal < 0) {\n    retVal += Math.PI * 2;\n  }\n  if (retVal > Math.PI * 2) {\n    retVal -= Math.PI * 2;\n  }\n  return retVal;\n}\n  \n/**\n * Calc gravity for point.\n * @return {x,y,dir} This will be the x and y forces applied to the object (not a point)\n */\nexport function calcGravity(x, y, planet) {\n  let distance = distanceBetween(x, y, planet.x, planet.y);\n  if (distance < 10) {\n    distance = 10;\n  }\n  let gravityDirection = Math.atan2(x - planet.x, y - planet.y);\n  let gravityX = c.GRAVITATIONAL_CONST * planet.mass / Math.pow(distance, 2) * -Math.sin(gravityDirection);\n  let gravityY = c.GRAVITATIONAL_CONST * planet.mass / Math.pow(distance, 2) * -Math.cos(gravityDirection);\n  return {x:gravityX, y:gravityY, dir:gravityDirection};\n}\n\n/**\n * @return the angle x1,y1 would need to face to point directly at x2,y2\n */\nexport function directionTo(x1,y1, x2,y2) {\n  return normalizeRadian(Math.atan2(y2 - y1, x2 - x1));\n}\n\n/**\n * @return {xAmt, yAmt} splitting the dir and amount into x,y portions\n */\nexport function dirComponents(dir, amount) {\n  let xAmt = amount * Math.cos(dir);\n  let yAmt = amount * Math.sin(dir);\n  return {xAmt, yAmt};\n}\n\n/**\n * @return an int between min and max inclusive\n */\nexport function randomInt(minP, maxP) {\n  let min = Math.ceil(minP);\n  let max = Math.floor(maxP);\n  return Math.floor(Math.random() * (max - min +1) + min); \n}\n\n/**\n * @return a random floating point number between min and max\n */\nexport function randomFloat(min, max) {\n  return min + (Math.random() * (max - min));\n}\n\n/**\n * @return true 50% of the time\n */\nexport function randomBool() {\n  return Math.random() > 0.5;\n}\n\n/**\n * @return add distance in direction to startX,startY \n */\nexport function getPointFrom(startX, startY, dir, distance) {\n  let x = startX + (distance * Math.cos(dir));\n  let y = startY + (distance * Math.sin(dir));\n  return {x,y};\n}\n\n/**\n * @return a collection of points [[x,y],[x,y]] on a rectangular sprite that can be used for collision detection\n * @param x,y global x,y position of sprite (on main map, not in viewport)\n */\nexport function getVertexData(x,y, sprite) {\n  sprite.calculateVertices();\n  let collisionPoints = []; // [[x,y],[x,y]]\n  collisionPoints.push(toGlobal(x, y, sprite.vertexData[0], sprite.vertexData[1])); // top left\n  collisionPoints.push(toGlobal(x, y, sprite.vertexData[2], sprite.vertexData[3])); // top right\n  collisionPoints.push(toGlobal(x, y, sprite.vertexData[4], sprite.vertexData[5])); // bottom right\n  collisionPoints.push(toGlobal(x, y, sprite.vertexData[6], sprite.vertexData[7])); // bottom left\n  // Add a few points between to help with border collisions (these have already been converted to global)\n  collisionPoints.push(midPoint(collisionPoints[0], collisionPoints[1]));\n  collisionPoints.push(midPoint(collisionPoints[1], collisionPoints[2]));\n  collisionPoints.push(midPoint(collisionPoints[2], collisionPoints[3]));\n  collisionPoints.push(midPoint(collisionPoints[3], collisionPoints[0]));\n  return collisionPoints;\n}\n\n/**\n * Converts the local sprite-based x,y to global based on ship's position\n * @return [x,y] in global map coordinates\n */\nexport function toGlobal(globalX,globalY, spriteX,spriteY) {\n  return [globalX + (spriteX - c.HALF_SCREEN_WIDTH), globalY+ (spriteY - c.HALF_SCREEN_HEIGHT)];\n}\n\n/**\n * Sets up a keyboard listener\n */\nexport function keyboardListener(value) {\n  let key = {};\n  key.value = value;\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = event => {\n    if (event.key === key.value) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n    }\n  };\n  //The `upHandler`\n  key.upHandler = event => {\n    if (event.key === key.value) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n    }\n  };\n  //Attach event listeners\n  const downListener = key.downHandler.bind(key);\n  const upListener = key.upHandler.bind(key);\n  window.addEventListener(\n    \"keydown\", downListener, false\n  );\n  window.addEventListener(\n    \"keyup\", upListener, false\n  );\n  // Detach event listeners\n  key.unsubscribe = () => {\n    window.removeEventListener(\"keydown\", downListener);\n    window.removeEventListener(\"keyup\", upListener);\n  };\n  return key;\n}\n\nexport function showToast(text) {\n  Swal.fire({\n    title: text,\n    timer: 5000,\n    position:'top-left',\n    showConfirmButton: false,\n    toast:true,\n    width: Math.floor(c.SCREEN_WIDTH/2)+'px',\n    showClass: {\n      popup: 'animate__animated animate__slideInDown'\n    },\n    hideClass: {\n      popup: 'animate__animated animate__slideOutUp'\n    }\n  }).then();\n}","// Colors\nexport const BLACK = 0X000000;\nexport const YELLOW = 0xCC55CC;\nexport const BLUE = 0x00AAFF;\nexport const WHITE = 0xFFFFFF;\nexport const DARK_GREY = 0x303030;\nexport const LIGHT_GREY = 0x909090;\n\nexport const GAME_STATE = {\n  INIT: \"init\",\n  FLY: \"fly\",\n  MANAGE: \"manage\"\n};\n\n// Saved games\nexport const LOCALSTORAGE_GAME_NAMES_KEY = 'saved-game-names';\nexport const DB_GAME_PREFIX = 'game-';\n\n// Screen Layout\nexport const SCREEN_WIDTH = 1000;\nexport const SCREEN_HEIGHT = 1000;\nexport const HALF_SCREEN_WIDTH = SCREEN_WIDTH / 2;\nexport const HALF_SCREEN_HEIGHT = SCREEN_HEIGHT / 2;\nexport const NEARBY_WIDTH = SCREEN_WIDTH * 2;\nexport const NEARBY_HEIGHT = SCREEN_HEIGHT * 2;\n// size of minimap on screen\nexport const MINIMAP_WIDTH = 120; \nexport const MINIMAP_HEIGHT = 120;\nexport const HALF_MINIMAP_WIDTH = MINIMAP_WIDTH / 2; \nexport const HALF_MINIMAP_HEIGHT = MINIMAP_HEIGHT / 2;\n// how far the minimap can view\nexport const MINIMAP_VIEW_WIDTH = 4000; \nexport const MINIMAP_VIEW_HEIGHT = 4000; \nexport const HALF_MINIMAP_VIEW_WIDTH = MINIMAP_VIEW_WIDTH / 2;\nexport const HALF_MINIMAP_VIEW_HEIGHT = MINIMAP_VIEW_HEIGHT / 2;\n// convert minimap pixels to real pixels\nexport const MINIMAP_SCALE_X = MINIMAP_WIDTH / MINIMAP_VIEW_WIDTH;  \nexport const MINIMAP_SCALE_Y = MINIMAP_HEIGHT / MINIMAP_VIEW_HEIGHT; \n// MiniMap colors\nexport const MINIMAP_BORDER_COLOR = LIGHT_GREY;\nexport const MINIMAP_BACKGROUND_COLOR = DARK_GREY;\nexport const MINIMAP_PLANET_COLOR = LIGHT_GREY;\nexport const MINIMAP_SELECTED_PLANET_COLOR = YELLOW;\nexport const MINIMAP_BUILDING_COLOR = BLUE;\nexport const MINIMAP_SHIP_COLOR = WHITE;\n\n// Files\nexport const SPRITESHEET_JSON = \"images/spritesheet.json\";\nexport const ROCK_PLANET_FILE = \"rock_planet.png\";\nexport const RED_PLANET_FILE = \"red_planet.png\";\nexport const PURPLE_PLANET_FILE = \"purple_planet.png\";\nexport const GREEN_PLANET_FILE = \"green_planet.png\";\nexport const MINE_FILE = \"mine\"; // animation name in json\nexport const FACTORY_FILE = \"factory.png\";\nexport const SHIP_CARGO_FILE = \"ship_cargo.png\";\nexport const SHIP_EXPLORER_FILE = \"ship_explorer.png\";\nexport const SHIP_FAST_FILE = \"ship_fast.png\";\nexport const SHIP_SKELETON_FILE = \"ship_skeleton.png\";\nexport const SHIP_FIGHTER_FILE = \"ship_fighter.png\";\nexport const SHIP_HEAVY_FILE = \"ship_heavy.png\";\nexport const SHIP_BALL_FILE = \"ship_ball.png\";\nexport const STAR_BACKGROUND_FILE = \"images/stars.png\";\nexport const CRASH_JSON = \"images/crash.json\";\nexport const CRASH = \"crash\"; // animation name in json\nexport const BULLET_FILE = \"bullet.png\";\nexport const BULLET_BLUE_FILE = \"bullet_blue.png\";\nexport const BULLET_STAPLE_FILE = \"bullet_white.png\";\nexport const SHIELD_BLUE_FILE = \"shield_blue.png\";\nexport const SHIELD_WHITE_FILE = \"shield_white.png\";\nexport const SHIELD_GREEN_FILE = \"shield_green.png\";\nexport const ALIEN_SHIP_FILE = \"alien.png\";\nexport const ALIEN_SHIP_SMALL_FILE = \"alien_small.png\";\nexport const ALIEN_SHIP_LARGE_FILE = \"alien_large.png\";\nexport const ALIEN_SHIP_FIRE_FILE = \"alien_fire.png\";\nexport const ALIEN_SHIP_BLUE_FILE = \"alien_blue.png\";\nexport const ALIEN_SHIP_LARGE_BLUE_FILE = \"alien_large_blue.png\";\nexport const ALIEN_SHIP_BLACK_FILE = \"ship_black.png\";\n\nexport const UNIVERSE_RADIUS = 33000;\nexport const PLAYER = \"player\";\nexport const ALIEN = \"alien\";\nexport const PLAYER_STARTING_RESOURCES = {titanium:30, gold:20, uranium:0};\nexport const GRAVITATIONAL_CONST = 2;\nexport const ALLOWED_OVERLAP = 2; // overlap for fudging collision detection\nexport const TAKEOFF_SPEED = 10; // in units of planet gravity\nexport const PLANET_RESOURCE_MAX = 99999999;\nexport const PLAYER_START_X = -(UNIVERSE_RADIUS + 1000); // left of the universe\nexport const PLAYER_START_Y = 0;\nexport const MIN_ALIEN_DIST_TO_PLANET = 50;\nexport const MIN_ALIEN_DIST_TO_ALIEN = 3;\n\n// Buildings\nexport const BUILDING_PLACEMENT_ROTATION_INCREMENT = 0.05;\n// Mine\nexport const BUILDING_TYPE_MINE = \"mine\";\nexport const MINE_SCALE = 1;\nexport const MINE_WIDTH = 52;\nexport const MINE_ANIMATION_SPEED = 0.5;\nexport const MINE_SPEED_TITANIUM = 0.0166; // 1 every sec\nexport const MINE_SPEED_GOLD = 0.0083;  // 1 every 2 sec\nexport const MINE_SPEED_URANIUM = 0.0033; // 1 every 5 sec\nexport const MINE_COST = {titanium:20, gold:10, uranium:0};\n// Factory\nexport const BUILDING_TYPE_FACTORY = \"factory\";\nexport const FACTORY_COST = {titanium:50, gold:20, uranium:10};\nexport const FACTORY_WIDTH = 91;\nexport const FACTORY_SCALE = 0.8;\n\n// Equipment\nexport const EQUIP_TYPE_BRAKE = \"Brake\";\nexport const EQUIP_TYPE_PRIMARY_WEAPON = \"Primary Weapon\";\nexport const EQUIP_TYPE_SECONDARY_WEAPON = \"Secondary Weapon\";\nexport const EQUIP_TYPE_THRUSTER = \"Thruster\";\nexport const EQUIP_TYPE_ARMOR = \"Armor\";\nexport const EQUIP_TYPE_REPAIR_DROID = \"Repair Droid\";\nexport const EQUIP_TYPE_GUNNERY_DROID = \"Gunnery Droid\";\nexport const EQUIP_TYPE_SPEED = \"Speed\";\nexport const EQUIP_TYPE_TURN = \"Turn\";\nexport const EQUIP_TYPE_STORAGE = \"Storage\";\n\nexport const THRUST_MOMENTUM = \"Thrust Momentum\";\nexport const THRUST_BLINK = \"Thrust Blink\";\n\nexport const OBJ_EQUIP = \"Equip\";\nexport const OBJ_SHIP = \"Ship\";\n\nexport const ALIEN_AI_TURRET = \"ALIEN_AI_TURRET\";\nexport const ALIEN_AI_CREEPER = \"ALIEN_AI_CREEPER\";\nexport const EQUIP_AI_MINE = \"EQUIP_AI_MINE\";\nexport const EQUIP_AI_TURRET = \"EQUIP_AI_TURRET\";\nexport const EQUIP_AI_MISSILE = \"EQUIP_AI_MISSILE\";\n\nexport const DIR_AHEAD_OF_SHIP = \"ahead\";\nexport const DIR_BEHIND_SHIP = \"behind\";\n\n// Ship Upgrades\n// brakeSpeedPct is best between 0.02 - 0.1 (higher is ok)\nexport const EQUIP_BRAKE = {name: \"Brake\", objType:OBJ_EQUIP, type:EQUIP_TYPE_BRAKE, brakeSpeedPct:0.04,\n  cost: {titanium:20, gold:10, uranium:0} };\nexport const EQUIP_BLINK_BRAKE = {name: \"Blink Brake\", objType:OBJ_EQUIP, type:EQUIP_TYPE_BRAKE, brakeSpeedPct:0,\n  cost: {titanium:50, gold:50, uranium:30}};\nexport const EQUIP_SPEED_BOOST = {name: \"Speed Booster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_SPEED, boostSpeed:0.05,\n  cost: {titanium:0, gold:10, uranium:20}};\nexport const EQUIP_TURN_BOOST = {name: \"Turn Booster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_TURN, boostSpeed:0.05,\n  cost: {titanium:0, gold:10, uranium:20}};\nexport const EQUIP_STORAGE = {name: \"Storage\", objType:OBJ_EQUIP, type:EQUIP_TYPE_STORAGE, storageAmount:100,\n  cost: {titanium:50, gold:0, uranium:0}};\nexport const EQUIP_ENHANCED_STORAGE = {name: \"Enhanced Storage\", objType:OBJ_EQUIP, type:EQUIP_TYPE_STORAGE, storageAmount:300,\n  cost: {titanium:200, gold:0, uranium:0}};\nexport const EQUIP_ARMOR = {name: \"Armor Plate\", objType:OBJ_EQUIP, type:EQUIP_TYPE_ARMOR, armorAmt:100,\n  cost: {titanium:50, gold:0, uranium:0}};\nexport const EQUIP_ENHANCED_ARMOR = {name: \"Enhanced Armor\", objType:OBJ_EQUIP, type:EQUIP_TYPE_ARMOR, armorAmt:300,\n  cost: {titanium:300, gold:0, uranium:0}};\nexport const EQUIP_THRUSTER = {name: \"Thruster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_THRUSTER, thrustSpeed:0.08, thrustType:THRUST_MOMENTUM,\n  cost: {titanium:40, gold:40, uranium:10}};\n// blink thrustSpeed is good from 2 to 10\nexport const EQUIP_BLINK_THRUSTER = {name: \"Blink Thruster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_THRUSTER, thrustSpeed:2.5, thrustType:THRUST_BLINK,\n  cost: {titanium:60, gold:50, uranium:10}};\n\n// Primary Weapons\n// Dmg:40/c Range:250\nexport const EQUIP_BLASTER = {name: \"Blaster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_PRIMARY_WEAPON, coolTime:25, cool:0, damage:10, speed:2.5, lifetime:100, jitter:0.05, bulletFile:BULLET_FILE,\n  cost: {titanium:10, gold:0, uranium:20}};\n// Dmg:100/c Range:320\nexport const EQUIP_FAST_BLASTER = {name: \"Fast Blaster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_PRIMARY_WEAPON, coolTime:10, cool:0, damage:10, speed:4, lifetime:80, jitter:0.05, bulletFile:BULLET_FILE,\n  cost: {titanium:20, gold:20, uranium:40}};\n// Dmg:300/c (but cannot aim) Range:375\nexport const EQUIP_SPRINKLER_BLASTER = {name: \"Sprinkler Blaster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_PRIMARY_WEAPON, coolTime:2, cool:2, damage:6, speed:2.5, lifetime:150, jitter:1, bulletFile:BULLET_FILE,\n  cost: {titanium:20, gold:10, uranium:80}};\n// Dmg 150/c Range:490\nexport const EQUIP_STREAM_BLASTER = {name: \"Stream Blaster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_PRIMARY_WEAPON, coolTime:4, cool:0, damage:7, speed:7, lifetime:70, jitter:0.04,  bulletFile:BULLET_FILE,\n  cost: {titanium:30, gold:30, uranium:60}};\n// Dmg 20/c Range:240\nexport const EQUIP_ALIEN_BLASTER = {name: \"Alien Blaster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_PRIMARY_WEAPON, coolTime:20, cool:0, damage:4, speed:2, lifetime:120, jitter:0.12, bulletFile:BULLET_BLUE_FILE,\n  cost: {titanium:10, gold:30, uranium:50}};\n// Dmg 160/c Range:480\nexport const EQUIP_ALIEN_BLASTER_FAST = {name: \"Alien Fast Blaster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_PRIMARY_WEAPON, coolTime:10, cool:0, damage:16, speed:4, lifetime:120, jitter:0.1, bulletFile:BULLET_BLUE_FILE,\n  cost: {titanium:10, gold:30, uranium:50}};\n// Dmg 125/c Range:600\nexport const EQUIP_ALIEN_BLASTER_LIGHTNING = {name: \"Alien Lighting Blaster\", objType:OBJ_EQUIP, type:EQUIP_TYPE_PRIMARY_WEAPON, coolTime:8, cool:0, damage:10, speed:12, lifetime:50, jitter:0.08, bulletFile:BULLET_BLUE_FILE,\n  cost: {titanium:10, gold:30, uranium:50}};\n// Dmg 66/c Range:750\nexport const EQUIP_STAPLE_GUN = {name: \"Staple Gun\", objType:OBJ_EQUIP, type:EQUIP_TYPE_PRIMARY_WEAPON, coolTime:3, cool:0, damage:2, speed:3, lifetime:250, jitter:0.2, bulletFile:BULLET_STAPLE_FILE,\n  cost: {titanium:10, gold:30, uranium:50}};\n// Dmg 166/c Range:900\nexport const EQUIP_STAPLE_GUN_HEAVY = {name: \"Heavy Staple Gun\", objType:OBJ_EQUIP, type:EQUIP_TYPE_PRIMARY_WEAPON, coolTime:3, cool:0, damage:5, speed:3, lifetime:300, jitter:0.15, bulletFile:BULLET_STAPLE_FILE,\n  cost: {titanium:10, gold:30, uranium:50}};\n\n// Secondary (more at end of file after the ships)\nexport const EQUIP_SHIELD = {name: \"Force Shield\", objType:OBJ_EQUIP, type:EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 600,\n  shield: {active:false, armor: 500, armorMax:500, lifetime:240, lifetimeMax:240, spriteFile: SHIELD_BLUE_FILE, radius:0},\n  cost: {titanium:0, gold:0, uranium:100}};\nexport const EQUIP_SHIELD_LONG = {name: \"Long Shield\", objType:OBJ_EQUIP, type:EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 1500,\n  shield: {active:false, armor: 300, armorMax:300, lifetime:1000, lifetimeMax:1000, spriteFile: SHIELD_WHITE_FILE, radius:0},\n  cost: {titanium:0, gold:0, uranium:100}};\nexport const EQUIP_SHIELD_STRONG = {name: \"Strong Shield\", objType:OBJ_EQUIP, type:EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 750,\n  shield: {active:false, armor: 1500, armorMax:1500, lifetime:400, lifetimeMax:400, spriteFile: SHIELD_GREEN_FILE, radius:0},\n  cost: {titanium:0, gold:0, uranium:100}};\nexport const EQUIP_SHIELD_ULTRA = {name: \"Ultra Shield\", objType:OBJ_EQUIP, type:EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 1500,\n  shield: {active:false, armor: 1000, armorMax:1000, lifetime:750, lifetimeMax:750, spriteFile: SHIELD_BLUE_FILE, radius:0},\n  cost: {titanium:0, gold:0, uranium:100}};\n\n// Droids\nexport const EQUIP_R2D2 = {name: \"R2D2 Repair Droid\", objType:OBJ_EQUIP, type:EQUIP_TYPE_REPAIR_DROID, repairSpeed:0.03,\n  cost: {titanium:20, gold:100, uranium:50}};\nexport const EQUIP_GUNNERY_DROID = {name: \"Gunnery Droid\", objType:OBJ_EQUIP, type:EQUIP_TYPE_GUNNERY_DROID,\n  weapon:EQUIP_FAST_BLASTER, cost: {titanium:100, gold:200, uranium:300}};\n\n\n// Ships\nexport const SHIP_EXPLORER = {\n  name: \"Explorer\",\n  objType:OBJ_SHIP,\n  propulsion: 0.05, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 50,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 2,\n  equip : [EQUIP_BRAKE, EQUIP_BLASTER], // DEBUG blaster\n  armorMax: 50,\n  armor: 50,\n  crashSpeed: 2,\n  crashAngle: 0.5,\n  imageScale: 0.6,\n  imageFile: SHIP_EXPLORER_FILE,\n  cost: {titanium:40, gold:30, uranium:30},\n};\n\nexport const SHIP_CARGO = {\n  name: \"Cargo\",\n  objType:OBJ_SHIP,\n  propulsion: 0.027, // best between 0.02 - 0.1\n  turnSpeed: 0.04, // // best between 0.3 - 0.07\n  resourcesMax: 600,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 2,\n  equip : [EQUIP_BRAKE],\n  armorMax: 20,\n  armor: 20,\n  crashSpeed: 1.2,\n  crashAngle: 0.3,\n  imageScale: 1,\n  imageFile: SHIP_CARGO_FILE,\n  cost: {titanium:100, gold:50, uranium:50},\n};\n\nexport const SHIP_FAST = {\n  name: \"Fast\",\n  objType:OBJ_SHIP,\n  propulsion: 0.1, // best between 0.02 - 0.1\n  turnSpeed: 0.08, // // best between 0.3 - 0.07\n  resourcesMax: 40,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 3,\n  equip : [EQUIP_BRAKE],\n  armorMax : 50,\n  armor: 50,\n  crashSpeed: 2,\n  crashAngle: 0.5,\n  imageScale: 0.6,\n  imageFile: SHIP_FAST_FILE,\n  cost: {titanium:200, gold:100, uranium:50},\n};\n\n\nexport const SHIP_SKELETON = {\n  name: \"Skeleton\",\n  objType:OBJ_SHIP,\n  propulsion: 0.03, // best between 0.02 - 0.1\n  turnSpeed: 0.045, // // best between 0.3 - 0.07\n  resourcesMax: 30,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 7,\n  equip : [],\n  armorMax : 50,\n  armor: 50,\n  crashSpeed: 2,\n  crashAngle: 0.5,\n  imageScale: 0.75,\n  imageFile: SHIP_SKELETON_FILE,\n  cost: {titanium:150, gold:150, uranium:50},\n};\n\nexport const SHIP_HEAVY = {\n  name: \"Heavy\",\n  objType:OBJ_SHIP,\n  propulsion: 0.05, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 300,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 6,\n  equip : [EQUIP_BRAKE],\n  armorMax : 300,\n  armor: 300,\n  crashSpeed: 1.5,\n  crashAngle: 0.4,\n  imageScale: 0.5,\n  imageFile: SHIP_HEAVY_FILE,\n  cost: {titanium:500, gold:300, uranium:150},\n};\n\nexport const SHIP_FIGHTER = {\n  name: \"Fighter\",\n  objType:OBJ_SHIP,\n  propulsion: 0.08, // best between 0.02 - 0.1\n  turnSpeed: 0.07, // // best between 0.3 - 0.07\n  resourcesMax: 120,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 6,\n  equip : [EQUIP_BRAKE],\n  armorMax : 200,\n  armor: 200,\n  crashSpeed: 1.5,\n  crashAngle: 0.6,\n  imageScale: 0.6,\n  imageFile: SHIP_FIGHTER_FILE,\n  cost: {titanium:500, gold:500, uranium:500},\n};\n\nexport const SHIP_ALIEN_TURRET = {\n  name: \"Alien Turret\",\n  objType:OBJ_SHIP,\n  propulsion: 0.05, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 3,\n  equip : [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER],\n  armorMax: 100,\n  armor: 100,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.8,\n  imageFile: ALIEN_SHIP_SMALL_FILE,\n  cost: {titanium:50, gold:50, uranium:50},\n  aiType: ALIEN_AI_TURRET,\n};\n\nexport const SHIP_ALIEN = {\n  name: \"Alien Ship\",\n  objType:OBJ_SHIP,\n  propulsion: 0.05, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 3,\n  equip : [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER],\n  armorMax: 100,\n  armor: 100,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.9,\n  imageFile: ALIEN_SHIP_FILE,\n  cost: {titanium:150, gold:100, uranium:80},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const SHIP_ALIEN_LARGE = {\n  name: \"Alien Large\",\n  objType:OBJ_SHIP,\n  propulsion: 0.03, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 3,\n  equip : [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER],\n  armorMax: 300,\n  armor: 300,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1,\n  imageFile: ALIEN_SHIP_LARGE_FILE,\n  cost: {titanium:150, gold:100, uranium:80},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const SHIP_ALIEN_FIRE = {\n  name: \"Alien Fire\",\n  objType:OBJ_SHIP,\n  propulsion: 0.08, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 3,\n  equip : [EQUIP_BRAKE, EQUIP_STAPLE_GUN],\n  armorMax: 250,\n  armor: 250,\n  crashSpeed: 2,\n  crashAngle: 0.4,\n  imageScale: 1.5,\n  imageFile: ALIEN_SHIP_FIRE_FILE,\n  cost: {titanium:250, gold:200, uranium:80},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const SHIP_ALIEN_STEALTH = {\n  name: \"Alien Stealth\",\n  objType:OBJ_SHIP,\n  propulsion: 0.04, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 3,\n  equip : [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER],\n  armorMax: 150,\n  armor: 150,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1.5,\n  imageFile: ALIEN_SHIP_BLACK_FILE,\n  cost: {titanium:100, gold:200, uranium:150},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const SHIP_MINE = {\n  name: \"Mine\",\n  objType:OBJ_SHIP,\n  propulsion: 0.0,\n  turnSpeed: 0.0,\n  resourcesMax: 0,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 0,\n  equip : [],\n  armorMax: 100,\n  armor: 100,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1.2,\n  imageFile: ALIEN_SHIP_BLUE_FILE,\n  cost: {titanium:5, gold:0, uranium:10},\n  aiType: EQUIP_AI_MINE,\n  aiData: {mineDistance: 300}\n};\n\nexport const SHIP_TURRET = {\n  name: \"Turret\",\n  objType:OBJ_SHIP,\n  propulsion: 0.0,\n  turnSpeed: 0.0,\n  resourcesMax: 0,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 0,\n  equip : [EQUIP_FAST_BLASTER],\n  armorMax: 100,\n  armor: 100,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.6,\n  imageFile: ALIEN_SHIP_LARGE_BLUE_FILE,\n  cost: {titanium:10, gold:10, uranium:20},\n  aiType: EQUIP_AI_TURRET,\n  aiData: {mineDistance: 300}\n};\n\nexport const SHIP_MISSILE = {\n  name: \"Missile\",\n  objType:OBJ_SHIP,\n  propulsion: 0.08, // best between 0.02 - 0.1\n  turnSpeed: 0.25, // // best between 0.3 - 0.07\n  resourcesMax: 0,\n  resources: {\n    titanium : 0,\n    gold : 0,\n    uranium : 0,\n  },\n  equipMax: 0,\n  equip : [],\n  armorMax: 150,\n  armor: 150,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1,\n  imageFile: SHIP_BALL_FILE,\n  cost: {titanium:5, gold:5, uranium:10},\n  aiType: EQUIP_AI_MISSILE,\n};\n\nexport const ALL_SHIPS = [SHIP_EXPLORER, SHIP_CARGO, SHIP_FAST, SHIP_SKELETON, SHIP_HEAVY, SHIP_FIGHTER,\n SHIP_ALIEN, SHIP_ALIEN_TURRET, SHIP_ALIEN_LARGE, SHIP_ALIEN_FIRE, SHIP_ALIEN_STEALTH];\n\n// This equipment needs to go after the ships (ugh)\nexport const EQUIP_MINE_DEPLOYER = {name: \"Mine Deployer\", objType:OBJ_EQUIP, type:EQUIP_TYPE_SECONDARY_WEAPON, coolTime:25, cool:0,\n  createShip: {type: SHIP_MINE, dir: DIR_BEHIND_SHIP },\n  cost: {titanium:30, gold:50, uranium:100}};\nexport const EQUIP_TURRET_DEPLOYER = {name: \"Turret Deployer\", objType:OBJ_EQUIP, type:EQUIP_TYPE_SECONDARY_WEAPON, coolTime:100, cool:0,\n  createShip: {type:SHIP_TURRET, dir: DIR_BEHIND_SHIP},\n  cost: {titanium:100, gold:100, uranium:200}};\nexport const EQUIP_MISSILE_LAUNCHER = {name: \"Missile Launcher\", objType:OBJ_EQUIP, type:EQUIP_TYPE_SECONDARY_WEAPON, coolTime:75, cool:0,\n  createShip: {type: SHIP_MISSILE, dir: DIR_AHEAD_OF_SHIP},\n  cost: {titanium:50, gold:50, uranium:100}};\n\nexport const EQUIP_UPGRADES = [EQUIP_BRAKE, EQUIP_BLINK_BRAKE, EQUIP_THRUSTER, EQUIP_BLINK_THRUSTER,  EQUIP_ARMOR, EQUIP_SPEED_BOOST, EQUIP_TURN_BOOST,\n  EQUIP_STORAGE, EQUIP_ENHANCED_ARMOR, EQUIP_ENHANCED_STORAGE ];\nexport const EQUIP_PRIMARY_WEAPONS = [EQUIP_BLASTER, EQUIP_FAST_BLASTER, EQUIP_STREAM_BLASTER, EQUIP_SPRINKLER_BLASTER, EQUIP_ALIEN_BLASTER, EQUIP_STAPLE_GUN, EQUIP_STAPLE_GUN_HEAVY, EQUIP_ALIEN_BLASTER_FAST, EQUIP_ALIEN_BLASTER_LIGHTNING];\nexport const EQUIP_SECONDARY_WEAPONS = [EQUIP_MINE_DEPLOYER, EQUIP_TURRET_DEPLOYER, EQUIP_MISSILE_LAUNCHER, EQUIP_SHIELD, EQUIP_SHIELD_LONG, EQUIP_SHIELD_STRONG, EQUIP_SHIELD_ULTRA];\nexport const EQUIP_DROIDS = [EQUIP_R2D2, EQUIP_GUNNERY_DROID];\nexport const ALL_EQUIP = [...EQUIP_UPGRADES, ...EQUIP_PRIMARY_WEAPONS, ...EQUIP_SECONDARY_WEAPONS, ...EQUIP_DROIDS];\n\nexport const XP_LEVELS = {\n  // Mining resources\n  [ROCK_PLANET_FILE] : [\n    {xp:1, obj:SHIP_EXPLORER},\n    {xp:50, obj:EQUIP_BRAKE},\n    {xp:80, obj:EQUIP_BLASTER},\n    {xp:100, obj:SHIP_CARGO},\n    {xp:200, obj:EQUIP_ARMOR},\n    {xp:500, obj:EQUIP_SPEED_BOOST},\n  ],\n  [RED_PLANET_FILE] : [\n    {xp:10, obj:EQUIP_STORAGE},\n    {xp:50, obj:EQUIP_THRUSTER},\n    {xp:100, obj:SHIP_FAST},\n  ],\n  [GREEN_PLANET_FILE] : [\n    {xp:10, obj:SHIP_SKELETON},\n    {xp:50, obj:EQUIP_R2D2},\n    {xp:100, obj:EQUIP_BLINK_THRUSTER},\n    {xp:1000, obj:SHIP_HEAVY},\n  ],\n  [PURPLE_PLANET_FILE] : [\n    {xp:10, obj:EQUIP_TURN_BOOST},\n    {xp:400, obj:EQUIP_GUNNERY_DROID},\n    {xp:750, obj:EQUIP_SHIELD_STRONG},\n    {xp:1000, obj:SHIP_FIGHTER}\n  ],\n  // Killing aliens\n  [SHIP_ALIEN_TURRET.name] : [\n    {xp:1, obj:EQUIP_FAST_BLASTER},\n    {xp:3, obj:EQUIP_BLINK_BRAKE},\n    {xp:5, obj:EQUIP_ALIEN_BLASTER},\n    {xp:7, obj:EQUIP_SHIELD},\n  ],\n  [SHIP_ALIEN.name] : [\n    {xp:1, obj:EQUIP_MINE_DEPLOYER},\n    {xp:4, obj:EQUIP_STREAM_BLASTER},\n    {xp:7, obj:EQUIP_ENHANCED_STORAGE},\n    {xp:10, obj:SHIP_ALIEN},\n  ],\n  [SHIP_ALIEN_LARGE.name] : [\n    {xp:5, obj:EQUIP_SHIELD_LONG},\n    {xp:4, obj:EQUIP_ALIEN_BLASTER_FAST},\n    {xp:7, obj:EQUIP_TURRET_DEPLOYER},\n    {xp:10, obj:SHIP_ALIEN_LARGE},\n  ],\n  [SHIP_ALIEN_STEALTH.name] : [\n    {xp:1, obj:EQUIP_SPRINKLER_BLASTER},\n    {xp:5, obj:EQUIP_MISSILE_LAUNCHER},\n    {xp:10, obj:EQUIP_ALIEN_BLASTER_LIGHTNING},\n  ],\n  [SHIP_ALIEN_FIRE.name] : [\n    {xp:1, obj:EQUIP_STAPLE_GUN},\n    {xp:4, obj:EQUIP_ENHANCED_ARMOR},\n    {xp:7, obj:EQUIP_SHIELD_ULTRA},\n    {xp:10, obj:EQUIP_STAPLE_GUN_HEAVY},\n    {xp:15, obj:SHIP_ALIEN_FIRE},\n  ],\n}\n\nexport const PLANET_DENSITY = new Map();\nPLANET_DENSITY.set(GREEN_PLANET_FILE, 0.01)\nPLANET_DENSITY.set(PURPLE_PLANET_FILE, 0.015)\nPLANET_DENSITY.set(RED_PLANET_FILE, 0.02)\nPLANET_DENSITY.set(ROCK_PLANET_FILE, 0.025)\n\n// Universe Rings\nexport const UNIVERSE_RINGS = [\n  { planetCount: 1,\n    minDist: 1, maxDist: 2,\n    minDistToOtherPlanet:10,\n    minPlanetRadius:1500, maxPlanetRadius:1501,\n    planetFiles:[PURPLE_PLANET_FILE],\n    aliens: [{count: 0, file: null}],\n  },\n  { planetCount: 0,\n    minDist: 1600, maxDist: 2500,\n    minDistToOtherPlanet:200,\n    minPlanetRadius:200, maxPlanetRadius:200,\n    planetFiles:[],\n    aliens: [{count: 50, file: SHIP_ALIEN_STEALTH}, {count: 50, file: SHIP_ALIEN_FIRE}, ],\n  },\n  { planetCount: 200,\n    minDist: 2500, maxDist: 10000,\n    minDistToOtherPlanet:150,\n    minPlanetRadius:250, maxPlanetRadius:500,\n    planetFiles:[RED_PLANET_FILE, PURPLE_PLANET_FILE, GREEN_PLANET_FILE],\n    aliens: [{count: 200, file: SHIP_ALIEN_TURRET}, {count: 200, file: SHIP_ALIEN}, {count: 700, file: SHIP_ALIEN_LARGE}, {count: 300, file: SHIP_ALIEN_STEALTH}, ],\n  },\n  { planetCount: 600,\n    minDist: 10000, maxDist: 15000,\n    minDistToOtherPlanet:150,\n    minPlanetRadius:150, maxPlanetRadius:250,\n    planetFiles:[ROCK_PLANET_FILE, RED_PLANET_FILE, GREEN_PLANET_FILE],\n    aliens: [{count: 1000, file: SHIP_ALIEN_TURRET}, {count: 1000, file: SHIP_ALIEN}, {count: 300, file: SHIP_ALIEN_LARGE},],\n  },\n  { planetCount: 2000,\n    minDist: 15000, maxDist: 25000,\n    minDistToOtherPlanet:200,\n    minPlanetRadius:130, maxPlanetRadius:200,\n    planetFiles:[ROCK_PLANET_FILE, RED_PLANET_FILE],\n    aliens: [{count: 1500, file: SHIP_ALIEN_TURRET}, {count: 100, file: SHIP_ALIEN}],\n  },\n  { planetCount: 500,\n    minDist: 25000, maxDist: 28000,\n    minDistToOtherPlanet:300,\n    minPlanetRadius:150, maxPlanetRadius:180,\n    planetFiles:[ROCK_PLANET_FILE],\n    aliens: [],\n  },\n  { planetCount: 800,\n    minDist: 28000, maxDist: UNIVERSE_RADIUS,\n    minDistToOtherPlanet:500,\n    minPlanetRadius:50, maxPlanetRadius:120,\n    planetFiles:[ROCK_PLANET_FILE],\n    aliens: [],\n  },\n];\n","import { c, utils, fly, manage } from './';\nimport lodash from 'lodash';\n\n/**\n * Creates an empty world object, with only basic properties. \n * This will be populated by setupWorld()\n */\nexport function createEmptyWorld() {\n  return {\n    saveGameName: null, // name of last game saved/loaded\n    ship:null,\n    view: { // global XY for current view (in manage mode, always ship.xy in fly mode)\n      x:0,\n      y:0,\n    },\n    ships:[],\n    planets:[],\n    selectedPlanet: {resources:{}},\n    lastPlanetLanded: null,\n    blueprints: {\n      ship:[],\n      equip:[],\n      xp: { [c.ROCK_PLANET_FILE]: 0, [c.RED_PLANET_FILE]: 0, [c.GREEN_PLANET_FILE]: 0, [c.PURPLE_PLANET_FILE]: 0,\n           [c.SHIP_ALIEN_TURRET.name]: 0, [c.SHIP_ALIEN.name]: 0, [c.SHIP_ALIEN_LARGE.name]: 0, [c.SHIP_ALIEN_STEALTH.name]: 0, [c.SHIP_ALIEN_FIRE.name]: 0},\n      xpLevels: lodash.cloneDeep(c.XP_LEVELS),\n    },\n    nextId: 100, // unique ID for sprites, equip, etc...\n    // everything in system is transient and not serialized when saving the game\n    system: {\n      keys: {}, // Global keypress handlers\n      app: null, // Pixi App\n      gameState: c.GAME_STATE.INIT, // Current game state\n      isTyping: false, // used to stop keypress events ('w') when user is typing in input\n      gameLoop: null, // loop function in this state\n      bgSprite: null, // star background\n      explosionSheet: null, // spritesheet for explosions\n      explosions : [], //contains sprites\n      bullets: [], // contains all the bullets\n      nearby: {planets:[], ships:[]}, // ships and planets near enough for collision detection and running AI\n      planetSpriteCache: {}, // {\"green_planet.png\" : Map(id:sprite, id:sprite)... }\n      shipSpriteCache: {}, // {\"alien_small.png\" : Map(id:sprite, id:sprite)... }\n      shieldSpriteCache: new Map(), // These sprites are each added to a ship and not reused\n      spriteContainers: {background:null, planets:null, bullets:null, ships:null, minimap:null},\n      miniMapGraphics: null, // used as a canvas for drawing the miniMap\n      initializing: true, // set to false when the game fully running (after first draw)\n    },\n  };\n}\n\nexport function setupWorld() {\n  const world = window.world;\n  setupSpriteContainers();\n  createBackground();\n  createPlanets();\n  // Default selectedPlanet, shouldn't be displayed\n  world.selectedPlanet = world.planets[0];\n  window.world.shipStartX = c.PLAYER_START_X;\n  //window.world.shipStartX = +1550;\n  window.world.shipStartY = c.PLAYER_START_Y;\n  world.ship = createShip(c.SHIP_EXPLORER, c.PLAYER);\n  //world.ship = createShip(c.SHIP_HEAVY, c.PLAYER);\n  const shipSprite = getShipSprite(world.ship);\n  shipSprite.visible = true;\n  world.ship.resources = c.PLAYER_STARTING_RESOURCES;\n\n  // DEBUG SHIP\n  // world.ship.armorMax = 1000;\n  // world.ship.armor = 1000;\n  // world.ship.resources = {titanium:10000, gold:10000, uranium:10000 };\n  // world.ship.resourcesMax = 10000000;\n  // world.ship.equip = [c.EQUIP_BLINK_BRAKE, c.EQUIP_BLINK_THRUSTER, lodash.cloneDeep(c.EQUIP_SHIELD), lodash.cloneDeep(c.EQUIP_STREAM_BLASTER)];\n  // world.ship.equipMax = world.ship.equip.length;\n  // world.blueprints.equip = [...c.ALL_EQUIP];\n  // world.blueprints.ship = [...c.ALL_SHIPS];\n\n  // DEBUG test alien\n  // createAlien(c.SHIP_ALIEN_TURRET, c.PLAYER_START_X + 450, c.PLAYER_START_Y+70);\n  // createAlien(c.SHIP_ALIEN_LARGE, c.PLAYER_START_X + 450, c.PLAYER_START_Y-70);\n\n  // DEBUG Planet\n  // let testPlanet = createPlanet(c.GREEN_PLANET_FILE, \"home\", 100, 200, {\n  //   titanium : 20500,\n  //   gold : 51000,\n  //   uranium : 5000,\n  // });\n  // testPlanet.x = c.PLAYER_START_X - 150;\n  // testPlanet.y = c.PLAYER_START_Y ;\n  // testPlanet.resources.stored = {titanium:10000, gold:10000, uranium:10000};\n\n  createAliens();\n  setupMiniMap();\n  setupExplosionSheet();\n}\n\n/**\n * Sets up the sprite containers in the correct display order\n */\nexport function setupSpriteContainers() {\n  let mainStage = window.world.system.app.stage;\n  let spriteContainers = window.world.system.spriteContainers;\n  spriteContainers.background = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.background);\n\n  spriteContainers.planets = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.planets);\n\n  spriteContainers.bullets = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.bullets);\n\n  spriteContainers.ships = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.ships);\n\n  spriteContainers.minimap = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.minimap);\n}\n\nexport function createBackground() {\n  let container = window.world.system.spriteContainers.background;\n  window.world.system.bgSprite = new window.PIXI.TilingSprite(\n    window.PIXI.Texture.from(c.STAR_BACKGROUND_FILE),\n    c.SCREEN_WIDTH,\n    c.SCREEN_HEIGHT,\n  );\n  container.addChild(window.world.system.bgSprite);\n}\n\nexport function createPlanets() {\n  let container = window.world.system.spriteContainers.planets;\n  for (let ring of c.UNIVERSE_RINGS) {\n    for (let i=0; i<ring.planetCount; i++) {\n      let fileName = ring.planetFiles[utils.randomInt(0, ring.planetFiles.length-1)];\n      let name = String.fromCharCode(65+Math.floor(Math.random() * 26)) + utils.randomInt(1000,999999);\n      let radius = utils.randomInt(ring.minPlanetRadius, ring.maxPlanetRadius);\n      let mass = radius * radius * c.PLANET_DENSITY.get(fileName);\n      let maxResource = mass * 2 * 0.3;\n      let minResource = mass * 0.1;\n      // Setup the planet\n      let planet = createPlanet(fileName, name, radius, mass, {\n        titanium : utils.randomInt(minResource, maxResource),\n        gold : utils.randomInt(minResource, maxResource),\n        uranium : utils.randomInt(minResource, maxResource),\n      }, container);\n      let {x,y} = getFreeXy(planet, ring.minDistToOtherPlanet, 0, ring.minDist, ring.maxDist);\n      planet.x = x;\n      planet.y = y;\n    }\n  }\n}\n\n/**\n * Distance to the nearest planet that is not equal to origPlanet\n * @return {{nearestPlanetDist: number, nearestPlanet: null}}\n */\nfunction nearestPlanetDistance(origPlanet, x, y) {\n  let minDist = 99999999999; \n  let nearestPlanet = null;\n  for (let planet of window.world.planets) {\n    if (planet !== origPlanet) {\n      let dist = utils.distanceBetween(x,y, planet.x,planet.y) - planet.radius;\n      if (origPlanet) {\n        dist -= origPlanet.radius;\n      }\n      if (!nearestPlanet || (dist < minDist)) {\n        minDist = dist;\n        nearestPlanet = planet;\n      }\n    }\n  } // for planet\n  return {nearestPlanet:nearestPlanet, nearestPlanetDist:minDist};\n}\n\n/**\n * Distance to the nearest alien\n * @return {{nearestAlien: null, nearestAlienDist: number}}\n */\nfunction nearestAlienDistance(x, y) {\n  let minDist = 99999999999; \n  let nearestAlien = null;\n  for (let alien of window.world.system.nearby.ships) {\n    // This assumes the calling code alien is the same size\n    let dist = utils.distanceBetween(x,y, alien.x, alien.y) - (alien.radius * 2);\n    if (!nearestAlien || (dist < minDist)) {\n      minDist = dist;\n      nearestAlien = alien;\n    }\n  } // for\n  return {nearestAlien:nearestAlien, nearestAlienDist:minDist};\n}\n\n/**\n * Find a free spot of space to stick something\n * This will recurse until it finds a free spot.\n * @return {{x, y}}\n */\nfunction getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, failCount=0) {\n  let dir = utils.randomFloat(0, Math.PI*2);\n  let dist = utils.randomInt(minDist, maxDist);\n  let {x,y} = utils.getPointFrom(0,0, dir, dist);\n  let np = 9999;\n  if (minDistToPlanet > 0) {\n    let {nearestPlanetDist} = nearestPlanetDistance(planet, x,y);\n    if (nearestPlanetDist < minDistToPlanet) {\n      return getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, ++failCount);\n    }\n    np = nearestPlanetDist;\n  }\n  if (minDistToAlien > 0) {\n    let {nearestAlienDist} = nearestAlienDistance(x,y);\n    if (nearestAlienDist < minDistToAlien) {\n      return getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, ++failCount);\n    }\n  }\n  if (failCount > 200) {\n    console.warn(\"Had a hard time finding a spot, it took \"+failCount+\" tries on ring \"+minDist+\" np=\"+np);\n  }\n  return {x,y};\n}\n\n// Creates and returns a planet (and adds it to the app)\nexport function createPlanet(planetFile, name, radius, mass, resources) {\n  let planet = {};\n  planet.name = name; \n  planet.x = 0; // temp should get reset\n  planet.y = 0; // temp should get reset\n  planet.mass = mass;\n  planet.resources = {\n    stored: {titanium:0, gold:0, uranium:0},\n    raw: resources\n  };\n  planet.ships = []; // stored ships \n  planet.equip = []; // stored equipment\n  planet.buildings = []; // mines, factories\n  planet.radius = radius;\n  planet.lastLandingDir = 0;\n  planet.spriteFile = planetFile;\n  planet.spriteId = null; // no sprite created yet\n  window.world.planets.push(planet);\n  return planet;\n}\n\n/**\n * Finds or creates a planet sprite.\n * This cache works a little different, no sprites are re-used.\n * Once a planetSprite is created the buildings are added and it stays attached to the planet\n * Otherwise we would have to empty out the container and redraw the planet and buildings each time\n */\nexport function getPlanetSprite(planet) {\n  let planetSpriteCache = window.world.system.planetSpriteCache[planet.spriteFile];\n  // No cache for this file yet - create an empty cache\n  if (!planetSpriteCache) {\n    planetSpriteCache= new Map();\n    window.world.system.planetSpriteCache[planet.spriteFile] = planetSpriteCache;\n  }\n  // Lookup the sprite in the cache by ID\n  let planetContainer = planetSpriteCache.get(planet.spriteId);\n  if (planetContainer) {\n    return planetContainer;\n  }\n  // Setup the planet container sprite (contains planet plus buildings)\n  planetContainer = new window.PIXI.Container();\n  planetContainer.x = 0; // will be set on every draw\n  planetContainer.y = 0;\n  planetContainer.visible = true;\n  window.world.system.spriteContainers.planets.addChild(planetContainer);\n\n  // Setup the planet sprite itself\n  const planetSprite = new window.PIXI.Sprite(\n    window.PIXI.loader.resources[c.SPRITESHEET_JSON].textures[planet.spriteFile]);\n  planetSprite.anchor.set(0.5, 0.5);\n  let spriteScale = planet.radius * 2 / planetSprite.width;\n  // Planets with atmosphere are a little smaller than the full image size\n  if ((planet.spriteFile === c.PURPLE_PLANET_FILE) || (planet.spriteFile === c.GREEN_PLANET_FILE)) {\n    spriteScale = spriteScale * 1.08;\n  }\n  planetSprite.scale.set(spriteScale, spriteScale);\n  planetContainer.addChild(planetSprite);\n\n  for (const building of planet.buildings) {\n    manage.makeBuildingSprite(building, planet, planetContainer);\n  }\n\n  // Cache the new sprite\n  planet.spriteId = window.world.nextId++;\n  planetSpriteCache.set(planet.spriteId, planetContainer);\n  return planetContainer;\n}\n\n/**\n * Finds or creates a sprite for the ship\n * NOTE: This will return a non-visible sprite, the calling code is responsible for making the sprite visible\n */\nexport function getShipSprite(ship) {\n  // if (!ship.alive) {\n  //   console.warn('You should not get sprites for dead ships.');\n  //   console.trace();\n  //   window.error(); // does not exist... thus an error!\n  //   return;\n  // }\n  let shipSpriteCache = window.world.system.shipSpriteCache[ship.imageFile];\n  // No cache for this file yet - create an empty cache\n  if (!shipSpriteCache) {\n    shipSpriteCache= new Map();\n    window.world.system.shipSpriteCache[ship.imageFile] = shipSpriteCache;\n  }\n  // Lookup the sprite in the cache by ID\n  let sprite = shipSpriteCache.get(ship.spriteId);\n  if (sprite) {\n    return sprite;\n  }\n  // Lookup a free sprite (dead or off-screen alien)\n  for (let [spriteId, foundSprite] of shipSpriteCache.entries()) {\n    if (!foundSprite.visible) {\n      foundSprite.visible = false;\n      foundSprite.rotation = ship.rotation;\n      ship.spriteWidth = foundSprite.width;\n      ship.spriteHeight = foundSprite.height;\n      ship.radius = foundSprite.width/2; // used for circular aliens\n      ship.spriteId = spriteId;\n      //console.log('found old sprite '+spriteId+' '+ship.imageFile);\n      return foundSprite;\n    }\n  } // foundSprite\n\n  // No sprite found - create a new one\n  let spriteSheet = window.PIXI.loader.resources[c.SPRITESHEET_JSON];\n  sprite = new window.PIXI.Sprite(spriteSheet.textures[ship.imageFile]);\n  sprite.position.set(c.HALF_SCREEN_WIDTH, c.HALF_SCREEN_HEIGHT);\n  sprite.anchor.set(0.5, 0.5);  // pivot on ship center\n  sprite.scale.set(ship.imageScale, ship.imageScale);\n  sprite.rotation = ship.rotation;\n  sprite.visible = false;\n  ship.spriteWidth = sprite.width;\n  ship.spriteHeight = sprite.height;\n  ship.radius = sprite.width/2; // used for circular aliens\n  ship.spriteId = window.world.nextId++;\n  shipSpriteCache.set(ship.spriteId, sprite);\n  window.world.system.spriteContainers.ships.addChild(sprite);\n  //console.log('created new ship sprite '+ship.imageFile, sprite);\n  return sprite;\n}\n\n/**\n * @return The original width/height of the sprite before scaling was applied\n *   {width, height}\n */\nexport function getSpriteOrigWithHeight(sprite) {\n  const origWidth = sprite.width;\n  const origHeight = sprite.height;\n  sprite.scale.set(1,1);\n  const width = sprite.width;\n  const height = sprite.height;\n  sprite.width = origWidth;\n  sprite.height = origHeight;\n  return {width, height};\n}\n\nexport function getShieldSprite(ship, shield) {\n  const cacheId = ship.id+'~'+shield.spriteFile;\n  // Lookup the sprite in the cache by ID\n  let shieldSprite = window.world.system.shieldSpriteCache.get(cacheId);\n  if (shieldSprite) {\n    return shieldSprite;\n  }\n  // Add a new shield image to the ship\n  const shipSprite = getShipSprite(ship);\n  let spriteSheet = window.PIXI.loader.resources[c.SPRITESHEET_JSON];\n  shieldSprite = new window.PIXI.Sprite(spriteSheet.textures[shield.spriteFile]);\n  shieldSprite.anchor.set(0.5, 0.5);  // pivot on center\n  const {width, height} = getSpriteOrigWithHeight(shipSprite);\n  // Radius within the scaled ship sprite\n  const shieldWidth = Math.max(width, height) * 1.5; // 1.5 to make it larger than the ship\n  shieldSprite.width = shieldWidth;\n  shieldSprite.height = shieldWidth;\n  shield.radius = (shieldWidth * ship.imageScale) / 2; // size without ship scaling\n  shipSprite.addChild(shieldSprite);\n  window.world.system.shieldSpriteCache.set(cacheId, shieldSprite);\n  return shieldSprite;\n}\n\n// Creates and returns a ship object\nexport function createShip(shipType, owner) {\n  let ship = lodash.cloneDeep(shipType);\n  ship.id = window.world.nextId++;\n  for (let equip of ship.equip) {\n    equip.id = window.world.nextId++;\n  }\n  ship.owner = owner;\n  ship.vx = 0; // velocityX\n  ship.vy = 0; // velocityY\n  ship.x = window.world.shipStartX;\n  ship.y = window.world.shipStartY;\n  ship.spriteId = null; // no sprite yet\n  ship.alive = true; // set to false if it blows up\n  ship.spriteWidth = null; //We won't know until we load the sprite\n  ship.rotation = 0;\n  return ship;\n}\n\nexport function createAlien(shipType, x, y) {\n  let alien = createShip(shipType, c.ALIEN);\n  window.world.ships.push(alien);\n  alien.x = x;\n  alien.y = y;\n  alien.radius = 50; // will be set to a real value when sprite loads\n  return alien;\n}\n\nexport function createAliens() {\n  for (let ring of c.UNIVERSE_RINGS) {\n    for (const alienInfo of ring.aliens) {\n      for (let i=0; i<alienInfo.count; i++) {\n        let {x, y} = getFreeXy(null, c.MIN_ALIEN_DIST_TO_PLANET, c.MIN_ALIEN_DIST_TO_ALIEN, ring.minDist, ring.maxDist);\n        createAlien(alienInfo.file, x, y);\n      } // for i\n    } // for alienInfo\n  } // for ring\n}\n\nexport function setupMiniMap() {\n  let container = window.world.system.spriteContainers.minimap;\n  let miniMapContainer = new window.PIXI.Container();\n  container.addChild(miniMapContainer);\n\n  // Mask so drawings don't spill out of the map\n  let mask = new window.PIXI.Graphics();\n  mask.drawRect(0, c.SCREEN_HEIGHT-c.MINIMAP_HEIGHT, c.MINIMAP_WIDTH, c.SCREEN_HEIGHT);\n  mask.renderable = true;\n  mask.cacheAsBitmap = true;\n  miniMapContainer.addChild(mask);\n  miniMapContainer.mask = mask;  \n\n  // Graphics for drawing shapes on\n  let g = new window.PIXI.Graphics();\n  miniMapContainer.addChild(g);  \n  window.world.system.miniMapGraphics = g;\n}\n\n/**\n * Called when the user clicks on the screen \n */\nexport function click(event) {\n  let x = event.data.global.x;\n  let y = event.data.global.y;\n  if ((x < c.MINIMAP_WIDTH) && (y> c.SCREEN_HEIGHT-c.MINIMAP_HEIGHT)) {\n    fly.clickOnMinimap(x,y);\n  }\n}\n\nexport function changeGameState(newState) {\n  const world = window.world;\n  world.system.gameState = newState;\n  if (newState === c.GAME_STATE.FLY) {\n    fly.enterFlyState();\n    world.system.gameLoop = fly.flyLoop;\n  } else if (newState === c.GAME_STATE.MANAGE) {\n    manage.enterManageState();\n    world.system.gameLoop = manage.manageLoop;\n  } else {\n    world.system.gameLoop = null;\n  }\n}\n\n/**\n * Loop to run building, runs in any game mode (fly,manage)\n */\nexport function runBuildings() {\n  const world = window.world;\n  for (let planet of world.planets) {\n    for (let building of planet.buildings) {\n      if (building.type === c.BUILDING_TYPE_MINE) {\n        mineResource(planet, 'titanium', c.MINE_SPEED_TITANIUM);\n        mineResource(planet, 'gold', c.MINE_SPEED_GOLD);\n        mineResource(planet, 'uranium', c.MINE_SPEED_URANIUM);\n      }\n    } // for building\n    // If planet is out of resources stop the mine animations\n    if ( (planet.resources.raw.titanium === 0) \n      && (planet.resources.raw.gold === 0)\n      && (planet.resources.raw.uranium === 0)) {\n        const planetSprite = getPlanetSprite(planet);\n        for (const buildingSprite of planetSprite.children) {\n          // all animated sprites stop (this may not be true if new building types are added)\n          if (buildingSprite.animationSpeed) {\n            buildingSprite.animationSpeed = 0;\n          }\n        }\n    }\n  } // for planet\n}\n\nfunction mineResource(planet, resourceType, amount) {\n  if (planet.resources.raw[resourceType] > 0) {\n    planet.resources.raw[resourceType] -= amount;\n    planet.resources.stored[resourceType] += amount;\n    if (planet.resources.raw[resourceType] <= 0) {\n      planet.resources.raw[resourceType] = 0;\n    }\n    addMiningXp(amount, planet);\n  }\n}\n\nfunction addMiningXp(amount, planet) {\n  let blueprints = window.world.blueprints;\n  const xp = blueprints.xp[planet.spriteFile] += amount;\n  let nextLevel = blueprints.xpLevels[planet.spriteFile][0];\n  if (nextLevel && (nextLevel.xp <= xp)) {\n    addBlueprint(nextLevel);\n    // Remove the item\n    blueprints.xpLevels[planet.spriteFile].shift();\n  }\n}\n\nexport function addAlienXp(ship) {\n  let blueprints = window.world.blueprints;\n  const xp = blueprints.xp[ship.name] += 1;\n  let nextLevel = blueprints.xpLevels[ship.name][0];\n  if (nextLevel && (nextLevel.xp <= xp)) {\n    addBlueprint(nextLevel);\n    // Remove the item\n    blueprints.xpLevels[ship.name].shift();\n  }\n}\n\nexport function addBlueprint(nextLevel) {\n  utils.showToast('New plan: '+nextLevel.obj.name);\n  let blueprints = window.world.blueprints;\n  if (nextLevel.obj.objType === c.OBJ_EQUIP) {\n    blueprints.equip.push(nextLevel.obj);\n  } else if (nextLevel.obj.objType === c.OBJ_SHIP) {\n    blueprints.ship.push(nextLevel.obj);\n  } else {\n    console.warn(\"Could not find blueprint of type \"+nextLevel.obj.objType+\" nextLevel=\",nextLevel);\n  }\n}\n\n/**\n * Checks if the combined resources of planet and ship can afford the resources\n * Call this before calling payResourceCost\n * @return true if there are enough resources available\n */\nexport function canAfford(planet, ship, resources) {\n  let titanium = 0;\n  let gold = 0;\n  let uranium = 0;\n  if (planet) {\n    titanium += planet.resources.stored.titanium;\n    gold += planet.resources.stored.gold;\n    uranium += planet.resources.stored.uranium;\n  }\n  if (ship) {\n    titanium += ship.resources.titanium;\n    gold += ship.resources.gold;\n    uranium += ship.resources.uranium;\n  }\n  return (titanium >= resources.titanium)\n      && (gold >= resources.gold)\n      && (uranium >= resources.uranium);\n}\n\n/**\n * Pays the cost, taking from the planet and the ship as available\n * NOTE: This will not ensure you have enough resources, you can go into debt if you call this without checking\n * first using canAfford()\n * @param planet planet to get resources from\n * @param ship ship to get resources from\n * @param resources amount to pay\n */\nexport function payResourceCost(planet, ship, resources) {\n  payResource(planet, ship, 'titanium', resources.titanium);\n  payResource(planet, ship, 'gold', resources.gold);\n  payResource(planet, ship, 'uranium', resources.uranium);\n}\n\nexport function payResource(planet, ship, resourceType, amount) {\n  let paid = -amount; // amount owing (overwritten if some payment comes from the planet)\n  if (planet) {\n    paid = planet.resources.stored[resourceType] - amount; \n    if (paid >= 0) {\n      planet.resources.stored[resourceType] -= amount;\n      return;\n    } else {\n      // Planet can't afford this purchase, take some from the ship\n      planet.resources.stored[resourceType] = 0;\n    }\n  }\n  if (ship) { \n    ship.resources[resourceType] = ship.resources[resourceType] + paid;\n    if (ship.resources[resourceType] < 0) {\n      console.warn(\"Ship is in debt \"+ship.resources[resourceType]+\" \"+resourceType);\n    }\n  } else if (paid < 0) {\n    planet.resources.stored[resourceType] = planet.resources.stored[resourceType] + paid;\n    console.warn(\"Planet is in debt \"+planet.resources.stored[resourceType]+\" \"+resourceType);\n  }\n}\n\nexport function setupExplosionSheet() {\n  window.world.system.explosionSheet = window.PIXI.Loader.shared.resources[c.CRASH_JSON].spritesheet;\n  // Preload an explosion sprite animation (these will be cached and reused in world.system.explosions)\n  window.world.system.explosions.push(createExplosionSprite());\n}\n\nexport function createExplosionSprite() {\n  let sprite = new window.PIXI.AnimatedSprite(window.world.system.explosionSheet.animations[c.CRASH]);\n  sprite.animationSpeed = 0.4;\n  sprite.loop = false;\n  sprite.anchor.set(0.5, 0.5);\n  sprite.scale.set(2, 2);\n  sprite.x = c.HALF_SCREEN_WIDTH;\n  sprite.y = c.HALF_SCREEN_WIDTH;\n  sprite.loop = true;\n  sprite.visible = false;\n  window.world.system.explosions.push(sprite);\n  window.world.system.spriteContainers.bullets.addChild(sprite);\n  return sprite;\n}\n","import {utils, c, game, manage, ai } from './';\n\nexport function enterFlyState() {\n  console.log(\"Take off\");\n}\n\n// Main play mode - flying\nexport function flyLoop(delta) {\n  if (delta > 1.005) {\n    console.log('Lagging with delta='+delta);\n  }\n  let world = window.world;\n  let ship = window.world.ship;\n\n  // Cache all the nearby planets and ships\n  setupNearby();\n\n  // When ship.alive is false the ship is exploding\n  if (ship.alive) {\n    runDroids(ship);\n    // Keypress handling\n    if (world.system.keys.left.isDown || world.system.keys.a.isDown) {\n      turnShip(ship, true);\n    }\n    if (world.system.keys.right.isDown || world.system.keys.d.isDown) {\n      turnShip(ship, false);\n    }\n    if (world.system.keys.up.isDown || world.system.keys.w.isDown) {\n      propelShip(ship);\n    }\n    if (world.system.keys.down.isDown || world.system.keys.s.isDown) {\n      brakeShip(ship);\n    }\n    if (world.system.keys.space.isDown) {\n      firePrimaryWeapon(ship, 0.05);\n    }\n    if (world.system.keys.x.isDown) {\n      fireSecondaryWeapon(ship);\n    }\n    if (world.system.keys.q.isDown) {\n      thrustShip(ship, true);\n    }\n    if (world.system.keys.e.isDown) {\n      thrustShip(ship, false);\n    }\n\n    // Find planets in view\n    let planetsInView = [];\n    for (let planet of world.system.nearby.planets) {\n      if (planetInView(ship, planet)) {\n        planetsInView.push(planet);\n      }\n    }\n\n    // Gravity\n    for (let planet of planetsInView) {\n      let grav = utils.calcGravity(ship.x, ship.y, planet);\n      ship.vx += grav.x;\n      ship.vy += grav.y;\n    }\n\n    // move the ship\n    ship.x += ship.vx;\n    ship.y += ship.vy;\n    world.view.x = ship.x;\n    world.view.y = ship.y;\n\n    let shipSprite = game.getShipSprite(ship);\n    shipSprite.rotation = ship.rotation;\n\n    // Don't detect collisions until all the drawing is done\n    // Pixijs sometimes gets the sprite locations wrong when they haven't been rendered yet\n    if (!world.system.initializing) {\n      // Ship-Planet Collisions\n      for (let planet of planetsInView) {\n        if (detectCollisionWithPlanet(ship, shipSprite, planet)) {\n          landShip(ship, planet);\n          return; // exit loop\n        }\n      } // for planet\n      // Ship-Alien collision\n      for (let alien of world.system.nearby.ships) {\n        if (alien.alive && detectCollisionWithAlien(ship, shipSprite, alien)) {\n          shipsCollide(ship, alien);\n        }\n      }\n    }\n  }\n\n  moveExplosions(); // especially alien explosions\n  moveBackground(ship);\n  drawMiniMap();\n  // first draw is done\n  if (world.system.initializing) {\n    world.system.initializing = false;\n  }\n}\n\n\n/**\n * Creates a cache of all nearby planets and ships\n */\nexport function setupNearby() {\n  const nearby = window.world.system.nearby;\n  const ship = window.world.ship;\n  const minX = ship.x - c.NEARBY_WIDTH / 2;\n  const maxX = ship.x + c.NEARBY_WIDTH / 2;\n  const minY = ship.y - c.NEARBY_HEIGHT / 2;\n  const maxY = ship.y + c.NEARBY_HEIGHT / 2;\n\n  nearby.planets = [];\n  // for every planet\n  for (const planet of window.world.planets) {\n    if ((planet.x  + planet.radius >= minX) && (planet.x - planet.radius <= maxX ) &&\n        (planet.y + planet.radius >= minY) && (planet.y - planet.radius <= maxY )) {\n      nearby.planets.push(planet);\n    }\n  } // for planet\n\n  // for every ship\n  nearby.ships = [];\n  for (const ship of window.world.ships) {\n    if ((ship.x  + ship.radius >= minX) && (ship.x - ship.radius <= maxX ) &&\n      (ship.y + ship.radius >= minY) && (ship.y - ship.radius <= maxY )) {\n      nearby.ships.push(ship);\n    }\n  } // for ship\n}\n\n/**\n * Recalculates all the locations of planets and aliens\n */\nexport function repositionScreen() {\n  // Reposition all the planets\n  for (let planet of window.world.planets) {\n    planetInView(window.world.ship, planet);\n  }\n  // Reposition all the aliens\n  ai.moveAliens();\n  drawMiniMap();\n}\n\n/**\n * Cools all ship weapons, run in mainLoop \n */\nexport function coolAllWeapons() {\n  coolWeapons(window.world.ship);\n  for (let alien of window.world.system.nearby.ships) {\n    coolWeapons(alien);\n  }\n}\n\n/**\n * called in flyLoop to cool weapons\n */\nexport function coolWeapons(ship) {\n  for (let equip of ship.equip) {\n    // If equip has a cool time\n    if (equip.cool) {\n      equip.cool -= 1;\n    }\n    // Gunnery Droids are equip with weapons\n    if (equip.weapon && equip.weapon.cool) {\n      equip.weapon.cool -= 1;\n    }\n    if (equip.shield && equip.shield.active) {\n      equip.shield.lifetime  -= 1;\n      if (equip.shield.lifetime <= 0) {\n        equip.shield.lifetime = 0;\n        disableShield(ship, equip.shield);\n      }\n    }\n  }\n}\n\nexport function resetWeaponsCool(ship) {\n  for (let equip of ship.equip) {\n    if ((equip.type === c.EQUIP_TYPE_PRIMARY_WEAPON) && (equip.cool > 0)) {\n      equip.cool = 0;\n    }\n  }\n}\n\nexport function runDroids(ship) {\n  for (let droid of ship.equip) {\n    if ((droid.type === c.EQUIP_TYPE_REPAIR_DROID) && (ship.armor < ship.armorMax)) {\n      let cost = {titanium:droid.repairSpeed, gold:0, uranium:0};\n      if (game.canAfford(null, ship, cost)) {\n        ship.armor += droid.repairSpeed;\n        game.payResourceCost(null, ship, cost);\n      }\n    } else if (droid.type === c.EQUIP_TYPE_GUNNERY_DROID) {\n      shootAtNearestAlien(ship, droid.weapon);\n    }\n  } // for\n}\n\n/**\n * Fires the weapon in the direction of the nearest alien (if able to )\n */\nexport function shootAtNearestAlien(ship, weapon) {\n  // If we can't shoot, don't waste our time\n  if (weapon.cool > 0) {\n    return;\n  }\n  let nearestAlien = null;\n  let nearestAlienDist = null;\n  for (let alien of window.world.system.nearby.ships) {\n    if (alien.alive && alien.owner === c.ALIEN) {\n      let dist = utils.distanceBetween(ship.x, ship.y, alien.x, alien.y);\n      if (!nearestAlien || (dist < nearestAlienDist)) {\n        nearestAlien = alien;\n        nearestAlienDist = dist;\n      }\n    }\n  } // for\n  if (nearestAlien && (nearestAlienDist <= weaponRange(weapon))) {\n    const origDir = ship.rotation;\n    ship.rotation = utils.normalizeRadian(Math.atan2(nearestAlien.y - ship.y, nearestAlien.x - ship.x));\n    fireWeapon(weapon, ship, 0.1);\n    ship.rotation = origDir;\n  }\n}\n\nexport function moveBackground(ship) {\n  let bgSprite = window.world.system.bgSprite;\n  bgSprite.tilePosition.x = (100 - ship.x) + c.HALF_SCREEN_WIDTH;\n  bgSprite.tilePosition.y = (100 - ship.y) + c.HALF_SCREEN_HEIGHT;\n}\n\n/**\n * @return true if the planet is in view of the ship, false otherwise\n * NOTE: This will set the sprite.visible and sprite x/y attributes for the planet\n */\nexport function planetInView(ship, planet) {\n  // Right side\n  if ((ship.x + c.HALF_SCREEN_WIDTH + planet.radius < planet.x) || // Right\n      (ship.x - c.HALF_SCREEN_WIDTH - planet.radius > planet.x) || // Left\n      (ship.y + c.HALF_SCREEN_HEIGHT + planet.radius < planet.y) || // Bottom\n      (ship.y - c.HALF_SCREEN_HEIGHT - planet.radius > planet.y)) { // Top\n    // Planet is not currently visible, but if it has an Id then it used to be visible\n    if (planet.spriteId) {\n      const sprite = game.getPlanetSprite(planet);\n      if (sprite.visible) {\n        sprite.visible = false;\n      }\n    }\n    return false;\n  }\n  // Here we know this planet is in view\n  const sprite = game.getPlanetSprite(planet);\n  sprite.visible = true;\n  // Set planet relative to the ship's viewport\n  sprite.x = (planet.x - ship.x) + c.HALF_SCREEN_WIDTH;\n  sprite.y = (planet.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n  return true;\n}\n\n/**\n * @return the first active shield the ship is equipped with\n */\nexport function getActiveShield(ship) {\n  for (const equip of ship.equip) {\n    if (equip.shield && equip.shield.active) {\n      return equip.shield;\n    }\n  }\n  return null;\n}\n\n// Returns true if there is a collision and false otherwise\nexport function detectCollisionWithPlanet(ship, shipSprite, planet) {\n  const shield = getActiveShield(ship);\n  if (shield) {\n    // shield collision is round\n    return utils.distanceBetween(ship.x, ship.y, planet.x, planet.y) < (planet.radius + shield.radius);\n  }\n  // [[x,y],[x,y]]\n  let collisionPoints = utils.getVertexData(ship.x, ship.y, shipSprite);\n  for (let point of collisionPoints) {\n    let dist = utils.distanceBetween(point[0], point[1], planet.x, planet.y);\n    if (dist < planet.radius - c.ALLOWED_OVERLAP) {\n      return true;\n    } \n  }\n  return false;\n}\n\n// Returns true if there is a collision and false otherwise\nexport function detectCollisionWithAlien(ship, shipSprite, alien) {\n  const shield = getActiveShield(ship);\n  if (shield) {\n    // shield collision is round\n    return utils.distanceBetween(ship.x, ship.y, alien.x, alien.y) < (alien.radius + shield.radius);\n  }\n  let collisionPoints = utils.getVertexData(ship.x, ship.y, shipSprite);\n  for (let point of collisionPoints) {\n    // Only works with circular aliens (need different logic for squares)\n    if (alien.radius) {\n      let dist = utils.distanceBetween(point[0], point[1], alien.x, alien.y);\n      if (dist < alien.radius - c.ALLOWED_OVERLAP) { \n        return true;\n      } \n    }\n  }\n  return false;\n}\n\n/**\n * Land the ship on the planet\n * NOTE: This will cause damage to the ship attempting to land (side-effects)\n */\nfunction landShip(ship, planet) {\n  // atan2 has parameters (y,x)\n  let planetDir = utils.normalizeRadian(Math.atan2(ship.y - planet.y, ship.x - planet.x));\n  let dirDiff = Math.abs(ship.rotation - planetDir);\n  let speed = Math.abs(ship.vx) + Math.abs(ship.vy);\n  // 0 and PI*2 are right beside each other, so large values are very close to small values\n  let success = ((dirDiff < ship.crashAngle) || (dirDiff > (Math.PI * 2 - ship.crashAngle)))\n                && (speed < ship.crashSpeed)\n  // Stop moving\n  ship.vx = 0;\n  ship.vy = 0;\n  if (!success) {\n    // The landing was rough - do damage\n    let speedDiff = Math.max(speed - ship.crashSpeed, 0); // 0 if negative\n    let dirDiffAdj = Math.max(dirDiff - ship.crashAngle, 0); // 0 if negative\n    if (dirDiffAdj > Math.PI) {\n      dirDiffAdj = (Math.PI * 2) - dirDiff - ship.crashAngle;\n    }\n    let dmgPct = (speedDiff / 3) + dirDiffAdj;\n    let dmg = dmgPct * ship.armorMax;\n    damageShip(ship, dmg, resetGame);\n  }\n  // Disable shields when landing\n  const shield = getActiveShield(ship);\n  if (shield) {\n    disableShield(ship, shield);\n  }\n  // If the ship survived the landing\n  if (ship.armor > 0) {\n    window.world.selectedPlanet = planet; // currently selected planet (for manage UI)\n    window.world.lastPlanetLanded = planet; // last planet landed on\n    //Set ship position and angle on the planet surface\n    let dir = utils.directionTo(planet.x, planet.y, ship.x, ship.y)\n    let r = planet.radius + ship.spriteWidth / 2;\n    let {xAmt, yAmt} = utils.dirComponents(dir, r);\n    ship.x = planet.x + xAmt;\n    ship.y = planet.y + yAmt;\n    ship.rotation = dir;\n    planet.lastLandingDir = dir;\n    game.getShipSprite(ship).rotation = dir;\n    repositionScreen();\n    game.changeGameState(c.GAME_STATE.MANAGE);\n  }\n}\n\nexport function getExplosionSprite(ship) {\n  let sprite = null;\n  for (let explosionSprite of window.world.system.explosions) {\n    if (!explosionSprite.visible) {\n      sprite = explosionSprite;\n      break;\n    }\n  }\n  if (!sprite) {\n    sprite = game.createExplosionSprite();\n  }\n  let playerShip = window.world.ship;\n  sprite.visible = true;\n  sprite.globalX = ship.x;\n  sprite.globalY = ship.y;\n  sprite.x = (ship.x - playerShip.x) + c.HALF_SCREEN_WIDTH;\n  sprite.y = (ship.y - playerShip.y) + c.HALF_SCREEN_HEIGHT;\n  return sprite\n}\n\n/**\n * Destroys the ship playing an explosion animation\n * @param ship: the one to explode\n * @param afterExplosion: function to run after exploding (or null if nothing to do)\n */\nexport function destroyShip(ship, afterExplosion) {\n  if (ship.owner === c.ALIEN) {\n    game.addAlienXp(ship);\n  }\n  let explosionSprite = getExplosionSprite(ship);\n  const shipSprite = game.getShipSprite(ship);\n  shipSprite.visible = false;\n  ship.alive = false;\n  ship.spriteId = null;\n  explosionSprite.play();\n  // This function runs after the animation finishes a loop\n  explosionSprite.onLoop= () => {\n    explosionSprite.stop(); // pause until we crash again\n    explosionSprite.visible = false;\n    if (afterExplosion) {\n      afterExplosion();\n    }\n  };\n}\n\nfunction resetGame() {\n  // loadNewShip will setup a new ship but not position it\n  let ship = window.world.ship;\n  let planet = window.world.selectedPlanet;\n  // The current ship is gone\n  ship.resourcesMax = 0;\n  ship.resources = {titanium : 0,gold : 0,uranium : 0};\n  ship.equip = [];\n  ship.armorMax = 0;\n  ship.armor = 0;\n\n  // If the most recently used planet doesn't have any buildings\n  if (!planet || (planet.buildings.length === 0)) {\n    // find a planet with a mine\n    for (let planet of window.world.planets) {\n      if (planet.buildings.length > 0) {\n        window.world.selectedPlanet = planet;\n        break;\n      }\n    }\n    // No buildings on any planet- game over! \n    if (!planet) {\n      window.world.selectedPlanet = window.world.planets[0];\n    }\n  }\n  let {x,y,rotation} = manage.getAvailablePlanetXY(planet, ship, planet.lastLandingDir, 20, 0);\n  ship.x = x;\n  ship.y = y;\n  ship.vx = 0;\n  ship.vy = 0;\n  ship.rotation = rotation;\n  repositionScreen();\n  game.changeGameState(c.GAME_STATE.MANAGE);\n}\n\n/**\n * Explosion position update on screen as ship moves\n * This is called in the fly loop\n */\nfunction moveExplosions() {\n  let ship = window.world.ship;\n  for (let sprite of window.world.system.explosions) {\n    sprite.x = (sprite.globalX - ship.x) + c.HALF_SCREEN_WIDTH;\n    sprite.y = (sprite.globalY - ship.y) + c.HALF_SCREEN_HEIGHT;\n  }\n}\n\nfunction turnShip(ship, left) {\n  let turnSpeed = ship.turnSpeed;\n  let turnBooster = getEquip(ship, c.EQUIP_TYPE_TURN);\n  if (turnBooster) {\n    turnSpeed += turnBooster.boostSpeed;\n  }\n  ship.rotation = utils.normalizeRadian(ship.rotation + turnSpeed * (left ? -1 : 1));\n}\n\nfunction propelShip(ship) {\n  let propulsion = ship.propulsion;\n  let booster = getEquip(ship, c.EQUIP_TYPE_TURN);\n  if (booster) {\n    propulsion += booster.boostSpeed;\n  }\n  ship.vx += propulsion * Math.cos(ship.rotation);\n  ship.vy += propulsion * Math.sin(ship.rotation);\n}\n\nfunction brakeShip(ship) {\n  let brake = getEquip(ship, c.EQUIP_TYPE_BRAKE);\n  if (brake) {\n    if (brake.brakeSpeedPct > 0) {\n      ship.vx -= ship.vx * brake.brakeSpeedPct;\n      ship.vy -= ship.vy * brake.brakeSpeedPct;\n    } else {\n      // Blink brake pct is 0, immediate stop (no momentum)\n      ship.vx = 0;\n      ship.vy = 0;\n    }\n  }\n}\n\nfunction thrustShip(ship, left) {\n  let thruster = getEquip(ship, c.EQUIP_TYPE_THRUSTER);\n  if (thruster) {\n    let dir =utils.normalizeRadian(ship.rotation + ((left ? -1 : 1) * Math.PI/2)); // 90 deg turn\n    const thrustX = thruster.thrustSpeed * Math.cos(dir);\n    const thrustY = thruster.thrustSpeed * Math.sin(dir);\n    if (thruster.thrustType === c.THRUST_MOMENTUM) {\n      ship.vx += thrustX;\n      ship.vy += thrustY\n    } else if (thruster.thrustType === c.THRUST_BLINK) {\n      ship.x += thrustX;\n      ship.y += thrustY;\n    } else {\n      console.warn(\"Unable to use thruster with type \"+thruster.thrustType);\n    }\n  }\n}\n\n/**\n * Fires the weapon from the location and direction of the ship\n */\nexport function fireWeapon(weapon, ship, jitter) {\n  if (weapon && (weapon.cool <= 0)) {\n    fireBullet(ship, weapon, jitter);\n    weapon.cool = weapon.coolTime; // this is decremented in coolWeapons\n  }\n}\n\nexport function firePrimaryWeapon(ship, jitter) {\n  let gun = getEquip(ship, c.EQUIP_TYPE_PRIMARY_WEAPON);\n  if (gun) {\n    fireWeapon(gun, ship, gun.jitter ? gun.jitter : jitter);\n  }\n}\n\nexport function fireSecondaryWeapon(ship) {\n  let weapon = getEquip(ship, c.EQUIP_TYPE_SECONDARY_WEAPON);\n  if (weapon && (weapon.cool <= 0)) {\n    if (weapon.createShip && game.canAfford(null, ship, weapon.createShip.type.cost)) {\n      game.payResourceCost(null, ship, weapon.createShip.type.cost);\n      const mine = game.createShip(weapon.createShip.type, c.PLAYER);\n      const mineSprite = game.getShipSprite(mine);\n      const mineDistFromShip = ship.spriteWidth/2 + mine.spriteWidth/2 + 20;\n      const dir = weapon.createShip.dir === c.DIR_AHEAD_OF_SHIP ? utils.normalizeRadian(ship.rotation - Math.PI) : ship.rotation;\n      const {xAmt, yAmt} = utils.dirComponents(dir, mineDistFromShip);\n      mine.x = ship.x - xAmt;\n      mine.y = ship.y - yAmt;\n      if (mine.propulsion) {\n        mine.vx = ship.vx;\n        mine.vy = ship.vy;\n      }\n      mine.rotation = utils.normalizeRadian(dir - Math.PI);\n      mineSprite.visible = true;\n      mineSprite.x = (mine.x - ship.x) + c.HALF_SCREEN_WIDTH;\n      mineSprite.y = (mine.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n      window.world.ships.push(mine);\n      // Since it never moves we only need one check to see if it collides with anything\n      ai.checkForCollisionWithPlanet(mine);\n      ai.checkForCollisionWithShip(mine);\n    }\n    if (weapon.shield) {\n      enableShield(ship, weapon.shield);\n    }\n    weapon.cool = weapon.coolTime; // this is decremented in coolWeapons\n  }\n}\n\n/**\n * Called to enable a ship's shield.\n * This will add a shield sprite to the ship and set it to visible\n */\nexport function enableShield(ship, shield) {\n  const shieldSprite = game.getShieldSprite(ship, shield);\n  shieldSprite.visible = true;\n  shield.active = true;\n  shield.lifetime = shield.lifetimeMax;\n  shield.armor = shield.armorMax;\n  // Increase the ship size to the size of the shield\n  ship.spriteWidth = shield.radius * 2;\n  ship.spriteHeight = shield.radius * 2;\n}\n\n/**\n * Called to disable, and stop drawing a shield on a ship\n */\nexport function disableShield(ship, shield) {\n  const shieldSprite = game.getShieldSprite(ship, shield);\n  shieldSprite.visible = false;\n  shield.active = false;\n  // Reset the ship size back to regular\n  const shipSprite = game.getShipSprite(ship);\n  ship.spriteWidth = shipSprite.width;\n  ship.spriteHeight = shipSprite.height;\n}\n\n/**\n * Fires a bullet from the ship\n */\nexport function fireBullet(ship, gun, jitter) {\n  let bullet = findOrCreateBullet(gun.bulletFile);\n  bullet.lifetime = gun.lifetime;\n  bullet.damage = gun.damage;\n  const jitterAmt = jitter ? (jitter * Math.random() * (utils.randomBool() ? -1 : 1)) : 0;\n  const rotation = ship.rotation + jitterAmt;\n  bullet.vx = ship.vx + gun.speed * Math.cos(rotation);\n  bullet.vy = ship.vy + gun.speed * Math.sin(rotation);\n  bullet.x = ship.x + Math.sqrt(ship.spriteWidth*ship.spriteWidth + ship.spriteHeight*ship.spriteHeight)/2 * Math.cos(rotation);\n  bullet.y = ship.y + Math.sqrt(ship.spriteWidth*ship.spriteWidth + ship.spriteHeight*ship.spriteHeight)/2 * Math.sin(rotation);\n}\n\n/**\n * Gets the next available bullet (one that is not visible)\n */\nfunction findOrCreateBullet(bulletFile) {\n  for (let bullet of window.world.system.bullets) {\n    if (!bullet.active && (bullet.fileName === bulletFile)) {\n      bullet.active = true;\n      bullet.sprite.visible = true;\n      return bullet;\n    }\n  }\n  // Create a new bullet\n  let bullet = {active:true, damage:0, x:0, y:0, vx:0, vy:0, lifetime:1, fileName:bulletFile};\n  // Setup sprite\n  let spritesheet = window.PIXI.loader.resources[c.SPRITESHEET_JSON];\n  let sprite = new window.PIXI.Sprite(spritesheet.textures[bulletFile]);\n  sprite.x = -100;\n  sprite.y = -100;\n  sprite.anchor.set(0.5, 0.5);\n  sprite.scale.set(0.5, 0.5);\n  window.world.system.spriteContainers.bullets.addChild(sprite);\n  bullet.sprite = sprite;\n  window.world.system.bullets.push(bullet);\n  return bullet;\n}\n\nfunction killBullet(bullet) {\n  bullet.active = false;\n  bullet.sprite.visible = false;\n  bullet.sprite.x = -100;\n  bullet.sprite.y = -100;\n  bullet.vx = 0;\n  bullet.vy = 0;\n}\n\n/**\n * Moves all the bullets (called every draw cycle from app.js mainLoop)\n */\nexport function moveBullets() {\n  let ship = window.world.ship;\n  for (let bullet of window.world.system.bullets) {\n    if (bullet.active) {\n      bullet.x = bullet.x + bullet.vx;\n      bullet.y = bullet.y + bullet.vy;\n      bullet.sprite.x = (bullet.x - ship.x) + c.HALF_SCREEN_WIDTH;\n      bullet.sprite.y = (bullet.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n      bullet.lifetime =  bullet.lifetime - 1;\n      if (bullet.lifetime <= 0) {\n        killBullet(bullet);\n      }\n      checkForBulletCollision(bullet);\n    }\n  } // for bullet\n}\n\nfunction checkForBulletCollision(bullet) {\n  let ship = window.world.ship;\n  // Collision with planet\n  for (let planet of window.world.system.nearby.planets) {\n    if (utils.distanceBetween(planet.x, planet.y, bullet.x, bullet.y) < planet.radius) {\n      // TODO: Check for building damage\n      killBullet(bullet);\n    }\n  }\n  // Collision with ship\n  if (ship.alive) {\n    const shield = getActiveShield(ship);\n    if (shield && utils.distanceBetween(ship.x, ship.y, bullet.x, bullet.y) < shield.radius) {\n      bulletHitShip(bullet, ship, resetGame);\n    } else {\n      const shipSprite = game.getShipSprite(ship);\n      if (shipSprite.containsPoint({x:bullet.sprite.x, y:bullet.sprite.y})) {\n        bulletHitShip(bullet, ship, resetGame);\n      }\n    }\n  } \n  // Collision with alien ship\n  for (let alien of window.world.system.nearby.ships) {\n    if (alien.alive && alien.radius) {\n      const shield = getActiveShield(alien);\n      if ((shield && utils.distanceBetween(alien.x, alien.y, bullet.x, bullet.y) < shield.radius) || // hit alien shield\n          (utils.distanceBetween(alien.x, alien.y, bullet.x, bullet.y) <= alien.radius)) { // hit alien ship\n        bulletHitShip(bullet, alien, null);\n      }\n    }\n  } // for alien\n}\n\n/**\n * Apply damage from bullet to ship, also kills the bullet\n */\nfunction bulletHitShip(bullet, ship, afterExplosion) {\n  damageShip(ship, bullet.damage, afterExplosion);\n  killBullet(bullet);\n}\n\n/**\n * applies damage to the ship, destroying the ship if needed\n */\nexport function damageShip(ship, damage, afterExplosion) {\n  const shield = getActiveShield(ship);\n  if (shield) {\n    shield.armor -= damage;\n    if (shield.armor <= 0) {\n      shield.armor = 0;\n      disableShield(ship, shield);\n    }\n  } else { // no shield\n    ship.armor = ship.armor - damage;\n    if (ship.armor <= 0) {\n      ship.armor = 0;\n      destroyShip(ship, afterExplosion);\n    }\n  }\n}\n\n/**\n * collision between player ship and alien (sometimes alien and alien)\n */\nexport function shipsCollide(ship, alien) {\n  let shipDamage = ship.armor;\n  let alienDamage = alien.armor;\n  damageShip(alien, shipDamage, null);\n  damageShip(ship, alienDamage, (window.world.ship === ship) ? resetGame : null);\n  // If you died hitting an alien, stop moving\n  if (!ship.alive) {\n    ship.vx = 0;\n    ship.vy = 0;\n  }\n}\n\n/**\n * @return matching acc equipment type if it is found, null otherwise\n */\nexport function getEquip(ship, equipType) {\n  for (let equip of ship.equip) {\n    if (equip.type === equipType) {\n      return equip;\n    }\n  }\n  return null;\n}\n\nexport function drawMiniMap() {\n  let g = window.world.system.miniMapGraphics;\n  let view = window.world.view;\n  let l = 0;\n  let t = c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT;\n  let r = c.MINIMAP_WIDTH;\n  let b = c.SCREEN_HEIGHT;\n  g.clear();\n  // Background\n  g.beginFill(c.MINIMAP_BACKGROUND_COLOR);\n  g.lineStyle(1, c.MINIMAP_BORDER_COLOR);\n  g.drawRect(l, t, r, b);\n  g.endFill();\n  // Planets\n  for (let planet of window.world.planets) {\n    if (planetOnMap(view, planet)) {\n      let x = l + c.HALF_MINIMAP_WIDTH + ((planet.x - view.x) * c.MINIMAP_SCALE_X);\n      let y = t + c.HALF_MINIMAP_HEIGHT + ((planet.y - view.y) * c.MINIMAP_SCALE_Y);\n      const planetColor = window.world.selectedPlanet === planet ? c.MINIMAP_SELECTED_PLANET_COLOR : c.MINIMAP_PLANET_COLOR;\n      g.lineStyle(2, planetColor);\n      g.drawCircle(x,y, planet.radius * c.MINIMAP_SCALE_X);\n      // Buildings\n      for (let building of planet.buildings) {\n        let buildingX = l + c.HALF_MINIMAP_WIDTH + ((building.x - view.x) * c.MINIMAP_SCALE_X) -1.5;\n        let buildingY = t + c.HALF_MINIMAP_HEIGHT + ((building.y - view.y) * c.MINIMAP_SCALE_Y) -1.5;\n        g.lineStyle(1, c.MINIMAP_BUILDING_COLOR);\n        g.drawRect(buildingX,buildingY,2,2);\n      }\n    }\n  }\n  // Ship\n  g.lineStyle(1, c.MINIMAP_SHIP_COLOR);\n  const x = l + c.HALF_MINIMAP_WIDTH + ((window.world.ship.x - view.x) * c.MINIMAP_SCALE_X);\n  const y = t + c.HALF_MINIMAP_HEIGHT + ((window.world.ship.y - view.y) * c.MINIMAP_SCALE_Y);\n  g.drawCircle(x,y, 2);\n}\n\n/**\n * Handles clicks on the minimap \n */\nexport function clickOnMinimap(clickX, clickY) {\n  if (window.world.system.gameState === c.GAME_STATE.MANAGE) {\n    const view = window.world.view\n    let globalX = view.x + ((clickX - c.HALF_MINIMAP_WIDTH) * (1/c.MINIMAP_SCALE_X));\n    let globalY = view.y + (((clickY - (c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT)) - c.HALF_MINIMAP_HEIGHT) * (1/c.MINIMAP_SCALE_X));\n    for (let planet of window.world.planets) {\n      if (utils.distanceBetween(globalX, globalY, planet.x, planet.y) <= planet.radius) {\n        window.world.selectedPlanet = planet;\n      }\n    }\n    view.x = globalX;\n    view.y =  globalY;\n    drawMiniMap();\n  }\n}\n\nfunction planetOnMap(view, planet) {\n  // Right side\n  return !((view.x + c.HALF_MINIMAP_VIEW_WIDTH + planet.radius < planet.x) || // Right\n    (view.x - c.HALF_MINIMAP_VIEW_WIDTH - planet.radius > planet.x) || // Left\n    (view.y + c.HALF_MINIMAP_VIEW_HEIGHT + planet.radius < planet.y) || // Bottom\n    (view.y - c.HALF_MINIMAP_VIEW_HEIGHT - planet.radius > planet.y));\n}\n\n/**\n * @return the max range of the weapon\n */\nexport function weaponRange(weapon) {\n  if (!weapon) {\n    return 0;\n  }\n  // Not sure what the fudge factor is, but the range seems a little short without it\n  return weapon.speed * weapon.lifetime * 1.4;\n}\n\n/**\n * @return the max range of the primary weapon on the ship\n */\nexport function primaryWeaponRange(ship) {\n  let gun = getEquip(ship, c.EQUIP_TYPE_PRIMARY_WEAPON);\n  return weaponRange(gun);\n}","import { c, utils, fly, game } from './';\nimport lodash from 'lodash';\nimport {EQUIP_TYPE_BRAKE, EQUIP_TYPE_PRIMARY_WEAPON, EQUIP_TYPE_THRUSTER} from \"./constants\";\n\nexport function enterManageState() {\n  console.log(\"enter manage state\");\n}\n\n// When managing planet resources - loop runs 60/s\nexport function manageLoop(delta) {\n  if ((window.world.system.keys.up.isDown || window.world.system.keys.w.isDown)) {\n    if (window.world.ship.alive && !window.world.system.isTyping) {\n      takeOff();\n    }\n  }\n}\n\nfunction takeOff() {\n  let world = window.world;\n  let ship = world.ship;\n  game.changeGameState(c.GAME_STATE.FLY);\n  let gravity = utils.calcGravity(ship.x, ship.y, world.selectedPlanet);\n  ship.vx = gravity.x * -c.TAKEOFF_SPEED;\n  ship.vy = gravity.y * -c.TAKEOFF_SPEED;\n}\n\n/**\n * @return Correct set of constants for the building type.\n * Maybe these constants could be moved into a variable or something\n */\nfunction getBuildingInfo(buildingType) {\n  if (buildingType === c.BUILDING_TYPE_FACTORY) {\n    return {spriteScale:c.FACTORY_SCALE, spriteFile:c.FACTORY_FILE, animation:false};\n  } else if (buildingType === c.BUILDING_TYPE_MINE) {\n    return {spriteScale:c.MINE_SCALE, spriteFile:c.MINE_FILE, animation:true};\n  }\n  console.warn('Unknown building type ', buildingType);\n  return {}\n}\n\n/**\n * Creates a factory sprite and adds it to the planet container using the factory x,y and rotation\n * NOTE: The building x,y,rot need to be set before calling this\n * @param building building to build\n * @param planet planet to build on\n * @param planetSprite optional, if null this will lookup the sprite using getPlanetSprite()\n */\nexport function makeBuildingSprite(building, planet, planetSprite = null) {\n  const { spriteScale, spriteFile, animation } = getBuildingInfo(building.type);\n  let spritesheet = window.PIXI.Loader.shared.resources[c.SPRITESHEET_JSON].spritesheet;\n  let buildingSprite;\n  if (animation) {\n    buildingSprite = new window.PIXI.AnimatedSprite(spritesheet.animations[spriteFile]);\n    buildingSprite.animationSpeed = c.MINE_ANIMATION_SPEED;\n    buildingSprite.play();\n  } else {\n    buildingSprite = new window.PIXI.Sprite(spritesheet.textures[spriteFile]);\n  }\n  buildingSprite.anchor.set(0.5, 0.5);\n  buildingSprite.scale.set(spriteScale, spriteScale);\n  buildingSprite.rotation = building.rotation;\n  buildingSprite.x = (building.x - planet.x);\n  buildingSprite.y = (building.y - planet.y);\n  buildingSprite.visible = true;\n  if (!planetSprite) {\n    planetSprite = game.getPlanetSprite(planet);\n  }\n  planetSprite.addChild(buildingSprite);\n}\n\nexport function buildMine() {\n  let world = window.world;\n  let mine = {type: c.BUILDING_TYPE_MINE};\n  let planet = world.selectedPlanet;\n  let ship = world.ship;\n  // Place the mine (to the right of the ship)\n  const initRotation = getBuildingPlacementRotation(ship, planet, c.MINE_WIDTH);\n  // Calculate an X,Y point near the ship on surface of the planet\n  // NOTE: we use sprite.height for width because all sprites face to the right (0 rotation)\n  let {x,y,rotation} = getAvailablePlanetXY(planet, ship, initRotation, c.MINE_WIDTH, 0);\n  if (x === null) {\n    console.warn(\"Unable to place mine\");\n    return;\n  }\n  mine.width = c.MINE_WIDTH;\n  mine.x = x;\n  mine.y = y;\n  mine.rotation = rotation;\n  // Setup the graphics\n  makeBuildingSprite(mine, planet);\n  game.payResourceCost(planet, ship, c.MINE_COST);\n  planet.buildings.push(mine);\n  fly.drawMiniMap(); // add building to minimap\n}\n\n/**\n * @return the rotation direction of a place some distance to the right of the ship\n */\nexport function getBuildingPlacementRotation(ship, planet, distanceFromShip) {\n  let deg = ship.rotation + Math.PI/2; // 90 deg (right of the ship)\n  let degX = ship.x + distanceFromShip  * Math.cos(deg); // Some point Xpx to the right of the ship\n  let degY = ship.y + distanceFromShip * Math.sin(deg);\n  // Calculate the rotation direction to get to that point\n  return utils.normalizeRadian(Math.atan2(degY - planet.y, degX - planet.x));\n\n}\n\n/**\n * @return {x,y} for the next free space to the right of the ship on the planet circumfrence \n */\nexport function getAvailablePlanetXY(planet, ship, rotation, buildingWidth, count) {\n  if (buildingFits(planet, ship, rotation, buildingWidth)) {\n    let x = planet.x + ((planet.radius + 10) * Math.cos(rotation));\n    let y = planet.y + ((planet.radius + 10) * Math.sin(rotation));\n    return {x,y, rotation};\n  }\n  // If we have done a full circle then give up\n  if (count > (Math.PI*2 / c.BUILDING_PLACEMENT_ROTATION_INCREMENT)) {\n    return {x:null, y:null, rotation:null};\n  }\n  return getAvailablePlanetXY(planet, ship, rotation+c.BUILDING_PLACEMENT_ROTATION_INCREMENT\n    , buildingWidth, ++count);\n}\n\nexport function buildingFits(planet, ship, rotation, buildingWidth) {\n  let x = planet.x + ((planet.radius + 10) * Math.cos(rotation));\n  let y = planet.y + ((planet.radius + 10) * Math.sin(rotation));\n  // Min distance to building\n  let minDist = utils.distanceBetween(x,y, ship.x, ship.y);\n  let minBuildingWidth = buildingWidth;\n  for (let building of planet.buildings) {\n     let dist = utils.distanceBetween(x,y, building.x, building.y);\n     if (dist < minDist) {\n       minDist = dist;\n       minBuildingWidth = building.width;\n     }\n  } \n  return (minDist > (buildingWidth/2 + minBuildingWidth/2 + 15));\n}\n\n/**\n * Move a resource ship <-> planet \n */\nexport function transferResource(source, target, resourceType, requestedAmtStr, maxCapacity) {\n  console.log('transfering '+requestedAmtStr+' of '+resourceType);\n  let requestedAmt = Number(requestedAmtStr);\n  if (isNaN(requestedAmt)) {\n    requestedAmt = 0;\n  }\n  let amt = requestedAmt;\n  // requesting '' is requesting the entire source (same as requesting too much)\n  if (requestedAmtStr === '' || (source[resourceType] - requestedAmt < 0)) {\n    amt = source[resourceType];\n  }\n  // Cap to max capacity of target\n  let spaceLeft =  maxCapacity - (target.titanium + target.gold + target.uranium);\n  if (spaceLeft < amt) {\n    amt = spaceLeft;\n  }\n  target[resourceType] += amt;\n  source[resourceType] -= amt;\n}\n\n/**\n * Choose some default resources to resupply the ship with.\n * This is for quick restocking of resources\n * NOTE: This may need to do multiple passes to fill up the space properly especially when planets are low on uranium\n */\nexport function resupplyShip(ship, planet) {\n  const desiredAmt = Math.floor(ship.resourcesMax / 3);\n  let freeAmt = ship.resourcesMax - (ship.resources.titanium + ship.resources.gold + ship.resources.uranium);\n  if (freeAmt <= 0) {\n    // no space for more resources\n    return;\n  }\n  // 20 is the min required to build a mine - you probably want at least 20\n  const desiredTitanium = desiredAmt >= 20 ? desiredAmt : 20;\n  if (ship.resources.titanium < desiredTitanium) {\n    transferResource(planet.resources.stored, ship.resources, 'titanium', desiredTitanium - ship.resources.titanium, ship.resourcesMax);\n  }\n  if (ship.resources.gold < desiredAmt) {\n    transferResource(planet.resources.stored, ship.resources, 'gold', desiredAmt - ship.resources.gold, ship.resourcesMax);\n  }\n  // Fill up the rest of the space with uranium (it's the rarest)\n  freeAmt = ship.resourcesMax - (ship.resources.titanium + ship.resources.gold + ship.resources.uranium);\n  if (ship.resources.uranium < freeAmt) {\n    transferResource(planet.resources.stored, ship.resources, 'uranium', freeAmt, ship.resourcesMax);\n  }\n}\n\nexport function buildFactory() {\n  let world = window.world;\n  let planet = world.selectedPlanet;\n  let ship = world.ship;\n  let factory = {type: c.BUILDING_TYPE_FACTORY};\n\n  // Place the mine (to the right of the ship)\n  const initialRotation = getBuildingPlacementRotation(ship, planet, c.FACTORY_WIDTH);\n  // Calculate an X,Y point near the ship on surface of the planet\n  // NOTE: we use sprite.height for width because all sprites face to the right (0 rotation)\n  let {x,y,rotation} = getAvailablePlanetXY(planet, ship, initialRotation, c.FACTORY_WIDTH, 0);\n  if (x === null) {\n    console.warn(\"Unable to place factory\");\n    return;\n  }\n  factory.width = c.MINE_WIDTH;\n  factory.x = x;\n  factory.y = y;\n  factory.rotation = rotation;\n  planet.buildings.push(factory);\n\n  // Setup the graphics\n  makeBuildingSprite(factory, planet);\n\n  game.payResourceCost(planet, ship, c.FACTORY_COST);\n  fly.drawMiniMap(); // add to minimap\n}\n\n/**\n * Called when the factory finishes building a new ship \n */\nexport function buildShip(shipTemplate) {\n  let world = window.world;\n  let planet = world.selectedPlanet;\n  let newShip = game.createShip(shipTemplate);\n  planet.ships.push(newShip);\n}\n\n/**\n * Called when the user clicks to switch to a new ship \n * NOTE: the new ship should already be created and stored in a planet\n */\nexport function switchToShip(newShip) {\n  let oldShip = window.world.ship;\n  let selectedPlanet = window.world.selectedPlanet;\n  let lastPlanetLanded = window.world.lastPlanetLanded;\n  if (!removeShipFromStorage(newShip, selectedPlanet)) {\n    console.warn(\"Unable to remove ship from planet \",newShip,\" planet=\",selectedPlanet);\n    return;\n  }\n  addShipToStorage(oldShip, lastPlanetLanded);\n\n  window.world.ship = newShip;\n  // check to ensure oldShip is not destroyed\n  if (oldShip && oldShip.alive && oldShip.spriteId) {\n    fly.resetWeaponsCool(oldShip);\n    const oldShipSprite = game.getShipSprite(oldShip);\n    oldShipSprite.visible = false;\n    oldShip.spriteId = null;\n  }\n  // Get the new sprite (adds it to the container)\n  const newShipSprite = game.getShipSprite(newShip);\n  newShipSprite.visible = true;\n  newShip.rotation = selectedPlanet.lastLandingDir;\n  newShipSprite.rotation = newShip.rotation;\n  newShipSprite.position.set(c.HALF_SCREEN_WIDTH, c.HALF_SCREEN_HEIGHT);\n\n  let r = selectedPlanet.radius + (newShip.spriteWidth / 2);\n  newShip.x = selectedPlanet.x + (r * Math.cos(newShip.rotation));\n  newShip.y = selectedPlanet.y + (r * Math.sin(newShip.rotation));\n  window.world.lastPlanetLanded = selectedPlanet;\n  fly.repositionScreen();\n}\n\n/**\n * Removes a ship from the planet, returns null if no matching ship was found\n */\nexport function removeShipFromStorage(ship, planet) {\n  let ships = planet.ships.filter((s) => s !== ship);\n  let removedShip = ships.length < planet.ships.length;\n  planet.ships = ships;\n  return removedShip;\n}\n\nexport function addShipToStorage(ship, planet) {\n  // If the ship is not visible (and armorMax is zero) it has been destroyed\n  // Some ships might be non-visible because they are not currently being used\n  if (ship.alive && ship.armorMax > 0) {\n    planet.ships.push(ship);\n  }\n}\n\n/**\n * @return true if the planet has a factory for the player\n */\nexport function hasFactory(planet) {\n  for (let building of planet.buildings) {\n    if (building.type === c.BUILDING_TYPE_FACTORY) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function buildEquip(equipTemplate) {\n  let planet = window.world.selectedPlanet;\n  let equip = lodash.cloneDeep(equipTemplate);\n  equip.id = window.world.nextId++;\n  planet.equip.push(equip);\n}\n\nexport function costToRepair(ship) {\n  return {titanium:(ship.armorMax - ship.armor), gold:0, uranium:0};\n}\n\nexport function repairShip(planet, ship) {\n  let cost = costToRepair(ship);\n  let addArmor = ship.armorMax - ship.armor; // armor needed\n  if (!game.canAfford(planet, ship, cost)) {\n    let titaniumOnHand = planet.resources.stored.titanium + ship.resources.titanium;\n    cost.titanium = titaniumOnHand;\n    addArmor = titaniumOnHand;\n  } \n  game.payResourceCost(planet, ship, cost);\n  ship.armor += addArmor;\n}\n\nexport function addEquip(ship, newEquip) {\n  if (newEquip.type === c.EQUIP_TYPE_ARMOR) {\n    // Only add armor if the ship is in full repair\n    if (ship.armor === ship.armorMax) {\n      ship.armor += newEquip.armorAmt;\n    }\n    ship.armorMax += newEquip.armorAmt;\n  } else if (newEquip.type === c.EQUIP_TYPE_STORAGE) {\n    ship.resourcesMax += newEquip.storageAmount;\n  }\n}\n\nexport function moveEquipFromPlanetToShip(ship, planet, equipToMove) {\n  // Remove from the planet\n  ship.equip.push(equipToMove);\n  addEquip(ship, equipToMove);\n  // Remove the oldEquip from the planet\n  lodash.remove(planet.equip, (e) => e.id === equipToMove.id);\n}\n\nexport function moveEquipFromShipToPlanet(ship, planet, equipToMove) {\n  // Add to the planet\n  planet.equip.push(equipToMove);\n  if (equipToMove.type === c.EQUIP_TYPE_ARMOR) {\n    ship.armorMax -= equipToMove.armorAmt;\n    if (ship.armor > ship.armorMax) {\n      ship.armor = ship.armorMax;\n    }\n  } else if (equipToMove.type === c.EQUIP_TYPE_STORAGE) {\n    ship.resourcesMax -= equipToMove.storageAmount;\n    let shipResources = ship.resources.titanium + ship.resources.gold + ship.resources.uranium;\n    if (shipResources > ship.resourcesMax) {\n      let owing = this.removeResource(ship, 'titanium', (shipResources - ship.resourcesMax));\n      if (owing > 0) {\n        owing = this.removeResource(ship, 'gold', owing);\n      }\n      if (owing > 0) {\n        owing = this.removeResource(ship, 'uranium', owing);\n      }\n      if (owing > 0) {\n        console.warn(\"Cannot remove more resources from ship still owing \"+owing);\n      }\n    }\n  }\n  // Remove the oldEquip from the ship (no new equipment added)\n  lodash.remove(ship.equip, (e) => e.id === equipToMove.id);\n}\n\n/**\n * Removes the resource from the ship\n * @return the amount still owing after removing\n */\nexport function removeResource(ship, resourceType, amount) {\n  ship.resources[resourceType] -= amount;\n  if (ship.resources[resourceType] < 0) {\n    let owing = Math.abs(ship.resources[resourceType]);\n    ship.resources[resourceType] = 0;\n    return owing;\n  }\n  return 0;\n}\n\n/**\n * @return true if the equip can be added to the ship\n */\nexport function canEquip(ship, equip) {\n  if (!ship || !ship.equip || !equip) {\n    return false;\n  }\n  // No more space\n  if (ship.equip.length >= ship.equipMax) {\n    return false;\n  }\n  // Some equip you can only have one\n  if ([EQUIP_TYPE_BRAKE, EQUIP_TYPE_PRIMARY_WEAPON, EQUIP_TYPE_THRUSTER].includes(equip.type)) {\n    if (ship.equip.find((eq) => eq.type === equip.type)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n","import {c, fly, utils} from './';\nimport {getShipSprite} from \"./game\";\n\nexport function moveAliens() {\n  let ship = window.world.ship;\n  for (let alien of window.world.system.nearby.ships) {\n    if (!alien.alive) {\n      continue;\n    }\n    let hasMoved = false;\n    if (alien.aiType === c.ALIEN_AI_TURRET) {\n      turretAi(alien);\n    } else if (alien.aiType === c.ALIEN_AI_CREEPER) {\n      hasMoved = creeperAi(alien);\n    } else if (alien.aiType === c.EQUIP_AI_TURRET) {\n      hasMoved = playerTurretAi(alien);\n    } else if (alien.aiType === c.EQUIP_AI_MISSILE) {\n      hasMoved = playerMissileAi(alien);\n    }\n    if (hasMoved) {\n      checkForCollisionWithPlanet(alien);\n      checkForCollisionWithShip(alien);\n    }\n\n    // If alien is in the viewport\n    if ((ship.x + c.HALF_SCREEN_WIDTH + alien.radius >= alien.x) && // Right\n      (ship.x - c.HALF_SCREEN_WIDTH - alien.radius <= alien.x) && // Left\n      (ship.y + c.HALF_SCREEN_HEIGHT + alien.radius >= alien.y) && // Bottom\n      (ship.y - c.HALF_SCREEN_HEIGHT - alien.radius <= alien.y)) { // Top\n      // alien may have died in a collision\n      if (alien.alive) {\n        // Set alien ship relative to the ship's viewport\n        const alienSprite = getShipSprite(alien);\n        alienSprite.visible = true;\n        alienSprite.rotation = alien.rotation;\n        alienSprite.x = (alien.x - ship.x) + c.HALF_SCREEN_WIDTH;\n        alienSprite.y = (alien.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n      }\n    } else { // alien is not in view\n      // Release the sprite if the alien is not in the view\n      if (alien.spriteId) {\n        const alienSprite = getShipSprite(alien);\n        alienSprite.visible = false;\n        alien.spriteId = null;\n      }\n    }\n  } // for alien\n}\n\n/**\n * Fire primary weapon in the direction of x,y\n * @ship ship with gun to fire\n * @x/y  the location to aim at\n * @jitter amount (in radians) of randomness added to direction component\n *         0 - shoots directly at player\n *         PI - shoot completely randomly\n */\nexport function shootAt(shooter, x,y, jitter) {\n  shooter.rotation = utils.normalizeRadian(Math.atan2(y - shooter.y, x - shooter.x));\n  fly.firePrimaryWeapon(shooter, jitter);\n}\n\nexport function turretAi(alien) {\n  let ship = window.world.ship;\n  if (!ship.alive) {\n    return;\n  }\n  if (utils.distanceBetween(alien.x, alien.y, ship.x, ship.y) < 300) {\n    shootAt(alien, ship.x, ship.y, 0.7);\n  }\n}\n\nexport function playerTurretAi(turret) {\n  const {target, dist} = getNearestAlienTarget(turret.x, turret.y);\n  if (target && (dist <= fly.primaryWeaponRange(turret))) {\n    shootAt(turret, target.x, target.y, 0.25);\n  }\n  return false; // never moves\n}\n\nexport function playerMissileAi(missile) {\n  const {target, dist} = getNearestAlienTarget(missile.x, missile.y);\n  // Missiles don't track targets really far away\n  if (target && dist < c.SCREEN_WIDTH) {\n    let dirToTarget = utils.directionTo(missile.x, missile.y, target.x, target.y);\n    let {xAmt, yAmt} = utils.dirComponents(dirToTarget, missile.propulsion);\n    missile.vx += xAmt;\n    missile.vy += yAmt;\n    missile.x += missile.vx;\n    missile.y += missile.vy;\n    return true;\n  }\n  // Don't move if there's nobody to move towards\n  return false;\n}\n\n/**\n * AI for aliens that move toward the player and shoots\n * @return true if alien moved false otherwise\n */\nexport function creeperAi(alien) {\n  let ship = window.world.ship;\n  if (!ship.alive) {\n    return;\n  }\n  let moved = false;\n  // Close enough to player to move\n  const distanceToPlayer = utils.distanceBetween(alien.x, alien.y, ship.x, ship.y);\n  if (distanceToPlayer < c.SCREEN_WIDTH) {\n    let dirToPlayer = utils.directionTo(alien.x, alien.y, ship.x, ship.y);\n    let {xAmt, yAmt} = utils.dirComponents(dirToPlayer, 25 * alien.propulsion);\n    // Check if we are too close to a planet (need to move around the planet)\n    for (let planet of window.world.system.nearby.planets) {\n      if (utils.distanceBetween(alien.x + xAmt, alien.y + yAmt, planet.x, planet.y) < (planet.radius + alien.radius + 10)) {\n        const dirToPlanet = utils.directionTo(alien.x, alien.y, planet.x, planet.y);\n        let dirDiff = dirToPlanet - dirToPlayer;\n        let rightLeft = (dirDiff >= 0) ? -1 : 1;\n        if (Math.abs(dirDiff) > Math.PI) {\n          rightLeft = rightLeft * -1;\n        }\n        const turnDir = dirToPlanet + (rightLeft * Math.PI / 2);\n        ({xAmt, yAmt} = utils.dirComponents(turnDir, 20 * alien.propulsion));\n      }\n    } // for planet\n    // Too close to player, don't move closer\n    if (distanceToPlayer < (ship.spriteWidth + alien.radius + 20)) {\n      xAmt = 0;\n      yAmt = 0;\n    }\n    alien.x += xAmt;\n    alien.y += yAmt;\n    alien.rotation = dirToPlayer;\n    moved = true;\n  }\n  if (utils.distanceBetween(alien.x, alien.y, ship.x, ship.y) < 300) {\n    shootAt(alien, ship.x, ship.y, 0.15);\n  }\n  return moved;\n}\n\n/**\n * Finds the nearest alien target to the x,y location\n * returns {target:X, dist:Y }  x and y will be null if no living targets are found\n */\nexport function getNearestAlienTarget(x,y) {\n  let target = null;\n  let minDist = null;\n  for (let alien of window.world.system.nearby.ships) {\n    if (alien.alive && alien.owner === c.ALIEN) {\n      let dist = utils.distanceBetween(x, y, alien.x, alien.y);\n      if (!target || (dist < minDist)) {\n        target = alien;\n        minDist = dist;\n      }\n    }\n  } // for\n  return {target: target, dist: minDist};\n}\n\nexport function checkForCollisionWithPlanet(alien) {\n  for (let planet of window.world.system.nearby.planets) {\n    let dist = utils.distanceBetween(alien.x, alien.y, planet.x, planet.y);\n    if (dist <= (alien.radius + planet.radius)) {\n      fly.destroyShip(alien, null);\n    }\n  } // for\n}\n\nexport function checkForCollisionWithShip(ship) {\n  for (let otherShip of window.world.system.nearby.ships) {\n    if (otherShip.alive && ship !== otherShip) {\n      let dist = utils.distanceBetween(ship.x, ship.y, otherShip.x, otherShip.y);\n      if (dist <= (ship.radius + otherShip.radius)) {\n        fly.shipsCollide(ship, otherShip);\n      }\n    }\n  } // for\n}","import {fly, utils} from './';\nimport lodash from 'lodash';\nimport {getPlanetSprite, getShipSprite} from \"./game\";\n\n// IndexedDB constants\nconst WORLD_STORE = 'world';\nconst DB_NAME = 'astrominer';\nconst DB_VERSION = 1;\n\n/** Saves an object in localstorage.\n * @param key key to store/retrieve\n * @param objToSave: should be an Object or Array, NOT a primitive as the JSON.parse will fail\n */\nexport function saveLocalStorage(key, objToSave) {\n  const existing = localStorage.getItem(key);\n  if (existing) {\n    localStorage.removeItem(key);\n  }\n  localStorage.setItem(key, JSON.stringify(objToSave));\n}\n\n/**\n *  Loads an object from localstorage.\n * NOTE: The item stored must be an Object or Array as primitives will fail the JSON.parse\n */\nexport function loadLocalStorage(key) {\n  if (!key) {\n    console.warn('Unable to from localStorage without a key');\n    return;\n  }\n  const objString = localStorage.getItem(key)\n  //console.log('loaded objString ='+objString);\n  if (!objString) {\n    return null;\n  }\n  return JSON.parse(objString);\n}\n\nfunction upgradeDB(event) {\n  let db = event.target.result;\n  if (event.oldVersion >= 1) {\n    db.deleteObjectStore(WORLD_STORE);\n  }\n  db.createObjectStore(WORLD_STORE, { keyPath: \"saveGameName\" });\n}\n\n/**\n * Start using a newWorld, the old world and it's state will be discarded.\n * @param key : storage key where the world is kept\n */\nexport function loadWorld(key) {\n  let dbRequest = indexedDB.open(DB_NAME, DB_VERSION);\n  dbRequest.onerror = function(event) {\n    console.log('error ', event);\n  };\n  dbRequest.onupgradeneeded = upgradeDB;\n  dbRequest.onsuccess = function(event) {\n    let db = event.target.result;\n    let transaction = db.transaction([WORLD_STORE]);\n    let objectStore = transaction.objectStore(WORLD_STORE);\n    let request = objectStore.get(key);\n    request.onerror = function(event) {\n      console.log('Request error loading:', event);\n    };\n    request.onsuccess = function(event) {\n      const newWorld = request.result;\n      const oldSystem = window.world.system;\n      window.world = newWorld;\n      window.world.system = oldSystem;\n\n      // Clear the old containers of whatever they had\n      window.world.system.spriteContainers.planets.removeChildren();\n      window.world.system.planetSpriteCache = {};\n      window.world.system.shipSpriteCache = {};\n      window.world.system.spriteContainers.ships.removeChildren();\n\n      // Reset/Redraw all the sprites\n      window.world.ship.spriteId = null;\n      const shipSprite = getShipSprite(window.world.ship);\n      shipSprite.visible = true;\n      for (const alien of  window.world.ships) {\n        if (alien.spriteId) {\n          alien.spriteId = null;\n          getShipSprite(alien).visible = true;\n        }\n      }\n      for (const planet of window.world.planets) {\n        if (planet.spriteId) {\n          planet.spriteId = null;\n          getPlanetSprite(planet);\n        }\n      }\n      fly.repositionScreen();\n      utils.showToast('Loaded game');\n    };\n  }\n\n}\n\nexport function saveWorld(key) {\n  const worldToStore = lodash.cloneDeep(lodash.omit(window.world, ['system']));\n  worldToStore.saveGameName = key;\n\n  let dbRequest = indexedDB.open(DB_NAME, DB_VERSION);\n  dbRequest.onerror = function(event) {\n    console.log('DB Request Error:', event);\n  };\n  dbRequest.onupgradeneeded = upgradeDB;\n  dbRequest.onsuccess = function(event) {\n    let db = event.target.result;\n    let transaction = db.transaction([WORLD_STORE], \"readwrite\");\n    let objectStore = transaction.objectStore(WORLD_STORE);\n    let objectStoreRequest = objectStore.put(worldToStore);\n    objectStoreRequest.onsuccess = function(event) {\n      utils.showToast('Saved game');\n    };\n    objectStoreRequest.onerror = function(event) {\n      console.log('failed to save ', event.target);\n    }\n  }\n}\n\nexport function deleteWorld(key) {\n  let dbRequest = indexedDB.open(DB_NAME, DB_VERSION);\n  dbRequest.onerror = function(event) {\n    console.log('DB Request Error:', event);\n  };\n  dbRequest.onupgradeneeded = upgradeDB;\n  dbRequest.onsuccess = function(event) {\n    let db = event.target.result;\n    let transaction = db.transaction([WORLD_STORE], \"readwrite\");\n    let objectStore = transaction.objectStore(WORLD_STORE);\n    let objectStoreRequest = objectStore.delete(key);\n    objectStoreRequest.onsuccess = function(event) {\n      utils.showToast('Deleted game '+key);\n    };\n    objectStoreRequest.onerror = function(event) {\n      console.log('failed to delete ', event.target);\n    }\n  }\n}\n","import React from 'react';\nimport './InfoFly.css';\n\nexport class InfoFly extends React.Component {\n\n  render() {\n    let world = window.world;\n    return (\n    <div className='section'>\n      <div>Ship</div>\n      <div>Armor {Math.floor(world.ship.armor)} / {world.ship.armorMax} </div>\n      <div>Equip (max {world.ship.equipMax})\n        {world.ship.equip.map((equip, i) => {\n          return <span key={i} className='equip'>{equip.name}</span>\n        })}\n      </div>\n      <div className='section'>Resources</div>\n      <div> Titatium {Math.floor(world.ship.resources.titanium)}</div>\n      <div> Gold {Math.floor(world.ship.resources.gold)}</div>\n      <div> Uranium {Math.floor(world.ship.resources.uranium)}</div>\n    </div>\n    );\n  }\n}\n\n","import React, {useState} from 'react';\nimport {c, game, manage} from '../functions';\nimport './ManagePlanet.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nexport function ManagePlanet() {\n  const [titaniumAmt, setTitaniumAmt] = useState('');\n  const [goldAmt, setGoldAmt] = useState('');\n  const [uraniumAmt, setUraniumAmt] = useState('');\n\n  let world = window.world;\n  let planet = window.world.selectedPlanet;\n  let ship = window.world.ship;\n  let shipOnPlanet = ((planet === window.world.lastPlanetLanded) && ship.alive);\n  return (\n    <div className='planet-info'>\n      <div className='section'><b>Planet Name</b> {world.selectedPlanet.name}</div>\n      <div className='build-button'>\n        <button\n          disabled={!game.canAfford(planet, (shipOnPlanet ? ship : null), c.MINE_COST)}\n          onClick={() => manage.buildMine()}>Build Mine\n        </button>\n        Cost: T:{c.MINE_COST.titanium} G:{c.MINE_COST.gold}\n      </div>\n      <div className='build-button'>\n        <button\n          disabled={!game.canAfford(planet, (shipOnPlanet ? ship : null), c.FACTORY_COST)}\n          onClick={() => manage.buildFactory()}>Build Factory\n        </button>\n        Cost: T:{c.FACTORY_COST.titanium} G:{c.FACTORY_COST.gold} U:{c.FACTORY_COST.uranium}\n      </div>\n\n      <div className='section'>\n        <b>Resources</b> &nbsp; <button onClick={() => manage.resupplyShip(ship, planet)}>Resupply</button>\n      </div>\n      <div>Titatium {Math.floor(planet.resources.raw.titanium)}</div>\n      <div>Gold {Math.floor(planet.resources.raw.gold)}</div>\n      <div>Uranium {Math.floor(planet.resources.raw.uranium)}</div>\n\n      {shipOnPlanet && <table>\n        <thead>\n        <tr>\n          <th>Resource</th>\n          <th>Planet</th>\n          <th>Transfer</th>\n          <th>Ship ({ship.resourcesMax})</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <td>Titanium</td>\n          <td>{Math.floor(planet.resources.stored.titanium)}</td>\n          <td>\n              <span className='transfer-button'\n                    onClick={() => manage.transferResource(ship.resources, planet.resources.stored,\n                      'titanium', titaniumAmt, c.PLANET_RESOURCE_MAX)}><i className=\"fa fa-arrow-left\"> </i></span>\n            <input type='text' className='transfer-input'\n                   defaultValue={titaniumAmt}\n                   onChange={(event) => setTitaniumAmt(event.target.value)}/>\n            <span className='transfer-button'\n                  onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                    'titanium', titaniumAmt, ship.resourcesMax)}><i className=\"fa fa-arrow-right\"> </i></span>\n          </td>\n          <td>{Math.floor(ship.resources.titanium)}</td>\n        </tr>\n        <tr>\n          <td>Gold</td>\n          <td>{Math.floor(planet.resources.stored.gold)}</td>\n          <td>\n              <span className='transfer-button'\n                    onClick={() => manage.transferResource(ship.resources, planet.resources.stored,\n                      'gold', goldAmt, c.PLANET_RESOURCE_MAX)}><i className=\"fa fa-arrow-left\"> </i></span>\n            <input type='text' className='transfer-input'\n                   defaultValue={goldAmt}\n                   onChange={(event) => setGoldAmt(event.target.value)}/>\n            <span className='transfer-button'\n                  onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                    'gold', goldAmt, ship.resourcesMax)}><i className=\"fa fa-arrow-right\"> </i></span>\n          </td>\n          <td>{Math.floor(ship.resources.gold)}</td>\n        </tr>\n        <tr>\n          <td>Uranium</td>\n          <td>{Math.floor(planet.resources.stored.uranium)}</td>\n          <td>\n              <span className='transfer-button'\n                    onClick={() => manage.transferResource(ship.resources, planet.resources.stored,\n                      'uranium', uraniumAmt, c.PLANET_RESOURCE_MAX)}><i className=\"fa fa-arrow-left\"> </i></span>\n            <input type='text' className='transfer-input'\n                   defaultValue={uraniumAmt}\n                   onChange={(event) => setUraniumAmt(event.target.value)}/>\n            <span className='transfer-button'\n                  onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                    'uranium', uraniumAmt, ship.resourcesMax)}><i className=\"fa fa-arrow-right\"> </i></span>\n          </td>\n          <td>{Math.floor(ship.resources.uranium)}</td>\n        </tr>\n        </tbody>\n      </table>}\n\n      {!shipOnPlanet &&\n      <table>\n        <thead>\n        <tr>\n          <th>Resource</th>\n          <th>Planet</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <td>Titanium</td>\n          <td>{Math.floor(planet.resources.stored.titanium)}</td>\n        </tr>\n        <tr>\n          <td>Gold</td>\n          <td>{Math.floor(planet.resources.stored.gold)}</td>\n        </tr>\n        <tr>\n          <td>Uranium</td>\n          <td>{Math.floor(planet.resources.stored.uranium)}</td>\n        </tr>\n        </tbody>\n      </table>}\n    </div>);\n}\n\n","import React from 'react';\nimport { c, manage, game} from '../../functions';\nimport './FactoryButton.css';\nimport {Col, Row} from \"react-bootstrap\";\n\nexport function FactoryButton({template}) {\n  const world = window.world;\n  const planet = world.selectedPlanet;\n  const ship = world.ship;\n  let existingInventory = (template.objType === c.OBJ_SHIP) ?\n    planet.ships.filter(s=> s.name === template.name).length:\n    planet.equip.filter(e=> e.name === template.name).length;\n\n  // We pretend the current ship is in storage in the planet\n  if (template.name === ship.name) {\n    existingInventory += 1;\n  }\n\n  function build(templateArg) {\n    if (templateArg.objType === c.OBJ_SHIP) {\n      manage.buildShip(templateArg);\n    } else if (templateArg.objType === c.OBJ_EQUIP) {\n      manage.buildEquip(templateArg);\n    }\n  }\n\n  return (\n    <Row className='build-button'>\n      <Col xs='1'>\n        {existingInventory}\n      </Col>\n      <Col xs='5'>\n      <button\n        disabled={!manage.hasFactory(planet) || !game.canAfford(planet, ship, template.cost)}\n        onClick={() => build(template)}>{template.name}</button>\n      </Col>\n      <Col xs='6'>\n        <span className='cost'>{template.cost.titanium}T {template.cost.gold}G {template.cost.uranium}U</span>\n      </Col>\n    </Row>);\n};\n\n","import React from 'react';\nimport { c } from '../../functions/';\nimport './FactoryTab.css';\nimport {FactoryButton} from \"./FactoryButton\";\n\nexport function FactoryTab({type, templateList}) {\n  return (\n    <div  className='container factory-tab' style={{maxHeight: (c.SCREEN_HEIGHT - 200)}}>\n      {templateList.map((template, i) => {\n        return <FactoryButton key={type+i} template={template} />;\n      })}\n    </div>);\n}\n\n","import React from 'react';\nimport { c } from '../../functions/';\nimport './ManageFactory.css';\nimport {Tab, Tabs} from \"react-bootstrap\";\nimport {FactoryTab} from \"./FactoryTab\";\n\n\nexport function FactoryTabs() {\n  const equip = window.world.blueprints.equip;\n\n  const upgrades =  equip.filter((e) => c.EQUIP_UPGRADES.find(u => u.name === e.name));\n  const primaryWeapons = equip.filter((e) => c.EQUIP_PRIMARY_WEAPONS.find(p => p.name === e.name));\n  const secondaryWeapons = equip.filter((e) => c.EQUIP_SECONDARY_WEAPONS.find(s => s.name === e.name));\n  const droids = equip.filter((e) => c.EQUIP_DROIDS.find(d => d.name === e.name));\n\n  return (\n    <div className='factory-info'>\n      <Tabs defaultActiveKey='ships' id='factory-tabs'>\n        <Tab eventKey='ships' title=\"Ships\">\n          <FactoryTab type='ship' templateList={window.world.blueprints.ship} />\n        </Tab>\n\n        {upgrades && upgrades.length > 0 &&\n        <Tab eventKey='upgrades' title=\"Upgrades\">\n          <FactoryTab type='equip' templateList={upgrades} />\n        </Tab>\n        }\n\n        {primaryWeapons && primaryWeapons.length > 0 &&\n        <Tab eventKey='primaryWeapons' title=\"Primary Weapons\">\n          <FactoryTab type='equip' templateList={primaryWeapons} />\n        </Tab>\n        }\n\n        {secondaryWeapons && secondaryWeapons.length > 0 &&\n        <Tab eventKey='secondaryWeapons' title=\"Secondary Weapons\">\n          <FactoryTab type='equip' templateList={secondaryWeapons} />\n        </Tab>\n        }\n\n        {droids && droids.length > 0 &&\n        <Tab eventKey='droids' title=\"Droids\">\n          <FactoryTab type='equip' templateList={droids} />\n        </Tab>\n        }\n\n      </Tabs>\n    </div>);\n}\n\n","import React, {useState} from 'react';\nimport {manage} from '../functions';\nimport './ManageStorage.css';\n\nexport function ManageStorage() {\n  const [selectedShip, setSelectedShip] = useState();\n  let world = window.world;\n  let planet = world.selectedPlanet;\n  let currentShip = world.ship;\n  let shipOnPlanet = ((planet === window.world.lastPlanetLanded) && currentShip.alive);\n\n  function viewShip(ship) {\n    setSelectedShip(ship);\n  }\n\n  function startUsingShip() {\n    manage.switchToShip(selectedShip);\n    setSelectedShip(null);\n  }\n\n  // Default to selecting the current ship\n  if (!selectedShip && shipOnPlanet) {\n    setSelectedShip(currentShip);\n  }\n\n  let selectedShipEquip = [];\n  if (selectedShip) {\n    for (let equip of selectedShip.equip) {\n      selectedShipEquip.push(\n        <div className=\"item\" key={equip.id}>\n          {equip.name} &nbsp;\n          <button onClick={() => manage.moveEquipFromShipToPlanet(selectedShip, planet, equip)}>Remove</button>\n        </div>);\n    }\n  }\n\n  return (\n    <div>\n      <div className='storage-section'>\n        <div className='title'>Ships</div>\n        <span className='item-list'>\n          {(shipOnPlanet ? [currentShip] : []).concat(planet.ships).map((ship, i) => {\n            return <div key={i}\n                        onClick={() => viewShip(ship)}\n                        className={`ship ${selectedShip === ship ? 'selected-item' : 'non-selected-item'}`}>{ship.name}</div>\n          })}\n        </span>\n        <span className='item-details'>\n          {selectedShip != null && // exclude this block if no ship selected\n          <div>\n            <div className='item-attr'>\n              <button onClick={() => startUsingShip()} disabled={selectedShip === currentShip}>Use Ship</button>\n            </div>\n            <div className='item-attr'><b>Name</b> {selectedShip.name} {selectedShip.id}</div>\n            <div className='item-attr'>\n              <b>Engine</b> Propulsion:{Math.floor(selectedShip.propulsion * 100)} Turn:{Math.floor(selectedShip.turnSpeed * 100)}\n            </div>\n            <div className='item-attr'>\n              <b>Landing</b> Speed:{Math.floor(selectedShip.crashSpeed)} Angle:{Math.floor(selectedShip.crashAngle * 10)}\n            </div>\n            <div className='item-attr'><b>Armor</b>\n              {Math.floor(selectedShip.armor)} of {Math.floor(selectedShip.armorMax)}\n              <button onClick={() => manage.repairShip(planet, selectedShip)}\n                      disabled={selectedShip.armorMax <= selectedShip.armor}>Repair\n              </button>\n              &nbsp; Cost {Math.floor(selectedShip.armorMax - selectedShip.armor)} titanium\n            </div>\n            <div className='item-attr'><b>Resources Max</b>{Math.floor(selectedShip.resourcesMax)}</div>\n            <div className='item-attr'><b>Equip</b> (Max {selectedShip.equipMax})\n              {selectedShipEquip}\n            </div>\n          </div>\n          }\n        </span>\n      </div>\n\n      <div className='storage-section'>\n        <div className='title'>Equipment</div>\n        <span className='equip-list'>\n          {planet.equip.map((equip, i) => {\n            return <div key={i} className='item'>\n              {equip.name} &nbsp;\n              <button onClick={() => manage.moveEquipFromPlanetToShip(selectedShip, planet, equip)}\n                      disabled={!manage.canEquip(selectedShip, equip)}\n              >Equip\n              </button>\n            </div>\n          })}\n        </span>\n      </div>\n    </div>);\n}\n\n","import React, {useRef} from 'react';\nimport { savegame, c } from '../functions';\nimport './ManageSystem.css';\nimport lodash from 'lodash';\n\nexport function ManageSystem() {\n  const world = window.world;\n  const nameInput = useRef(null);\n  let gameNames = savegame.loadLocalStorage(c.LOCALSTORAGE_GAME_NAMES_KEY);\n\n  /**\n   * Adds a game name to the list of saved game names.\n   */\n  function addGameName(newGameName) {\n    if (newGameName && !gameNames.includes(newGameName)) {\n      gameNames.push(newGameName)\n    }\n    savegame.saveLocalStorage(c.LOCALSTORAGE_GAME_NAMES_KEY, gameNames);\n    world.system.saveGameName = newGameName;\n  }\n\n  // If no games are saved, setup an empty list of game names\n  if (!gameNames) {\n    gameNames = [];\n    addGameName(null);\n  }\n\n  function saveGame() {\n    const saveGameName = nameInput.current.value;\n    // Save the world in indexedDB\n    savegame.saveWorld(c.DB_GAME_PREFIX+saveGameName);\n    // Save the game name in localStorage\n    addGameName(saveGameName);\n  }\n\n  function deleteGame(gameName) {\n    // TODO : confirm\n    savegame.deleteWorld(c.DB_GAME_PREFIX+gameName);\n    gameNames = lodash.remove(gameNames, (name) => name !== gameName );\n    savegame.saveLocalStorage(c.LOCALSTORAGE_GAME_NAMES_KEY, gameNames);\n    if (world.saveGameName === gameName) {\n      world.saveGameName = null;\n    }\n    if (nameInput.current.value === gameName) {\n      nameInput.current.value = '';\n    }\n  }\n\n  return (\n    <div>\n      <div className='system-section'>\n        <div className='section'><b>Current Game</b></div>\n        <input type='text' onFocus={() => world.system.isTyping = true } onBlur={() => world.system.isTyping = false } ref={nameInput} />\n        <button name=\"Save\" onClick={() => saveGame() }>Save</button>\n        <div className='section'><b>Saved Game</b></div>\n        {gameNames.map(gameName => (\n          <div key={gameName} className={'game-list-row '+(world.saveGameName === gameName ? 'selected-game' : '')}>\n            <span className='game-list-item'><button onClick={() => savegame.loadWorld(c.DB_GAME_PREFIX+gameName)}>Load </button></span>\n            <span className='game-list-item'><button onClick={() => deleteGame(gameName)}>Delete</button></span>\n            <span className='game-list-item'>{gameName}</span>\n          </div>\n        ))}\n      </div>\n    </div>);\n}\n\n","import React from 'react';\nimport { ManagePlanet } from './ManagePlanet';\nimport './ManageTabs.css';\nimport { FactoryTabs } from './factory/FactoryTabs';\nimport { ManageStorage } from './ManageStorage';\nimport {ManageSystem} from \"./ManageSystem\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Tab, Tabs} from \"react-bootstrap\";\n\nexport function ManageTabs() {\n\n  return (\n    <Tabs defaultActiveKey='planet' id='manage-tabs' mountOnEnter unmountOnExit>\n      <Tab eventKey='planet' title='Planet'>\n        <ManagePlanet/>\n      </Tab>\n\n      <Tab eventKey='factory' title='Factory'>\n        <FactoryTabs/>\n      </Tab>\n\n      <Tab eventKey='storage' title='Storage'>\n        <ManageStorage/>\n      </Tab>\n\n      <Tab eventKey='system' title='System'>\n        <ManageSystem/>\n      </Tab>\n    </Tabs>);\n}\n\n","import React from 'react';\nimport { c } from './functions';\nimport './InfoPanel.css';\nimport { InfoFly } from './InfoFly';\nimport { ManageTabs } from './manage/ManageTabs';\n\nexport class InfoPanel extends React.Component {\n  render() {\n    let world = window.world;\n    if (world.system.gameState === c.GAME_STATE.MANAGE) {\n      return (<ManageTabs/>);\n    } else if (world.system.gameState === c.GAME_STATE.FLY) {\n      return (<InfoFly/>);\n    }\n    return (<div>...</div>);\n  }\n}\n\n","import React from 'react';\nimport './App.css';\nimport { InfoPanel } from './InfoPanel';\nimport { utils, c, game, fly, ai } from './functions';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    console.log(\"created world\");\n    window.world = game.createEmptyWorld();\n    this.pixiRef = React.createRef();\n  }\n\ncomponentDidMount() {\n  console.log(\"mounted\");\n  this.createPixiApp();\n}\n\nrender() {\n  return (\n    <table>\n      <tbody>\n      <tr>\n        <td>\n        <div ref={this.pixiRef} />\n        </td>\n        <td className='info-panel'>\n          <InfoPanel />\n        </td>\n      </tr>\n      </tbody>\n    </table>\n   );\n  }\n\n  createPixiApp = () => {\n    console.log(\"Creating PIXI app\");\n    let app = new window.PIXI.Application({width: c.SCREEN_WIDTH, height: c.SCREEN_HEIGHT});\n    app.renderer.backgroundColor = c.BLACK;\n    this.pixiRef.current.appendChild(app.view);\n    window.PIXI.loader\n      .add(c.SPRITESHEET_JSON)\n      .add(c.CRASH_JSON)\n      .load(this.setupGame);\n    window.world.system.app = app;\n  }\n\n  // Setup the App\n  setupGame = () => {\n    game.setupWorld();\n    this.setupKeyboardListeners();\n    game.changeGameState(c.GAME_STATE.FLY);\n    window.world.system.app.renderer.plugins.interaction.on('pointerdown', (event) => {\n      game.click(event);\n    });\n    window.world.system.app.ticker.add(delta => this.mainLoop(delta));\n  }\n  \n  // Main loop runs 60 times per sec\n  mainLoop = (delta) => {\n    if (window.world.system.gameLoop) {\n      game.runBuildings();\n      fly.moveBullets();\n      fly.coolAllWeapons();\n      ai.moveAliens();\n      window.world.system.gameLoop(delta);\n    }\n    this.forceUpdate()\n  }\n\n  setupKeyboardListeners = () => {\n    window.world.system.keys.left = utils.keyboardListener(\"ArrowLeft\");\n    window.world.system.keys.right = utils.keyboardListener(\"ArrowRight\");\n    window.world.system.keys.up = utils.keyboardListener(\"ArrowUp\");\n    window.world.system.keys.down = utils.keyboardListener(\"ArrowDown\");\n    window.world.system.keys.space = utils.keyboardListener(\" \");\n    window.world.system.keys.w = utils.keyboardListener(\"w\"); // up\n    window.world.system.keys.a = utils.keyboardListener(\"a\"); // left\n    window.world.system.keys.s = utils.keyboardListener(\"s\"); // down\n    window.world.system.keys.d = utils.keyboardListener(\"d\"); // right\n    window.world.system.keys.q = utils.keyboardListener(\"q\"); // thrust left\n    window.world.system.keys.e = utils.keyboardListener(\"e\"); // thrust right\n    window.world.system.keys.x = utils.keyboardListener(\"x\"); // secondary weapon\n  }\n  \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}