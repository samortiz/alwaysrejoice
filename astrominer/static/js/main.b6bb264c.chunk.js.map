{"version":3,"sources":["functions/utils.js","functions/constants.js","functions/game.js","functions/fly.js","functions/manage.js","functions/ai.js","functions/savegame.js","fly/Heatbar.js","fly/PushButton.js","fly/StatusButton.js","fly/InfoFly.js","manage/ManagePlanet.js","manage/factory/FactoryButton.js","manage/factory/FactoryTab.js","manage/factory/FactoryTabs.js","manage/ManageStorage.js","manage/ManageSystem.js","manage/ManageTabs.js","InfoPanel.js","App.js","serviceWorker.js","index.js"],"names":["distanceBetween","ax","ay","bx","by","Math","sqrt","pow","midPoint","a","b","normalizeRadian","radians","retVal","PI","calcGravity","x","y","planet","distance","gravityDirection","atan2","c","GRAVITATIONAL_CONST","mass","sin","cos","dir","directionTo","x1","y1","x2","y2","dirComponents","amount","xAmt","yAmt","randomInt","minP","maxP","min","ceil","max","floor","random","randomFloat","randomBool","getPointFrom","startX","startY","getVertexData","sprite","calculateVertices","collisionPoints","push","toGlobal","vertexData","globalX","globalY","spriteX","spriteY","HALF_SCREEN_WIDTH","HALF_SCREEN_HEIGHT","keyboardListener","value","key","isDown","isUp","press","undefined","release","downHandler","event","upHandler","downListener","bind","upListener","window","addEventListener","unsubscribe","removeEventListener","showToast","text","Swal","fire","title","timer","position","showConfirmButton","toast","width","SCREEN_WIDTH","showClass","popup","hideClass","then","BLACK","YELLOW","BLUE","WHITE","DARK_GREY","LIGHT_GREY","GAME_STATE","INIT","FLY","MANAGE","LOCALSTORAGE_GAME_NAMES_KEY","DB_GAME_PREFIX","SCREEN_HEIGHT","NEARBY_WIDTH","NEARBY_HEIGHT","MINIMAP_WIDTH","MINIMAP_HEIGHT","HALF_MINIMAP_WIDTH","HALF_MINIMAP_HEIGHT","MINIMAP_VIEW_WIDTH","MINIMAP_VIEW_HEIGHT","HALF_MINIMAP_VIEW_WIDTH","HALF_MINIMAP_VIEW_HEIGHT","MINIMAP_SCALE_X","MINIMAP_SCALE_Y","MINIMAP_BORDER_COLOR","MINIMAP_BACKGROUND_COLOR","MINIMAP_PLANET_COLOR","MINIMAP_SELECTED_PLANET_COLOR","MINIMAP_BUILDING_COLOR","MINIMAP_SHIP_COLOR","SPRITESHEET_JSON","ALIEN_SHIP_BLACK_FILE","ALIEN_SHIP_BLUE_FILE","ALIEN_SHIP_BLUE_LARGE_FILE","ALIEN_SHIP_BLUE_SMALL_FILE","ALIEN_SHIP_FIRE_FILE","ALIEN_SHIP_GREEN_FILE","ALIEN_SHIP_GREEN_SMALL_FILE","ALIEN_SHIP_GREEN_LARGE_FILE","ALIEN_SHIP_RED_FILE","ALIEN_SHIP_RED_SMALL_FILE","ALIEN_SHIP_RED_LARGE_FILE","BULLET_FILE","BULLET_BLUE_FILE","BULLET_WHITE_FILE","FACTORY_FILE","MINE_FILE","PLANET_GREEN_FILE","PLANET_PURPLE_FILE","PLANET_RED_FILE","PLANET_ROCK_FILE","SHIELD_BLUE_FILE","SHIELD_GREEN_FILE","SHIELD_WHITE_FILE","SHIP_BALL_FILE","SHIP_CARGO_FILE","SHIP_EXPLORER_FILE","SHIP_FAST_FILE","SHIP_FIGHTER_FILE","SHIP_HEAVY_FILE","SHIP_MISSILE_FILE","SHIP_RED_WINGS_FILE","SHIP_SKELETON_FILE","STAR_BACKGROUND_FILE","CRASH_JSON","CRASH","UNIVERSE_RADIUS","PLAYER","ALIEN","PLAYER_STARTING_RESOURCES","titanium","gold","uranium","ALLOWED_OVERLAP","TAKEOFF_SPEED","PLANET_RESOURCE_MAX","PLAYER_START_X","PLAYER_START_Y","MIN_ALIEN_DIST_TO_PLANET","MIN_ALIEN_DIST_TO_ALIEN","BUILDING_PLACEMENT_ROTATION_INCREMENT","BUILDING_TYPE_MINE","MINE_SCALE","MINE_WIDTH","MINE_ANIMATION_SPEED","MINE_SPEED_TITANIUM","MINE_SPEED_GOLD","MINE_SPEED_URANIUM","MINE_COST","BUILDING_TYPE_FACTORY","FACTORY_COST","FACTORY_WIDTH","FACTORY_SCALE","EQUIP_TYPE_BRAKE","EQUIP_TYPE_PRIMARY_WEAPON","EQUIP_TYPE_SECONDARY_WEAPON","EQUIP_TYPE_THRUSTER","EQUIP_TYPE_ARMOR","EQUIP_TYPE_REPAIR_DROID","EQUIP_TYPE_GUNNERY_DROID","EQUIP_TYPE_SPEED","EQUIP_TYPE_TURN","EQUIP_TYPE_STORAGE","THRUST_MOMENTUM","THRUST_BLINK","OBJ_EQUIP","OBJ_SHIP","ALIEN_AI_TURRET","ALIEN_AI_CREEPER","ALIEN_AI_MOTHERSHIP","ALIEN_AI_KAMIKAZI","EQUIP_AI_MINE","EQUIP_AI_TURRET","EQUIP_AI_MISSILE","DIR_AHEAD_OF_SHIP","DIR_BEHIND_SHIP","EQUIP_BRAKE","name","objType","type","brakeSpeedPct","cost","EQUIP_BLINK_BRAKE","EQUIP_SPEED_BOOST","boostSpeed","EQUIP_TURN_BOOST","EQUIP_STORAGE","storageAmount","EQUIP_ENHANCED_STORAGE","EQUIP_ARMOR","armorAmt","EQUIP_ENHANCED_ARMOR","EQUIP_THRUSTER","thrustSpeed","thrustType","EQUIP_BLINK_THRUSTER","EQUIP_BLASTER","coolTime","cool","damage","speed","lifetime","jitter","bulletFile","EQUIP_FAST_BLASTER","EQUIP_SPRINKLER_BLASTER","EQUIP_STREAM_BLASTER","EQUIP_ALIEN_BLASTER","EQUIP_ALIEN_BLASTER_FAST","EQUIP_ALIEN_BLASTER_LIGHTNING","EQUIP_STAPLE_GUN","EQUIP_STAPLE_GUN_HEAVY","EQUIP_SHIELD","shield","active","armor","armorMax","lifetimeMax","spriteFile","radius","EQUIP_SHIELD_LONG","EQUIP_SHIELD_STRONG","EQUIP_SHIELD_ULTRA","SHIP_RED_MISSILE","propulsion","turnSpeed","resourcesMax","resources","equipMax","equip","crashSpeed","crashAngle","imageScale","imageFile","viewRange","aiType","EQUIP_ALIEN_MISSILE_LAUNCHER","createShip","EQUIP_R2D2","repairSpeed","EQUIP_GUNNERY_DROID","weapon","SHIP_EXPLORER","SHIP_CARGO","SHIP_FAST","SHIP_SKELETON","SHIP_HEAVY","SHIP_FIGHTER","SHIP_ALIEN_TURRET","SHIP_ALIEN","SHIP_ALIEN_LARGE","SHIP_ALIEN_STAPLE_TURRET","SHIP_ALIEN_FIRE","SHIP_ALIEN_STEALTH","SHIP_ALIEN_MOTHERSHIP","SHIP_MINE","aiData","mineDistance","SHIP_TURRET","SHIP_MISSILE","ALL_SHIPS","EQUIP_MINE_DEPLOYER","EQUIP_TURRET_DEPLOYER","EQUIP_MISSILE_LAUNCHER","EQUIP_UPGRADES","EQUIP_PRIMARY_WEAPONS","EQUIP_SECONDARY_WEAPONS","EQUIP_DROIDS","ALL_EQUIP","XP_LEVELS","xp","obj","PLANET_DENSITY","Map","set","UNIVERSE_RINGS","planetCount","minDist","maxDist","minDistToOtherPlanet","minPlanetRadius","maxPlanetRadius","planetFiles","aliens","count","file","createEmptyWorld","saveGameName","ship","view","ships","planets","selectedPlanet","lastPlanetLanded","blueprints","xpLevels","lodash","cloneDeep","nextId","system","keys","app","gameState","isTyping","gameLoop","bgSprite","explosionSheet","explosions","bullets","nearby","planetSpriteCache","shipSpriteCache","shieldSpriteCache","spriteContainers","background","minimap","miniMapGraphics","initializing","setupWorld","world","setupSpriteContainers","createBackground","createPlanets","shipStartX","shipStartY","getShipSprite","visible","createAliens","setupMiniMap","setupExplosionSheet","mainStage","stage","PIXI","Container","addChild","container","TilingSprite","Texture","from","ring","i","fileName","utils","length","String","fromCharCode","get","maxResource","minResource","createPlanet","getFreeXy","nearestPlanetDistance","origPlanet","nearestPlanet","dist","nearestPlanetDist","nearestAlienDistance","nearestAlien","alien","nearestAlienDist","minDistToPlanet","minDistToAlien","failCount","np","console","warn","planetFile","stored","raw","buildings","lastLandingDir","spriteId","getPlanetSprite","planetContainer","planetSprite","Sprite","loader","textures","anchor","spriteScale","scale","building","manage","makeBuildingSprite","entries","foundSprite","rotation","spriteWidth","spriteHeight","height","spriteSheet","getSpriteOrigWithHeight","origWidth","origHeight","getShieldSprite","cacheId","id","shieldSprite","shipSprite","shieldWidth","shipType","owner","selectedSecondaryWeaponIndex","vx","vy","alive","createAlien","alienInfo","miniMapContainer","mask","Graphics","drawRect","renderable","cacheAsBitmap","g","click","data","global","fly","clickOnMinimap","changeGameState","newState","enterFlyState","flyLoop","enterManageState","manageLoop","runBuildings","mineResource","children","buildingSprite","animationSpeed","resourceType","nextLevel","addBlueprint","shift","addMiningXp","addAlienXp","canAfford","payResourceCost","payResource","paid","Loader","shared","spritesheet","createExplosionSprite","AnimatedSprite","animations","loop","log","delta","setupNearby","runDroids","left","turnShip","right","d","up","w","booster","getEquip","propelShip","down","s","brake","brakeShip","space","firePrimaryWeapon","fireSecondaryWeapon","q","thrustShip","e","planetsInView","planetInView","grav","game","detectCollisionWithPlanet","landShip","detectCollisionWithAlien","shipsCollide","moveExplosions","moveBackground","drawMiniMap","minX","maxX","minY","maxY","repositionScreen","ai","moveAliens","coolAllWeapons","coolWeapons","disableShield","resetWeaponsCool","droid","shootAtNearestAlien","weaponRange","origDir","fireWeapon","tilePosition","getActiveShield","getEquippedShield","point","planetDir","dirDiff","abs","success","speedDiff","dirDiffAdj","damageShip","resetGame","r","getExplosionSprite","explosionSprite","playerShip","destroyShip","afterExplosion","play","onLoop","stop","getAvailablePlanetXY","turnBooster","thruster","thrustX","thrustY","fireBullet","gun","getSecondaryWeapon","selectFirstSecondaryWeapon","child","childSprite","childDistFromShip","checkForCollisionWithPlanet","checkForCollisionWithShip","enableShield","bullet","findOrCreateBullet","jitterAmt","killBullet","moveBullets","checkForBulletCollision","bulletHitShip","containsPoint","shipDamage","alienDamage","equipType","t","clear","beginFill","lineStyle","endFill","planetOnMap","planetColor","drawCircle","buildingX","buildingY","clickX","clickY","primaryWeaponRange","gravity","takeOff","getBuildingInfo","buildingType","animation","buildMine","mine","getBuildingPlacementRotation","distanceFromShip","deg","degX","degY","buildingWidth","buildingFits","minBuildingWidth","transferResource","source","target","requestedAmtStr","maxCapacity","requestedAmt","Number","isNaN","amt","spaceLeft","resupplyShip","desiredAmt","freeAmt","desiredTitanium","buildFactory","factory","buildShip","shipTemplate","newShip","switchToShip","oldShip","removeShipFromStorage","addShipToStorage","newShipSprite","filter","removedShip","hasFactory","buildEquip","equipTemplate","costToRepair","repairShip","addArmor","titaniumOnHand","addEquip","newEquip","moveEquipFromPlanetToShip","equipToMove","remove","moveEquipFromShipToPlanet","shipResources","owing","this","removeResource","canEquip","includes","find","eq","hasMoved","turretAi","creeperAi","playerTurretAi","missileAi","mothershipAi","alienSprite","shootAt","shooter","distanceToPlayer","enableShieldIfNeeded","turret","getNearestAlienTarget","missile","getNearestPlayerTarget","dirToTarget","crashIntoPlayer","moved","playerTarget","distToPlayer","dirToPlanet","rightLeft","turnDir","alienTarget","alienDist","shipId","otherShip","shieldEquip","getShield","saveLocalStorage","objToSave","localStorage","getItem","removeItem","setItem","JSON","stringify","loadLocalStorage","objString","parse","upgradeDB","db","result","oldVersion","deleteObjectStore","createObjectStore","keyPath","loadWorld","dbRequest","indexedDB","open","onerror","onupgradeneeded","onsuccess","request","transaction","objectStore","newWorld","oldSystem","removeChildren","saveWorld","worldToStore","omit","objectStoreRequest","put","deleteWorld","delete","HEATBAR","Heatbar","curr","topFree","colorImgSrc","className","style","IMG_WIDTH","IMG_HEIGHT","src","alt","clipPath","PushButton","selected","onChange","imgFile","onClick","BUTTON","StatusButton","rightFree","getStatus","InfoFly","backgroundImage","backgroundSize","paddingRight","textAlign","map","cellPadding","colSpan","ManagePlanet","useState","titaniumAmt","setTitaniumAmt","goldAmt","setGoldAmt","uraniumAmt","setUraniumAmt","shipOnPlanet","disabled","defaultValue","FactoryButton","template","existingInventory","Row","Col","xs","templateArg","FactoryTab","templateList","maxHeight","minWidth","FactoryTabs","upgrades","u","primaryWeapons","p","secondaryWeapons","droids","Tabs","defaultActiveKey","Tab","eventKey","ManageStorage","selectedShip","setSelectedShip","currentShip","selectedShipEquip","concat","viewShip","ManageSystem","nameInput","useRef","gameNames","savegame","setCurrentGame","newName","current","addGameName","newGameName","onFocus","onBlur","ref","saveGame","gameName","loadGame","confirm","deleteGame","ManageTabs","mountOnEnter","unmountOnExit","InfoPanel","React","Component","App","props","createPixiApp","Application","renderer","backgroundColor","pixiRef","appendChild","add","load","setupGame","setupKeyboardListeners","plugins","interaction","on","ticker","mainLoop","forceUpdate","createRef","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"oucAMO,SAASA,EAAgBC,EAAIC,EAAIC,EAAIC,GAC1C,OAAOC,KAAKC,KAAKD,KAAKE,IAAIN,EAAKE,EAAI,GAAKE,KAAKE,IAAIL,EAAKE,EAAI,IAOrD,SAASI,EAASC,EAAGC,GAC1B,MAAO,EAAED,EAAE,GAAGC,EAAE,IAAI,GAAID,EAAE,GAAGC,EAAE,IAAI,GAM9B,SAASC,EAAgBC,GAC9B,IAAIC,EAASD,EAOb,OANIC,EAAS,IACXA,GAAoB,EAAVR,KAAKS,IAEbD,EAAmB,EAAVR,KAAKS,KAChBD,GAAoB,EAAVR,KAAKS,IAEVD,EAOF,SAASE,EAAYC,EAAGC,EAAGC,GAChC,IAAIC,EAAWnB,EAAgBgB,EAAGC,EAAGC,EAAOF,EAAGE,EAAOD,GAClDE,EAAW,KACbA,EAAW,IAEb,IAAIC,EAAmBf,KAAKgB,MAAML,EAAIE,EAAOF,EAAGC,EAAIC,EAAOD,GAG3D,MAAO,CAACD,EAFOM,EAAEC,oBAAsBL,EAAOM,KAAOnB,KAAKE,IAAIY,EAAU,IAAMd,KAAKoB,IAAIL,GAEnEH,EADLK,EAAEC,oBAAsBL,EAAOM,KAAOnB,KAAKE,IAAIY,EAAU,IAAMd,KAAKqB,IAAIN,GACvDO,IAAIP,GAM/B,SAASQ,EAAYC,EAAGC,EAAIC,EAAGC,GACpC,OAAOrB,EAAgBN,KAAKgB,MAAMW,EAAKF,EAAIC,EAAKF,IAM3C,SAASI,EAAcN,EAAKO,GAGjC,MAAO,CAACC,KAFGD,EAAS7B,KAAKqB,IAAIC,GAEfS,KADHF,EAAS7B,KAAKoB,IAAIE,IAOxB,SAASU,EAAUC,EAAMC,GAC9B,IAAIC,EAAMnC,KAAKoC,KAAKH,GAChBI,EAAMrC,KAAKsC,MAAMJ,GACrB,OAAOlC,KAAKsC,MAAMtC,KAAKuC,UAAYF,EAAMF,EAAK,GAAKA,GAM9C,SAASK,EAAYL,EAAKE,GAC/B,OAAOF,EAAOnC,KAAKuC,UAAYF,EAAMF,GAMhC,SAASM,IACd,OAAOzC,KAAKuC,SAAW,GAMlB,SAASG,EAAaC,EAAQC,EAAQtB,EAAKR,GAGhD,MAAO,CAACH,EAFAgC,EAAU7B,EAAWd,KAAKqB,IAAIC,GAE5BV,EADFgC,EAAU9B,EAAWd,KAAKoB,IAAIE,IAQjC,SAASuB,EAAclC,EAAEC,EAAGkC,GACjCA,EAAOC,oBACP,IAAIC,EAAkB,GAUtB,OATAA,EAAgBC,KAAKC,EAASvC,EAAGC,EAAGkC,EAAOK,WAAW,GAAIL,EAAOK,WAAW,KAC5EH,EAAgBC,KAAKC,EAASvC,EAAGC,EAAGkC,EAAOK,WAAW,GAAIL,EAAOK,WAAW,KAC5EH,EAAgBC,KAAKC,EAASvC,EAAGC,EAAGkC,EAAOK,WAAW,GAAIL,EAAOK,WAAW,KAC5EH,EAAgBC,KAAKC,EAASvC,EAAGC,EAAGkC,EAAOK,WAAW,GAAIL,EAAOK,WAAW,KAE5EH,EAAgBC,KAAK9C,EAAS6C,EAAgB,GAAIA,EAAgB,KAClEA,EAAgBC,KAAK9C,EAAS6C,EAAgB,GAAIA,EAAgB,KAClEA,EAAgBC,KAAK9C,EAAS6C,EAAgB,GAAIA,EAAgB,KAClEA,EAAgBC,KAAK9C,EAAS6C,EAAgB,GAAIA,EAAgB,KAC3DA,EAOF,SAASE,EAASE,EAAQC,EAASC,EAAQC,GAChD,MAAO,CAACH,GAAWE,EAAUrC,EAAEuC,mBAAoBH,GAAUE,EAAUtC,EAAEwC,qBAMpE,SAASC,EAAiBC,GAC/B,IAAIC,EAAM,GACVA,EAAID,MAAQA,EACZC,EAAIC,QAAS,EACbD,EAAIE,MAAO,EACXF,EAAIG,WAAQC,EACZJ,EAAIK,aAAUD,EAEdJ,EAAIM,YAAc,SAAAC,GACZA,EAAMP,MAAQA,EAAID,QAChBC,EAAIE,MAAQF,EAAIG,OAAOH,EAAIG,QAC/BH,EAAIC,QAAS,EACbD,EAAIE,MAAO,IAIfF,EAAIQ,UAAY,SAAAD,GACVA,EAAMP,MAAQA,EAAID,QAChBC,EAAIC,QAAUD,EAAIK,SAASL,EAAIK,UACnCL,EAAIC,QAAS,EACbD,EAAIE,MAAO,IAIf,IAAMO,EAAeT,EAAIM,YAAYI,KAAKV,GACpCW,EAAaX,EAAIQ,UAAUE,KAAKV,GAYtC,OAXAY,OAAOC,iBACL,UAAWJ,GAAc,GAE3BG,OAAOC,iBACL,QAASF,GAAY,GAGvBX,EAAIc,YAAc,WAChBF,OAAOG,oBAAoB,UAAWN,GACtCG,OAAOG,oBAAoB,QAASJ,IAE/BX,EAGF,SAASgB,EAAUC,GACxBC,IAAKC,KAAK,CACRC,MAAOH,EACPI,MAAO,IACPC,SAAS,WACTC,mBAAmB,EACnBC,OAAM,EACNC,MAAOrF,KAAKsC,MAAMrB,EAAEqE,aAAa,GAAG,KACpCC,UAAW,CACTC,MAAO,0CAETC,UAAW,CACTD,MAAO,2CAERE,O,aClLQC,EAAQ,EACRC,EAAS,SACTC,EAAO,MACPC,EAAQ,SACRC,EAAY,QACZC,EAAa,QAEbC,EAAa,CACxBC,KAAM,OACNC,IAAK,MACLC,OAAQ,UAIGC,EAA8B,mBAC9BC,EAAiB,QAGjBhB,EAAe,IACfiB,EAAgB,IAChB/C,EAAoB8B,EAAe,EACnC7B,EAAqB8C,EAAgB,EACrCC,EAA8B,EAAflB,EACfmB,EAAgC,EAAhBF,EAEhBG,EAAgB,IAChBC,EAAiB,IACjBC,EAAqBF,EAAgB,EACrCG,GAAsBF,EAAiB,EAEvCG,GAAqB,IACrBC,GAAsB,IACtBC,GAA0BF,GAAqB,EAC/CG,GAA2BF,GAAsB,EAEjDG,GAAkBR,EAAgBI,GAClCK,GAAkBR,EAAiBI,GAEnCK,GAAuBpB,EACvBqB,GAA2BtB,EAC3BuB,GAAuBtB,EACvBuB,GAAgC3B,EAChC4B,GAAyB3B,EACzB4B,GAAqB3B,EAGrB4B,GAAmB,0BACnBC,GAAwB,kBACxBC,GAAuB,iBACvBC,GAA6B,uBAC7BC,GAA6B,uBAC7BC,GAAuB,iBACvBC,GAAwB,kBACxBC,GAA8B,wBAC9BC,GAA8B,wBAC9BC,GAAsB,gBACtBC,GAA4B,sBAC5BC,GAA4B,sBAC5BC,GAAc,aACdC,GAAmB,kBACnBC,GAAoB,mBACpBC,GAAe,cACfC,GAAY,OACZC,GAAoB,mBACpBC,GAAqB,oBACrBC,GAAkB,iBAClBC,GAAmB,kBACnBC,GAAmB,kBACnBC,GAAoB,mBACpBC,GAAoB,mBACpBC,GAAiB,gBACjBC,GAAkB,iBAClBC,GAAqB,oBACrBC,GAAiB,gBACjBC,GAAoB,mBACpBC,GAAkB,iBAClBC,GAAoB,mBACpBC,GAAsB,qBACtBC,GAAqB,oBACrBC,GAAuB,mBACvBC,GAAa,oBACbC,GAAQ,QAERC,GAAkB,KAClBC,GAAS,SACTC,GAAQ,QACRC,GAA4B,CAACC,SAAU,GAAIC,KAAM,GAAIC,QAAS,GAC9DlJ,GAAsB,EACtBmJ,GAAkB,EAClBC,GAAgB,GAChBC,GAAsB,SACtBC,KAAmBV,GAAkB,KACrCW,GAAiB,EACjBC,GAA2B,GAC3BC,GAA0B,EAG1BC,GAAwC,IAExCC,GAAqB,OACrBC,GAAa,EACbC,GAAa,GACbC,GAAuB,GACvBC,GAAsB,MACtBC,GAAkB,MAClBC,GAAqB,MACrBC,GAAY,CAAClB,SAAU,GAAIC,KAAM,GAAIC,QAAS,GAE9CiB,GAAwB,UACxBC,GAAe,CAACpB,SAAU,GAAIC,KAAM,GAAIC,QAAS,IACjDmB,GAAgB,GAChBC,GAAgB,GAGhBC,GAAmB,QACnBC,GAA4B,iBAC5BC,GAA8B,mBAC9BC,GAAsB,WACtBC,GAAmB,QACnBC,GAA0B,eAC1BC,GAA2B,gBAC3BC,GAAmB,QACnBC,GAAkB,OAClBC,GAAqB,UAErBC,GAAkB,kBAClBC,GAAe,eAEfC,GAAY,QACZC,GAAW,OAEXC,GAAkB,kBAClBC,GAAmB,mBACnBC,GAAsB,sBACtBC,GAAoB,oBACpBC,GAAgB,gBAChBC,GAAkB,kBAClBC,GAAmB,mBAEnBC,GAAoB,QACpBC,GAAkB,SAIlBC,GAAc,CACzBC,KAAM,QAASC,QAASb,GAAWc,KAAM1B,GAAkB2B,cAAe,IAC1EC,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,IAE7BkD,GAAoB,CAC/BL,KAAM,cAAeC,QAASb,GAAWc,KAAM1B,GAAkB2B,cAAe,EAChFC,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAE7BmD,GAAoB,CAC/BN,KAAM,gBAAiBC,QAASb,GAAWc,KAAMnB,GAAkBwB,WAAY,IAC/EH,KAAM,CAACnD,SAAU,EAAGC,KAAM,GAAIC,QAAS,KAE5BqD,GAAmB,CAC9BR,KAAM,eAAgBC,QAASb,GAAWc,KAAMlB,GAAiBuB,WAAY,IAC7EH,KAAM,CAACnD,SAAU,EAAGC,KAAM,GAAIC,QAAS,KAE5BsD,GAAgB,CAC3BT,KAAM,UAAWC,QAASb,GAAWc,KAAMjB,GAAoByB,cAAe,IAC9EN,KAAM,CAACnD,SAAU,GAAIC,KAAM,EAAGC,QAAS,IAE5BwD,GAAyB,CACpCX,KAAM,mBAAoBC,QAASb,GAAWc,KAAMjB,GAAoByB,cAAe,IACvFN,KAAM,CAACnD,SAAU,IAAKC,KAAM,EAAGC,QAAS,IAE7ByD,GAAc,CACzBZ,KAAM,cAAeC,QAASb,GAAWc,KAAMtB,GAAkBiC,SAAU,IAC3ET,KAAM,CAACnD,SAAU,GAAIC,KAAM,EAAGC,QAAS,IAE5B2D,GAAuB,CAClCd,KAAM,iBAAkBC,QAASb,GAAWc,KAAMtB,GAAkBiC,SAAU,IAC9ET,KAAM,CAACnD,SAAU,IAAKC,KAAM,EAAGC,QAAS,IAE7B4D,GAAiB,CAC5Bf,KAAM,WAAYC,QAASb,GAAWc,KAAMvB,GAAqBqC,YAAa,IAAMC,WAAY/B,GAChGkB,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7B+D,GAAuB,CAClClB,KAAM,iBAAkBC,QAASb,GAAWc,KAAMvB,GAAqBqC,YAAa,IAAKC,WAAY9B,GACrGiB,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAK7BgE,GAAgB,CAC3BnB,KAAM,UACNC,QAASb,GACTc,KAAMzB,GACN2C,SAAU,GACVC,KAAM,EACNC,OAAQ,GACRC,MAAO,IACPC,SAAU,IACVC,OAAQ,IACRC,WAAYrG,GACZ+E,KAAM,CAACnD,SAAU,GAAIC,KAAM,EAAGC,QAAS,KAG5BwE,GAAqB,CAChC3B,KAAM,eACNC,QAASb,GACTc,KAAMzB,GACN2C,SAAU,GACVC,KAAM,EACNC,OAAQ,GACRC,MAAO,EACPC,SAAU,GACVC,OAAQ,IACRC,WAAYrG,GACZ+E,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7ByE,GAA0B,CACrC5B,KAAM,oBACNC,QAASb,GACTc,KAAMzB,GACN2C,SAAU,EACVC,KAAM,EACNC,OAAQ,EACRC,MAAO,IACPC,SAAU,IACVC,OAAQ,EACRC,WAAYrG,GACZ+E,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7B0E,GAAuB,CAClC7B,KAAM,iBACNC,QAASb,GACTc,KAAMzB,GACN2C,SAAU,EACVC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPC,SAAU,GACVC,OAAQ,IACRC,WAAYrG,GACZ+E,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7B2E,GAAsB,CACjC9B,KAAM,gBACNC,QAASb,GACTc,KAAMzB,GACN2C,SAAU,GACVC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPC,SAAU,IACVC,OAAQ,IACRC,WAAYpG,GACZ8E,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7B4E,GAA2B,CACtC/B,KAAM,qBACNC,QAASb,GACTc,KAAMzB,GACN2C,SAAU,GACVC,KAAM,EACNC,OAAQ,GACRC,MAAO,EACPC,SAAU,IACVC,OAAQ,GACRC,WAAYpG,GACZ8E,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7B6E,GAAgC,CAC3ChC,KAAM,yBACNC,QAASb,GACTc,KAAMzB,GACN2C,SAAU,GACVC,KAAM,EACNC,OAAQ,GACRC,MAAO,GACPC,SAAU,GACVC,OAAQ,IACRC,WAAYpG,GACZ8E,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7B8E,GAAmB,CAC9BjC,KAAM,aACNC,QAASb,GACTc,KAAMzB,GACN2C,SAAU,EACVC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPC,SAAU,IACVC,OAAQ,GACRC,WAAYnG,GACZ6E,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7B+E,GAAyB,CACpClC,KAAM,mBACNC,QAASb,GACTc,KAAMzB,GACN2C,SAAU,EACVC,KAAM,EACNC,OAAQ,IACRC,MAAO,EACPC,SAAU,IACVC,OAAQ,IACRC,WAAYnG,GACZ6E,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAI7BgF,GAAe,CAC1BnC,KAAM,eAAgBC,QAASb,GAAWc,KAAMxB,GAA6B2C,KAAM,EAAGD,SAAU,IAChGgB,OAAQ,CACNC,QAAQ,EACRC,MAAO,IACPC,SAAU,IACVf,SAAU,IACVgB,YAAa,IACbC,WAAY3G,GACZ4G,OAAQ,GAEVtC,KAAM,CAACnD,SAAU,EAAGC,KAAM,EAAGC,QAAS,MAE3BwF,GAAoB,CAC/B3C,KAAM,cAAeC,QAASb,GAAWc,KAAMxB,GAA6B2C,KAAM,EAAGD,SAAU,KAC/FgB,OAAQ,CACNC,QAAQ,EACRC,MAAO,IACPC,SAAU,IACVf,SAAU,IACVgB,YAAa,IACbC,WAAYzG,GACZ0G,OAAQ,GAEVtC,KAAM,CAACnD,SAAU,EAAGC,KAAM,EAAGC,QAAS,MAE3ByF,GAAsB,CACjC5C,KAAM,gBAAiBC,QAASb,GAAWc,KAAMxB,GAA6B2C,KAAM,EAAGD,SAAU,IACjGgB,OAAQ,CACNC,QAAQ,EACRC,MAAO,KACPC,SAAU,KACVf,SAAU,IACVgB,YAAa,IACbC,WAAY1G,GACZ2G,OAAQ,GAEVtC,KAAM,CAACnD,SAAU,EAAGC,KAAM,EAAGC,QAAS,MAE3B0F,GAAqB,CAChC7C,KAAM,eAAgBC,QAASb,GAAWc,KAAMxB,GAA6B2C,KAAM,EAAGD,SAAU,KAChGgB,OAAQ,CACNC,QAAQ,EACRC,MAAO,IACPC,SAAU,IACVf,SAAU,IACVgB,YAAa,IACbC,WAAY3G,GACZ4G,OAAQ,GAEVtC,KAAM,CAACnD,SAAU,EAAGC,KAAM,EAAGC,QAAS,MAG3B2F,GAAmB,CAC9B9C,KAAM,gBACNC,QAASZ,GACT0D,WAAY,GACZC,UAAW,GACXC,aAAc,EACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,GACPb,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAWrI,GACXiF,KAAM,CAACnD,SAAU,EAAGC,KAAM,EAAGC,QAAS,IACtCsG,UAA0B,EAAfpL,EACXqL,OAAQjE,IAGGkE,GAA+B,CAC1C3D,KAAM,yBAA0BC,QAASb,GAAWc,KAAMxB,GAA6B0C,SAAU,IAAKC,KAAM,IAC5GuC,WAAY,CAAC1D,KAAM4C,GAAkBzO,IAAKwL,IAC1CO,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,MAK7B0G,GAAa,CACxB7D,KAAM,oBAAqBC,QAASb,GAAWc,KAAMrB,GAAyBiF,YAAa,IAC3F1D,KAAM,CAACnD,SAAU,GAAIC,KAAM,IAAKC,QAAS,KAE9B4G,GAAsB,CACjC/D,KAAM,gBAAiBC,QAASb,GAAWc,KAAMpB,GACjDkF,OAAQrC,GAAoBvB,KAAM,CAACnD,SAAU,IAAKC,KAAM,IAAKC,QAAS,MAK3D8G,GAAgB,CAC3BjE,KAAM,WACNC,QAASZ,GACT0D,WAAY,IACZC,UAAW,IACXC,aAAc,GACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,CAACrD,GAAaoB,IACrBoB,SAAU,GACVD,MAAO,GACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAWrH,GACXiE,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,KAG7B+G,GAAa,CACxBlE,KAAM,QACNC,QAASZ,GACT0D,WAAY,KACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,CAACrD,IACRwC,SAAU,GACVD,MAAO,GACPe,WAAY,IACZC,WAAY,GACZC,WAAY,EACZC,UAAWtH,GACXkE,KAAM,CAACnD,SAAU,IAAKC,KAAM,GAAIC,QAAS,KAG9BgH,GAAY,CACvBnE,KAAM,OACNC,QAASZ,GACT0D,WAAY,GACZC,UAAW,IACXC,aAAc,GACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,CAACrD,IACRwC,SAAU,GACVD,MAAO,GACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAWpH,GACXgE,KAAM,CAACnD,SAAU,IAAKC,KAAM,IAAKC,QAAS,KAG/BiH,GAAgB,CAC3BpE,KAAM,WACNC,QAASZ,GACT0D,WAAY,IACZC,UAAW,IACXC,aAAc,GACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,GACPb,SAAU,GACVD,MAAO,GACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAW/G,GACX2D,KAAM,CAACnD,SAAU,IAAKC,KAAM,IAAKC,QAAS,KAG/BkH,GAAa,CACxBrE,KAAM,QACNC,QAASZ,GACT0D,WAAY,IACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,CAACrD,IACRwC,SAAU,IACVD,MAAO,IACPe,WAAY,IACZC,WAAY,GACZC,WAAY,GACZC,UAAWlH,GACX8D,KAAM,CAACnD,SAAU,IAAKC,KAAM,IAAKC,QAAS,MAG/BmH,GAAe,CAC1BtE,KAAM,UACNC,QAASZ,GACT0D,WAAY,IACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,CAACrD,IACRwC,SAAU,IACVD,MAAO,IACPe,WAAY,IACZC,WAAY,GACZC,WAAY,GACZC,UAAWnH,GACX+D,KAAM,CAACnD,SAAU,IAAKC,KAAM,IAAKC,QAAS,MAG/BoH,GAAoB,CAC/BvE,KAAM,eACNC,QAASZ,GACT0D,WAAY,KACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,CAACrD,GAAa+B,IACrBS,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAWxI,GACXoF,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,IACxCuG,OAAQpE,IAGGkF,GAAa,CACxBxE,KAAM,aACNC,QAASZ,GACT0D,WAAY,IACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,CAACrD,GAAa+B,IACrBS,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAWzI,GACXqF,KAAM,CAACnD,SAAU,IAAKC,KAAM,IAAKC,QAAS,IAC1CuG,OAAQnE,IAGGkF,GAAmB,CAC9BzE,KAAM,cACNC,QAASZ,GACT0D,WAAY,IACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,CAACrD,GAAagC,IACrBQ,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,EACZC,UAAWvI,GACXmF,KAAM,CAACnD,SAAU,IAAKC,KAAM,IAAKC,QAAS,IAC1CuG,OAAQnE,IAGGmF,GAA2B,CACtC1E,KAAM,sBACNC,QAASZ,GACT0D,WAAY,EACZC,UAAW,KACXC,aAAc,IACdC,UAAW,CACRjG,SAAU,EACXC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,CAACrD,GAAamC,IACrBK,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,IACZC,UAAW3I,GACXuF,KAAM,CAACnD,SAAU,IAAKC,KAAM,IAAKC,QAAS,KAC1CuG,OAAQpE,IAGGqF,GAAkB,CAC7B3E,KAAM,aACNC,QAASZ,GACT0D,WAAY,IACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,CAACrD,GAAakC,GAAkBU,IACvCJ,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,IACZC,UAAW1I,GACXsF,KAAM,CAACnD,SAAU,IAAKC,KAAM,IAAKC,QAAS,IAC1CuG,OAAQnE,IAGGqF,GAAqB,CAChC5E,KAAM,gBACNC,QAASZ,GACT0D,WAAY,IACZC,UAAW,IACXC,aAAc,IACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,CAACrD,GAAagC,IACrBQ,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,IACZC,UAAW9I,GACX0F,KAAM,CAACnD,SAAU,IAAKC,KAAM,IAAKC,QAAS,KAC1CuG,OAAQnE,IAGGsF,GAAwB,CACnC7E,KAAM,mBACNC,QAASZ,GACT0D,WAAY,EACZC,UAAW,KACXC,aAAc,IACdC,UAAW,CACTjG,SAAU,IACVC,KAAM,IACNC,QAAS,KAEXgG,SAAU,EACVC,MAAO,CAACrD,GAAa4D,GAA8Bd,GAAoBb,IACvEO,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,IACZC,UAAWpI,GACXgF,KAAM,CAACnD,SAAU,KAAMC,KAAM,IAAMC,QAAS,KAC5CuG,OAAQlE,IAGGsF,GAAY,CACvB9E,KAAM,OACNC,QAASZ,GACT0D,WAAY,EACZC,UAAW,EACXC,aAAc,EACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,GACPb,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,IACZC,UAAW7I,GACXyF,KAAM,CAACnD,SAAU,EAAGC,KAAM,EAAGC,QAAS,IACtCuG,OAAQhE,GACRqF,OAAQ,CAACC,aAAc,MAGZC,GAAc,CACzBjF,KAAM,SACNC,QAASZ,GACT0D,WAAY,EACZC,UAAW,EACXC,aAAc,EACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,CAACzB,IACRY,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,GACZC,UAAW5I,GACXwF,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,IACxCuG,OAAQ/D,GACRoF,OAAQ,CAACC,aAAc,MAGZE,GAAe,CAC1BlF,KAAM,UACNC,QAASZ,GACT0D,WAAY,IACZC,UAAW,IACXC,aAAc,EACdC,UAAW,CACTjG,SAAU,EACVC,KAAM,EACNC,QAAS,GAEXgG,SAAU,EACVC,MAAO,GACPb,SAAU,IACVD,MAAO,IACPe,WAAY,EACZC,WAAY,GACZC,WAAY,EACZC,UAAWvH,GACXmE,KAAM,CAACnD,SAAU,EAAGC,KAAM,EAAGC,QAAS,IACtCuG,OAAQ9D,IAGGuF,GAAY,CAAClB,GAAeC,GAAYC,GAAWC,GAAeC,GAAYC,GACzFE,GAAYD,GAAmBE,GAAkBC,GAA0BC,GAAiBC,IAGjFQ,GAAsB,CACjCpF,KAAM,gBAAiBC,QAASb,GAAWc,KAAMxB,GAA6B0C,SAAU,GAAIC,KAAM,EAClGuC,WAAY,CAAC1D,KAAM4E,GAAWzQ,IAAKyL,IACnCM,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,MAE7BkI,GAAwB,CACnCrF,KAAM,kBAAmBC,QAASb,GAAWc,KAAMxB,GAA6B0C,SAAU,IAAKC,KAAM,EACrGuC,WAAY,CAAC1D,KAAM+E,GAAa5Q,IAAKyL,IACrCM,KAAM,CAACnD,SAAU,IAAKC,KAAM,IAAKC,QAAS,MAE/BmI,GAAyB,CACpCtF,KAAM,mBAAoBC,QAASb,GAAWc,KAAMxB,GAA6B0C,SAAU,GAAIC,KAAM,EACrGuC,WAAY,CAAC1D,KAAMgF,GAAc7Q,IAAKwL,IACtCO,KAAM,CAACnD,SAAU,GAAIC,KAAM,GAAIC,QAAS,MAG7BoI,GAAiB,CAACxF,GAAaM,GAAmBU,GAAgBG,GAAsBN,GAAaN,GAAmBE,GACnIC,GAAeK,GAAsBH,IAC1B6E,GAAwB,CAACrE,GAAeQ,GAAoBE,GAAsBD,GAAyBE,GAAqBG,GAAkBC,GAAwBH,GAA0BC,IACpMyD,GAA0B,CAACL,GAAqBC,GAAuBC,GAAwBnD,GAAcQ,GAAmBC,GAAqBC,IACrJ6C,GAAe,CAAC7B,GAAYE,IAC5B4B,GAAS,UAAOJ,GAAmBC,GAA0BC,GAA4BC,IAEzFE,IAAS,mBAEnB/J,GAAmB,CAClB,CAACgK,GAAI,EAAGC,IAAK3E,IACb,CAAC0E,GAAI,GAAIC,IAAK/F,IACd,CAAC8F,GAAI,GAAIC,IAAK7B,IACd,CAAC4B,GAAI,IAAKC,IAAK5B,IACf,CAAC2B,GAAI,IAAKC,IAAKlF,IACf,CAACiF,GAAI,IAAMC,IAAKxF,MARE,cAUnB1E,GAAkB,CACjB,CAACiK,GAAI,GAAIC,IAAKrF,IACd,CAACoF,GAAI,GAAIC,IAAKzF,IACd,CAACwF,GAAI,IAAKC,IAAK/E,IACf,CAAC8E,GAAI,IAAKC,IAAK3B,MAdG,cAgBnBzI,GAAoB,CACnB,CAACmK,GAAI,GAAIC,IAAK1B,IACd,CAACyB,GAAI,GAAIC,IAAKjC,IACd,CAACgC,GAAI,IAAKC,IAAK5E,IACf,CAAC2E,GAAI,IAAMC,IAAKzB,MApBE,cAsBnB1I,GAAqB,CACpB,CAACkK,GAAI,GAAIC,IAAKtF,IACd,CAACqF,GAAI,IAAKC,IAAKlD,IACf,CAACiD,GAAI,IAAKC,IAAK/B,IACf,CAAC8B,GAAI,IAAMC,IAAKxB,MA1BE,cA6BnBC,GAAkBvE,KAAO,CACxB,CAAC6F,GAAI,EAAGC,IAAKnE,IACb,CAACkE,GAAI,EAAGC,IAAKhE,IACb,CAAC+D,GAAI,GAAIC,IAAK3D,MAhCI,cAkCnBqC,GAAWxE,KAAO,CACjB,CAAC6F,GAAI,EAAGC,IAAKV,IACb,CAACS,GAAI,EAAGC,IAAK/D,IACb,CAAC8D,GAAI,GAAIC,IAAKjE,IACd,CAACgE,GAAI,GAAIC,IAAKtB,MAtCI,cAwCnBC,GAAiBzE,KAAO,CACvB,CAAC6F,GAAI,EAAGC,IAAKnD,IACb,CAACkD,GAAI,EAAGC,IAAKT,IACb,CAACQ,GAAI,GAAIC,IAAKnF,IACd,CAACkF,GAAI,GAAIC,IAAKrB,MA5CI,cA8CnBG,GAAmB5E,KAAO,CACzB,CAAC6F,GAAI,EAAGC,IAAKlE,IACb,CAACiE,GAAI,EAAGC,IAAKR,IACb,CAACO,GAAI,GAAIC,IAAK9D,MAjDI,cAmDnB2C,GAAgB3E,KAAO,CACtB,CAAC6F,GAAI,EAAGC,IAAK7D,IACb,CAAC4D,GAAI,EAAGC,IAAKhF,IACb,CAAC+E,GAAI,EAAGC,IAAKjD,IACb,CAACgD,GAAI,GAAIC,IAAK5D,IACd,CAAC2D,GAAI,GAAIC,IAAKnB,MAxDI,GA4DToB,GAAiB,IAAIC,IAClCD,GAAeE,IAAIvK,GAAmB,KACtCqK,GAAeE,IAAItK,GAAoB,MACvCoK,GAAeE,IAAIrK,GAAiB,MACpCmK,GAAeE,IAAIpK,GAAkB,MAG9B,IAAMqK,GAAiB,CAC5B,CACEC,YAAa,EACbC,QAAS,EAAGC,QAAS,EACrBC,qBAAsB,GACtBC,gBAAiB,KAAMC,gBAAiB,KACxCC,YAAa,CAAC9K,IACd+K,OAAQ,CAAC,CAACC,MAAO,EAAGC,KAAM,QAE5B,CACET,YAAa,EACbC,QAAS,KAAMC,QAAS,KACxBC,qBAAsB,IACtBC,gBAAiB,IAAKC,gBAAiB,IACvCC,YAAa,GACbC,OAAQ,CACN,CAACC,MAAO,GAAIC,KAAMhC,IAClB,CAAC+B,MAAO,GAAIC,KAAMjC,IAClB,CAACgC,MAAO,GAAIC,KAAMlC,MAGtB,CACEyB,YAAa,IACbC,QAAS,KAAMC,QAAS,IACxBC,qBAAsB,IACtBC,gBAAiB,IAAKC,gBAAiB,IACvCC,YAAa,CAAC7K,GAAiBD,GAAoBD,IACnDgL,OAAQ,CACN,CAACC,MAAO,IAAKC,KAAMlC,IACnB,CAACiC,MAAO,IAAKC,KAAMpC,IACnB,CAACmC,MAAO,IAAKC,KAAMnC,IACnB,CAACkC,MAAO,IAAKC,KAAMhC,MAGvB,CACEuB,YAAa,IACbC,QAAS,IAAOC,QAAS,KACzBC,qBAAsB,IACtBC,gBAAiB,IAAKC,gBAAiB,IACvCC,YAAa,CAAC5K,GAAkBD,GAAiBF,IACjDgL,OAAQ,CACN,CAACC,MAAO,IAAMC,KAAMrC,IACpB,CAACoC,MAAO,IAAMC,KAAMpC,IACpB,CAACmC,MAAO,IAAKC,KAAMnC,MAGvB,CACE0B,YAAa,IACbC,QAAS,KAAOC,QAAS,KACzBC,qBAAsB,IACtBC,gBAAiB,IAAKC,gBAAiB,IACvCC,YAAa,CAAC5K,GAAkBD,IAChC8K,OAAQ,CAAC,CAACC,MAAO,KAAMC,KAAMrC,IAAoB,CAACoC,MAAO,IAAKC,KAAMpC,MAEtE,CACE2B,YAAa,IACbC,QAAS,KAAOC,QAAS,KACzBC,qBAAsB,IACtBC,gBAAiB,IAAKC,gBAAiB,IACvCC,YAAa,CAAC5K,IACd6K,OAAQ,IAEV,CACEP,YAAa,IACbC,QAAS,KAAOC,QAASxJ,GACzByJ,qBAAsB,IACtBC,gBAAiB,GAAIC,gBAAiB,IACtCC,YAAa,CAAC5K,IACd6K,OAAQ,K,mCCn6BL,SAASG,KAAoB,IAAD,EACjC,MAAO,CACLC,aAAc,KACdC,KAAM,KACNC,KAAM,CACJtT,EAAG,EACHC,EAAG,GAELsT,MAAO,GACPC,QAAS,GACTC,eAAgB,CAACjE,UAAW,IAC5BkE,iBAAkB,KAClBC,WAAY,CACVN,KAAM,GACN3D,MAAO,GACPyC,IAAE,mBACC7R,EAAE6H,iBAAmB,GADtB,cAEC7H,EAAE4H,gBAAkB,GAFrB,cAGC5H,EAAE0H,kBAAoB,GAHvB,cAIC1H,EAAE2H,mBAAqB,GAJxB,cAKC3H,EAAEuQ,kBAAkBvE,KAAO,GAL5B,cAMChM,EAAEwQ,WAAWxE,KAAO,GANrB,cAOChM,EAAEyQ,iBAAiBzE,KAAO,GAP3B,cAQChM,EAAE4Q,mBAAmB5E,KAAO,GAR7B,cASChM,EAAE2Q,gBAAgB3E,KAAO,GAT1B,GAWFsH,SAAUC,KAAOC,UAAUxT,EAAE4R,YAE/B6B,OAAQ,IAERC,OAAQ,CACNC,KAAM,GACNC,IAAK,KACLC,UAAW7T,EAAEgF,WAAWC,KACxB6O,UAAU,EACVC,SAAU,KACVC,SAAU,KACVC,eAAgB,KAChBC,WAAY,GACZC,QAAS,GACTC,OAAQ,CAAClB,QAAS,GAAID,MAAO,IAC7BoB,kBAAmB,GACnBC,gBAAiB,GACjBC,kBAAmB,IAAIvC,IACvBwC,iBAAkB,CAACC,WAAY,KAAMvB,QAAS,KAAMiB,QAAS,KAAMlB,MAAO,KAAMyB,QAAS,MACzFC,gBAAiB,KACjBC,cAAc,IAKb,SAASC,KACd,IAAMC,EAAQvR,OAAOuR,MACrBC,KACAC,KACAC,KAEAH,EAAM3B,eAAiB2B,EAAM5B,QAAQ,GACpC3P,OAAOuR,MAAMI,WAAalV,EAAEuJ,eAE7BhG,OAAOuR,MAAMK,WAAanV,EAAEwJ,eAC5BsL,EAAM/B,KAAOnD,GAAW5P,EAAEiQ,cAAejQ,EAAE8I,QACxBsM,GAAcN,EAAM/B,MAC5BsC,SAAU,EACrBP,EAAM/B,KAAK7D,UAAYlP,EAAEgJ,0BA0BzBsM,KACAC,KACAC,KAMK,SAAST,KACd,IAAIU,EAAYlS,OAAOuR,MAAMpB,OAAOE,IAAI8B,MACpClB,EAAmBjR,OAAOuR,MAAMpB,OAAOc,iBAC3CA,EAAiBC,WAAa,IAAIlR,OAAOoS,KAAKC,UAC9CH,EAAUI,SAASrB,EAAiBC,YAEpCD,EAAiBtB,QAAU,IAAI3P,OAAOoS,KAAKC,UAC3CH,EAAUI,SAASrB,EAAiBtB,SAEpCsB,EAAiBL,QAAU,IAAI5Q,OAAOoS,KAAKC,UAC3CH,EAAUI,SAASrB,EAAiBL,SAEpCK,EAAiBvB,MAAQ,IAAI1P,OAAOoS,KAAKC,UACzCH,EAAUI,SAASrB,EAAiBvB,OAEpCuB,EAAiBE,QAAU,IAAInR,OAAOoS,KAAKC,UAC3CH,EAAUI,SAASrB,EAAiBE,SAG/B,SAASM,KACd,IAAIc,EAAYvS,OAAOuR,MAAMpB,OAAOc,iBAAiBC,WACrDlR,OAAOuR,MAAMpB,OAAOM,SAAW,IAAIzQ,OAAOoS,KAAKI,aAC7CxS,OAAOoS,KAAKK,QAAQC,KAAKjW,EAAE0I,sBAC3B1I,EAAEqE,aACFrE,EAAEsF,eAEJwQ,EAAUD,SAAStS,OAAOuR,MAAMpB,OAAOM,UAGlC,SAASiB,KACE1R,OAAOuR,MAAMpB,OAAOc,iBAAiBtB,QAArD,IAD8B,iBAEblT,EAAEkS,gBAFW,IAE9B,2BACE,IADkC,IAA3BgE,EAA0B,QACxBC,EAAI,EAAGA,EAAID,EAAK/D,YAAagE,IAAK,CACzC,IAAIC,EAAWF,EAAKzD,YAAY4D,EAAMtV,UAAU,EAAGmV,EAAKzD,YAAY6D,OAAS,IACzEtK,EAAOuK,OAAOC,aAAa,GAAKzX,KAAKsC,MAAsB,GAAhBtC,KAAKuC,WAAkB+U,EAAMtV,UAAU,IAAM,QACxF2N,EAAS2H,EAAMtV,UAAUmV,EAAK3D,gBAAiB2D,EAAK1D,iBACpDtS,EAAOwO,EAASA,EAAS1O,EAAE+R,eAAe0E,IAAIL,GAC9CM,EAAqB,EAAPxW,EAAW,GACzByW,EAAqB,GAAPzW,EAEdN,EAASgX,GAAaR,EAAUpK,EAAM0C,EAAQxO,EAAM,CACtD+I,SAAUoN,EAAMtV,UAAU4V,EAAaD,GACvCxN,KAAMmN,EAAMtV,UAAU4V,EAAaD,GACnCvN,QAASkN,EAAMtV,UAAU4V,EAAaD,KAXC,EAa5BG,GAAUjX,EAAQsW,EAAK5D,qBAAsB,EAAG4D,EAAK9D,QAAS8D,EAAK7D,SAA3E3S,EAboC,EAapCA,EAAGC,EAbiC,EAajCA,EACRC,EAAOF,EAAIA,EACXE,EAAOD,EAAIA,GAlBe,+BA2BhC,SAASmX,GAAsBC,EAAYrX,EAAGC,GAC5C,IAD+C,EAC3CyS,EAAU,YACV4E,EAAgB,KAF2B,eAG5BzT,OAAOuR,MAAM5B,SAHe,IAG/C,2BAAyC,CAAC,IAAjCtT,EAAgC,QACvC,GAAIA,IAAWmX,EAAY,CACzB,IAAIE,EAAOZ,EAAM3X,gBAAgBgB,EAAGC,EAAGC,EAAOF,EAAGE,EAAOD,GAAKC,EAAO8O,OAChEqI,IACFE,GAAQF,EAAWrI,UAEhBsI,GAAkBC,EAAO7E,KAC5BA,EAAU6E,EACVD,EAAgBpX,KAXyB,8BAe/C,MAAO,CAACoX,cAAeA,EAAeE,kBAAmB9E,GAO3D,SAAS+E,GAAqBzX,EAAGC,GAC/B,IADkC,EAC9ByS,EAAU,YACVgF,EAAe,KAFe,eAGhB7T,OAAOuR,MAAMpB,OAAOU,OAAOnB,OAHX,IAGlC,2BAAoD,CAAC,IAA5CoE,EAA2C,QAClD,GAAIA,IAAU9T,OAAOuR,MAAM/B,KAA3B,CAIA,IAAIkE,EAAOZ,EAAM3X,gBAAgBgB,EAAGC,EAAG0X,EAAM3X,EAAG2X,EAAM1X,GAAqB,EAAf0X,EAAM3I,SAC7D0I,GAAiBH,EAAO7E,KAC3BA,EAAU6E,EACVG,EAAeC,KAXe,8BAclC,MAAO,CAACD,aAAcA,EAAcE,iBAAkBlF,GAQxD,SAASyE,GAAUjX,EAAQ2X,EAAiBC,EAAgBpF,EAASC,GAAyB,IAAhBoF,EAAe,uDAAH,EACpFpX,EAAMgW,EAAM9U,YAAY,EAAa,EAAVxC,KAAKS,IAChCyX,EAAOZ,EAAMtV,UAAUqR,EAASC,GAFuD,EAG9EgE,EAAM5U,aAAa,EAAG,EAAGpB,EAAK4W,GAAtCvX,EAHsF,EAGtFA,EAAGC,EAHmF,EAGnFA,EACJ+X,EAAK,KACT,GAAIH,EAAkB,EAAG,CAAC,IAAD,EACGT,GAAsBlX,EAAQF,EAAGC,GAAtDuX,EADkB,EAClBA,kBACL,GAAIA,EAAoBK,EACtB,OAAOV,GAAUjX,EAAQ2X,EAAiBC,EAAgBpF,EAASC,IAAWoF,GAEhFC,EAAKR,EAEP,GAAIM,EAAiB,EAAG,CAAC,IAAD,EACGL,GAAqBzX,EAAGC,GAA5C2X,EADiB,EACjBA,iBACL,GAAIA,EAAmBE,EACrB,OAAOX,GAAUjX,EAAQ2X,EAAiBC,EAAgBpF,EAASC,IAAWoF,GAMlF,OAHIA,EAAY,KACdE,QAAQC,KAAK,2CAA6CH,EAAY,kBAAoBrF,EAAU,OAASsF,GAExG,CAAChY,IAAGC,KAIN,SAASiX,GAAaiB,EAAY7L,EAAM0C,EAAQxO,EAAMgP,GAC3D,IAAItP,EAAS,GAiBb,OAhBAA,EAAOoM,KAAOA,EACdpM,EAAOF,EAAI,EACXE,EAAOD,EAAI,EACXC,EAAOM,KAAOA,EACdN,EAAOsP,UAAY,CACjB4I,OAAQ,CAAC7O,SAAU,EAAGC,KAAM,EAAGC,QAAS,GACxC4O,IAAK7I,GAEPtP,EAAOqT,MAAQ,GACfrT,EAAOwP,MAAQ,GACfxP,EAAOoY,UAAY,GACnBpY,EAAO8O,OAASA,EAChB9O,EAAOqY,eAAiB,EACxBrY,EAAO6O,WAAaoJ,EACpBjY,EAAOsY,SAAW,KAClB3U,OAAOuR,MAAM5B,QAAQlR,KAAKpC,GACnBA,EASF,SAASuY,GAAgBvY,GAC9B,IAAIyU,EAAoB9Q,OAAOuR,MAAMpB,OAAOW,kBAAkBzU,EAAO6O,YAEhE4F,IACHA,EAAoB,IAAIrC,IACxBzO,OAAOuR,MAAMpB,OAAOW,kBAAkBzU,EAAO6O,YAAc4F,GAG7D,IAAI+D,EAAkB/D,EAAkBoC,IAAI7W,EAAOsY,UACnD,GAAIE,EACF,OAAOA,GAGTA,EAAkB,IAAI7U,OAAOoS,KAAKC,WAClBlW,EAAI,EACpB0Y,EAAgBzY,EAAI,EACpByY,EAAgB/C,SAAU,EAC1B9R,OAAOuR,MAAMpB,OAAOc,iBAAiBtB,QAAQ2C,SAASuC,GAGtD,IAAMC,EAAe,IAAI9U,OAAOoS,KAAK2C,OACnC/U,OAAOoS,KAAK4C,OAAOrJ,UAAUlP,EAAEyG,kBAAkB+R,SAAS5Y,EAAO6O,aACnE4J,EAAaI,OAAOxG,IAAI,GAAK,IAC7B,IAAIyG,EAA8B,EAAhB9Y,EAAO8O,OAAa2J,EAAajU,MAE9CxE,EAAO6O,aAAezO,EAAE2H,oBAAwB/H,EAAO6O,aAAezO,EAAE0H,oBAC3EgR,GAA4B,MAE9BL,EAAaM,MAAM1G,IAAIyG,EAAaA,GACpCN,EAAgBvC,SAASwC,GA7Ba,qBA+BfzY,EAAOoY,WA/BQ,IA+BtC,2BAAyC,CAAC,IAA/BY,EAA8B,QACvCC,EAAOC,mBAAmBF,EAAUhZ,EAAQwY,IAhCR,8BAsCtC,OAFAxY,EAAOsY,SAAW3U,OAAOuR,MAAMrB,SAC/BY,EAAkBpC,IAAIrS,EAAOsY,SAAUE,GAChCA,EAOF,SAAShD,GAAcrC,GAO5B,IAAIuB,EAAkB/Q,OAAOuR,MAAMpB,OAAOY,gBAAgBvB,EAAKvD,WAE1D8E,IACHA,EAAkB,IAAItC,IACtBzO,OAAOuR,MAAMpB,OAAOY,gBAAgBvB,EAAKvD,WAAa8E,GAGxD,IAAIzS,EAASyS,EAAgBmC,IAAI1D,EAAKmF,UACtC,GAAIrW,EACF,OAAOA,EAhByB,qBAmBEyS,EAAgByE,WAnBlB,IAmBlC,2BAA+D,CAAC,IAAD,0BAArDb,EAAqD,KAA3Cc,EAA2C,KAC7D,IAAKA,EAAY3D,QAQf,OAPA2D,EAAY3D,SAAU,EACtB2D,EAAYC,SAAWlG,EAAKkG,SAC5BlG,EAAKmG,YAAcF,EAAY5U,MAC/B2O,EAAKoG,aAAeH,EAAYI,OAChCrG,EAAKrE,OAASsK,EAAY5U,MAAQ,EAClC2O,EAAKmF,SAAWA,EAETc,GA5BuB,8BAiClC,IAAIK,EAAc9V,OAAOoS,KAAK4C,OAAOrJ,UAAUlP,EAAEyG,kBAcjD,OAbA5E,EAAS,IAAI0B,OAAOoS,KAAK2C,OAAOe,EAAYb,SAASzF,EAAKvD,aACnDvL,SAASgO,IAAIjS,EAAEuC,kBAAmBvC,EAAEwC,oBAC3CX,EAAO4W,OAAOxG,IAAI,GAAK,IACvBpQ,EAAO8W,MAAM1G,IAAIc,EAAKxD,WAAYwD,EAAKxD,YACvC1N,EAAOoX,SAAWlG,EAAKkG,SACvBpX,EAAOwT,SAAU,EACjBtC,EAAKmG,YAAcrX,EAAOuC,MAC1B2O,EAAKoG,aAAetX,EAAOuX,OAC3BrG,EAAKrE,OAAS7M,EAAOuC,MAAQ,EAC7B2O,EAAKmF,SAAW3U,OAAOuR,MAAMrB,SAC7Ba,EAAgBrC,IAAIc,EAAKmF,SAAUrW,GACnC0B,OAAOuR,MAAMpB,OAAOc,iBAAiBvB,MAAM4C,SAAShU,GAE7CA,EAOF,SAASyX,GAAwBzX,GACtC,IAAM0X,EAAY1X,EAAOuC,MACnBoV,EAAa3X,EAAOuX,OAC1BvX,EAAO8W,MAAM1G,IAAI,EAAG,GACpB,IAAM7N,EAAQvC,EAAOuC,MACfgV,EAASvX,EAAOuX,OAGtB,OAFAvX,EAAOuC,MAAQmV,EACf1X,EAAOuX,OAASI,EACT,CAACpV,QAAOgV,UAGV,SAASK,GAAgB1G,EAAM3E,GACpC,IAAMsL,EAAU3G,EAAK4G,GAAK,IAAMvL,EAAOK,WAEnCmL,EAAerW,OAAOuR,MAAMpB,OAAOa,kBAAkBkC,IAAIiD,GAC7D,GAAIE,EACF,OAAOA,EAGT,IAAMC,EAAazE,GAAcrC,GAC7BsG,EAAc9V,OAAOoS,KAAK4C,OAAOrJ,UAAUlP,EAAEyG,mBACjDmT,EAAe,IAAIrW,OAAOoS,KAAK2C,OAAOe,EAAYb,SAASpK,EAAOK,cACrDgK,OAAOxG,IAAI,GAAK,IAXe,MAYpBqH,GAAwBO,GAAzCzV,EAZqC,EAYrCA,MAAOgV,EAZ8B,EAY9BA,OAERU,EAAwC,IAA1B/a,KAAKqC,IAAIgD,EAAOgV,GAMpC,OALAQ,EAAaxV,MAAQ0V,EACrBF,EAAaR,OAASU,EACtB1L,EAAOM,OAAUoL,EAAc/G,EAAKxD,WAAc,EAClDsK,EAAWhE,SAAS+D,GACpBrW,OAAOuR,MAAMpB,OAAOa,kBAAkBtC,IAAIyH,EAASE,GAC5CA,EAIF,SAAShK,GAAWmK,EAAUC,GACnC,IAAIjH,EAAOQ,KAAOC,UAAUuG,GAC5BhH,EAAK4G,GAAKpW,OAAOuR,MAAMrB,SACvBV,EAAKkH,8BAAgC,EACrC,IAAK,IAAI9D,EAAE,EAAGA,EAAEpD,EAAK3D,MAAMkH,OAAQH,IAAK,CACtC,IAAM/G,EAAQ2D,EAAK3D,MAAM+G,GACzB/G,EAAMuK,GAAKpW,OAAOuR,MAAMrB,SACpBV,EAAKkH,6BAA+B,GAAK7K,EAAMlD,OAASlM,EAAE0K,8BAC5DqI,EAAKkH,6BAA+B9D,GAaxC,OAVApD,EAAKiH,MAAQA,EACbjH,EAAKmH,GAAK,EACVnH,EAAKoH,GAAK,EACVpH,EAAKrT,EAAI6D,OAAOuR,MAAMI,WACtBnC,EAAKpT,EAAI4D,OAAOuR,MAAMK,WACtBpC,EAAKmF,SAAW,KAChBnF,EAAKqH,OAAQ,EACbrH,EAAKmG,YAAc,KACnBnG,EAAKkG,SAAW,EAChB1V,OAAOuR,MAAMpB,OAAOU,OAAOnB,MAAMjR,KAAK+Q,GAC/BA,EAGF,SAASsH,GAAYN,EAAUra,EAAGC,GACvC,IAAI0X,EAAQzH,GAAWmK,EAAU/Z,EAAE+I,OAKnC,OAJAxF,OAAOuR,MAAM7B,MAAMjR,KAAKqV,GACxBA,EAAM3X,EAAIA,EACV2X,EAAM1X,EAAIA,EACV0X,EAAM3I,OAAS,GACR2I,EAGF,SAAS/B,KAEd+E,GAAYra,EAAE6Q,sBAAuB,KAAM,KAC3CwJ,GAAYra,EAAE6Q,sBAAuB,EAAG,MACxCwJ,GAAYra,EAAE6Q,uBAAwB,KAAM,GAC5CwJ,GAAYra,EAAE6Q,sBAAuB,GAAI,MALZ,qBAOZ7Q,EAAEkS,gBAPU,IAO7B,2BAAmC,CAAC,IAAD,EAA1BgE,EAA0B,uBACTA,EAAKxD,QADI,IACjC,2BACE,IADoC,IAA3B4H,EAA0B,QAC1BnE,EAAI,EAAGA,EAAImE,EAAU3H,MAAOwD,IAAK,CAAC,IAAD,EAC3BU,GAAU,KAAM7W,EAAEyJ,yBAA0BzJ,EAAE0J,wBAAyBwM,EAAK9D,QAAS8D,EAAK7D,SAAlG3S,EADmC,EACnCA,EAAGC,EADgC,EAChCA,EACR0a,GAAYC,EAAU1H,KAAMlT,EAAGC,IAJF,gCAPN,+BAiBxB,SAAS4V,KACd,IAAIO,EAAYvS,OAAOuR,MAAMpB,OAAOc,iBAAiBE,QACjD6F,EAAmB,IAAIhX,OAAOoS,KAAKC,UACvCE,EAAUD,SAAS0E,GAGnB,IAAIC,EAAO,IAAIjX,OAAOoS,KAAK8E,SAC3BD,EAAKE,SAAS,EAAG1a,EAAEsF,cAAgBtF,EAAE0F,eAAgB1F,EAAEyF,cAAezF,EAAEsF,eACxEkV,EAAKG,YAAa,EAClBH,EAAKI,eAAgB,EACrBL,EAAiB1E,SAAS2E,GAC1BD,EAAiBC,KAAOA,EAGxB,IAAIK,EAAI,IAAItX,OAAOoS,KAAK8E,SACxBF,EAAiB1E,SAASgF,GAC1BtX,OAAOuR,MAAMpB,OAAOiB,gBAAkBkG,EAMjC,SAASC,GAAM5X,GACpB,IAAIxD,EAAIwD,EAAM6X,KAAKC,OAAOtb,EACtBC,EAAIuD,EAAM6X,KAAKC,OAAOrb,EACrBD,EAAIM,EAAEyF,eAAmB9F,EAAIK,EAAEsF,cAAgBtF,EAAE0F,gBACpDuV,EAAIC,eAAexb,EAAGC,GAInB,SAASwb,GAAgBC,GAC9B,IAAMtG,EAAQvR,OAAOuR,MACrBA,EAAMpB,OAAOG,UAAYuH,EACrBA,IAAapb,EAAEgF,WAAWE,KAC5B+V,EAAII,gBACJvG,EAAMpB,OAAOK,SAAWkH,EAAIK,SACnBF,IAAapb,EAAEgF,WAAWG,QACnC0T,EAAO0C,mBACPzG,EAAMpB,OAAOK,SAAW8E,EAAO2C,YAE/B1G,EAAMpB,OAAOK,SAAW,KAOrB,SAAS0H,KACd,IAD6B,EACvB3G,EAAQvR,OAAOuR,MADQ,eAEVA,EAAM5B,SAFI,IAE7B,2BAAkC,CAAC,IAAD,EAAzBtT,EAAyB,uBACXA,EAAOoY,WADI,IAChC,2BAAuC,SACxB9L,OAASlM,EAAE4J,qBACtB8R,GAAa9b,EAAQ,WAAYI,EAAEgK,qBACnC0R,GAAa9b,EAAQ,OAAQI,EAAEiK,iBAC/ByR,GAAa9b,EAAQ,UAAWI,EAAEkK,sBALN,8BAShC,GAAuC,IAAlCtK,EAAOsP,UAAU6I,IAAI9O,UACU,IAA9BrJ,EAAOsP,UAAU6I,IAAI7O,MACY,IAAjCtJ,EAAOsP,UAAU6I,IAAI5O,QAAgB,CACzC,IADyC,EACnCkP,EAAeF,GAAgBvY,GADI,eAEZyY,EAAasD,UAFD,IAEzC,2BAAoD,CAAC,IAA1CC,EAAyC,QAE9CA,EAAeC,iBACjBD,EAAeC,eAAiB,IALK,iCAbhB,+BAyB/B,SAASH,GAAa9b,EAAQkc,EAAclb,GACtChB,EAAOsP,UAAU6I,IAAI+D,GAAgB,IACvClc,EAAOsP,UAAU6I,IAAI+D,IAAiBlb,EACtChB,EAAOsP,UAAU4I,OAAOgE,IAAiBlb,EACrChB,EAAOsP,UAAU6I,IAAI+D,IAAiB,IACxClc,EAAOsP,UAAU6I,IAAI+D,GAAgB,GAM3C,SAAqBlb,EAAQhB,GAC3B,IAAIyT,EAAa9P,OAAOuR,MAAMzB,WACxBxB,EAAKwB,EAAWxB,GAAGjS,EAAO6O,aAAe7N,EAC3Cmb,EAAY1I,EAAWC,SAAS1T,EAAO6O,YAAY,GACnDsN,GAAcA,EAAUlK,IAAMA,IAChCmK,GAAaD,GAEb1I,EAAWC,SAAS1T,EAAO6O,YAAYwN,SAXvCC,CAAYtb,EAAQhB,IAejB,SAASuc,GAAWpJ,GACzB,IAAIM,EAAa9P,OAAOuR,MAAMzB,WACxBxB,EAAKwB,EAAWxB,GAAGkB,EAAK/G,OAAS,EACvC,GAAK6F,EAAL,CAGA,IAAIkK,EAAY1I,EAAWC,SAASP,EAAK/G,MAAM,GAC3C+P,GAAcA,EAAUlK,IAAMA,IAChCmK,GAAaD,GAEb1I,EAAWC,SAASP,EAAK/G,MAAMiQ,UAI5B,SAASD,GAAaD,GAC3B1F,EAAM1S,UAAU,aAAeoY,EAAUjK,IAAI9F,MAC7C,IAAIqH,EAAa9P,OAAOuR,MAAMzB,WAC1B0I,EAAUjK,IAAI7F,UAAYjM,EAAEoL,UAC9BiI,EAAWjE,MAAMpN,KAAK+Z,EAAUjK,KACvBiK,EAAUjK,IAAI7F,UAAYjM,EAAEqL,SACrCgI,EAAWN,KAAK/Q,KAAK+Z,EAAUjK,KAE/B6F,QAAQC,KAAK,oCAAsCmE,EAAUjK,IAAI7F,QAAU,cAAe8P,GASvF,SAASK,GAAUxc,EAAQmT,EAAM7D,GACtC,IAAIjG,EAAW,EACXC,EAAO,EACPC,EAAU,EAWd,OAVIvJ,IACFqJ,GAAYrJ,EAAOsP,UAAU4I,OAAO7O,SACpCC,GAAQtJ,EAAOsP,UAAU4I,OAAO5O,KAChCC,GAAWvJ,EAAOsP,UAAU4I,OAAO3O,SAEjC4J,IACF9J,GAAY8J,EAAK7D,UAAUjG,SAC3BC,GAAQ6J,EAAK7D,UAAUhG,KACvBC,GAAW4J,EAAK7D,UAAU/F,SAEpBF,GAAYiG,EAAUjG,UACxBC,GAAQgG,EAAUhG,MAClBC,GAAW+F,EAAU/F,QAWtB,SAASkT,GAAgBzc,EAAQmT,EAAM7D,GAC5CoN,GAAY1c,EAAQmT,EAAM,WAAY7D,EAAUjG,UAChDqT,GAAY1c,EAAQmT,EAAM,OAAQ7D,EAAUhG,MAC5CoT,GAAY1c,EAAQmT,EAAM,UAAW7D,EAAU/F,SAG1C,SAASmT,GAAY1c,EAAQmT,EAAM+I,EAAclb,GACtD,IAAI2b,GAAQ3b,EACZ,GAAIhB,EAAQ,CAEV,IADA2c,EAAO3c,EAAOsP,UAAU4I,OAAOgE,GAAgBlb,IACnC,EAEV,YADAhB,EAAOsP,UAAU4I,OAAOgE,IAAiBlb,GAIzChB,EAAOsP,UAAU4I,OAAOgE,GAAgB,EAGxC/I,GACFA,EAAK7D,UAAU4M,GAAgB/I,EAAK7D,UAAU4M,GAAgBS,EAC1DxJ,EAAK7D,UAAU4M,GAAgB,GACjCnE,QAAQC,KAAK,mBAAqB7E,EAAK7D,UAAU4M,GAAgB,IAAMA,IAEhES,EAAO,IAChB3c,EAAOsP,UAAU4I,OAAOgE,GAAgBlc,EAAOsP,UAAU4I,OAAOgE,GAAgBS,EAChF5E,QAAQC,KAAK,qBAAuBhY,EAAOsP,UAAU4I,OAAOgE,GAAgB,IAAMA,IAI/E,SAAStG,KACdjS,OAAOuR,MAAMpB,OAAOO,eAAiB1Q,OAAOoS,KAAK6G,OAAOC,OAAOvN,UAAUlP,EAAE2I,YAAY+T,YAEvFnZ,OAAOuR,MAAMpB,OAAOQ,WAAWlS,KAAK2a,MAG/B,SAASA,KACd,IAAI9a,EAAS,IAAI0B,OAAOoS,KAAKiH,eAAerZ,OAAOuR,MAAMpB,OAAOO,eAAe4I,WAAW7c,EAAE4I,QAW5F,OAVA/G,EAAOga,eAAiB,GACxBha,EAAOib,MAAO,EACdjb,EAAO4W,OAAOxG,IAAI,GAAK,IACvBpQ,EAAO8W,MAAM1G,IAAI,EAAG,GACpBpQ,EAAOnC,EAAIM,EAAEuC,kBACbV,EAAOlC,EAAIK,EAAEuC,kBACbV,EAAOib,MAAO,EACdjb,EAAOwT,SAAU,EACjB9R,OAAOuR,MAAMpB,OAAOQ,WAAWlS,KAAKH,GACpC0B,OAAOuR,MAAMpB,OAAOc,iBAAiBL,QAAQ0B,SAAShU,GAC/CA,EC7nBF,SAASwZ,KACd1D,QAAQoF,IAAI,YAIP,SAASzB,GAAQ0B,GAClBA,EAAQ,OACVrF,QAAQoF,IAAI,sBAAwBC,GAEtC,IAAIlI,EAAQvR,OAAOuR,MACf/B,EAAOxP,OAAOuR,MAAM/B,KAMxB,GAHAkK,KAGIlK,EAAKqH,MAAO,CACd8C,GAAUnK,IAEN+B,EAAMpB,OAAOC,KAAKwJ,KAAKva,QAAUkS,EAAMpB,OAAOC,KAAKxU,EAAEyD,SACvDwa,GAASrK,GAAM,IAEb+B,EAAMpB,OAAOC,KAAK0J,MAAMza,QAAUkS,EAAMpB,OAAOC,KAAK2J,EAAE1a,SACxDwa,GAASrK,GAAM,IAEb+B,EAAMpB,OAAOC,KAAK4J,GAAG3a,QAAUkS,EAAMpB,OAAOC,KAAK6J,EAAE5a,SA2c3D,SAAoBmQ,GAClB,IAAIhE,EAAagE,EAAKhE,WAClB0O,EAAUC,GAAS3K,EAAM/S,EAAEgL,iBAC3ByS,IACF1O,GAAc0O,EAAQlR,YAExBwG,EAAKmH,IAAMnL,EAAahQ,KAAKqB,IAAI2S,EAAKkG,UACtClG,EAAKoH,IAAMpL,EAAahQ,KAAKoB,IAAI4S,EAAKkG,UAjdlC0E,CAAW5K,IAET+B,EAAMpB,OAAOC,KAAKiK,KAAKhb,QAAUkS,EAAMpB,OAAOC,KAAKkK,EAAEjb,SAkd7D,SAAmBmQ,GACjB,IAAI+K,EAAQJ,GAAS3K,EAAM/S,EAAEwK,kBACzBsT,IACEA,EAAM3R,cAAgB,GACxB4G,EAAKmH,IAAMnH,EAAKmH,GAAK4D,EAAM3R,cAC3B4G,EAAKoH,IAAMpH,EAAKoH,GAAK2D,EAAM3R,gBAG3B4G,EAAKmH,GAAK,EACVnH,EAAKoH,GAAK,IA1dV4D,CAAUhL,GAER+B,EAAMpB,OAAOC,KAAKqK,MAAMpb,QAC1Bqb,GAAkBlL,EAAM,KAEtB+B,EAAMpB,OAAOC,KAAKjU,EAAEkD,QACtBsb,GAAoBnL,GAElB+B,EAAMpB,OAAOC,KAAKwK,EAAEvb,QACtBwb,GAAWrL,GAAM,GAEf+B,EAAMpB,OAAOC,KAAK0K,EAAEzb,QACtBwb,GAAWrL,GAAM,GAInB,IA7Bc,EA6BVuL,EAAgB,GA7BN,eA8BKxJ,EAAMpB,OAAOU,OAAOlB,SA9BzB,IA8Bd,2BAAgD,CAAC,IAAxCtT,EAAuC,QAC1C2e,GAAaxL,EAAMnT,IACrB0e,EAActc,KAAKpC,IAhCT,8BAqCd,cAAmB0e,EAAnB,eAAkC,CAA7B,IAAI1e,EAAM,KACT4e,EAAOnI,EAAM5W,YAAYsT,EAAKrT,EAAGqT,EAAKpT,EAAGC,GAC7CmT,EAAKmH,IAAMsE,EAAK9e,EAChBqT,EAAKoH,IAAMqE,EAAK7e,EAIlBoT,EAAKrT,GAAKqT,EAAKmH,GACfnH,EAAKpT,GAAKoT,EAAKoH,GACfrF,EAAM9B,KAAKtT,EAAIqT,EAAKrT,EACpBoV,EAAM9B,KAAKrT,EAAIoT,EAAKpT,EAEpB,IAAIka,EAAa4E,EAAKrJ,cAAcrC,GAKpC,GAJA8G,EAAWZ,SAAWlG,EAAKkG,UAItBnE,EAAMpB,OAAOkB,aAAc,sBAEX0J,GAFW,IAE9B,2BAAkC,CAAC,IAA1B1e,EAAyB,QAChC,GAAI8e,GAA0B3L,EAAM8G,EAAYja,GAE9C,YADA+e,GAAS5L,EAAMnT,IAJW,mDASZkV,EAAMpB,OAAOU,OAAOnB,OATR,IAS9B,2BAA6C,CAAC,IAArCoE,EAAoC,QACvCA,EAAM+C,OAASwE,GAAyB7L,EAAM8G,EAAYxC,IAC5DwH,GAAa9L,EAAMsE,IAXO,iCA6YpC,WACE,IADwB,EACpBtE,EAAOxP,OAAOuR,MAAM/B,KADA,eAELxP,OAAOuR,MAAMpB,OAAOQ,YAFf,IAExB,2BAAmD,CAAC,IAA3CrS,EAA0C,QACjDA,EAAOnC,EAAKmC,EAAOM,QAAU4Q,EAAKrT,EAAKM,EAAEuC,kBACzCV,EAAOlC,EAAKkC,EAAOO,QAAU2Q,EAAKpT,EAAKK,EAAEwC,oBAJnB,+BA5XxBsc,GACAC,GAAehM,GACfiM,KAEIlK,EAAMpB,OAAOkB,eACfE,EAAMpB,OAAOkB,cAAe,GAQzB,SAASqI,KACd,IAAM7I,EAAS7Q,OAAOuR,MAAMpB,OAAOU,OAC7BrB,EAAOxP,OAAOuR,MAAM/B,KACpBkM,EAAOlM,EAAKrT,EAAIM,EAAEuF,aAAe,EACjC2Z,EAAOnM,EAAKrT,EAAIM,EAAEuF,aAAe,EACjC4Z,EAAOpM,EAAKpT,EAAIK,EAAEwF,cAAgB,EAClC4Z,EAAOrM,EAAKpT,EAAIK,EAAEwF,cAAgB,EAExC4O,EAAOlB,QAAU,GARW,qBAUP3P,OAAOuR,MAAM5B,SAVN,IAU5B,2BAA2C,CAAC,IAAjCtT,EAAgC,QACpCA,EAAOF,EAAIE,EAAO8O,QAAUuQ,GAAUrf,EAAOF,EAAIE,EAAO8O,QAAUwQ,GACpEtf,EAAOD,EAAIC,EAAO8O,QAAUyQ,GAAUvf,EAAOD,EAAIC,EAAO8O,QAAU0Q,GACnEhL,EAAOlB,QAAQlR,KAAKpC,IAbI,8BAkB5BwU,EAAOnB,MAAQ,CAAC1P,OAAOuR,MAAM/B,MAlBD,qBAmBTxP,OAAOuR,MAAM7B,OAnBJ,IAmB5B,2BAAuC,CAAC,IAA7BF,EAA4B,QAChCA,EAAKrT,EAAIqT,EAAKrE,QAAUuQ,GAAUlM,EAAKrT,EAAIqT,EAAKrE,QAAUwQ,GAC5DnM,EAAKpT,EAAIoT,EAAKrE,QAAUyQ,GAAUpM,EAAKpT,EAAIoT,EAAKrE,QAAU0Q,GAC3DhL,EAAOnB,MAAMjR,KAAK+Q,IAtBM,+BA8BvB,SAASsM,KACd,IADiC,EAC3BtM,EAAOxP,OAAOuR,MAAM/B,KADO,eAGdxP,OAAOuR,MAAM5B,SAHC,IAGjC,2BAAyC,CACvCqL,GAAaxL,EAD0B,UAHR,mDAMdxP,OAAOuR,MAAM7B,OANC,IAMjC,2BAAuC,CAAC,IAA7BF,EAA4B,QACjCA,EAAKmF,WACP9C,GAAcrC,GAAMsC,SAAU,EAC9BtC,EAAKmF,SAAW,OATa,8BAYjC+E,KAEAqC,EAAGC,aACHP,KAMK,SAASQ,KAAiB,qBAEdjc,OAAOuR,MAAMpB,OAAOU,OAAOnB,OAFb,IAE/B,2BAAmD,CACjDwM,GADiD,UAFpB,+BAU1B,SAASA,GAAY1M,GAAO,IAAD,iBACdA,EAAK3D,OADS,IAChC,2BAA8B,CAAC,IAAtBA,EAAqB,QAExBA,EAAM/B,OACR+B,EAAM/B,MAAQ,GAGZ+B,EAAMY,QAAUZ,EAAMY,OAAO3C,OAC/B+B,EAAMY,OAAO3C,MAAQ,GAEnB+B,EAAMhB,QAAUgB,EAAMhB,OAAOC,SAC/Be,EAAMhB,OAAOZ,UAAY,EACrB4B,EAAMhB,OAAOZ,UAAY,IAC3B4B,EAAMhB,OAAOZ,SAAW,EACxBkS,GAAc3M,EAAM3D,EAAMhB,WAdA,+BAoB3B,SAASuR,GAAiB5M,GAAO,IAAD,iBACnBA,EAAK3D,OADc,IACrC,2BAA8B,CAAC,IAAtBA,EAAqB,QACvBA,EAAMlD,OAASlM,EAAEyK,2BAA+B2E,EAAM/B,KAAO,IAChE+B,EAAM/B,KAAO,IAHoB,+BAQhC,SAAS6P,GAAUnK,GAAO,IAAD,iBACZA,EAAK3D,OADO,IAC9B,2BAA8B,CAAC,IAAtBwQ,EAAqB,QAC5B,GAAKA,EAAM1T,OAASlM,EAAE6K,yBAA6BkI,EAAKzE,MAAQyE,EAAKxE,SAAW,CAC9E,IAAInC,EAAO,CAACnD,SAAU2W,EAAM9P,YAAa5G,KAAM,EAAGC,QAAS,GACvDsV,EAAKrC,UAAU,KAAMrJ,EAAM3G,KAC7B2G,EAAKzE,OAASsR,EAAM9P,YACpB2O,EAAKpC,gBAAgB,KAAMtJ,EAAM3G,SAE1BwT,EAAM1T,OAASlM,EAAE8K,0BAC1B+U,GAAoB9M,EAAM6M,EAAM5P,SATN,+BAiBzB,SAAS6P,GAAoB9M,EAAM/C,GAExC,KAAIA,EAAO3C,KAAO,GAAlB,CAGA,IALgD,EAK5C+J,EAAe,KACfE,EAAmB,KANyB,eAO9B/T,OAAOuR,MAAMpB,OAAOU,OAAOnB,OAPG,IAOhD,2BAAoD,CAAC,IAA5CoE,EAA2C,QAClD,GAAIA,EAAM+C,OAAS/C,EAAM2C,QAAUha,EAAE+I,MAAO,CAC1C,IAAIkO,EAAOZ,EAAM3X,gBAAgBqU,EAAKrT,EAAGqT,EAAKpT,EAAG0X,EAAM3X,EAAG2X,EAAM1X,KAC3DyX,GAAiBH,EAAOK,KAC3BF,EAAeC,EACfC,EAAmBL,KAZuB,8BAgBhD,GAAIG,GAAiBE,GAAoBwI,GAAY9P,GAAU,CAC7D,IAAM+P,EAAUhN,EAAKkG,SACrBlG,EAAKkG,SAAW5C,EAAMhX,gBAAgBN,KAAKgB,MAAMqX,EAAazX,EAAIoT,EAAKpT,EAAGyX,EAAa1X,EAAIqT,EAAKrT,IAChGsgB,GAAWhQ,EAAQ+C,EAAM,IACzBA,EAAKkG,SAAW8G,IAIb,SAAShB,GAAehM,GAC7B,IAAIiB,EAAWzQ,OAAOuR,MAAMpB,OAAOM,SACnCA,EAASiM,aAAavgB,EAAK,IAAMqT,EAAKrT,EAAKM,EAAEuC,kBAC7CyR,EAASiM,aAAatgB,EAAK,IAAMoT,EAAKpT,EAAKK,EAAEwC,mBAOxC,SAAS+b,GAAaxL,EAAMnT,GAEjC,GAAKmT,EAAKrT,EAAIM,EAAEuC,kBAAoB3C,EAAO8O,OAAS9O,EAAOF,GACxDqT,EAAKrT,EAAIM,EAAEuC,kBAAoB3C,EAAO8O,OAAS9O,EAAOF,GACtDqT,EAAKpT,EAAIK,EAAEwC,mBAAqB5C,EAAO8O,OAAS9O,EAAOD,GACvDoT,EAAKpT,EAAIK,EAAEwC,mBAAqB5C,EAAO8O,OAAS9O,EAAOD,EAAI,CAE5D,GAAIC,EAAOsY,SAAU,CACnB,IAAMrW,EAAS4c,EAAKtG,gBAAgBvY,GAChCiC,EAAOwT,UACTxT,EAAOwT,SAAU,GAGrB,OAAO,EAGT,IAAMxT,EAAS4c,EAAKtG,gBAAgBvY,GAKpC,OAJAiC,EAAOwT,SAAU,EAEjBxT,EAAOnC,EAAKE,EAAOF,EAAIqT,EAAKrT,EAAKM,EAAEuC,kBACnCV,EAAOlC,EAAKC,EAAOD,EAAIoT,EAAKpT,EAAKK,EAAEwC,oBAC5B,EAMF,SAAS0d,GAAgBnN,GAAO,IAAD,iBAChBA,EAAK3D,OADW,IACpC,2BAAgC,CAAC,IAAtBA,EAAqB,QAC9B,GAAIA,EAAMhB,QAAUgB,EAAMhB,OAAOC,OAC/B,OAAOe,EAAMhB,QAHmB,8BAMpC,OAAO,KAOF,SAAS+R,GAAkBpN,GAChC,IADsC,EAClC3E,EAAS,KADyB,eAElB2E,EAAK3D,OAFa,IAEtC,2BAAgC,CAAC,IAAtBA,EAAqB,QAC9B,GAAIA,EAAMhB,SACRA,EAASgB,EACLA,EAAMhB,OAAOC,QACf,OAAOD,GANyB,8BAUtC,OAAOA,EAIF,SAASsQ,GAA0B3L,EAAM8G,EAAYja,GAC1D,IAAMwO,EAAS8R,GAAgBnN,GAC/B,GAAI3E,EAEF,OAAOiI,EAAM3X,gBAAgBqU,EAAKrT,EAAGqT,EAAKpT,EAAGC,EAAOF,EAAGE,EAAOD,GAAMC,EAAO8O,OAASN,EAAOM,OAG7F,IAPkE,EAO9D3M,EAAkBsU,EAAMzU,cAAcmR,EAAKrT,EAAGqT,EAAKpT,EAAGka,GAPQ,eAQhD9X,GARgD,IAQlE,2BAAmC,CAAC,IAA3Bqe,EAA0B,QAEjC,GADW/J,EAAM3X,gBAAgB0hB,EAAM,GAAIA,EAAM,GAAIxgB,EAAOF,EAAGE,EAAOD,GAC3DC,EAAO8O,OAAS1O,EAAEoJ,gBAC3B,OAAO,GAXuD,8BAclE,OAAO,EAIF,SAASwV,GAAyB7L,EAAM8G,EAAYxC,GACzD,GAAItE,IAASsE,EACX,OAAO,EAET,IAAMjJ,EAAS8R,GAAgBnN,GAC/B,GAAI3E,EAEF,OAAOiI,EAAM3X,gBAAgBqU,EAAKrT,EAAGqT,EAAKpT,EAAG0X,EAAM3X,EAAG2X,EAAM1X,GAAM0X,EAAM3I,OAASN,EAAOM,OAE1F,IATgE,EAS5D3M,EAAkBsU,EAAMzU,cAAcmR,EAAKrT,EAAGqT,EAAKpT,EAAGka,GATM,eAU9C9X,GAV8C,IAUhE,2BAAmC,CAAC,IAA3Bqe,EAA0B,QAEjC,GAAI/I,EAAM3I,OAER,GADW2H,EAAM3X,gBAAgB0hB,EAAM,GAAIA,EAAM,GAAI/I,EAAM3X,EAAG2X,EAAM1X,GACzD0X,EAAM3I,OAAS1O,EAAEoJ,gBAC1B,OAAO,GAfmD,8BAmBhE,OAAO,EAOT,SAASuV,GAAS5L,EAAMnT,GAEtB,IAAIygB,EAAYhK,EAAMhX,gBAAgBN,KAAKgB,MAAMgT,EAAKpT,EAAIC,EAAOD,EAAGoT,EAAKrT,EAAIE,EAAOF,IAChF4gB,EAAUvhB,KAAKwhB,IAAIxN,EAAKkG,SAAWoH,GACnC9S,EAAQxO,KAAKwhB,IAAIxN,EAAKmH,IAAMnb,KAAKwhB,IAAIxN,EAAKoH,IAE1CqG,GAAYF,EAAUvN,EAAKzD,YAAgBgR,EAAqB,EAAVvhB,KAAKS,GAASuT,EAAKzD,aACvE/B,EAAQwF,EAAK1D,WAInB,GAFA0D,EAAKmH,GAAK,EACVnH,EAAKoH,GAAK,GACLqG,EAAS,CAEZ,IAAIC,EAAY1hB,KAAKqC,IAAImM,EAAQwF,EAAK1D,WAAY,GAC9CqR,EAAa3hB,KAAKqC,IAAIkf,EAAUvN,EAAKzD,WAAY,GACjDoR,EAAa3hB,KAAKS,KACpBkhB,EAAwB,EAAV3hB,KAAKS,GAAU8gB,EAAUvN,EAAKzD,YAI9CqR,GAAW5N,GAFG0N,EAAY,EAAKC,GACZ3N,EAAKxE,SACFqS,IAGxB,IAAMxS,EAAS8R,GAAgBnN,GAK/B,GAJI3E,GACFsR,GAAc3M,EAAM3E,GAGlB2E,EAAKzE,MAAQ,EAAG,CAClB/K,OAAOuR,MAAM3B,eAAiBvT,EAC9B2D,OAAOuR,MAAM1B,iBAAmBxT,EAEhC,IAAIS,EAAMgW,EAAM/V,YAAYV,EAAOF,EAAGE,EAAOD,EAAGoT,EAAKrT,EAAGqT,EAAKpT,GACzDkhB,EAAIjhB,EAAO8O,OAASqE,EAAKmG,YAAc,EALzB,EAMC7C,EAAM1V,cAAcN,EAAKwgB,GAAvChgB,EANa,EAMbA,KAAMC,EANO,EAMPA,KACXiS,EAAKrT,EAAIE,EAAOF,EAAImB,EACpBkS,EAAKpT,EAAIC,EAAOD,EAAImB,EACpBiS,EAAKkG,SAAW5Y,EAChBT,EAAOqY,eAAiB5X,EACxBoe,EAAKrJ,cAAcrC,GAAMkG,SAAW5Y,EACpCgf,KACAZ,EAAKtD,gBAAgBnb,EAAEgF,WAAWG,SAI/B,SAAS2b,GAAmB/N,GACjC,IADuC,EACnClR,EAAS,KAD0B,eAEX0B,OAAOuR,MAAMpB,OAAOQ,YAFT,IAEvC,2BAA4D,CAAC,IAApD6M,EAAmD,QAC1D,IAAKA,EAAgB1L,QAAS,CAC5BxT,EAASkf,EACT,QALmC,8BAQlClf,IACHA,EAAS4c,EAAK9B,yBAEhB,IAAIqE,EAAazd,OAAOuR,MAAM/B,KAM9B,OALAlR,EAAOwT,SAAU,EACjBxT,EAAOM,QAAU4Q,EAAKrT,EACtBmC,EAAOO,QAAU2Q,EAAKpT,EACtBkC,EAAOnC,EAAKqT,EAAKrT,EAAIshB,EAAWthB,EAAKM,EAAEuC,kBACvCV,EAAOlC,EAAKoT,EAAKpT,EAAIqhB,EAAWrhB,EAAKK,EAAEwC,mBAChCX,EAQF,SAASof,GAAYlO,EAAMmO,GAC5BnO,EAAKiH,QAAUha,EAAE+I,OACnB0V,EAAKtC,WAAWpJ,GAElB,IAAIgO,EAAkBD,GAAmB/N,GACtB0L,EAAKrJ,cAAcrC,GAC3BsC,SAAU,EACrBtC,EAAKqH,OAAQ,EACbrH,EAAKmF,SAAW,KAChB6I,EAAgBI,OAEhBJ,EAAgBK,OAAS,WACvBL,EAAgBM,OAChBN,EAAgB1L,SAAU,EACtB6L,GACFA,KAKN,SAASN,KAEP,IAAI7N,EAAOxP,OAAOuR,MAAM/B,KACpBnT,EAAS2D,OAAOuR,MAAM3B,eAS1B,GAPAJ,EAAK9D,aAAe,EACpB8D,EAAK7D,UAAY,CAACjG,SAAU,EAAGC,KAAM,EAAGC,QAAS,GACjD4J,EAAK3D,MAAQ,GACb2D,EAAKxE,SAAW,EAChBwE,EAAKzE,MAAQ,GAGR1O,GAAuC,IAA5BA,EAAOoY,UAAU1B,OAAe,sBAE3B/S,OAAOuR,MAAM5B,SAFc,IAE9C,2BAAyC,CAAC,IAAjCtT,EAAgC,QACvC,GAAIA,EAAOoY,UAAU1B,OAAS,EAAG,CAC/B/S,OAAOuR,MAAM3B,eAAiBvT,EAC9B,QAL0C,8BASzCA,IACH2D,OAAOuR,MAAM3B,eAAiB5P,OAAOuR,MAAM5B,QAAQ,IAtBpC,MAyBI2F,EAAOyI,qBAAqB1hB,EAAQmT,EAAMnT,EAAOqY,eAAgB,GAAI,GAAvFvY,EAzBc,EAyBdA,EAAGC,EAzBW,EAyBXA,EAAGsZ,EAzBQ,EAyBRA,SACXlG,EAAKrT,EAAIA,EACTqT,EAAKpT,EAAIA,EACToT,EAAKmH,GAAK,EACVnH,EAAKoH,GAAK,EACVpH,EAAKkG,SAAWA,EAChBoG,KACAZ,EAAKtD,gBAAgBnb,EAAEgF,WAAWG,QAepC,SAASiY,GAASrK,EAAMoK,GACtB,IAAInO,EAAY+D,EAAK/D,UACjBuS,EAAc7D,GAAS3K,EAAM/S,EAAEgL,iBAC/BuW,IACFvS,GAAauS,EAAYhV,YAE3BwG,EAAKkG,SAAW5C,EAAMhX,gBAAgB0T,EAAKkG,SAAWjK,GAAamO,GAAQ,EAAI,IA2BjF,SAASiB,GAAWrL,EAAMoK,GACxB,IAAIqE,EAAW9D,GAAS3K,EAAM/S,EAAE2K,qBAChC,GAAI6W,EAAU,CACZ,IAAInhB,EAAMgW,EAAMhX,gBAAgB0T,EAAKkG,UAAakE,GAAQ,EAAI,GAAKpe,KAAKS,GAAK,GACvEiiB,EAAUD,EAASxU,YAAcjO,KAAKqB,IAAIC,GAC1CqhB,EAAUF,EAASxU,YAAcjO,KAAKoB,IAAIE,GAC5CmhB,EAASvU,aAAejN,EAAEkL,iBAC5B6H,EAAKmH,IAAMuH,EACX1O,EAAKoH,IAAMuH,GACFF,EAASvU,aAAejN,EAAEmL,cACnC4H,EAAKrT,GAAK+hB,EACV1O,EAAKpT,GAAK+hB,GAEV/J,QAAQC,KAAK,oCAAsC4J,EAASvU,aAQ3D,SAAS+S,GAAWhQ,EAAQ+C,EAAMtF,GACnCuC,GAAWA,EAAO3C,MAAQ,IAC5BsU,GAAW5O,EAAM/C,EAAQvC,GACzBuC,EAAO3C,KAAO2C,EAAO5C,UAIlB,SAAS6Q,GAAkBlL,EAAMtF,GACtC,IAAImU,EAAMlE,GAAS3K,EAAM/S,EAAEyK,2BACvBmX,GACF5B,GAAW4B,EAAK7O,EAAM6O,EAAInU,OAASmU,EAAInU,OAASA,GAI7C,SAASoU,GAAmB9O,GACjC,IAAKA,EAAKkH,8BAAgClH,EAAKkH,6BAA+B,EAE5E,OAAOyD,GAAS3K,EAAM/S,EAAE0K,6BAG1B,IAAM0E,EAAQ2D,EAAK3D,MAAM2D,EAAKkH,8BAC9B,OAAI7K,EAAMlD,OAASlM,EAAE0K,6BACnBmO,EAAOiJ,2BAA2B/O,GAC3B2K,GAAS3K,EAAM/S,EAAE0K,8BAEnB0E,EAGF,SAAS8O,GAAoBnL,GAClC,IAAI/C,EAAS6R,GAAmB9O,GAChC,GAAI/C,GAAWA,EAAO3C,MAAQ,EAAI,CAChC,GAAI2C,EAAOJ,WAAY,CACrB,IAAK6O,EAAKrC,UAAU,KAAMrJ,EAAM/C,EAAOJ,WAAW1D,KAAKE,MAErD,OAEFqS,EAAKpC,gBAAgB,KAAMtJ,EAAM/C,EAAOJ,WAAW1D,KAAKE,MACxD,IAAM2V,EAAQtD,EAAK7O,WAAWI,EAAOJ,WAAW1D,KAAM6G,EAAKiH,OACrDgI,EAAcvD,EAAKrJ,cAAc2M,GAEjCE,GADalP,EAAKmG,aAA8B,EAAdnG,EAAKrE,QACL,EAAMqT,EAAM7I,YAAc,EAAK,GACjE7Y,EAAM2P,EAAOJ,WAAWvP,MAAQL,EAAE6L,kBAAoBwK,EAAMhX,gBAAgB0T,EAAKkG,SAAWla,KAAKS,IAAMuT,EAAKkG,SAV7F,EAWA5C,EAAM1V,cAAcN,EAAK4hB,GAAvCphB,EAXc,EAWdA,KAAMC,EAXQ,EAWRA,KACbihB,EAAMriB,EAAIqT,EAAKrT,EAAImB,EACnBkhB,EAAMpiB,EAAIoT,EAAKpT,EAAImB,EACfihB,EAAMhT,aACRgT,EAAM7H,GAAKnH,EAAKmH,GAChB6H,EAAM5H,GAAKpH,EAAKoH,IAElB4H,EAAM9I,SAAW5C,EAAMhX,gBAAgBgB,EAAMtB,KAAKS,IAClDwiB,EAAYtiB,EAAKqiB,EAAMriB,EAAI6D,OAAOuR,MAAM/B,KAAKrT,EAAKM,EAAEuC,kBACpDyf,EAAYriB,EAAKoiB,EAAMpiB,EAAI4D,OAAOuR,MAAM/B,KAAKpT,EAAKK,EAAEwC,mBACpDwf,EAAY3M,SAAU,EACtB9R,OAAOuR,MAAM7B,MAAMjR,KAAK+f,GAExBzC,EAAG4C,4BAA4BH,GAC/BzC,EAAG6C,0BAA0BJ,GAE3B/R,EAAO5B,QACTgU,GAAarP,EAAM/C,EAAO5B,QAE5B4B,EAAO3C,KAAO2C,EAAO5C,UAQlB,SAASgV,GAAarP,EAAM3E,GACZqQ,EAAKhF,gBAAgB1G,EAAM3E,GACnCiH,SAAU,EACvBjH,EAAOC,QAAS,EAChBD,EAAOZ,SAAWY,EAAOI,YACzBJ,EAAOE,MAAQF,EAAOG,SAEtBwE,EAAKmG,YAA8B,EAAhB9K,EAAOM,OAC1BqE,EAAKoG,aAA+B,EAAhB/K,EAAOM,OAMtB,SAASgR,GAAc3M,EAAM3E,GACbqQ,EAAKhF,gBAAgB1G,EAAM3E,GACnCiH,SAAU,EACvBjH,EAAOC,QAAS,EAEhB,IAAMwL,EAAa4E,EAAKrJ,cAAcrC,GACtCA,EAAKmG,YAAcW,EAAWzV,MAC9B2O,EAAKoG,aAAeU,EAAWT,OAM1B,SAASuI,GAAW5O,EAAM6O,EAAKnU,GACpC,IAAI4U,EAcN,SAA4B3U,GAAa,IAAD,iBACnBnK,OAAOuR,MAAMpB,OAAOS,SADD,IACtC,2BAAgD,CAAC,IAAxCkO,EAAuC,QAC9C,IAAKA,EAAOhU,QAAWgU,EAAOjM,WAAa1I,EAGzC,OAFA2U,EAAOhU,QAAS,EAChBgU,EAAOxgB,OAAOwT,SAAU,EACjBgN,GAL2B,8BAStC,IAAIA,EAAS,CAAChU,QAAQ,EAAMf,OAAQ,EAAG5N,EAAG,EAAGC,EAAG,EAAGua,GAAI,EAAGC,GAAI,EAAG3M,SAAU,EAAG4I,SAAU1I,GAEpFgP,EAAcnZ,OAAOoS,KAAK4C,OAAOrJ,UAAUlP,EAAEyG,kBAC7C5E,EAAS,IAAI0B,OAAOoS,KAAK2C,OAAOoE,EAAYlE,SAAS9K,IAQzD,OAPA7L,EAAOnC,GAAK,IACZmC,EAAOlC,GAAK,IACZkC,EAAO4W,OAAOxG,IAAI,GAAK,IACvBpQ,EAAO8W,MAAM1G,IAAI,GAAK,IACtB1O,OAAOuR,MAAMpB,OAAOc,iBAAiBL,QAAQ0B,SAAShU,GACtDwgB,EAAOxgB,OAASA,EAChB0B,OAAOuR,MAAMpB,OAAOS,QAAQnS,KAAKqgB,GAC1BA,EAlCMC,CAAmBV,EAAIlU,YACpC2U,EAAO7U,SAAWoU,EAAIpU,SACtB6U,EAAO/U,OAASsU,EAAItU,OACpB,IAAMiV,EAAY9U,EAAUA,EAAS1O,KAAKuC,UAAY+U,EAAM7U,cAAgB,EAAI,GAAM,EAChFyX,EAAWlG,EAAKkG,SAAWsJ,EACjCF,EAAOnI,GAAKnH,EAAKmH,GAAK0H,EAAIrU,MAAQxO,KAAKqB,IAAI6Y,GAC3CoJ,EAAOlI,GAAKpH,EAAKoH,GAAKyH,EAAIrU,MAAQxO,KAAKoB,IAAI8Y,GAC3CoJ,EAAO3iB,EAAIqT,EAAKrT,EAAIX,KAAKC,KAAK+T,EAAKmG,YAAcnG,EAAKmG,YAAcnG,EAAKoG,aAAepG,EAAKoG,cAAgB,EAAIpa,KAAKqB,IAAI6Y,GAC1HoJ,EAAO1iB,EAAIoT,EAAKpT,EAAIZ,KAAKC,KAAK+T,EAAKmG,YAAcnG,EAAKmG,YAAcnG,EAAKoG,aAAepG,EAAKoG,cAAgB,EAAIpa,KAAKoB,IAAI8Y,GA6B5H,SAASuJ,GAAWH,GAClBA,EAAOhU,QAAS,EAChBgU,EAAOxgB,OAAOwT,SAAU,EACxBgN,EAAOxgB,OAAOnC,GAAK,IACnB2iB,EAAOxgB,OAAOlC,GAAK,IACnB0iB,EAAOnI,GAAK,EACZmI,EAAOlI,GAAK,EAMP,SAASsI,KACd,IAD4B,EACxB1P,EAAOxP,OAAOuR,MAAM/B,KADI,eAETxP,OAAOuR,MAAMpB,OAAOS,SAFX,IAE5B,2BAAgD,CAAC,IAAxCkO,EAAuC,QAC1CA,EAAOhU,SACTgU,EAAO3iB,EAAI2iB,EAAO3iB,EAAI2iB,EAAOnI,GAC7BmI,EAAO1iB,EAAI0iB,EAAO1iB,EAAI0iB,EAAOlI,GAC7BkI,EAAOxgB,OAAOnC,EAAK2iB,EAAO3iB,EAAIqT,EAAKrT,EAAKM,EAAEuC,kBAC1C8f,EAAOxgB,OAAOlC,EAAK0iB,EAAO1iB,EAAIoT,EAAKpT,EAAKK,EAAEwC,mBAC1C6f,EAAO7U,SAAW6U,EAAO7U,SAAW,EAChC6U,EAAO7U,UAAY,GACrBgV,GAAWH,GAEbK,GAAwBL,KAZA,+BAiB9B,SAASK,GAAwBL,GAC/B,IADuC,EACnCtP,EAAOxP,OAAOuR,MAAM/B,KADe,eAGpBxP,OAAOuR,MAAMpB,OAAOU,OAAOlB,SAHP,IAGvC,2BAAuD,CAAC,IAA/CtT,EAA8C,QACjDyW,EAAM3X,gBAAgBkB,EAAOF,EAAGE,EAAOD,EAAG0iB,EAAO3iB,EAAG2iB,EAAO1iB,GAAKC,EAAO8O,QAEzE8T,GAAWH,IANwB,8BAUvC,GAAItP,EAAKqH,MAAO,CACd,IAAMhM,EAAS8R,GAAgBnN,GAC/B,GAAI3E,GAAUiI,EAAM3X,gBAAgBqU,EAAKrT,EAAGqT,EAAKpT,EAAG0iB,EAAO3iB,EAAG2iB,EAAO1iB,GAAKyO,EAAOM,OAC/EiU,GAAcN,EAAQtP,EAAM6N,SAETnC,EAAKrJ,cAAcrC,GACvB6P,cAAc,CAACljB,EAAG2iB,EAAOxgB,OAAOnC,EAAGC,EAAG0iB,EAAOxgB,OAAOlC,KACjEgjB,GAAcN,EAAQtP,EAAM6N,IAjBK,qBAsBrBrd,OAAOuR,MAAMpB,OAAOU,OAAOnB,OAtBN,IAsBvC,2BAAoD,CAAC,IAA5CoE,EAA2C,QAClD,GAAKA,IAAUtE,GAASsE,EAAM+C,OAAS/C,EAAM3I,OAAQ,CACnD,IAAMN,EAAS8R,GAAgB7I,IAC1BjJ,GAAUiI,EAAM3X,gBAAgB2Y,EAAM3X,EAAG2X,EAAM1X,EAAG0iB,EAAO3iB,EAAG2iB,EAAO1iB,GAAKyO,EAAOM,QACjF2H,EAAM3X,gBAAgB2Y,EAAM3X,EAAG2X,EAAM1X,EAAG0iB,EAAO3iB,EAAG2iB,EAAO1iB,IAAM0X,EAAM3I,SACtEiU,GAAcN,EAAQhL,EAAO,QA3BI,+BAoCzC,SAASsL,GAAcN,EAAQtP,EAAMmO,GACnCP,GAAW5N,EAAMsP,EAAO/U,OAAQ4T,GAChCsB,GAAWH,GAMN,SAAS1B,GAAW5N,EAAMzF,EAAQ4T,GACvC,IAAM9S,EAAS8R,GAAgBnN,GAC3B3E,GACFA,EAAOE,OAAShB,EACZc,EAAOE,OAAS,IAClBF,EAAOE,MAAQ,EACfoR,GAAc3M,EAAM3E,MAGtB2E,EAAKzE,MAAQyE,EAAKzE,MAAQhB,EACtByF,EAAKzE,OAAS,IAChByE,EAAKzE,MAAQ,EACb2S,GAAYlO,EAAMmO,KAQjB,SAASrC,GAAa9L,EAAMsE,GACjC,GAAItE,IAASsE,EAAb,CAGA,IAAIwL,EAAa9P,EAAKzE,MAClBwU,EAAczL,EAAM/I,MACxBqS,GAAWtJ,EAAOwL,EAAatf,OAAOuR,MAAM/B,OAASsE,EAASuJ,GAAY,MAC1ED,GAAW5N,EAAM+P,EAAcvf,OAAOuR,MAAM/B,OAASA,EAAQ6N,GAAY,MAEpE7N,EAAKqH,QACRrH,EAAKmH,GAAK,EACVnH,EAAKoH,GAAK,IAOP,SAASuD,GAAS3K,EAAMgQ,GAAY,IAAD,iBACtBhQ,EAAK3D,OADiB,IACxC,2BAA8B,CAAC,IAAtBA,EAAqB,QAC5B,GAAIA,EAAMlD,OAAS6W,EACjB,OAAO3T,GAH6B,8BAMxC,OAAO,KAGF,SAAS4P,KACd,IAAInE,EAAItX,OAAOuR,MAAMpB,OAAOiB,gBACxB3B,EAAOzP,OAAOuR,MAAM9B,KAEpBgQ,EAAIhjB,EAAEsF,cAAgBtF,EAAE0F,eACxBmb,EAAI7gB,EAAEyF,cACNrG,EAAIY,EAAEsF,cACVuV,EAAEoI,QAEFpI,EAAEqI,UAAUljB,EAAEoG,0BACdyU,EAAEsI,UAAU,EAAGnjB,EAAEmG,sBACjB0U,EAAEH,SARM,EAQMsI,EAAGnC,EAAGzhB,GACpByb,EAAEuI,UAZ0B,qBAcT7f,OAAOuR,MAAM5B,SAdJ,IAc5B,2BAAyC,CAAC,IAAjCtT,EAAgC,QACvC,GAAIyjB,GAAYrQ,EAAMpT,GAAS,CAC7B,IAAIF,EAbA,EAaQM,EAAE2F,oBAAuB/F,EAAOF,EAAIsT,EAAKtT,GAAKM,EAAEiG,gBACxDtG,EAAIqjB,EAAIhjB,EAAE4F,qBAAwBhG,EAAOD,EAAIqT,EAAKrT,GAAKK,EAAEkG,gBACvDod,EAAc/f,OAAOuR,MAAM3B,iBAAmBvT,EAASI,EAAEsG,8BAAgCtG,EAAEqG,qBACjGwU,EAAEsI,UAAU,EAAGG,GACfzI,EAAE0I,WAAW7jB,EAAGC,EAAGC,EAAO8O,OAAS1O,EAAEiG,iBALR,qBAORrG,EAAOoY,WAPC,IAO7B,2BAAuC,CAAC,IAA/BY,EAA8B,QACjC4K,EApBF,EAoBkBxjB,EAAE2F,oBAAuBiT,EAASlZ,EAAIsT,EAAKtT,GAAKM,EAAEiG,gBAAmB,IACrFwd,EAAYT,EAAIhjB,EAAE4F,qBAAwBgT,EAASjZ,EAAIqT,EAAKrT,GAAKK,EAAEkG,gBAAmB,IAC1F2U,EAAEsI,UAAU,EAAGnjB,EAAEuG,wBACjBsU,EAAEH,SAAS8I,EAAWC,EAAW,EAAG,IAXT,iCAfL,8BA+B5B5I,EAAEsI,UAAU,EAAGnjB,EAAEwG,oBACjB,IAAM9G,EA7BE,EA6BMM,EAAE2F,oBAAuBpC,OAAOuR,MAAM/B,KAAKrT,EAAIsT,EAAKtT,GAAKM,EAAEiG,gBACnEtG,EAAIqjB,EAAIhjB,EAAE4F,qBAAwBrC,OAAOuR,MAAM/B,KAAKpT,EAAIqT,EAAKrT,GAAKK,EAAEkG,gBAC1E2U,EAAE0I,WAAW7jB,EAAGC,EAAG,GAMd,SAASub,GAAewI,EAAQC,GACrC,GAAIpgB,OAAOuR,MAAMpB,OAAOG,YAAc7T,EAAEgF,WAAWG,OAAQ,CACzD,IADyD,EACnD6N,EAAOzP,OAAOuR,MAAM9B,KACtB7Q,EAAU6Q,EAAKtT,GAAMgkB,EAAS1jB,EAAE2F,qBAAuB,EAAI3F,EAAEiG,iBAC7D7D,EAAU4Q,EAAKrT,GAAOgkB,GAAU3jB,EAAEsF,cAAgBtF,EAAE0F,gBAAmB1F,EAAE4F,sBAAwB,EAAI5F,EAAEiG,iBAHlD,eAItC1C,OAAOuR,MAAM5B,SAJyB,IAIzD,2BAAyC,CAAC,IAAjCtT,EAAgC,QACnCyW,EAAM3X,gBAAgByD,EAASC,EAASxC,EAAOF,EAAGE,EAAOD,IAAMC,EAAO8O,SACxEnL,OAAOuR,MAAM3B,eAAiBvT,IANuB,8BASzDoT,EAAKtT,EAAIyC,EACT6Q,EAAKrT,EAAIyC,EACT4c,MAIJ,SAASqE,GAAYrQ,EAAMpT,GAEzB,QAAUoT,EAAKtT,EAAIM,EAAE+F,wBAA0BnG,EAAO8O,OAAS9O,EAAOF,GACnEsT,EAAKtT,EAAIM,EAAE+F,wBAA0BnG,EAAO8O,OAAS9O,EAAOF,GAC5DsT,EAAKrT,EAAIK,EAAEgG,yBAA2BpG,EAAO8O,OAAS9O,EAAOD,GAC7DqT,EAAKrT,EAAIK,EAAEgG,yBAA2BpG,EAAO8O,OAAS9O,EAAOD,GAM3D,SAASmgB,GAAY9P,GAC1B,OAAKA,EAIEA,EAAOzC,MAAQyC,EAAOxC,SAAW,IAH/B,EASJ,SAASoW,GAAmB7Q,GAEjC,OAAO+M,GADGpC,GAAS3K,EAAM/S,EAAEyK,4BC71BtB,SAAS8Q,KACd5D,QAAQoF,IAAI,sBAIP,SAASvB,GAAWwB,IACpBzZ,OAAOuR,MAAMpB,OAAOC,KAAK4J,GAAG3a,QAAUW,OAAOuR,MAAMpB,OAAOC,KAAK6J,EAAE5a,SAChEW,OAAOuR,MAAM/B,KAAKqH,QAAU7W,OAAOuR,MAAMpB,OAAOI,UAMxD,WACE,IAAIgB,EAAQvR,OAAOuR,MACf/B,EAAO+B,EAAM/B,KACjB0L,EAAKtD,gBAAgBnb,EAAEgF,WAAWE,KAClC,IAAI2e,EAAUxN,EAAM5W,YAAYsT,EAAKrT,EAAGqT,EAAKpT,EAAGmV,EAAM3B,gBACtDJ,EAAKmH,GAAK2J,EAAQnkB,GAAKM,EAAEqJ,cACzB0J,EAAKoH,GAAK0J,EAAQlkB,GAAKK,EAAEqJ,cAXrBya,GAkBN,SAASC,GAAgBC,GACvB,OAAIA,IAAiBhkB,EAAEoK,sBACd,CAACsO,YAAY1Y,EAAEuK,cAAekE,WAAWzO,EAAEwH,aAAcyc,WAAU,GACjED,IAAiBhkB,EAAE4J,mBACrB,CAAC8O,YAAY1Y,EAAE6J,WAAY4E,WAAWzO,EAAEyH,UAAWwc,WAAU,IAEtEtM,QAAQC,KAAK,yBAA0BoM,GAChC,IAUF,SAASlL,GAAmBF,EAAUhZ,GAA8B,IAGrEgc,EAH+CvD,EAAqB,uDAAN,KAAM,EACzB0L,GAAgBnL,EAAS1M,MAAhEwM,EADgE,EAChEA,YAAajK,EADmD,EACnDA,WAAYwV,EADuC,EACvCA,UAC7BvH,EAAcnZ,OAAOoS,KAAK6G,OAAOC,OAAOvN,UAAUlP,EAAEyG,kBAAkBiW,YAEtEuH,IACFrI,EAAiB,IAAIrY,OAAOoS,KAAKiH,eAAeF,EAAYG,WAAWpO,KACxDoN,eAAiB7b,EAAE+J,qBAClC6R,EAAeuF,QAEfvF,EAAiB,IAAIrY,OAAOoS,KAAK2C,OAAOoE,EAAYlE,SAAS/J,IAE/DmN,EAAenD,OAAOxG,IAAI,GAAK,IAC/B2J,EAAejD,MAAM1G,IAAIyG,EAAaA,GACtCkD,EAAe3C,SAAWL,EAASK,SACnC2C,EAAelc,EAAKkZ,EAASlZ,EAAIE,EAAOF,EACxCkc,EAAejc,EAAKiZ,EAASjZ,EAAIC,EAAOD,EACxCic,EAAevG,SAAU,EACpBgD,IACHA,EAAeoG,EAAKtG,gBAAgBvY,IAEtCyY,EAAaxC,SAAS+F,GAGjB,SAASsI,KACd,IAAIpP,EAAQvR,OAAOuR,MACfqP,EAAO,CAACjY,KAAMlM,EAAE4J,oBAChBhK,EAASkV,EAAM3B,eACfJ,EAAO+B,EAAM/B,KAJS,EASLuO,GAAqB1hB,EAAQmT,EAH7BqR,GAA6BrR,EAAMnT,EAAQI,EAAE8J,YAGI9J,EAAE8J,WAAY,GAA/EpK,EATqB,EASrBA,EAAEC,EATmB,EASnBA,EAAEsZ,EATiB,EASjBA,SACC,OAANvZ,GAIJykB,EAAK/f,MAAQpE,EAAE8J,WACfqa,EAAKzkB,EAAIA,EACTykB,EAAKxkB,EAAIA,EACTwkB,EAAKlL,SAAWA,EAEhBH,GAAmBqL,EAAMvkB,GACzB6e,EAAKpC,gBAAgBzc,EAAQmT,EAAM/S,EAAEmK,WACrCvK,EAAOoY,UAAUhW,KAAKmiB,GACtBlJ,EAAI+D,eAXFrH,QAAQC,KAAK,wBAiBV,SAASwM,GAA6BrR,EAAMnT,EAAQykB,GACzD,IAAIC,EAAMvR,EAAKkG,SAAWla,KAAKS,GAAG,EAC9B+kB,EAAOxR,EAAKrT,EAAI2kB,EAAoBtlB,KAAKqB,IAAIkkB,GAC7CE,EAAOzR,EAAKpT,EAAI0kB,EAAmBtlB,KAAKoB,IAAImkB,GAEhD,OAAOjO,EAAMhX,gBAAgBN,KAAKgB,MAAMykB,EAAO5kB,EAAOD,EAAG4kB,EAAO3kB,EAAOF,IAOlE,SAAS4hB,GAAqB1hB,EAAQmT,EAAMkG,EAAUwL,EAAe9R,GAC1E,OAAI+R,GAAa9kB,EAAQmT,EAAMkG,EAAUwL,GAGhC,CAAC/kB,EAFAE,EAAOF,GAAME,EAAO8O,OAAS,IAAM3P,KAAKqB,IAAI6Y,GAE1CtZ,EADFC,EAAOD,GAAMC,EAAO8O,OAAS,IAAM3P,KAAKoB,IAAI8Y,GACvCA,YAGXtG,EAAiB,EAAR5T,KAAKS,GAAOQ,EAAE2J,sCAClB,CAACjK,EAAE,KAAMC,EAAE,KAAMsZ,SAAS,MAE5BqI,GAAqB1hB,EAAQmT,EAAMkG,EAASjZ,EAAE2J,sCACjD8a,IAAiB9R,GAGhB,SAAS+R,GAAa9kB,EAAQmT,EAAMkG,EAAUwL,GACnD,IADkE,EAC9D/kB,EAAIE,EAAOF,GAAME,EAAO8O,OAAS,IAAM3P,KAAKqB,IAAI6Y,GAChDtZ,EAAIC,EAAOD,GAAMC,EAAO8O,OAAS,IAAM3P,KAAKoB,IAAI8Y,GAEhD7G,EAAUiE,EAAM3X,gBAAgBgB,EAAEC,EAAGoT,EAAKrT,EAAGqT,EAAKpT,GAClDglB,EAAmBF,EAL2C,eAM7C7kB,EAAOoY,WANsC,IAMlE,2BAAuC,CAAC,IAA/BY,EAA8B,QAChC3B,EAAOZ,EAAM3X,gBAAgBgB,EAAEC,EAAGiZ,EAASlZ,EAAGkZ,EAASjZ,GACvDsX,EAAO7E,IACTA,EAAU6E,EACV0N,EAAmB/L,EAASxU,QAViC,8BAalE,OAAQgO,EAAWqS,EAAc,EAAIE,EAAiB,EAAI,GAMrD,SAASC,GAAiBC,EAAQC,EAAQhJ,EAAciJ,EAAiBC,GAC9ErN,QAAQoF,IAAI,gBAAgBgI,EAAgB,OAAOjJ,GACnD,IAAImJ,EAAeC,OAAOH,GACtBI,MAAMF,KACRA,EAAe,GAEjB,IAAIG,EAAMH,GAEc,KAApBF,GAA2BF,EAAO/I,GAAgBmJ,EAAe,KACnEG,EAAMP,EAAO/I,IAGf,IAAIuJ,EAAaL,GAAeF,EAAO7b,SAAW6b,EAAO5b,KAAO4b,EAAO3b,SACnEkc,EAAYD,IACdA,EAAMC,GAERP,EAAOhJ,IAAiBsJ,EACxBP,EAAO/I,IAAiBsJ,EAQnB,SAASE,GAAavS,EAAMnT,GACjC,IAAM2lB,EAAaxmB,KAAKsC,MAAM0R,EAAK9D,aAAe,GAC9CuW,EAAUzS,EAAK9D,cAAgB8D,EAAK7D,UAAUjG,SAAW8J,EAAK7D,UAAUhG,KAAO6J,EAAK7D,UAAU/F,SAClG,KAAIqc,GAAW,GAAf,CAKA,IAAMC,EAAkBF,GAAc,GAAKA,EAAa,GACpDxS,EAAK7D,UAAUjG,SAAWwc,GAC5Bb,GAAiBhlB,EAAOsP,UAAU4I,OAAQ/E,EAAK7D,UAAW,WAAYuW,EAAkB1S,EAAK7D,UAAUjG,SAAU8J,EAAK9D,cAEpH8D,EAAK7D,UAAUhG,KAAOqc,GACxBX,GAAiBhlB,EAAOsP,UAAU4I,OAAQ/E,EAAK7D,UAAW,OAAQqW,EAAaxS,EAAK7D,UAAUhG,KAAM6J,EAAK9D,cAG3GuW,EAAUzS,EAAK9D,cAAgB8D,EAAK7D,UAAUjG,SAAW8J,EAAK7D,UAAUhG,KAAO6J,EAAK7D,UAAU/F,SAC1F4J,EAAK7D,UAAU/F,QAAUqc,GAC3BZ,GAAiBhlB,EAAOsP,UAAU4I,OAAQ/E,EAAK7D,UAAW,UAAWsW,EAASzS,EAAK9D,eAIhF,SAASyW,KACd,IAAI5Q,EAAQvR,OAAOuR,MACflV,EAASkV,EAAM3B,eACfJ,EAAO+B,EAAM/B,KACb4S,EAAU,CAACzZ,KAAMlM,EAAEoK,uBAJM,EAURkX,GAAqB1hB,EAAQmT,EAH1BqR,GAA6BrR,EAAMnT,EAAQI,EAAEsK,eAGItK,EAAEsK,cAAe,GAArF5K,EAVwB,EAUxBA,EAAEC,EAVsB,EAUtBA,EAAEsZ,EAVoB,EAUpBA,SACC,OAANvZ,GAIJimB,EAAQvhB,MAAQpE,EAAE8J,WAClB6b,EAAQjmB,EAAIA,EACZimB,EAAQhmB,EAAIA,EACZgmB,EAAQ1M,SAAWA,EACnBrZ,EAAOoY,UAAUhW,KAAK2jB,GAGtB7M,GAAmB6M,EAAS/lB,GAE5B6e,EAAKpC,gBAAgBzc,EAAQmT,EAAM/S,EAAEqK,cACrC4Q,EAAI+D,eAbFrH,QAAQC,KAAK,2BAmBV,SAASgO,GAAUC,GACxB,IACIjmB,EADQ2D,OAAOuR,MACA3B,eACf2S,EAAUrH,EAAK7O,WAAWiW,GAC9BjmB,EAAOqT,MAAMjR,KAAK8jB,GAOb,SAASC,GAAaD,GAC3B,IAAIE,EAAUziB,OAAOuR,MAAM/B,KACvBI,EAAiB5P,OAAOuR,MAAM3B,eAC9BC,EAAmB7P,OAAOuR,MAAM1B,iBACpC,GAAK6S,GAAsBH,EAAS3S,GAApC,CAQA,GAJA+S,GAAiBF,EAAS5S,GAE1B7P,OAAOuR,MAAM/B,KAAO+S,EAEhBE,GAAWA,EAAQ5L,OAAS4L,EAAQ9N,SACtC+C,EAAI0E,iBAAiBqG,GACCvH,EAAKrJ,cAAc4Q,GAC3B3Q,SAAU,EACxB2Q,EAAQ9N,SAAW,KAGrB,IAAMiO,EAAgB1H,EAAKrJ,cAAc0Q,GACzCK,EAAc9Q,SAAU,EACxByQ,EAAQ7M,SAAW9F,EAAe8E,eAClCkO,EAAclN,SAAW6M,EAAQ7M,SACjCkN,EAAcliB,SAASgO,IAAIjS,EAAEuC,kBAAmBvC,EAAEwC,oBAElD,IAAIqe,EAAI1N,EAAezE,OAAUoX,EAAQ5M,YAAc,EACvD4M,EAAQpmB,EAAIyT,EAAezT,EAAKmhB,EAAI9hB,KAAKqB,IAAI0lB,EAAQ7M,UACrD6M,EAAQnmB,EAAIwT,EAAexT,EAAKkhB,EAAI9hB,KAAKoB,IAAI2lB,EAAQ7M,UACrD1V,OAAOuR,MAAM1B,iBAAmBD,EAChC8H,EAAIoE,wBAxBF1H,QAAQC,KAAK,qCAAqCkO,EAAQ,WAAW3S,GA8BlE,SAAS8S,GAAsBlT,EAAMnT,GAC1C,IAAIqT,EAAQrT,EAAOqT,MAAMmT,QAAO,SAACvI,GAAD,OAAOA,IAAM9K,KACzCsT,EAAcpT,EAAMqD,OAAS1W,EAAOqT,MAAMqD,OAE9C,OADA1W,EAAOqT,MAAQA,EACRoT,EAGF,SAASH,GAAiBnT,EAAMnT,GAGjCmT,EAAKqH,OAASrH,EAAKxE,SAAW,GAChC3O,EAAOqT,MAAMjR,KAAK+Q,GAOf,SAASuT,GAAW1mB,GAAS,IAAD,iBACZA,EAAOoY,WADK,IACjC,2BAAuC,CACrC,GADqC,QACxB9L,OAASlM,EAAEoK,sBACtB,OAAO,GAHsB,8BAMjC,OAAO,EAGF,SAASmc,GAAWC,GACzB,IAAI5mB,EAAS2D,OAAOuR,MAAM3B,eACtB/D,EAAQmE,KAAOC,UAAUgT,GAC7BpX,EAAMuK,GAAKpW,OAAOuR,MAAMrB,SACxB7T,EAAOwP,MAAMpN,KAAKoN,GAGb,SAASqX,GAAa1T,GAC3B,MAAO,CAAC9J,SAAU8J,EAAKxE,SAAWwE,EAAKzE,MAAQpF,KAAK,EAAGC,QAAQ,GAG1D,SAASud,GAAW9mB,EAAQmT,GACjC,IAAI3G,EAAOqa,GAAa1T,GACpB4T,EAAW5T,EAAKxE,SAAWwE,EAAKzE,MACpC,IAAKmQ,EAAKrC,UAAUxc,EAAQmT,EAAM3G,GAAO,CACvC,IAAIwa,EAAiBhnB,EAAOsP,UAAU4I,OAAO7O,SAAW8J,EAAK7D,UAAUjG,SACvEmD,EAAKnD,SAAW2d,EAChBD,EAAWC,EAEbnI,EAAKpC,gBAAgBzc,EAAQmT,EAAM3G,GACnC2G,EAAKzE,OAASqY,EAGT,SAASE,GAAS9T,EAAM+T,GACzBA,EAAS5a,OAASlM,EAAE4K,kBAElBmI,EAAKzE,QAAUyE,EAAKxE,WACtBwE,EAAKzE,OAASwY,EAASja,UAEzBkG,EAAKxE,UAAYuY,EAASja,UACjBia,EAAS5a,OAASlM,EAAEiL,qBAC7B8H,EAAK9D,cAAgB6X,EAASpa,eAI3B,SAASoV,GAA2B/O,GACzC,IAAK,IAAIoD,EAAE,EAAGA,EAAGpD,EAAK3D,MAAMkH,OAAQH,IAClC,GAAIpD,EAAK3D,MAAM+G,GAAGjK,OAASlM,EAAE0K,4BAE3B,YADAqI,EAAKkH,6BAA+B9D,GAKxCpD,EAAKkH,8BAAgC,EAGhC,SAAS8M,GAA0BhU,EAAMnT,EAAQonB,GAEtDjU,EAAK3D,MAAMpN,KAAKglB,GAChBH,GAAS9T,EAAMiU,GAEfzT,KAAO0T,OAAOrnB,EAAOwP,OAAO,SAACiP,GAAD,OAAOA,EAAE1E,KAAOqN,EAAYrN,MACxDmI,GAA2B/O,GAGtB,SAASmU,GAA0BnU,EAAMnT,EAAQonB,GAGtD,GADApnB,EAAOwP,MAAMpN,KAAKglB,GACdA,EAAY9a,OAASlM,EAAE4K,iBACzBmI,EAAKxE,UAAYyY,EAAYna,SACzBkG,EAAKzE,MAAQyE,EAAKxE,WACpBwE,EAAKzE,MAAQyE,EAAKxE,eAEf,GAAIyY,EAAY9a,OAASlM,EAAEiL,mBAAoB,CACpD8H,EAAK9D,cAAgB+X,EAAYta,cACjC,IAAIya,EAAgBpU,EAAK7D,UAAUjG,SAAW8J,EAAK7D,UAAUhG,KAAO6J,EAAK7D,UAAU/F,QACnF,GAAIge,EAAgBpU,EAAK9D,aAAc,CACrC,IAAImY,EAAQC,KAAKC,eAAevU,EAAM,WAAaoU,EAAgBpU,EAAK9D,cACpEmY,EAAQ,IACVA,EAAQC,KAAKC,eAAevU,EAAM,OAAQqU,IAExCA,EAAQ,IACVA,EAAQC,KAAKC,eAAevU,EAAM,UAAWqU,IAE3CA,EAAQ,GACVzP,QAAQC,KAAK,sDAAsDwP,IAKzE7T,KAAO0T,OAAOlU,EAAK3D,OAAO,SAACiP,GAAD,OAAOA,EAAE1E,KAAOqN,EAAYrN,MACtDmI,GAA2B/O,GAOtB,SAASuU,GAAevU,EAAM+I,EAAclb,GAEjD,GADAmS,EAAK7D,UAAU4M,IAAiBlb,EAC5BmS,EAAK7D,UAAU4M,GAAgB,EAAG,CACpC,IAAIsL,EAAQroB,KAAKwhB,IAAIxN,EAAK7D,UAAU4M,IAEpC,OADA/I,EAAK7D,UAAU4M,GAAgB,EACxBsL,EAET,OAAO,EAMF,SAASG,GAASxU,EAAM3D,GAC7B,SAAK2D,GAASA,EAAK3D,OAAUA,OAIzB2D,EAAK3D,MAAMkH,QAAUvD,EAAK5D,aAI1B,CAAC3E,GAAkBC,GAA2BE,IAAqB6c,SAASpY,EAAMlD,QAChF6G,EAAK3D,MAAMqY,MAAK,SAACC,GAAD,OAAQA,EAAGxb,OAASkD,EAAMlD,UClZ3C,SAASqT,KACd,IAD2B,EACvBxM,EAAOxP,OAAOuR,MAAM/B,KADG,eAETxP,OAAOuR,MAAMpB,OAAOU,OAAOnB,OAFlB,IAE3B,2BAAoD,CAAC,IAA5CoE,EAA2C,QAClD,GAAKA,EAAM+C,OAASrH,IAASsE,EAA7B,CAGA,IAAIsQ,GAAW,EAoBf,GAnBItQ,EAAM3H,SAAW1P,EAAEsL,gBACrBsc,GAASvQ,GACAA,EAAM3H,SAAW1P,EAAEuL,iBAC5Boc,EAAWE,GAAUxQ,GAAO,GACnBA,EAAM3H,SAAW1P,EAAEyL,kBAC5Bkc,EAAWE,GAAUxQ,GAAO,GACnBA,EAAM3H,SAAW1P,EAAE2L,gBAC5Bgc,EAAWG,GAAezQ,GACjBA,EAAM3H,SAAW1P,EAAE4L,iBAC5B+b,EAAWI,GAAU1Q,GACZA,EAAM3H,SAAW1P,EAAEwL,qBAC5Bwc,GAAa3Q,GAEXsQ,IACFzF,GAA4B7K,GAC5B8K,GAA0B9K,IAIvBtE,EAAKrT,EAAIM,EAAEuC,kBAAoB8U,EAAM3I,QAAU2I,EAAM3X,GACvDqT,EAAKrT,EAAIM,EAAEuC,kBAAoB8U,EAAM3I,QAAU2I,EAAM3X,GACrDqT,EAAKpT,EAAIK,EAAEwC,mBAAqB6U,EAAM3I,QAAU2I,EAAM1X,GACtDoT,EAAKpT,EAAIK,EAAEwC,mBAAqB6U,EAAM3I,QAAU2I,EAAM1X,GAEvD,GAAI0X,EAAM+C,MAAO,CAEf,IAAM6N,EAAc7S,GAAciC,GAClC4Q,EAAY5S,SAAU,EACtB4S,EAAYhP,SAAW5B,EAAM4B,SAC7BgP,EAAYvoB,EAAK2X,EAAM3X,EAAIqT,EAAKrT,EAAKM,EAAEuC,kBACvC0lB,EAAYtoB,EAAK0X,EAAM1X,EAAIoT,EAAKpT,EAAKK,EAAEwC,yBAIzC,GAAI6U,EAAMa,SACY9C,GAAciC,GACtBhC,SAAU,EACtBgC,EAAMa,SAAW,OA5CI,+BA0DtB,SAASgQ,GAAQC,EAASzoB,EAAGC,EAAG8N,GACrC0a,EAAQlP,SAAW5C,EAAMhX,gBAAgBN,KAAKgB,MAAMJ,EAAIwoB,EAAQxoB,EAAGD,EAAIyoB,EAAQzoB,IAC/Eub,EAAIgD,kBAAkBkK,EAAS1a,GAG1B,SAASma,GAASvQ,GACvB,IAAItE,EAAOxP,OAAOuR,MAAM/B,KACnBA,EAAKqH,OAGN/D,EAAM3X,gBAAgB2Y,EAAM3X,EAAG2X,EAAM1X,EAAGoT,EAAKrT,EAAGqT,EAAKpT,GAAKsb,EAAI2I,mBAAmBvM,IACnF6Q,GAAQ7Q,EAAOtE,EAAKrT,EAAGqT,EAAKpT,EAAG,IAI5B,SAASqoB,GAAa3Q,GAC3B,IAAItE,EAAOxP,OAAOuR,MAAM/B,KACxB,GAAKA,EAAKqH,MAAV,CAGA,IAAMgO,EAAmB/R,EAAM3X,gBAAgB2Y,EAAM3X,EAAG2X,EAAM1X,EAAGoT,EAAKrT,EAAGqT,EAAKpT,GAC1EyoB,EAAmBnN,EAAI2I,mBAAmBvM,IAC5C6Q,GAAQ7Q,EAAOtE,EAAKrT,EAAGqT,EAAKpT,EAAG,IAE7ByoB,EAAkC,EAAfpoB,EAAEqE,cACvB4W,EAAIiD,oBAAoB7G,GAEtBA,EAAM/I,MAAQ+I,EAAM9I,UACtB8Z,GAAqBhR,IAIlB,SAASyQ,GAAeQ,GAAS,IAAD,EACdC,GAAsBD,EAAO5oB,EAAG4oB,EAAO3oB,GAAvDmlB,EAD8B,EAC9BA,OAAQ7N,EADsB,EACtBA,KAIf,OAHI6N,GAAW7N,GAAQgE,EAAI2I,mBAAmB0E,IAC5CJ,GAAQI,EAAQxD,EAAOplB,EAAGolB,EAAOnlB,EAAG,MAE/B,EAMF,SAASooB,GAAUS,GAAU,IAAD,EACVA,EAAQxO,QAAUha,EAAE8I,OACvCyf,GAAsBC,EAAQ9oB,EAAG8oB,EAAQ7oB,GACzC8oB,GAAuBD,EAAQ9oB,EAAG8oB,EAAQ7oB,GAFvCmlB,EAD0B,EAC1BA,OAAQ7N,EADkB,EAClBA,KAIf,GAAI6N,GAAU7N,EAAOjX,EAAEqE,aAAc,CACnC,IAAIqkB,EAAcrS,EAAM/V,YAAYkoB,EAAQ9oB,EAAG8oB,EAAQ7oB,EAAGmlB,EAAOplB,EAAGolB,EAAOnlB,GADxC,EAEhB0W,EAAM1V,cAAc+nB,EAAaF,EAAQzZ,YAAvDlO,EAF8B,EAE9BA,KAAMC,EAFwB,EAExBA,KAKX,OAJA0nB,EAAQtO,IAAMrZ,EACd2nB,EAAQrO,IAAMrZ,EACd0nB,EAAQ9oB,GAAK8oB,EAAQtO,GACrBsO,EAAQ7oB,GAAK6oB,EAAQrO,IACd,EAGT,OAAO,EAOF,SAAS0N,GAAUxQ,GAA+B,IAAxBsR,EAAuB,wDAClD5V,EAAOxP,OAAOuR,MAAM/B,KACxB,GAAKA,EAAKqH,MAAV,CAGA,IAAM3K,EAAY4H,EAAM5H,WAAazP,EAAEqE,aACnCukB,GAAQ,EAN0C,EAOLH,GAAuBpR,EAAM3X,EAAG2X,EAAM1X,GAAzEkpB,EAPwC,EAO/C/D,OAA0BgE,EAPqB,EAO1B7R,KAC5B,GAAK4R,EAAL,CAGA,GAAIC,EAAerZ,EAAW,CAC5B,IAD4B,EACxBiZ,EAAcrS,EAAM/V,YAAY+W,EAAM3X,EAAG2X,EAAM1X,EAAGkpB,EAAanpB,EAAGmpB,EAAalpB,GADvD,EAET0W,EAAM1V,cAAc+nB,EAAa,GAAKrR,EAAMtI,YAA1DlO,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,KAFiB,eAITyC,OAAOuR,MAAMpB,OAAOU,OAAOlB,SAJlB,IAI5B,2BAAuD,CAAC,IAA/CtT,EAA8C,QACrD,GAAIyW,EAAM3X,gBAAgB2Y,EAAM3X,EAAImB,EAAMwW,EAAM1X,EAAImB,EAAMlB,EAAOF,EAAGE,EAAOD,GAAMC,EAAO8O,OAAS2I,EAAM3I,OAAS,GAAK,CACnH,IAAMqa,EAAc1S,EAAM/V,YAAY+W,EAAM3X,EAAG2X,EAAM1X,EAAGC,EAAOF,EAAGE,EAAOD,GACrE2gB,EAAUyI,EAAcL,EACxBM,EAAa1I,GAAW,GAAM,EAAI,EAClCvhB,KAAKwhB,IAAID,GAAWvhB,KAAKS,KAC3BwpB,IAAyB,GAE3B,IAAMC,EAAUF,EAAeC,EAAYjqB,KAAKS,GAAK,EAP8D,EAQnG6W,EAAM1V,cAAcsoB,EAAS,GAAK5R,EAAMtI,YAAtDlO,EARiH,EAQjHA,KAAMC,EAR2G,EAQ3GA,OAbgB,+BAiBvB6nB,GAAmBG,EAAgB/V,EAAKmG,YAAc7B,EAAM3I,OAAS,KACxE7N,EAAO,EACPC,EAAO,GAnBmB,MAsBmBynB,GAAsBlR,EAAM3X,EAAImB,EAAMwW,EAAM1X,EAAImB,EAAMuW,EAAMsC,IAA5FuP,EAtBa,EAsBrBpE,OAA2BqE,EAtBN,EAsBAlS,KACxBiS,GAAgBC,EAAa9R,EAAM3I,OAASwa,EAAYxa,OAAS,KACnE7N,EAAO,EACPC,EAAO,GAELuW,EAAM/I,MAAQ+I,EAAM9I,UACtB8Z,GAAqBhR,GAEvBA,EAAM3X,GAAKmB,EACXwW,EAAM1X,GAAKmB,EACXuW,EAAM4B,SAAWyP,EACjBE,GAAQ,EAKV,OAHIE,EAAe7N,EAAI2I,mBAAmBvM,IACxC6Q,GAAQ7Q,EAAOtE,EAAKrT,EAAGqT,EAAKpT,EAAG,KAE1BipB,IAQF,SAASL,GAAsB7oB,EAAGC,GAAqB,IAAD,EAAjBypB,EAAiB,uDAAR,OAC/CtE,EAAS,KACT1S,EAAU,KAF6C,eAGzC7O,OAAOuR,MAAMpB,OAAOU,OAAOnB,OAHc,IAG3D,2BAAoD,CAAC,IAA5CoE,EAA2C,QAClD,GAAIA,EAAM+C,OAAS/C,EAAM2C,QAAUha,EAAE+I,OAASsO,EAAMsC,KAAOyP,EAAQ,CACjE,IAAInS,EAAOZ,EAAM3X,gBAAgBgB,EAAGC,EAAG0X,EAAM3X,EAAG2X,EAAM1X,KACjDmlB,GAAW7N,EAAO7E,KACrB0S,EAASzN,EACTjF,EAAU6E,KAR2C,8BAY3D,MAAO,CAAC6N,OAAQA,EAAQ7N,KAAM7E,GAOzB,SAASqW,GAAuB/oB,EAAGC,GACxC,IAD2C,EACrCoT,EAAOxP,OAAOuR,MAAM/B,KACtB+R,EAAS/R,EACTX,EAAUiE,EAAM3X,gBAAgBgB,EAAGC,EAAGoT,EAAKrT,EAAGqT,EAAKpT,GAHZ,eAI1B4D,OAAOuR,MAAMpB,OAAOU,OAAOnB,OAJD,IAI3C,2BAAmD,CAAC,IAA3CF,EAA0C,QACjD,GAAIA,EAAKqH,OAASrH,EAAKiH,QAAUha,EAAE8I,OAAQ,CACzC,IAAImO,EAAOZ,EAAM3X,gBAAgBgB,EAAGC,EAAGoT,EAAKrT,EAAGqT,EAAKpT,KAC/CmlB,GAAW7N,EAAO7E,KACrB0S,EAAS/R,EACTX,EAAU6E,KAT2B,8BAa3C,MAAO,CAAC6N,OAAQA,EAAQ7N,KAAM7E,GAIzB,SAAS8P,GAA4B7K,GAAQ,IAAD,iBAC9B9T,OAAOuR,MAAMpB,OAAOU,OAAOlB,SADG,IACjD,2BAAuD,CAAC,IAA/CtT,EAA8C,QAC1CyW,EAAM3X,gBAAgB2Y,EAAM3X,EAAG2X,EAAM1X,EAAGC,EAAOF,EAAGE,EAAOD,IACvD0X,EAAM3I,OAAS9O,EAAO8O,QACjCuM,EAAIgG,YAAY5J,EAAO,OAJsB,+BAS5C,SAAS8K,GAA0BpP,GAAO,IAAD,iBACxBxP,OAAOuR,MAAMpB,OAAOU,OAAOnB,OADH,IAC9C,2BAAwD,CAAC,IAAhDoW,EAA+C,QACtD,GAAIA,EAAUjP,OAASrH,IAASsW,EACnBhT,EAAM3X,gBAAgBqU,EAAKrT,EAAGqT,EAAKpT,EAAG0pB,EAAU3pB,EAAG2pB,EAAU1pB,IAC3DoT,EAAKrE,OAAS2a,EAAU3a,QACnCuM,EAAI4D,aAAa9L,EAAMsW,IALiB,+BAWzC,SAAShB,GAAqBtV,GACnC,IAAMuW,EAAcC,GAAUxW,IACzBuW,GAAeA,EAAYjc,KAAO,IAGvC4N,EAAImH,aAAarP,EAAMuW,EAAYlb,QACnCkb,EAAYjc,KAAOic,EAAYlc,UAG1B,SAASmc,GAAUxW,GACxB,IAAK,IAAIoD,EAAI,EAAGA,EAAIpD,EAAK3D,MAAMkH,OAAQH,IAAK,CAC1C,IAAM/G,EAAQ2D,EAAK3D,MAAM+G,GACzB,GAAK/G,EAAMlD,OAASlM,EAAE0K,6BAAgC0E,EAAMhB,OAC1D,OAAOgB,EAGX,OAAO,KCnPF,SAASoa,GAAiB7mB,EAAK8mB,GACnBC,aAAaC,QAAQhnB,IAEpC+mB,aAAaE,WAAWjnB,GAE1B+mB,aAAaG,QAAQlnB,EAAKmnB,KAAKC,UAAUN,IAOpC,SAASO,GAAiBrnB,GAC/B,GAAKA,EAAL,CAIA,IAAMsnB,EAAYP,aAAaC,QAAQhnB,GAEvC,OAAKsnB,EAGEH,KAAKI,MAAMD,GAFT,KANPtS,QAAQC,KAAK,6CAWjB,SAASuS,GAAUjnB,GACjB,IAAIknB,EAAKlnB,EAAM4hB,OAAOuF,OAClBnnB,EAAMonB,YAAc,GACtBF,EAAGG,kBApCa,SAsClBH,EAAGI,kBAtCe,QAsCgB,CAACC,QAAS,iBAOvC,SAASC,GAAU/nB,GACxB,IAAIgoB,EAAYC,UAAUC,KA7CZ,aACG,GA6CjBF,EAAUG,QAAU,SAAU5nB,GAC5ByU,QAAQoF,IAAI,SAAU7Z,IAExBynB,EAAUI,gBAAkBZ,GAC5BQ,EAAUK,UAAY,SAAU9nB,GAC9B,IAGI+nB,EAHK/nB,EAAM4hB,OAAOuF,OACDa,YAAY,CArDjB,UAsDcC,YAtDd,SAuDU1U,IAAI9T,GAC9BsoB,EAAQH,QAAU,SAAU5nB,GAC1ByU,QAAQoF,IAAI,yBAA0B7Z,IAExC+nB,EAAQD,UAAY,SAAU9nB,GAC5B,IAAMkoB,EAAWH,EAAQZ,OACnBgB,EAAY9nB,OAAOuR,MAAMpB,OAC/BnQ,OAAOuR,MAAQsW,EACf7nB,OAAOuR,MAAMpB,OAAS2X,EAGtB9nB,OAAOuR,MAAMpB,OAAOc,iBAAiBtB,QAAQoY,iBAC7C/nB,OAAOuR,MAAMpB,OAAOW,kBAAoB,GACxC9Q,OAAOuR,MAAMpB,OAAOY,gBAAkB,GACtC/Q,OAAOuR,MAAMpB,OAAOc,iBAAiBvB,MAAMqY,iBAG3C/nB,OAAOuR,MAAM/B,KAAKmF,SAAW,KACVuG,EAAKrJ,cAAc7R,OAAOuR,MAAM/B,MACxCsC,SAAU,EACrB4F,EAAIoE,mBACJhJ,EAAM1S,UAAU,iBAMf,SAAS4nB,GAAU5oB,GACxB,IAAM6oB,EAAejY,KAAOC,UAAUD,KAAOkY,KAAKloB,OAAOuR,MAAO,CAAC,YACjE0W,EAAa1Y,aAAenQ,EAE5B,IAAIgoB,EAAYC,UAAUC,KArFZ,aACG,GAqFjBF,EAAUG,QAAU,SAAU5nB,GAC5ByU,QAAQoF,IAAI,oBAAqB7Z,IAEnCynB,EAAUI,gBAAkBZ,GAC5BQ,EAAUK,UAAY,SAAU9nB,GAC9B,IAGIwoB,EAHKxoB,EAAM4hB,OAAOuF,OACDa,YAAY,CA7FjB,SA6FgC,aAClBC,YA9Fd,SA+FqBQ,IAAIH,GACzCE,EAAmBV,UAAY,SAAU9nB,GACvCmT,EAAM1S,UAAU,eAElB+nB,EAAmBZ,QAAU,SAAU5nB,GACrCyU,QAAQoF,IAAI,kBAAmB7Z,EAAM4hB,UAKpC,SAAS8G,GAAYjpB,GAC1B,IAAIgoB,EAAYC,UAAUC,KAzGZ,aACG,GAyGjBF,EAAUG,QAAU,SAAU5nB,GAC5ByU,QAAQoF,IAAI,oBAAqB7Z,IAEnCynB,EAAUI,gBAAkBZ,GAC5BQ,EAAUK,UAAY,SAAU9nB,GAC9B,IAGIwoB,EAHKxoB,EAAM4hB,OAAOuF,OACDa,YAAY,CAjHjB,SAiHgC,aAClBC,YAlHd,SAmHqBU,OAAOlpB,GAC5C+oB,EAAmBV,UAAY,SAAU9nB,GACvCmT,EAAM1S,UAAU,gBAAkBhB,IAEpC+oB,EAAmBZ,QAAU,SAAU5nB,GACrCyU,QAAQoF,IAAI,oBAAqB7Z,EAAM4hB,U,sBCtHhCgH,GACH,oBADGA,GAEN,kBAFMA,GAGJ,oBAGF,SAASC,GAAT,GAAqC,IAAnB7f,EAAkB,EAAlBA,KAAM8f,EAAY,EAAZA,KAAM5qB,EAAM,EAANA,IACnC,GAAI8K,IAAS4f,IACX5f,IAAS4f,IACT5f,IAAS4f,GAET,OADAnU,QAAQC,KAAK,wBAAwB1L,GAC9B,+BAGT,IACM+f,EAAU,IAlBC,KAiBLD,EAAO5qB,GAIf8qB,EAAc,WAAWhgB,IAAS4f,GAAcA,GAAcA,IAOlE,OAJI5f,IAAS4f,IAAkBG,EAAU,KACvCC,EAAc,4BAId,0BAAMC,UAAU,oBAAoBC,MAAO,CAAChoB,MAAMioB,OAAiBjT,OAAOkT,UACxE,0BAAMH,UAAU,gBACd,yBAAKI,IAAI,0BAA0BnoB,MAAOioB,OAAgBjT,OAAQkT,QAAiBE,IAAI,UAEzF,0BAAML,UAAU,iBACd,yBAAKI,IAAKL,EAAa9nB,MAAOioB,OAAgBjT,OAAQkT,QAAiBE,IAAI,OAAOJ,MAAO,CACvFK,SAAU,SAASR,EAAQ,wB,MChC9B,SAASS,GAAT,GAA2C,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,SAC9BC,EAAUF,EAAW,4BAA8B,6BACzD,OACE,yBAAKJ,IAAKM,EAASzoB,MAAOioB,OAAkBjT,OAAQkT,OAAmBE,IAAI,SAASM,QAAS,WAC3FF,O,UCDAG,GACG,wBADHA,GAEC,sBAFDA,GAGI,yBAHJA,GAIG,wBAuBF,SAASC,GAAT,GAAoC,IAAD,EApB1C,SAAmBhB,EAAM5qB,GACvB,OAAKA,GAAOA,GAAO,EACV,CAAC6rB,UAAW,EAAGf,YAAa,UAAYa,IAE7Cf,GAAQ5qB,EACH,CAAC6rB,UAAW,EAAGf,YAAa,UAAYa,IAG7Cf,EAAO5qB,EAlBM,GAqBR,CAAC6rB,UAvBM,IAGH,EAmBgC,IAD/BjB,GAnBG,GAmBK5qB,KAED8qB,YAAa,UAAYa,IAKvC,CAACE,UA5BQ,IAGH,EAwB8B,KAD9BjB,EAxBI,GAwBI5qB,IAAsBA,GAAO,EAxBjC,OA0BE8qB,YAAa,UAAYa,IAMXG,CAFO,EAAZlB,KAAY,EAAN5qB,KAE3B6rB,EAFiC,EAEjCA,UAAWf,EAFsB,EAEtBA,YAElB,OACE,0BAAMC,UAAU,yBAAyBC,MAAO,CAAChoB,MAAOioB,OAAkBjT,OAAQkT,SAChF,0BAAMH,UAAU,qBACd,yBAAKI,IAAK,UAAYQ,GAAc3oB,MAAOioB,OAAkBjT,OAAQkT,OAAmBE,IAAI,YAE9F,0BAAML,UAAU,sBACd,yBAAKI,IAAKL,EAAa9nB,MAAOioB,OAAkBjT,OAAQkT,OAAmBE,IAAI,OAAOJ,MAAO,CAC3FK,SAAU,aAAeQ,EAAY,mBCxCxC,SAASE,KACd,IAAMpa,EAAOxP,OAAOuR,MAAM/B,KACpB3E,EAAS6M,EAAIkF,kBAAkBpN,GAErC,OACE,yBAAKoZ,UAAU,UACVC,MAAO,CAACgB,gBAAiB,oCAAqCC,eAAgB,QAASjU,OAAQ,SAClG,6BAAMrG,EAAK/G,MAEX,+BACE,+BACA,4BACE,wBAAIogB,MAAO,CAACkB,aAAc,SAA1B,SACA,wCAGF,+BACA,4BACE,wBAAIlB,MAAO,CAACmB,UAAW,WACrB,kBAAC,GAAD,CAASrhB,KAAM4f,GAAeE,KAAMjZ,EAAKzE,MAAOlN,IAAK2R,EAAKxE,YAE5D,4BACGH,GAAUA,EAAOA,OAAOC,QACzB,8BACI,kBAAC,GAAD,CAASnC,KAAM4f,GAAaE,KAAM5d,EAAOA,OAAOZ,SAAUpM,IAAKgN,EAAOA,OAAOI,cAC7E,kBAAC,GAAD,CAAStC,KAAM4f,GAAeE,KAAM5d,EAAOA,OAAOE,MAAOlN,IAAKgN,EAAOA,OAAOG,cAKpF,4BACE,4BACGxP,KAAKsC,MAAM0R,EAAKzE,OADnB,MAC8ByE,EAAKxE,UAEnC,6BACA,gCAKJ,yBAAK4d,UAAU,WAAf,cAAqCpZ,EAAK5D,SAA1C,IACE,+BACE,+BACC4D,EAAK3D,MAAMoe,KAAI,SAACpe,EAAO+G,GACtB,OAAO,wBAAIxT,IAAKwT,EAAGgW,UAAU,SAC3B,4BACG/c,EAAMlD,OAASlM,EAAE0K,6BAClB,kBAAC,GAAD,CAAYiiB,SAAUxW,IAAMpD,EAAKkH,6BAA8B2S,SAAU,WACvE7Z,EAAKkH,6BAA+B9D,MAGxC,4BACE,kBAAC,GAAD,CAAc6V,KAAM5c,EAAMhC,SAAWgC,EAAM/B,KAAMjM,IAAKgO,EAAMhC,YAE9D,4BACGgC,EAAMpD,aAQjB,yBAAKmgB,UAAU,WACb,+BACE,+BACA,4BACE,wBAAIA,UAAU,wBACZ,yBAAKA,UAAU,yBACb,yBAAKI,IAAI,yBAAyBJ,UAAU,aAE9C,yBAAKA,UAAU,mBACb,2BAAOsB,YAAY,KACjB,+BACA,4BACE,wBAAIC,QAAQ,QAAZ,eAGF,+BACA,4BACE,wCACA,4BAAK3uB,KAAKsC,MAAM0R,EAAK7D,UAAUjG,YAEjC,4BACE,oCACA,4BAAKlK,KAAKsC,MAAM0R,EAAK7D,UAAUhG,QAEjC,4BACE,uCACA,4BAAKnK,KAAKsC,MAAM0R,EAAK7D,UAAU/F,oB,YC3F5C,SAASwkB,KAAgB,IAAD,EACSC,mBAAS,IADlB,oBACtBC,EADsB,KACTC,EADS,OAECF,mBAAS,IAFV,oBAEtBG,EAFsB,KAEbC,EAFa,OAGOJ,mBAAS,IAHhB,oBAGtBK,EAHsB,KAGVC,EAHU,KAKzBpZ,EAAQvR,OAAOuR,MACflV,EAAS2D,OAAOuR,MAAM3B,eACtBJ,EAAOxP,OAAOuR,MAAM/B,KACpBob,EAAiBvuB,IAAW2D,OAAOuR,MAAM1B,kBAAqBL,EAAKqH,MACvE,OACE,yBAAK+R,UAAU,eACb,yBAAKA,UAAU,WAAU,0CAAzB,IAA6CrX,EAAM3B,eAAenH,MAClE,yBAAKmgB,UAAU,gBACb,4BACEiC,UAAW3P,EAAKrC,UAAUxc,EAASuuB,EAAepb,EAAO,KAAO/S,EAAEmK,WAClE2iB,QAAS,kBAAMjU,EAAOqL,cAFxB,cADF,WAKWlkB,EAAEmK,UAAUlB,SALvB,MAKoCjJ,EAAEmK,UAAUjB,MAEhD,yBAAKijB,UAAU,gBACb,4BACEiC,UAAW3P,EAAKrC,UAAUxc,EAASuuB,EAAepb,EAAO,KAAO/S,EAAEqK,cAClEyiB,QAAS,kBAAMjU,EAAO6M,iBAFxB,iBADF,WAKW1lB,EAAEqK,aAAapB,SAL1B,MAKuCjJ,EAAEqK,aAAanB,KALtD,MAK+DlJ,EAAEqK,aAAalB,SAG9E,yBAAKgjB,UAAU,WACb,wCADF,SAC0B,4BAAQW,QAAS,kBAAMjU,EAAOyM,aAAavS,EAAMnT,KAAjD,aAE1B,yCAAeb,KAAKsC,MAAMzB,EAAOsP,UAAU6I,IAAI9O,WAC/C,qCAAWlK,KAAKsC,MAAMzB,EAAOsP,UAAU6I,IAAI7O,OAC3C,wCAAcnK,KAAKsC,MAAMzB,EAAOsP,UAAU6I,IAAI5O,UAE7CglB,GAAgB,+BACf,+BACA,4BACE,wCACA,sCACA,wCACA,qCAAWpb,EAAK9D,aAAhB,OAGF,+BACA,4BACE,wCACA,4BAAKlQ,KAAKsC,MAAMzB,EAAOsP,UAAU4I,OAAO7O,WACxC,4BACI,0BAAMkjB,UAAU,kBACVW,QAAS,kBAAMjU,EAAO+L,iBAAiB7R,EAAK7D,UAAWtP,EAAOsP,UAAU4I,OACtE,WAAY+V,EAAa7tB,EAAEsJ,uBAAsB,uBAAG6iB,UAAU,oBAAb,MAC3D,2BAAOjgB,KAAK,OAAOigB,UAAU,iBACtBkC,aAAcR,EACdjB,SAAU,SAAC1pB,GAAD,OAAW4qB,EAAe5qB,EAAM4hB,OAAOpiB,UACxD,0BAAMypB,UAAU,kBACVW,QAAS,kBAAMjU,EAAO+L,iBAAiBhlB,EAAOsP,UAAU4I,OAAQ/E,EAAK7D,UACnE,WAAY2e,EAAa9a,EAAK9D,gBAAe,uBAAGkd,UAAU,qBAAb,OAEvD,4BAAKptB,KAAKsC,MAAM0R,EAAK7D,UAAUjG,YAEjC,4BACE,oCACA,4BAAKlK,KAAKsC,MAAMzB,EAAOsP,UAAU4I,OAAO5O,OACxC,4BACI,0BAAMijB,UAAU,kBACVW,QAAS,kBAAMjU,EAAO+L,iBAAiB7R,EAAK7D,UAAWtP,EAAOsP,UAAU4I,OACtE,OAAQiW,EAAS/tB,EAAEsJ,uBAAsB,uBAAG6iB,UAAU,oBAAb,MACnD,2BAAOjgB,KAAK,OAAOigB,UAAU,iBACtBkC,aAAcN,EACdnB,SAAU,SAAC1pB,GAAD,OAAW8qB,EAAW9qB,EAAM4hB,OAAOpiB,UACpD,0BAAMypB,UAAU,kBACVW,QAAS,kBAAMjU,EAAO+L,iBAAiBhlB,EAAOsP,UAAU4I,OAAQ/E,EAAK7D,UACnE,OAAQ6e,EAAShb,EAAK9D,gBAAe,uBAAGkd,UAAU,qBAAb,OAE/C,4BAAKptB,KAAKsC,MAAM0R,EAAK7D,UAAUhG,QAEjC,4BACE,uCACA,4BAAKnK,KAAKsC,MAAMzB,EAAOsP,UAAU4I,OAAO3O,UACxC,4BACI,0BAAMgjB,UAAU,kBACVW,QAAS,kBAAMjU,EAAO+L,iBAAiB7R,EAAK7D,UAAWtP,EAAOsP,UAAU4I,OACtE,UAAWmW,EAAYjuB,EAAEsJ,uBAAsB,uBAAG6iB,UAAU,oBAAb,MACzD,2BAAOjgB,KAAK,OAAOigB,UAAU,iBACtBkC,aAAcJ,EACdrB,SAAU,SAAC1pB,GAAD,OAAWgrB,EAAchrB,EAAM4hB,OAAOpiB,UACvD,0BAAMypB,UAAU,kBACVW,QAAS,kBAAMjU,EAAO+L,iBAAiBhlB,EAAOsP,UAAU4I,OAAQ/E,EAAK7D,UACnE,UAAW+e,EAAYlb,EAAK9D,gBAAe,uBAAGkd,UAAU,qBAAb,OAErD,4BAAKptB,KAAKsC,MAAM0R,EAAK7D,UAAU/F,cAKjCglB,GACF,+BACE,+BACA,4BACE,wCACA,wCAGF,+BACA,4BACE,wCACA,4BAAKpvB,KAAKsC,MAAMzB,EAAOsP,UAAU4I,OAAO7O,YAE1C,4BACE,oCACA,4BAAKlK,KAAKsC,MAAMzB,EAAOsP,UAAU4I,OAAO5O,QAE1C,4BACE,uCACA,4BAAKnK,KAAKsC,MAAMzB,EAAOsP,UAAU4I,OAAO3O,c,kEClH3C,SAASmlB,GAAT,GAAoC,IAAZC,EAAW,EAAXA,SACvBzZ,EAAQvR,OAAOuR,MACflV,EAASkV,EAAM3B,eACfJ,EAAO+B,EAAM/B,KACfyb,EAAqBD,EAAStiB,UAAYjM,EAAEqL,SAC9CzL,EAAOqT,MAAMmT,QAAO,SAAAvI,GAAC,OAAGA,EAAE7R,OAASuiB,EAASviB,QAAMsK,OAClD1W,EAAOwP,MAAMgX,QAAO,SAAA/H,GAAC,OAAGA,EAAErS,OAASuiB,EAASviB,QAAMsK,OAepD,OAZIvD,EAAKqH,OAASmU,EAASviB,OAAS+G,EAAK/G,OACvCwiB,GAAqB,GAYrB,kBAACC,GAAA,EAAD,CAAKtC,UAAU,QACb,kBAACuC,GAAA,EAAD,CAAKC,GAAG,KACLH,GAEH,kBAACE,GAAA,EAAD,CAAKC,GAAG,KACR,4BAAQxC,UAAU,iBAChBiC,UAAWvV,EAAOyN,WAAW1mB,KAAY6e,EAAKrC,UAAUxc,EAAQmT,EAAMwb,EAASniB,MAC/E0gB,QAAS,WAhBf,IAAe8B,KAgBYL,GAfTtiB,UAAYjM,EAAEqL,SAC5BwN,EAAO+M,UAAUgJ,GACRA,EAAY3iB,UAAYjM,EAAEoL,WACnCyN,EAAO0N,WAAWqI,KAYiBL,EAASviB,OAE5C,kBAAC0iB,GAAA,EAAD,CAAKC,GAAG,KACN,0BAAMxC,UAAU,QAAQoC,EAASniB,KAAKnD,SAAtC,KAAkDslB,EAASniB,KAAKlD,KAAhE,KAAwEqlB,EAASniB,KAAKjD,QAAtF,OChCD,SAAS0lB,GAAT,GAA2C,IAAtB3iB,EAAqB,EAArBA,KAAM4iB,EAAe,EAAfA,aAChC,OACE,yBAAK3C,UAAU,wBAAwBC,MAAO,CAAC2C,UAAY/uB,EAAEsF,cAAgB,IAAM0pB,SAAS,UACzFF,EAAatB,KAAI,SAACe,EAAUpY,GAC3B,OAAO,kBAAC,GAAD,CAAexT,IAAKuJ,EAAKiK,EAAGoY,SAAUA,QCF9C,SAASU,KACd,IAAM7f,EAAQ7L,OAAOuR,MAAMzB,WAAWjE,MAEhC8f,EAAY9f,EAAMgX,QAAO,SAAC/H,GAAD,OAAOre,EAAEuR,eAAekW,MAAK,SAAA0H,GAAC,OAAIA,EAAEnjB,OAASqS,EAAErS,WACxEojB,EAAiBhgB,EAAMgX,QAAO,SAAC/H,GAAD,OAAOre,EAAEwR,sBAAsBiW,MAAK,SAAA4H,GAAC,OAAIA,EAAErjB,OAASqS,EAAErS,WACpFsjB,EAAmBlgB,EAAMgX,QAAO,SAAC/H,GAAD,OAAOre,EAAEyR,wBAAwBgW,MAAK,SAAA5J,GAAC,OAAIA,EAAE7R,OAASqS,EAAErS,WACxFujB,EAASngB,EAAMgX,QAAO,SAAC/H,GAAD,OAAOre,EAAE0R,aAAa+V,MAAK,SAAAnK,GAAC,OAAIA,EAAEtR,OAASqS,EAAErS,WAEzE,OACE,yBAAKmgB,UAAU,gBACb,kBAACqD,GAAA,EAAD,CAAMC,iBAAiB,QAAQ9V,GAAG,gBAChC,kBAAC+V,GAAA,EAAD,CAAKC,SAAS,QAAQ5rB,MAAM,SAC1B,kBAAC,GAAD,CAAYmI,KAAK,OAAO4iB,aAAcvrB,OAAOuR,MAAMzB,WAAWN,QAG/Dmc,GAAYA,EAAS5Y,OAAS,GAC/B,kBAACoZ,GAAA,EAAD,CAAKC,SAAS,WAAW5rB,MAAM,YAC7B,kBAAC,GAAD,CAAYmI,KAAK,QAAQ4iB,aAAcI,KAIxCE,GAAkBA,EAAe9Y,OAAS,GAC3C,kBAACoZ,GAAA,EAAD,CAAKC,SAAS,iBAAiB5rB,MAAM,mBACnC,kBAAC,GAAD,CAAYmI,KAAK,QAAQ4iB,aAAcM,KAIxCE,GAAoBA,EAAiBhZ,OAAS,GAC/C,kBAACoZ,GAAA,EAAD,CAAKC,SAAS,mBAAmB5rB,MAAM,qBACrC,kBAAC,GAAD,CAAYmI,KAAK,QAAQ4iB,aAAcQ,KAIxCC,GAAUA,EAAOjZ,OAAS,GAC3B,kBAACoZ,GAAA,EAAD,CAAKC,SAAS,SAAS5rB,MAAM,UAC3B,kBAAC,GAAD,CAAYmI,KAAK,QAAQ4iB,aAAcS,O,MCtC1C,SAASK,KAAiB,IAAD,EACUhC,qBADV,oBACvBiC,EADuB,KACTC,EADS,KAE1Bhb,EAAQvR,OAAOuR,MACflV,EAASkV,EAAM3B,eACf4c,EAAcjb,EAAM/B,KACpBob,EAAiBvuB,IAAW2D,OAAOuR,MAAM1B,kBAAqB2c,EAAY3V,OAYzEyV,GAAgB1B,GACnB2B,EAAgBC,GAGlB,IAAIC,EAAoB,GACxB,GAAIH,EAAc,CAAC,IAAD,iBACEA,EAAazgB,OADf,yBACPA,EADO,QAEd4gB,EAAkBhuB,KAChB,yBAAKmqB,UAAU,OAAOxpB,IAAKyM,EAAMuK,IAC9BvK,EAAMpD,KADT,QAEE,4BAAQ8gB,QAAS,kBAAMjU,EAAOqO,0BAA0B2I,EAAcjwB,EAAQwP,KAA9E,aAJN,2BAAuC,IADvB,+BAUlB,OACE,6BACE,yBAAK+c,UAAU,mBACb,yBAAKA,UAAU,SAAf,SACA,0BAAMA,UAAU,cACZgC,EAAe,CAAC4B,GAAe,IAAIE,OAAOrwB,EAAOqT,OAAOua,KAAI,SAACza,EAAMoD,GACnE,OAAO,yBAAKxT,IAAKwT,EACL2W,QAAS,kBAhC/B,SAAkB/Z,GAChB+c,EAAgB/c,GA+BmBmd,CAASnd,IACxBoZ,UAAS,eAAU0D,IAAiB9c,EAAO,gBAAkB,sBAAwBA,EAAK/G,UAG1G,0BAAMmgB,UAAU,gBACG,MAAhB0D,GACD,6BACE,yBAAK1D,UAAU,aACb,4BAAQW,QAAS,kBAnC3BjU,EAAOkN,aAAa8J,QACpBC,EAAgB,OAkCmC1B,SAAUyB,IAAiBE,GAApE,aAEF,yBAAK5D,UAAU,aAAY,mCAA3B,IAAwC0D,EAAa7jB,KAArD,IAA4D6jB,EAAalW,IACzE,yBAAKwS,UAAU,aACb,qCADF,eAC4BptB,KAAKsC,MAAgC,IAA1BwuB,EAAa9gB,YADpD,SAC6EhQ,KAAKsC,MAA+B,IAAzBwuB,EAAa7gB,YAErG,yBAAKmd,UAAU,aACb,sCADF,UACwBptB,KAAKsC,MAAMwuB,EAAaxgB,YADhD,UACoEtQ,KAAKsC,MAAgC,GAA1BwuB,EAAavgB,aAE5F,yBAAK6c,UAAU,aAAY,oCAA3B,QACGptB,KAAKsC,MAAMwuB,EAAavhB,OAD3B,OACuCvP,KAAKsC,MAAMwuB,EAAathB,UAD/D,OAEE,4BAAQue,QAAS,kBAAMjU,EAAO6N,WAAW9mB,EAAQiwB,IACzCzB,SAAUyB,EAAathB,UAAYshB,EAAavhB,OADxD,WAFF,aAKevP,KAAKsC,MAAMwuB,EAAathB,SAAWshB,EAAavhB,OAL/D,aAOA,yBAAK6d,UAAU,aAAY,4CAAqBptB,KAAKsC,MAAMwuB,EAAa5gB,eACxE,yBAAKkd,UAAU,aAAY,oCAA3B,SAA8C0D,EAAa1gB,SAA3D,IACG6gB,MAOT,yBAAK7D,UAAU,mBACb,yBAAKA,UAAU,SAAf,aACA,0BAAMA,UAAU,cACbvsB,EAAOwP,MAAMoe,KAAI,SAACpe,EAAO+G,GACxB,OAAO,yBAAKxT,IAAKwT,EAAGgW,UAAU,QAC3B/c,EAAMpD,KADF,QAEL,4BAAQ8gB,QAAS,kBAAMjU,EAAOkO,0BAA0B8I,EAAcjwB,EAAQwP,IACtEgf,UAAWvV,EAAO0O,SAASsI,EAAczgB,IADjD,gB,MC5EP,SAAS+gB,KACd,IAAMrb,EAAQvR,OAAOuR,MACfsb,EAAYC,mBACdC,EAAYC,EAASvG,iBAAiBhqB,EAAEoF,6BAE5C,SAASorB,EAAeC,GACtBL,EAAUM,QAAQhuB,MAAQ+tB,EAC1B3b,EAAMhC,aAAe2d,EACrB9Y,QAAQoF,IAAI,YAAc0T,GAM5B,SAASE,EAAYC,GACfA,IAAgBN,EAAU9I,SAASoJ,IACrCN,EAAUtuB,KAAK4uB,GAEjBL,EAAS/G,iBAAiBxpB,EAAEoF,4BAA6BkrB,GA0C3D,OAtCKA,IACHA,EAAY,GACZK,EAAY,OAqCZ,6BACE,yBAAKxE,UAAU,kBACb,yBAAKA,UAAU,WAAU,4CACzB,2BAAOjgB,KAAK,OAAOmiB,aAAcvZ,EAAMhC,aAAc+d,QAAS,kBAAM/b,EAAMpB,OAAOI,UAAW,GACrFgd,OAAQ,kBAAMhc,EAAMpB,OAAOI,UAAW,GAAOid,IAAKX,IACzD,4BAAQpkB,KAAK,OAAO8gB,QAAS,kBAvCnC,WACE,IAAMha,EAAesd,EAAUM,QAAQhuB,MAClCoQ,GAKLyd,EAAShF,UAAUzY,GAEnB6d,EAAY7d,GACZ0d,EAAe1d,IAPbnP,EAAU,iCAoC2BqtB,KAAnC,QACA,yBAAK7E,UAAU,WAAU,0CACxBmE,EAAU9C,KAAI,SAAAyD,GAAQ,OACrB,yBAAKtuB,IAAKsuB,EAAU9E,UAAW,kBAAoBrX,EAAMhC,eAAiBme,EAAW,gBAAkB,KACrG,0BAAM9E,UAAU,kBAAiB,4BAAQW,QAAS,kBA9B5D,SAAkBmE,GAChBV,EAAS7F,UAAUuG,GACnBT,EAAeS,GA4BiDC,CAASD,KAAhC,UACjC,0BAAM9E,UAAU,kBAAiB,4BAAQW,QAAS,kBA1B5D,SAAoBmE,GACb1tB,OAAO4tB,QAAQ,mCAAqCF,EAAW,OAGpEV,EAAS3E,YAAYqF,GACrBX,EAAY/c,KAAO0T,OAAOqJ,GAAW,SAACtkB,GAAD,OAAUA,IAASilB,KACxDV,EAAS/G,iBAAiBxpB,EAAEoF,4BAA6BkrB,GACrDxb,EAAMhC,eAAiBme,IACzBnc,EAAMhC,aAAe,MAEnBsd,EAAUM,QAAQhuB,QAAUuuB,IAC9Bb,EAAUM,QAAQhuB,MAAQ,KAeoC0uB,CAAWH,KAAlC,WACjC,0BAAM9E,UAAU,kBAAkB8E,S,MCrEvC,SAASI,KAEd,OACE,kBAAC7B,GAAA,EAAD,CAAMC,iBAAiB,SAAS9V,GAAG,cAAc2X,cAAY,EAACC,eAAa,GACzE,kBAAC7B,GAAA,EAAD,CAAKC,SAAS,SAAS5rB,MAAM,UAC3B,kBAAC,GAAD,OAGF,kBAAC2rB,GAAA,EAAD,CAAKC,SAAS,UAAU5rB,MAAM,WAC5B,kBAACkrB,GAAD,OAGF,kBAACS,GAAA,EAAD,CAAKC,SAAS,UAAU5rB,MAAM,WAC5B,kBAAC,GAAD,OAGF,kBAAC2rB,GAAA,EAAD,CAAKC,SAAS,SAAS5rB,MAAM,UAC3B,kBAAC,GAAD,QCpBD,IAAMytB,GAAb,uKAEI,IAAI1c,EAAQvR,OAAOuR,MACnB,OAAIA,EAAMpB,OAAOG,YAAc7T,EAAEgF,WAAWG,OAClC,kBAAC,GAAD,MACC2P,EAAMpB,OAAOG,YAAc7T,EAAEgF,WAAWE,IACzC,kBAAC,GAAD,MAEF,wCARZ,GAA+BusB,IAAMC,WCDhBC,G,kDAEnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA0BRC,cAAgB,WACd,IAAIje,EAAM,IAAIrQ,OAAOoS,KAAKmc,YAAY,CAAC1tB,MAAOpE,EAAEqE,aAAc+U,OAAQpZ,EAAEsF,gBACxEsO,EAAIme,SAASC,gBAAkBhyB,EAAE0E,MACjC,EAAKutB,QAAQvB,QAAQwB,YAAYte,EAAIZ,MACrCzP,OAAOoS,KAAK4C,OACT4Z,IAAInyB,EAAEyG,kBACN0rB,IAAInyB,EAAE2I,YACNypB,KAAK,EAAKC,WACb9uB,OAAOuR,MAAMpB,OAAOE,IAAMA,GAnCT,EAuCnBye,UAAY,WACV5T,EAAK5J,aACL,EAAKyd,yBACL7T,EAAKtD,gBAAgBnb,EAAEgF,WAAWE,KAClC3B,OAAOuR,MAAMpB,OAAOE,IAAIme,SAASQ,QAAQC,YAAYC,GAAG,eAAe,SAACvvB,GACtEub,EAAK3D,MAAM5X,MAEbK,OAAOuR,MAAMpB,OAAOE,IAAI8e,OAAOP,KAAI,SAAAnV,GAAK,OAAI,EAAK2V,SAAS3V,OA9CzC,EAkDnB2V,SAAW,SAAC3V,GACNzZ,OAAOuR,MAAMpB,OAAOK,WACtB0K,EAAKhD,eACLR,EAAIwH,cACJxH,EAAIuE,iBACJF,EAAGC,aACHhc,OAAOuR,MAAMpB,OAAOK,SAASiJ,IAE/B,EAAK4V,eA1DY,EA6DnBN,uBAAyB,WACvB/uB,OAAOuR,MAAMpB,OAAOC,KAAKwJ,KAAO9G,EAAM5T,iBAAiB,aACvDc,OAAOuR,MAAMpB,OAAOC,KAAK0J,MAAQhH,EAAM5T,iBAAiB,cACxDc,OAAOuR,MAAMpB,OAAOC,KAAK4J,GAAKlH,EAAM5T,iBAAiB,WACrDc,OAAOuR,MAAMpB,OAAOC,KAAKiK,KAAOvH,EAAM5T,iBAAiB,aACvDc,OAAOuR,MAAMpB,OAAOC,KAAKqK,MAAQ3H,EAAM5T,iBAAiB,KACxDc,OAAOuR,MAAMpB,OAAOC,KAAK6J,EAAInH,EAAM5T,iBAAiB,KACpDc,OAAOuR,MAAMpB,OAAOC,KAAKxU,EAAIkX,EAAM5T,iBAAiB,KACpDc,OAAOuR,MAAMpB,OAAOC,KAAKkK,EAAIxH,EAAM5T,iBAAiB,KACpDc,OAAOuR,MAAMpB,OAAOC,KAAK2J,EAAIjH,EAAM5T,iBAAiB,KACpDc,OAAOuR,MAAMpB,OAAOC,KAAKwK,EAAI9H,EAAM5T,iBAAiB,KACpDc,OAAOuR,MAAMpB,OAAOC,KAAK0K,EAAIhI,EAAM5T,iBAAiB,KACpDc,OAAOuR,MAAMpB,OAAOC,KAAKjU,EAAI2W,EAAM5T,iBAAiB,MAvEpDc,OAAOuR,MAAQ2J,EAAK5L,mBACpB,EAAKof,QAAUR,IAAMoB,YAHJ,E,gEAOjBxL,KAAKwK,kB,+BAIL,OACE,2BAAO1F,UAAU,WAAW/nB,MAAM,QAChC,+BACA,4BACE,wBAAIA,MAAM,OACR,yBAAK+nB,UAAU,WAAW4E,IAAK1J,KAAK4K,WAEtC,wBAAI9F,UAAU,aAAa/nB,MAAM,OAAOgV,OAAQpZ,EAAEsF,cAAgB,MAChE,kBAAC,GAAD,c,GArBqBmsB,IAAMC,WCOnBoB,QACW,cAA7BvvB,OAAOwvB,SAASC,UAEe,UAA7BzvB,OAAOwvB,SAASC,UAEhBzvB,OAAOwvB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,GAAD,MACFC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/uB,MAAK,SAAAgvB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjc,QAAQic,MAAMA,EAAMC,c","file":"static/js/main.b6bb264c.chunk.js","sourcesContent":["import { c } from './';\nimport Swal from \"sweetalert2\";\n\n/**\n * Returns the distance between two points \n */\nexport function distanceBetween(ax, ay, bx, by) {\n  return Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n}\n  \n/**\n * Returns array with [x,y] of midpoint between two points\n * Both params should be [x,y]\n */\nexport function midPoint(a, b) {\n  return [(a[0]+b[0])/2, (a[1]+b[1])/2];\n}\n\n/**\n * Convert the angle to 0 <= rad <= 2*PI \n */\nexport function normalizeRadian(radians) {\n  let retVal = radians;\n  if (retVal < 0) {\n    retVal += Math.PI * 2;\n  }\n  if (retVal > Math.PI * 2) {\n    retVal -= Math.PI * 2;\n  }\n  return retVal;\n}\n  \n/**\n * Calc gravity for point.\n * @return {x,y,dir} This will be the x and y forces applied to the object (not a point)\n */\nexport function calcGravity(x, y, planet) {\n  let distance = distanceBetween(x, y, planet.x, planet.y);\n  if (distance < 10) {\n    distance = 10;\n  }\n  let gravityDirection = Math.atan2(x - planet.x, y - planet.y);\n  let gravityX = c.GRAVITATIONAL_CONST * planet.mass / Math.pow(distance, 2) * -Math.sin(gravityDirection);\n  let gravityY = c.GRAVITATIONAL_CONST * planet.mass / Math.pow(distance, 2) * -Math.cos(gravityDirection);\n  return {x:gravityX, y:gravityY, dir:gravityDirection};\n}\n\n/**\n * @return the angle x1,y1 would need to face to point directly at x2,y2\n */\nexport function directionTo(x1,y1, x2,y2) {\n  return normalizeRadian(Math.atan2(y2 - y1, x2 - x1));\n}\n\n/**\n * @return {xAmt, yAmt} splitting the dir and amount into x,y portions\n */\nexport function dirComponents(dir, amount) {\n  let xAmt = amount * Math.cos(dir);\n  let yAmt = amount * Math.sin(dir);\n  return {xAmt, yAmt};\n}\n\n/**\n * @return an int between min and max inclusive\n */\nexport function randomInt(minP, maxP) {\n  let min = Math.ceil(minP);\n  let max = Math.floor(maxP);\n  return Math.floor(Math.random() * (max - min +1) + min); \n}\n\n/**\n * @return a random floating point number between min and max\n */\nexport function randomFloat(min, max) {\n  return min + (Math.random() * (max - min));\n}\n\n/**\n * @return true 50% of the time\n */\nexport function randomBool() {\n  return Math.random() > 0.5;\n}\n\n/**\n * @return add distance in direction to startX,startY \n */\nexport function getPointFrom(startX, startY, dir, distance) {\n  let x = startX + (distance * Math.cos(dir));\n  let y = startY + (distance * Math.sin(dir));\n  return {x,y};\n}\n\n/**\n * @return a collection of points [[x,y],[x,y]] on a rectangular sprite that can be used for collision detection\n * @param x,y global x,y position of sprite (on main map, not in viewport)\n */\nexport function getVertexData(x,y, sprite) {\n  sprite.calculateVertices();\n  let collisionPoints = []; // [[x,y],[x,y]]\n  collisionPoints.push(toGlobal(x, y, sprite.vertexData[0], sprite.vertexData[1])); // top left\n  collisionPoints.push(toGlobal(x, y, sprite.vertexData[2], sprite.vertexData[3])); // top right\n  collisionPoints.push(toGlobal(x, y, sprite.vertexData[4], sprite.vertexData[5])); // bottom right\n  collisionPoints.push(toGlobal(x, y, sprite.vertexData[6], sprite.vertexData[7])); // bottom left\n  // Add a few points between to help with border collisions (these have already been converted to global)\n  collisionPoints.push(midPoint(collisionPoints[0], collisionPoints[1]));\n  collisionPoints.push(midPoint(collisionPoints[1], collisionPoints[2]));\n  collisionPoints.push(midPoint(collisionPoints[2], collisionPoints[3]));\n  collisionPoints.push(midPoint(collisionPoints[3], collisionPoints[0]));\n  return collisionPoints;\n}\n\n/**\n * Converts the local sprite-based x,y to global based on ship's position\n * @return [x,y] in global map coordinates\n */\nexport function toGlobal(globalX,globalY, spriteX,spriteY) {\n  return [globalX + (spriteX - c.HALF_SCREEN_WIDTH), globalY+ (spriteY - c.HALF_SCREEN_HEIGHT)];\n}\n\n/**\n * Sets up a keyboard listener\n */\nexport function keyboardListener(value) {\n  let key = {};\n  key.value = value;\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = event => {\n    if (event.key === key.value) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n    }\n  };\n  //The `upHandler`\n  key.upHandler = event => {\n    if (event.key === key.value) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n    }\n  };\n  //Attach event listeners\n  const downListener = key.downHandler.bind(key);\n  const upListener = key.upHandler.bind(key);\n  window.addEventListener(\n    \"keydown\", downListener, false\n  );\n  window.addEventListener(\n    \"keyup\", upListener, false\n  );\n  // Detach event listeners\n  key.unsubscribe = () => {\n    window.removeEventListener(\"keydown\", downListener);\n    window.removeEventListener(\"keyup\", upListener);\n  };\n  return key;\n}\n\nexport function showToast(text) {\n  Swal.fire({\n    title: text,\n    timer: 5000,\n    position:'top-left',\n    showConfirmButton: false,\n    toast:true,\n    width: Math.floor(c.SCREEN_WIDTH/2)+'px',\n    showClass: {\n      popup: 'animate__animated animate__slideInDown'\n    },\n    hideClass: {\n      popup: 'animate__animated animate__slideOutUp'\n    }\n  }).then();\n}","// Colors\nexport const BLACK = 0X000000;\nexport const YELLOW = 0xCC55CC;\nexport const BLUE = 0x00AAFF;\nexport const WHITE = 0xFFFFFF;\nexport const DARK_GREY = 0x303030;\nexport const LIGHT_GREY = 0x909090;\n\nexport const GAME_STATE = {\n  INIT: \"init\",\n  FLY: \"fly\",\n  MANAGE: \"manage\"\n};\n\n// Saved games\nexport const LOCALSTORAGE_GAME_NAMES_KEY = 'saved-game-names';\nexport const DB_GAME_PREFIX = 'game-';\n\n// Screen Layout\nexport const SCREEN_WIDTH = 1000;\nexport const SCREEN_HEIGHT = 1000;\nexport const HALF_SCREEN_WIDTH = SCREEN_WIDTH / 2;\nexport const HALF_SCREEN_HEIGHT = SCREEN_HEIGHT / 2;\nexport const NEARBY_WIDTH = SCREEN_WIDTH * 3;\nexport const NEARBY_HEIGHT = SCREEN_HEIGHT * 3;\n// size of minimap on screen\nexport const MINIMAP_WIDTH = 120;\nexport const MINIMAP_HEIGHT = 120;\nexport const HALF_MINIMAP_WIDTH = MINIMAP_WIDTH / 2;\nexport const HALF_MINIMAP_HEIGHT = MINIMAP_HEIGHT / 2;\n// how far the minimap can view\nexport const MINIMAP_VIEW_WIDTH = 4000;\nexport const MINIMAP_VIEW_HEIGHT = 4000;\nexport const HALF_MINIMAP_VIEW_WIDTH = MINIMAP_VIEW_WIDTH / 2;\nexport const HALF_MINIMAP_VIEW_HEIGHT = MINIMAP_VIEW_HEIGHT / 2;\n// convert minimap pixels to real pixels\nexport const MINIMAP_SCALE_X = MINIMAP_WIDTH / MINIMAP_VIEW_WIDTH;\nexport const MINIMAP_SCALE_Y = MINIMAP_HEIGHT / MINIMAP_VIEW_HEIGHT;\n// MiniMap colors\nexport const MINIMAP_BORDER_COLOR = LIGHT_GREY;\nexport const MINIMAP_BACKGROUND_COLOR = DARK_GREY;\nexport const MINIMAP_PLANET_COLOR = LIGHT_GREY;\nexport const MINIMAP_SELECTED_PLANET_COLOR = YELLOW;\nexport const MINIMAP_BUILDING_COLOR = BLUE;\nexport const MINIMAP_SHIP_COLOR = WHITE;\n\n// Files\nexport const SPRITESHEET_JSON = \"images/spritesheet.json\";\nexport const ALIEN_SHIP_BLACK_FILE = \"alien_black.png\";\nexport const ALIEN_SHIP_BLUE_FILE = \"alien_blue.png\";\nexport const ALIEN_SHIP_BLUE_LARGE_FILE = \"alien_blue_large.png\";\nexport const ALIEN_SHIP_BLUE_SMALL_FILE = \"alien_blue_small.png\";\nexport const ALIEN_SHIP_FIRE_FILE = \"alien_fire.png\";\nexport const ALIEN_SHIP_GREEN_FILE = \"alien_green.png\";\nexport const ALIEN_SHIP_GREEN_SMALL_FILE = \"alien_green_small.png\";\nexport const ALIEN_SHIP_GREEN_LARGE_FILE = \"alien_green_large.png\";\nexport const ALIEN_SHIP_RED_FILE = \"alien_red.png\";\nexport const ALIEN_SHIP_RED_SMALL_FILE = \"alien_red_small.png\";\nexport const ALIEN_SHIP_RED_LARGE_FILE = \"alien_red_large.png\";\nexport const BULLET_FILE = \"bullet.png\";\nexport const BULLET_BLUE_FILE = \"bullet_blue.png\";\nexport const BULLET_WHITE_FILE = \"bullet_white.png\";\nexport const FACTORY_FILE = \"factory.png\";\nexport const MINE_FILE = \"mine\"; // animation name in json\nexport const PLANET_GREEN_FILE = \"planet_green.png\";\nexport const PLANET_PURPLE_FILE = \"planet_purple.png\";\nexport const PLANET_RED_FILE = \"planet_red.png\";\nexport const PLANET_ROCK_FILE = \"planet_rock.png\";\nexport const SHIELD_BLUE_FILE = \"shield_blue.png\";\nexport const SHIELD_GREEN_FILE = \"shield_green.png\";\nexport const SHIELD_WHITE_FILE = \"shield_white.png\";\nexport const SHIP_BALL_FILE = \"ship_ball.png\";\nexport const SHIP_CARGO_FILE = \"ship_cargo.png\";\nexport const SHIP_EXPLORER_FILE = \"ship_explorer.png\";\nexport const SHIP_FAST_FILE = \"ship_fast.png\";\nexport const SHIP_FIGHTER_FILE = \"ship_fighter.png\";\nexport const SHIP_HEAVY_FILE = \"ship_heavy.png\";\nexport const SHIP_MISSILE_FILE = \"ship_missile.png\";\nexport const SHIP_RED_WINGS_FILE = \"ship_red_wings.png\";\nexport const SHIP_SKELETON_FILE = \"ship_skeleton.png\";\nexport const STAR_BACKGROUND_FILE = \"images/stars.png\";\nexport const CRASH_JSON = \"images/crash.json\";\nexport const CRASH = \"crash\"; // animation name in json\n\nexport const UNIVERSE_RADIUS = 33000;\nexport const PLAYER = \"player\";\nexport const ALIEN = \"alien\";\nexport const PLAYER_STARTING_RESOURCES = {titanium: 30, gold: 20, uranium: 0};\nexport const GRAVITATIONAL_CONST = 2;\nexport const ALLOWED_OVERLAP = 2; // overlap for fudging collision detection\nexport const TAKEOFF_SPEED = 10; // in units of planet gravity\nexport const PLANET_RESOURCE_MAX = 99999999;\nexport const PLAYER_START_X = -(UNIVERSE_RADIUS + 1000); // left of the universe\nexport const PLAYER_START_Y = 0;\nexport const MIN_ALIEN_DIST_TO_PLANET = 50;\nexport const MIN_ALIEN_DIST_TO_ALIEN = 3;\n\n// Buildings\nexport const BUILDING_PLACEMENT_ROTATION_INCREMENT = 0.05;\n// Mine\nexport const BUILDING_TYPE_MINE = \"mine\";\nexport const MINE_SCALE = 1;\nexport const MINE_WIDTH = 52;\nexport const MINE_ANIMATION_SPEED = 0.5;\nexport const MINE_SPEED_TITANIUM = 0.0166; // 1 every sec\nexport const MINE_SPEED_GOLD = 0.0083;  // 1 every 2 sec\nexport const MINE_SPEED_URANIUM = 0.0033; // 1 every 5 sec\nexport const MINE_COST = {titanium: 20, gold: 10, uranium: 0};\n// Factory\nexport const BUILDING_TYPE_FACTORY = \"factory\";\nexport const FACTORY_COST = {titanium: 50, gold: 20, uranium: 10};\nexport const FACTORY_WIDTH = 91;\nexport const FACTORY_SCALE = 0.8;\n\n// Equipment\nexport const EQUIP_TYPE_BRAKE = \"Brake\";\nexport const EQUIP_TYPE_PRIMARY_WEAPON = \"Primary Weapon\";\nexport const EQUIP_TYPE_SECONDARY_WEAPON = \"Secondary Weapon\";\nexport const EQUIP_TYPE_THRUSTER = \"Thruster\";\nexport const EQUIP_TYPE_ARMOR = \"Armor\";\nexport const EQUIP_TYPE_REPAIR_DROID = \"Repair Droid\";\nexport const EQUIP_TYPE_GUNNERY_DROID = \"Gunnery Droid\";\nexport const EQUIP_TYPE_SPEED = \"Speed\";\nexport const EQUIP_TYPE_TURN = \"Turn\";\nexport const EQUIP_TYPE_STORAGE = \"Storage\";\n\nexport const THRUST_MOMENTUM = \"Thrust Momentum\";\nexport const THRUST_BLINK = \"Thrust Blink\";\n\nexport const OBJ_EQUIP = \"Equip\";\nexport const OBJ_SHIP = \"Ship\";\n\nexport const ALIEN_AI_TURRET = \"ALIEN_AI_TURRET\";\nexport const ALIEN_AI_CREEPER = \"ALIEN_AI_CREEPER\";\nexport const ALIEN_AI_MOTHERSHIP = \"ALIEN_AI_MOTHERSHIP\";\nexport const ALIEN_AI_KAMIKAZI = \"ALIEN_AI_KAMIKAZI\";\nexport const EQUIP_AI_MINE = \"EQUIP_AI_MINE\";\nexport const EQUIP_AI_TURRET = \"EQUIP_AI_TURRET\";\nexport const EQUIP_AI_MISSILE = \"EQUIP_AI_MISSILE\";\n\nexport const DIR_AHEAD_OF_SHIP = \"ahead\";\nexport const DIR_BEHIND_SHIP = \"behind\";\n\n// Ship Upgrades\n// brakeSpeedPct is best between 0.02 - 0.1 (higher is ok)\nexport const EQUIP_BRAKE = {\n  name: \"Brake\", objType: OBJ_EQUIP, type: EQUIP_TYPE_BRAKE, brakeSpeedPct: 0.04,\n  cost: {titanium: 20, gold: 10, uranium: 0}\n};\nexport const EQUIP_BLINK_BRAKE = {\n  name: \"Blink Brake\", objType: OBJ_EQUIP, type: EQUIP_TYPE_BRAKE, brakeSpeedPct: 0,\n  cost: {titanium: 50, gold: 50, uranium: 30}\n};\nexport const EQUIP_SPEED_BOOST = {\n  name: \"Speed Booster\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SPEED, boostSpeed: 0.05,\n  cost: {titanium: 0, gold: 10, uranium: 20}\n};\nexport const EQUIP_TURN_BOOST = {\n  name: \"Turn Booster\", objType: OBJ_EQUIP, type: EQUIP_TYPE_TURN, boostSpeed: 0.05,\n  cost: {titanium: 0, gold: 10, uranium: 20}\n};\nexport const EQUIP_STORAGE = {\n  name: \"Storage\", objType: OBJ_EQUIP, type: EQUIP_TYPE_STORAGE, storageAmount: 100,\n  cost: {titanium: 50, gold: 0, uranium: 0}\n};\nexport const EQUIP_ENHANCED_STORAGE = {\n  name: \"Enhanced Storage\", objType: OBJ_EQUIP, type: EQUIP_TYPE_STORAGE, storageAmount: 300,\n  cost: {titanium: 200, gold: 0, uranium: 0}\n};\nexport const EQUIP_ARMOR = {\n  name: \"Armor Plate\", objType: OBJ_EQUIP, type: EQUIP_TYPE_ARMOR, armorAmt: 100,\n  cost: {titanium: 50, gold: 0, uranium: 0}\n};\nexport const EQUIP_ENHANCED_ARMOR = {\n  name: \"Enhanced Armor\", objType: OBJ_EQUIP, type: EQUIP_TYPE_ARMOR, armorAmt: 300,\n  cost: {titanium: 300, gold: 0, uranium: 0}\n};\nexport const EQUIP_THRUSTER = {\n  name: \"Thruster\", objType: OBJ_EQUIP, type: EQUIP_TYPE_THRUSTER, thrustSpeed: 0.08, thrustType: THRUST_MOMENTUM,\n  cost: {titanium: 40, gold: 40, uranium: 10}\n};\n// blink thrustSpeed is good from 2 to 10\nexport const EQUIP_BLINK_THRUSTER = {\n  name: \"Blink Thruster\", objType: OBJ_EQUIP, type: EQUIP_TYPE_THRUSTER, thrustSpeed: 2.5, thrustType: THRUST_BLINK,\n  cost: {titanium: 60, gold: 50, uranium: 10}\n};\n\n// Primary Weapons\n// Dmg:40/c Range:250\nexport const EQUIP_BLASTER = {\n  name: \"Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 25,\n  cool: 0,\n  damage: 10,\n  speed: 2.5,\n  lifetime: 100,\n  jitter: 0.05,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 10, gold: 0, uranium: 20}\n};\n// Dmg:100/c Range:320\nexport const EQUIP_FAST_BLASTER = {\n  name: \"Fast Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 10,\n  cool: 0,\n  damage: 10,\n  speed: 4,\n  lifetime: 80,\n  jitter: 0.05,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 20, gold: 20, uranium: 40}\n};\n// Dmg:300/c (but cannot aim) Range:375\nexport const EQUIP_SPRINKLER_BLASTER = {\n  name: \"Sprinkler Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 2,\n  cool: 2,\n  damage: 6,\n  speed: 2.5,\n  lifetime: 150,\n  jitter: 1,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 20, gold: 10, uranium: 80}\n};\n// Dmg 175/c Range:490\nexport const EQUIP_STREAM_BLASTER = {\n  name: \"Stream Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 4,\n  cool: 0,\n  damage: 7,\n  speed: 7,\n  lifetime: 70,\n  jitter: 0.04,\n  bulletFile: BULLET_FILE,\n  cost: {titanium: 30, gold: 30, uranium: 60}\n};\n// Dmg 25/c Range:240\nexport const EQUIP_ALIEN_BLASTER = {\n  name: \"Alien Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 20,\n  cool: 0,\n  damage: 5,\n  speed: 2,\n  lifetime: 120,\n  jitter: 0.12,\n  bulletFile: BULLET_BLUE_FILE,\n  cost: {titanium: 10, gold: 30, uranium: 50}\n};\n// Dmg 120/c Range:480\nexport const EQUIP_ALIEN_BLASTER_FAST = {\n  name: \"Alien Fast Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 10,\n  cool: 0,\n  damage: 12,\n  speed: 4,\n  lifetime: 120,\n  jitter: 0.1,\n  bulletFile: BULLET_BLUE_FILE,\n  cost: {titanium: 10, gold: 30, uranium: 50}\n};\n// Dmg 150/c Range:600\nexport const EQUIP_ALIEN_BLASTER_LIGHTNING = {\n  name: \"Alien Lighting Blaster\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 10,\n  cool: 0,\n  damage: 15,\n  speed: 12,\n  lifetime: 50,\n  jitter: 0.08,\n  bulletFile: BULLET_BLUE_FILE,\n  cost: {titanium: 10, gold: 30, uranium: 50}\n};\n// Dmg 100/c Range:750\nexport const EQUIP_STAPLE_GUN = {\n  name: \"Staple Gun\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 3,\n  cool: 0,\n  damage: 3,\n  speed: 3,\n  lifetime: 250,\n  jitter: 0.2,\n  bulletFile: BULLET_WHITE_FILE,\n  cost: {titanium: 10, gold: 30, uranium: 50}\n};\n// Dmg 183/c Range:900\nexport const EQUIP_STAPLE_GUN_HEAVY = {\n  name: \"Heavy Staple Gun\",\n  objType: OBJ_EQUIP,\n  type: EQUIP_TYPE_PRIMARY_WEAPON,\n  coolTime: 3,\n  cool: 0,\n  damage: 5.5,\n  speed: 3,\n  lifetime: 300,\n  jitter: 0.15,\n  bulletFile: BULLET_WHITE_FILE,\n  cost: {titanium: 10, gold: 30, uranium: 50}\n};\n\n// Secondary (more at end of file after the ships)\nexport const EQUIP_SHIELD = {\n  name: \"Force Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 600,\n  shield: {\n    active: false,\n    armor: 500,\n    armorMax: 500,\n    lifetime: 240,\n    lifetimeMax: 240,\n    spriteFile: SHIELD_BLUE_FILE,\n    radius: 0\n  },\n  cost: {titanium: 0, gold: 0, uranium: 100}\n};\nexport const EQUIP_SHIELD_LONG = {\n  name: \"Long Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 1500,\n  shield: {\n    active: false,\n    armor: 300,\n    armorMax: 300,\n    lifetime: 1000,\n    lifetimeMax: 1000,\n    spriteFile: SHIELD_WHITE_FILE,\n    radius: 0\n  },\n  cost: {titanium: 0, gold: 0, uranium: 100}\n};\nexport const EQUIP_SHIELD_STRONG = {\n  name: \"Strong Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 750,\n  shield: {\n    active: false,\n    armor: 1500,\n    armorMax: 1500,\n    lifetime: 400,\n    lifetimeMax: 400,\n    spriteFile: SHIELD_GREEN_FILE,\n    radius: 0\n  },\n  cost: {titanium: 0, gold: 0, uranium: 100}\n};\nexport const EQUIP_SHIELD_ULTRA = {\n  name: \"Ultra Shield\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, cool: 0, coolTime: 1500,\n  shield: {\n    active: false,\n    armor: 1000,\n    armorMax: 1000,\n    lifetime: 750,\n    lifetimeMax: 750,\n    spriteFile: SHIELD_BLUE_FILE,\n    radius: 0\n  },\n  cost: {titanium: 0, gold: 0, uranium: 100}\n};\n\nexport const SHIP_RED_MISSILE = {\n  name: \"Alien Missile\",\n  objType: OBJ_SHIP,\n  propulsion: 0.1, // best between 0.02 - 0.1\n  turnSpeed: 0.3, // // best between 0.3 - 0.07\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 0,\n  equip: [],\n  armorMax: 200,\n  armor: 200,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.8,\n  imageFile: ALIEN_SHIP_RED_SMALL_FILE,\n  cost: {titanium: 5, gold: 5, uranium: 10},\n  viewRange: SCREEN_WIDTH * 3,\n  aiType: ALIEN_AI_KAMIKAZI,\n};\n\nexport const EQUIP_ALIEN_MISSILE_LAUNCHER = {\n  name: \"Alien Missile Launcher\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 100, cool: 100,\n  createShip: {type: SHIP_RED_MISSILE, dir: DIR_AHEAD_OF_SHIP},\n  cost: {titanium: 50, gold: 50, uranium: 100}\n};\n\n\n// Droids\nexport const EQUIP_R2D2 = {\n  name: \"R2D2 Repair Droid\", objType: OBJ_EQUIP, type: EQUIP_TYPE_REPAIR_DROID, repairSpeed: 0.03,\n  cost: {titanium: 20, gold: 100, uranium: 50}\n};\nexport const EQUIP_GUNNERY_DROID = {\n  name: \"Gunnery Droid\", objType: OBJ_EQUIP, type: EQUIP_TYPE_GUNNERY_DROID,\n  weapon: EQUIP_FAST_BLASTER, cost: {titanium: 100, gold: 200, uranium: 300}\n};\n\n\n// Ships\nexport const SHIP_EXPLORER = {\n  name: \"Explorer\",\n  objType: OBJ_SHIP,\n  propulsion: 0.05, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 50,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 3,\n  equip: [EQUIP_BRAKE, EQUIP_BLASTER],\n  armorMax: 50,\n  armor: 50,\n  crashSpeed: 2,\n  crashAngle: 0.5,\n  imageScale: 0.6,\n  imageFile: SHIP_EXPLORER_FILE,\n  cost: {titanium: 40, gold: 20, uranium: 10},\n};\n\nexport const SHIP_CARGO = {\n  name: \"Cargo\",\n  objType: OBJ_SHIP,\n  propulsion: 0.025, // best between 0.02 - 0.1\n  turnSpeed: 0.02, // // best between 0.3 - 0.07\n  resourcesMax: 750,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 2,\n  equip: [EQUIP_BRAKE],\n  armorMax: 20,\n  armor: 20,\n  crashSpeed: 1.2,\n  crashAngle: 0.3,\n  imageScale: 1,\n  imageFile: SHIP_CARGO_FILE,\n  cost: {titanium: 100, gold: 50, uranium: 50},\n};\n\nexport const SHIP_FAST = {\n  name: \"Fast\",\n  objType: OBJ_SHIP,\n  propulsion: 0.1, // best between 0.02 - 0.1\n  turnSpeed: 0.07, // // best between 0.3 - 0.07\n  resourcesMax: 40,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 4,\n  equip: [EQUIP_BRAKE],\n  armorMax: 50,\n  armor: 50,\n  crashSpeed: 2,\n  crashAngle: 0.5,\n  imageScale: 0.6,\n  imageFile: SHIP_FAST_FILE,\n  cost: {titanium: 200, gold: 100, uranium: 50},\n};\n\nexport const SHIP_SKELETON = {\n  name: \"Skeleton\",\n  objType: OBJ_SHIP,\n  propulsion: 0.03, // best between 0.02 - 0.1\n  turnSpeed: 0.03, // // best between 0.3 - 0.07\n  resourcesMax: 30,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 7,\n  equip: [],\n  armorMax: 50,\n  armor: 50,\n  crashSpeed: 2,\n  crashAngle: 0.5,\n  imageScale: 0.7,\n  imageFile: SHIP_SKELETON_FILE,\n  cost: {titanium: 200, gold: 200, uranium: 50},\n};\n\nexport const SHIP_HEAVY = {\n  name: \"Heavy\",\n  objType: OBJ_SHIP,\n  propulsion: 0.05, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 300,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 6,\n  equip: [EQUIP_BRAKE],\n  armorMax: 400,\n  armor: 400,\n  crashSpeed: 1.5,\n  crashAngle: 0.4,\n  imageScale: 0.5,\n  imageFile: SHIP_HEAVY_FILE,\n  cost: {titanium: 500, gold: 300, uranium: 250},\n};\n\nexport const SHIP_FIGHTER = {\n  name: \"Fighter\",\n  objType: OBJ_SHIP,\n  propulsion: 0.08, // best between 0.02 - 0.1\n  turnSpeed: 0.07, // // best between 0.3 - 0.07\n  resourcesMax: 200,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 7,\n  equip: [EQUIP_BRAKE],\n  armorMax: 300,\n  armor: 300,\n  crashSpeed: 1.5,\n  crashAngle: 0.6,\n  imageScale: 0.6,\n  imageFile: SHIP_FIGHTER_FILE,\n  cost: {titanium: 500, gold: 500, uranium: 500},\n};\n\nexport const SHIP_ALIEN_TURRET = {\n  name: \"Alien Turret\",\n  objType: OBJ_SHIP,\n  propulsion: 0.001, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 3,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER],\n  armorMax: 100,\n  armor: 100,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.8,\n  imageFile: ALIEN_SHIP_GREEN_SMALL_FILE,\n  cost: {titanium: 50, gold: 50, uranium: 50},\n  aiType: ALIEN_AI_TURRET,\n};\n\nexport const SHIP_ALIEN = {\n  name: \"Alien Ship\",\n  objType: OBJ_SHIP,\n  propulsion: 0.05, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 4,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER],\n  armorMax: 100,\n  armor: 100,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.9,\n  imageFile: ALIEN_SHIP_GREEN_FILE,\n  cost: {titanium: 150, gold: 100, uranium: 80},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const SHIP_ALIEN_LARGE = {\n  name: \"Alien Large\",\n  objType: OBJ_SHIP,\n  propulsion: 0.03, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 6,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER_FAST],\n  armorMax: 300,\n  armor: 300,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1,\n  imageFile: ALIEN_SHIP_GREEN_LARGE_FILE,\n  cost: {titanium: 150, gold: 100, uranium: 80},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const SHIP_ALIEN_STAPLE_TURRET = {\n  name: \"Alien Staple Turret\",\n  objType: OBJ_SHIP,\n  propulsion: 0.00,\n  turnSpeed: 0.001,\n  resourcesMax: 100,\n  resources: {\n     titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 3,\n  equip: [EQUIP_BRAKE, EQUIP_STAPLE_GUN_HEAVY],\n  armorMax: 200,\n  armor: 200,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1.3,\n  imageFile: ALIEN_SHIP_BLUE_SMALL_FILE,\n  cost: {titanium: 150, gold: 150, uranium: 200},\n  aiType: ALIEN_AI_TURRET,\n};\n\nexport const SHIP_ALIEN_FIRE = {\n  name: \"Alien Fire\",\n  objType: OBJ_SHIP,\n  propulsion: 0.08, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 5,\n  equip: [EQUIP_BRAKE, EQUIP_STAPLE_GUN, EQUIP_SHIELD_LONG],\n  armorMax: 250,\n  armor: 250,\n  crashSpeed: 2,\n  crashAngle: 0.4,\n  imageScale: 1.5,\n  imageFile: ALIEN_SHIP_FIRE_FILE,\n  cost: {titanium: 250, gold: 200, uranium: 80},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const SHIP_ALIEN_STEALTH = {\n  name: \"Alien Stealth\",\n  objType: OBJ_SHIP,\n  propulsion: 0.04, // best between 0.02 - 0.1\n  turnSpeed: 0.05, // // best between 0.3 - 0.07\n  resourcesMax: 100,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 5,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_BLASTER_FAST],\n  armorMax: 150,\n  armor: 150,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1.5,\n  imageFile: ALIEN_SHIP_BLACK_FILE,\n  cost: {titanium: 100, gold: 200, uranium: 150},\n  aiType: ALIEN_AI_CREEPER,\n};\n\nexport const SHIP_ALIEN_MOTHERSHIP = {\n  name: \"Alien Mothership\",\n  objType: OBJ_SHIP,\n  propulsion: 0.00,\n  turnSpeed: 0.001,\n  resourcesMax: 10000,\n  resources: {\n    titanium: 1000,\n    gold: 1000,\n    uranium: 5000,\n  },\n  equipMax: 3,\n  equip: [EQUIP_BRAKE, EQUIP_ALIEN_MISSILE_LAUNCHER, EQUIP_SHIELD_ULTRA, EQUIP_ALIEN_BLASTER_LIGHTNING],\n  armorMax: 1000,\n  armor: 1000,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1.3,\n  imageFile: ALIEN_SHIP_RED_LARGE_FILE,\n  cost: {titanium: 1200, gold: 1000, uranium: 750},\n  aiType: ALIEN_AI_MOTHERSHIP,\n};\n\nexport const SHIP_MINE = {\n  name: \"Mine\",\n  objType: OBJ_SHIP,\n  propulsion: 0.0,\n  turnSpeed: 0.0,\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 0,\n  equip: [],\n  armorMax: 100,\n  armor: 100,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1.2,\n  imageFile: ALIEN_SHIP_BLUE_FILE,\n  cost: {titanium: 5, gold: 0, uranium: 10},\n  aiType: EQUIP_AI_MINE,\n  aiData: {mineDistance: 300}\n};\n\nexport const SHIP_TURRET = {\n  name: \"Turret\",\n  objType: OBJ_SHIP,\n  propulsion: 0.0,\n  turnSpeed: 0.0,\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 0,\n  equip: [EQUIP_FAST_BLASTER],\n  armorMax: 100,\n  armor: 100,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 0.6,\n  imageFile: ALIEN_SHIP_BLUE_LARGE_FILE,\n  cost: {titanium: 10, gold: 10, uranium: 20},\n  aiType: EQUIP_AI_TURRET,\n  aiData: {mineDistance: 300}\n};\n\nexport const SHIP_MISSILE = {\n  name: \"Missile\",\n  objType: OBJ_SHIP,\n  propulsion: 0.08, // best between 0.02 - 0.1\n  turnSpeed: 0.25, // // best between 0.3 - 0.07\n  resourcesMax: 0,\n  resources: {\n    titanium: 0,\n    gold: 0,\n    uranium: 0,\n  },\n  equipMax: 0,\n  equip: [],\n  armorMax: 150,\n  armor: 150,\n  crashSpeed: 2,\n  crashAngle: 10,\n  imageScale: 1,\n  imageFile: SHIP_BALL_FILE,\n  cost: {titanium: 5, gold: 5, uranium: 10},\n  aiType: EQUIP_AI_MISSILE,\n};\n\nexport const ALL_SHIPS = [SHIP_EXPLORER, SHIP_CARGO, SHIP_FAST, SHIP_SKELETON, SHIP_HEAVY, SHIP_FIGHTER,\n  SHIP_ALIEN, SHIP_ALIEN_TURRET, SHIP_ALIEN_LARGE, SHIP_ALIEN_STAPLE_TURRET, SHIP_ALIEN_FIRE, SHIP_ALIEN_STEALTH];\n\n// This equipment needs to go after the ships (ugh)\nexport const EQUIP_MINE_DEPLOYER = {\n  name: \"Mine Deployer\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 25, cool: 0,\n  createShip: {type: SHIP_MINE, dir: DIR_BEHIND_SHIP},\n  cost: {titanium: 30, gold: 50, uranium: 100}\n};\nexport const EQUIP_TURRET_DEPLOYER = {\n  name: \"Turret Deployer\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 100, cool: 0,\n  createShip: {type: SHIP_TURRET, dir: DIR_BEHIND_SHIP},\n  cost: {titanium: 100, gold: 100, uranium: 200}\n};\nexport const EQUIP_MISSILE_LAUNCHER = {\n  name: \"Missile Launcher\", objType: OBJ_EQUIP, type: EQUIP_TYPE_SECONDARY_WEAPON, coolTime: 75, cool: 0,\n  createShip: {type: SHIP_MISSILE, dir: DIR_AHEAD_OF_SHIP},\n  cost: {titanium: 50, gold: 50, uranium: 100}\n};\n\nexport const EQUIP_UPGRADES = [EQUIP_BRAKE, EQUIP_BLINK_BRAKE, EQUIP_THRUSTER, EQUIP_BLINK_THRUSTER, EQUIP_ARMOR, EQUIP_SPEED_BOOST, EQUIP_TURN_BOOST,\n  EQUIP_STORAGE, EQUIP_ENHANCED_ARMOR, EQUIP_ENHANCED_STORAGE];\nexport const EQUIP_PRIMARY_WEAPONS = [EQUIP_BLASTER, EQUIP_FAST_BLASTER, EQUIP_STREAM_BLASTER, EQUIP_SPRINKLER_BLASTER, EQUIP_ALIEN_BLASTER, EQUIP_STAPLE_GUN, EQUIP_STAPLE_GUN_HEAVY, EQUIP_ALIEN_BLASTER_FAST, EQUIP_ALIEN_BLASTER_LIGHTNING];\nexport const EQUIP_SECONDARY_WEAPONS = [EQUIP_MINE_DEPLOYER, EQUIP_TURRET_DEPLOYER, EQUIP_MISSILE_LAUNCHER, EQUIP_SHIELD, EQUIP_SHIELD_LONG, EQUIP_SHIELD_STRONG, EQUIP_SHIELD_ULTRA];\nexport const EQUIP_DROIDS = [EQUIP_R2D2, EQUIP_GUNNERY_DROID];\nexport const ALL_EQUIP = [...EQUIP_UPGRADES, ...EQUIP_PRIMARY_WEAPONS, ...EQUIP_SECONDARY_WEAPONS, ...EQUIP_DROIDS];\n\nexport const XP_LEVELS = {\n  // Mining resources\n  [PLANET_ROCK_FILE]: [\n    {xp: 1, obj: EQUIP_BLASTER},\n    {xp: 10, obj: EQUIP_BRAKE},\n    {xp: 50, obj: SHIP_EXPLORER},\n    {xp: 100, obj: SHIP_CARGO},\n    {xp: 200, obj: EQUIP_ARMOR},\n    {xp: 1000, obj: EQUIP_SPEED_BOOST},\n  ],\n  [PLANET_RED_FILE]: [\n    {xp: 10, obj: EQUIP_STORAGE},\n    {xp: 50, obj: EQUIP_BLINK_BRAKE},\n    {xp: 100, obj: EQUIP_THRUSTER},\n    {xp: 500, obj: SHIP_FAST},\n  ],\n  [PLANET_GREEN_FILE]: [\n    {xp: 10, obj: SHIP_SKELETON},\n    {xp: 50, obj: EQUIP_R2D2},\n    {xp: 100, obj: EQUIP_BLINK_THRUSTER},\n    {xp: 1000, obj: SHIP_HEAVY},\n  ],\n  [PLANET_PURPLE_FILE]: [\n    {xp: 10, obj: EQUIP_TURN_BOOST},\n    {xp: 300, obj: EQUIP_SHIELD_STRONG},\n    {xp: 750, obj: EQUIP_GUNNERY_DROID},\n    {xp: 1000, obj: SHIP_FIGHTER}\n  ],\n  // Killing aliens\n  [SHIP_ALIEN_TURRET.name]: [\n    {xp: 1, obj: EQUIP_FAST_BLASTER},\n    {xp: 5, obj: EQUIP_ALIEN_BLASTER},\n    {xp: 10, obj: EQUIP_SHIELD},\n  ],\n  [SHIP_ALIEN.name]: [\n    {xp: 1, obj: EQUIP_MINE_DEPLOYER},\n    {xp: 5, obj: EQUIP_ALIEN_BLASTER_FAST},\n    {xp: 10, obj: EQUIP_STREAM_BLASTER},\n    {xp: 20, obj: SHIP_ALIEN},\n  ],\n  [SHIP_ALIEN_LARGE.name]: [\n    {xp: 3, obj: EQUIP_SHIELD_LONG},\n    {xp: 7, obj: EQUIP_TURRET_DEPLOYER},\n    {xp: 10, obj: EQUIP_ENHANCED_STORAGE},\n    {xp: 15, obj: SHIP_ALIEN_LARGE},\n  ],\n  [SHIP_ALIEN_STEALTH.name]: [\n    {xp: 1, obj: EQUIP_SPRINKLER_BLASTER},\n    {xp: 5, obj: EQUIP_MISSILE_LAUNCHER},\n    {xp: 10, obj: EQUIP_ALIEN_BLASTER_LIGHTNING},\n  ],\n  [SHIP_ALIEN_FIRE.name]: [\n    {xp: 1, obj: EQUIP_STAPLE_GUN},\n    {xp: 4, obj: EQUIP_ENHANCED_ARMOR},\n    {xp: 7, obj: EQUIP_SHIELD_ULTRA},\n    {xp: 10, obj: EQUIP_STAPLE_GUN_HEAVY},\n    {xp: 15, obj: SHIP_ALIEN_FIRE},\n  ],\n}\n\nexport const PLANET_DENSITY = new Map();\nPLANET_DENSITY.set(PLANET_GREEN_FILE, 0.01)\nPLANET_DENSITY.set(PLANET_PURPLE_FILE, 0.015)\nPLANET_DENSITY.set(PLANET_RED_FILE, 0.019)\nPLANET_DENSITY.set(PLANET_ROCK_FILE, 0.025)\n\n// Universe Rings\nexport const UNIVERSE_RINGS = [\n  {\n    planetCount: 1,\n    minDist: 1, maxDist: 2,\n    minDistToOtherPlanet: 10,\n    minPlanetRadius: 1500, maxPlanetRadius: 1501,\n    planetFiles: [PLANET_PURPLE_FILE],\n    aliens: [{count: 0, file: null}],\n  },\n  {\n    planetCount: 0,\n    minDist: 1700, maxDist: 2500,\n    minDistToOtherPlanet: 200,\n    minPlanetRadius: 200, maxPlanetRadius: 200,\n    planetFiles: [],\n    aliens: [\n      {count: 50, file: SHIP_ALIEN_STEALTH},\n      {count: 50, file: SHIP_ALIEN_FIRE},\n      {count: 30, file: SHIP_ALIEN_STAPLE_TURRET},\n    ],\n  },\n  {\n    planetCount: 200,\n    minDist: 2500, maxDist: 10000,\n    minDistToOtherPlanet: 150,\n    minPlanetRadius: 250, maxPlanetRadius: 500,\n    planetFiles: [PLANET_RED_FILE, PLANET_PURPLE_FILE, PLANET_GREEN_FILE],\n    aliens: [\n      {count: 200, file: SHIP_ALIEN_STAPLE_TURRET},\n      {count: 200, file: SHIP_ALIEN},\n      {count: 700, file: SHIP_ALIEN_LARGE},\n      {count: 300, file: SHIP_ALIEN_STEALTH},\n    ],\n  },\n  {\n    planetCount: 600,\n    minDist: 10000, maxDist: 15000,\n    minDistToOtherPlanet: 150,\n    minPlanetRadius: 150, maxPlanetRadius: 250,\n    planetFiles: [PLANET_ROCK_FILE, PLANET_RED_FILE, PLANET_GREEN_FILE],\n    aliens: [\n      {count: 1000, file: SHIP_ALIEN_TURRET},\n      {count: 1000, file: SHIP_ALIEN},\n      {count: 300, file: SHIP_ALIEN_LARGE},\n    ],\n  },\n  {\n    planetCount: 2000,\n    minDist: 15000, maxDist: 25000,\n    minDistToOtherPlanet: 200,\n    minPlanetRadius: 130, maxPlanetRadius: 200,\n    planetFiles: [PLANET_ROCK_FILE, PLANET_RED_FILE],\n    aliens: [{count: 1500, file: SHIP_ALIEN_TURRET}, {count: 100, file: SHIP_ALIEN}],\n  },\n  {\n    planetCount: 500,\n    minDist: 25000, maxDist: 28000,\n    minDistToOtherPlanet: 300,\n    minPlanetRadius: 150, maxPlanetRadius: 180,\n    planetFiles: [PLANET_ROCK_FILE],\n    aliens: [],\n  },\n  {\n    planetCount: 800,\n    minDist: 28000, maxDist: UNIVERSE_RADIUS,\n    minDistToOtherPlanet: 500,\n    minPlanetRadius: 50, maxPlanetRadius: 120,\n    planetFiles: [PLANET_ROCK_FILE],\n    aliens: [],\n  },\n];\n","import {c, fly, manage, utils} from './';\nimport lodash from 'lodash';\n\n/**\n * Creates an empty world object, with only basic properties.\n * This will be populated by setupWorld()\n */\nexport function createEmptyWorld() {\n  return {\n    saveGameName: null, // name of last game saved/loaded\n    ship: null,\n    view: { // global XY for current view (in manage mode, always ship.xy in fly mode)\n      x: 0,\n      y: 0,\n    },\n    ships: [],\n    planets: [],\n    selectedPlanet: {resources: {}},\n    lastPlanetLanded: null,\n    blueprints: {\n      ship: [],\n      equip: [],\n      xp: {\n        [c.PLANET_ROCK_FILE]: 0,\n        [c.PLANET_RED_FILE]: 0,\n        [c.PLANET_GREEN_FILE]: 0,\n        [c.PLANET_PURPLE_FILE]: 0,\n        [c.SHIP_ALIEN_TURRET.name]: 0,\n        [c.SHIP_ALIEN.name]: 0,\n        [c.SHIP_ALIEN_LARGE.name]: 0,\n        [c.SHIP_ALIEN_STEALTH.name]: 0,\n        [c.SHIP_ALIEN_FIRE.name]: 0\n      },\n      xpLevels: lodash.cloneDeep(c.XP_LEVELS),\n    },\n    nextId: 100, // unique ID for sprites, equip, etc...\n    // everything in system is transient and not serialized when saving the game\n    system: {\n      keys: {}, // Global keypress handlers\n      app: null, // Pixi App\n      gameState: c.GAME_STATE.INIT, // Current game state\n      isTyping: false, // used to stop keypress events ('w') when user is typing in input\n      gameLoop: null, // loop function in this state\n      bgSprite: null, // star background\n      explosionSheet: null, // spritesheet for explosions\n      explosions: [], //contains sprites\n      bullets: [], // contains all the bullets\n      nearby: {planets: [], ships: []}, // ships and planets near enough for collision detection and running AI\n      planetSpriteCache: {}, // {\"green_planet.png\" : Map(id:sprite, id:sprite)... }\n      shipSpriteCache: {}, // {\"alien_small.png\" : Map(id:sprite, id:sprite)... }\n      shieldSpriteCache: new Map(), // These sprites are each added to a ship and not reused\n      spriteContainers: {background: null, planets: null, bullets: null, ships: null, minimap: null},\n      miniMapGraphics: null, // used as a canvas for drawing the miniMap\n      initializing: true, // set to false when the game fully running (after first draw)\n    },\n  };\n}\n\nexport function setupWorld() {\n  const world = window.world;\n  setupSpriteContainers();\n  createBackground();\n  createPlanets();\n  // Default selectedPlanet, shouldn't be displayed\n  world.selectedPlanet = world.planets[0];\n   window.world.shipStartX = c.PLAYER_START_X;\n  //window.world.shipStartX = +1550;\n  window.world.shipStartY = c.PLAYER_START_Y;\n  world.ship = createShip(c.SHIP_EXPLORER, c.PLAYER);\n  const shipSprite = getShipSprite(world.ship);\n  shipSprite.visible = true;\n  world.ship.resources = c.PLAYER_STARTING_RESOURCES;\n\n  // DEBUG SHIP\n  // world.ship.armorMax = 15000;\n  // world.ship.armor = 15000;\n  // world.ship.resources = {titanium: 10000, gold: 10000, uranium: 10000};\n  // world.ship.resourcesMax = 100000;\n  // world.ship.equip = [c.EQUIP_BLINK_BRAKE, lodash.cloneDeep(c.EQUIP_TURRET_DEPLOYER), lodash.cloneDeep(c.EQUIP_STREAM_BLASTER)];\n  // world.ship.equipMax = world.ship.equip.length;\n  // world.blueprints.equip = [...c.ALL_EQUIP];\n  // world.blueprints.ship = [...c.ALL_SHIPS];\n\n  // DEBUG test alien\n  // createAlien(c.SHIP_ALIEN_TURRET, c.PLAYER_START_X + 450, c.PLAYER_START_Y + 70);\n  // createAlien(c.SHIP_ALIEN_LARGE, c.PLAYER_START_X + 450, c.PLAYER_START_Y - 70);\n\n  // DEBUG Planet\n  // let testPlanet = createPlanet(c.PLANET_ROCK_FILE, \"home\", 100, 200, {\n  //   titanium: 20500,\n  //   gold: 51000,\n  //   uranium: 5000,\n  // });\n  // testPlanet.x = c.PLAYER_START_X - 150;\n  // testPlanet.y = c.PLAYER_START_Y;\n  // testPlanet.resources.stored = {titanium: 10000, gold: 10000, uranium: 10000};\n\n  createAliens();\n  setupMiniMap();\n  setupExplosionSheet();\n}\n\n/**\n * Sets up the sprite containers in the correct display order\n */\nexport function setupSpriteContainers() {\n  let mainStage = window.world.system.app.stage;\n  let spriteContainers = window.world.system.spriteContainers;\n  spriteContainers.background = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.background);\n\n  spriteContainers.planets = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.planets);\n\n  spriteContainers.bullets = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.bullets);\n\n  spriteContainers.ships = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.ships);\n\n  spriteContainers.minimap = new window.PIXI.Container();\n  mainStage.addChild(spriteContainers.minimap);\n}\n\nexport function createBackground() {\n  let container = window.world.system.spriteContainers.background;\n  window.world.system.bgSprite = new window.PIXI.TilingSprite(\n    window.PIXI.Texture.from(c.STAR_BACKGROUND_FILE),\n    c.SCREEN_WIDTH,\n    c.SCREEN_HEIGHT,\n  );\n  container.addChild(window.world.system.bgSprite);\n}\n\nexport function createPlanets() {\n  let container = window.world.system.spriteContainers.planets;\n  for (let ring of c.UNIVERSE_RINGS) {\n    for (let i = 0; i < ring.planetCount; i++) {\n      let fileName = ring.planetFiles[utils.randomInt(0, ring.planetFiles.length - 1)];\n      let name = String.fromCharCode(65 + Math.floor(Math.random() * 26)) + utils.randomInt(1000, 999999);\n      let radius = utils.randomInt(ring.minPlanetRadius, ring.maxPlanetRadius);\n      let mass = radius * radius * c.PLANET_DENSITY.get(fileName);\n      let maxResource = mass * 2 * 0.3;\n      let minResource = mass * 0.1;\n      // Setup the planet\n      let planet = createPlanet(fileName, name, radius, mass, {\n        titanium: utils.randomInt(minResource, maxResource),\n        gold: utils.randomInt(minResource, maxResource),\n        uranium: utils.randomInt(minResource, maxResource),\n      }, container);\n      let {x, y} = getFreeXy(planet, ring.minDistToOtherPlanet, 0, ring.minDist, ring.maxDist);\n      planet.x = x;\n      planet.y = y;\n    }\n  }\n}\n\n/**\n * Distance to the nearest planet that is not equal to origPlanet\n * @return {{nearestPlanetDist: number, nearestPlanet: null}}\n */\nfunction nearestPlanetDistance(origPlanet, x, y) {\n  let minDist = 99999999999;\n  let nearestPlanet = null;\n  for (let planet of window.world.planets) {\n    if (planet !== origPlanet) {\n      let dist = utils.distanceBetween(x, y, planet.x, planet.y) - planet.radius;\n      if (origPlanet) {\n        dist -= origPlanet.radius;\n      }\n      if (!nearestPlanet || (dist < minDist)) {\n        minDist = dist;\n        nearestPlanet = planet;\n      }\n    }\n  } // for planet\n  return {nearestPlanet: nearestPlanet, nearestPlanetDist: minDist};\n}\n\n/**\n * Distance to the nearest alien\n * @return {{nearestAlien: null, nearestAlienDist: number}}\n */\nfunction nearestAlienDistance(x, y) {\n  let minDist = 99999999999;\n  let nearestAlien = null;\n  for (let alien of window.world.system.nearby.ships) {\n    if (alien === window.world.ship) {\n      continue;\n    }\n    // This assumes the calling code alien is the same size\n    let dist = utils.distanceBetween(x, y, alien.x, alien.y) - (alien.radius * 2);\n    if (!nearestAlien || (dist < minDist)) {\n      minDist = dist;\n      nearestAlien = alien;\n    }\n  } // for\n  return {nearestAlien: nearestAlien, nearestAlienDist: minDist};\n}\n\n/**\n * Find a free spot of space to stick something\n * This will recurse until it finds a free spot.\n * @return {{x, y}}\n */\nfunction getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, failCount = 0) {\n  let dir = utils.randomFloat(0, Math.PI * 2);\n  let dist = utils.randomInt(minDist, maxDist);\n  let {x, y} = utils.getPointFrom(0, 0, dir, dist);\n  let np = 9999;\n  if (minDistToPlanet > 0) {\n    let {nearestPlanetDist} = nearestPlanetDistance(planet, x, y);\n    if (nearestPlanetDist < minDistToPlanet) {\n      return getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, ++failCount);\n    }\n    np = nearestPlanetDist;\n  }\n  if (minDistToAlien > 0) {\n    let {nearestAlienDist} = nearestAlienDistance(x, y);\n    if (nearestAlienDist < minDistToAlien) {\n      return getFreeXy(planet, minDistToPlanet, minDistToAlien, minDist, maxDist, ++failCount);\n    }\n  }\n  if (failCount > 200) {\n    console.warn(\"Had a hard time finding a spot, it took \" + failCount + \" tries on ring \" + minDist + \" np=\" + np);\n  }\n  return {x, y};\n}\n\n// Creates and returns a planet (and adds it to the app)\nexport function createPlanet(planetFile, name, radius, mass, resources) {\n  let planet = {};\n  planet.name = name;\n  planet.x = 0; // temp should get reset\n  planet.y = 0; // temp should get reset\n  planet.mass = mass;\n  planet.resources = {\n    stored: {titanium: 0, gold: 0, uranium: 0},\n    raw: resources\n  };\n  planet.ships = []; // stored ships \n  planet.equip = []; // stored equipment\n  planet.buildings = []; // mines, factories\n  planet.radius = radius;\n  planet.lastLandingDir = 0;\n  planet.spriteFile = planetFile;\n  planet.spriteId = null; // no sprite created yet\n  window.world.planets.push(planet);\n  return planet;\n}\n\n/**\n * Finds or creates a planet sprite.\n * This cache works a little different, no sprites are re-used.\n * Once a planetSprite is created the buildings are added and it stays attached to the planet\n * Otherwise we would have to empty out the container and redraw the planet and buildings each time\n */\nexport function getPlanetSprite(planet) {\n  let planetSpriteCache = window.world.system.planetSpriteCache[planet.spriteFile];\n  // No cache for this file yet - create an empty cache\n  if (!planetSpriteCache) {\n    planetSpriteCache = new Map();\n    window.world.system.planetSpriteCache[planet.spriteFile] = planetSpriteCache;\n  }\n  // Lookup the sprite in the cache by ID\n  let planetContainer = planetSpriteCache.get(planet.spriteId);\n  if (planetContainer) {\n    return planetContainer;\n  }\n  // Setup the planet container sprite (contains planet plus buildings)\n  planetContainer = new window.PIXI.Container();\n  planetContainer.x = 0; // will be set on every draw\n  planetContainer.y = 0;\n  planetContainer.visible = true;\n  window.world.system.spriteContainers.planets.addChild(planetContainer);\n\n  // Setup the planet sprite itself\n  const planetSprite = new window.PIXI.Sprite(\n    window.PIXI.loader.resources[c.SPRITESHEET_JSON].textures[planet.spriteFile]);\n  planetSprite.anchor.set(0.5, 0.5);\n  let spriteScale = planet.radius * 2 / planetSprite.width;\n  // Planets with atmosphere are a little smaller than the full image size\n  if ((planet.spriteFile === c.PLANET_PURPLE_FILE) || (planet.spriteFile === c.PLANET_GREEN_FILE)) {\n    spriteScale = spriteScale * 1.08;\n  }\n  planetSprite.scale.set(spriteScale, spriteScale);\n  planetContainer.addChild(planetSprite);\n\n  for (const building of planet.buildings) {\n    manage.makeBuildingSprite(building, planet, planetContainer);\n  }\n\n  // Cache the new sprite\n  planet.spriteId = window.world.nextId++;\n  planetSpriteCache.set(planet.spriteId, planetContainer);\n  return planetContainer;\n}\n\n/**\n * Finds or creates a sprite for the ship\n * NOTE: This will return a non-visible sprite, the calling code is responsible for making the sprite visible\n */\nexport function getShipSprite(ship) {\n  // if (!ship.alive) {\n  //   console.warn('You should not get sprites for dead ships.');\n  //   console.trace();\n  //   window.error(); // does not exist... thus an error!\n  //   return;\n  // }\n  let shipSpriteCache = window.world.system.shipSpriteCache[ship.imageFile];\n  // No cache for this file yet - create an empty cache\n  if (!shipSpriteCache) {\n    shipSpriteCache = new Map();\n    window.world.system.shipSpriteCache[ship.imageFile] = shipSpriteCache;\n  }\n  // Lookup the sprite in the cache by ID\n  let sprite = shipSpriteCache.get(ship.spriteId);\n  if (sprite) {\n    return sprite;\n  }\n  // Lookup a free sprite (dead or off-screen alien)\n  for (let [spriteId, foundSprite] of shipSpriteCache.entries()) {\n    if (!foundSprite.visible) {\n      foundSprite.visible = false;\n      foundSprite.rotation = ship.rotation;\n      ship.spriteWidth = foundSprite.width;\n      ship.spriteHeight = foundSprite.height;\n      ship.radius = foundSprite.width / 2; // used for circular aliens\n      ship.spriteId = spriteId;\n      //console.log('found old sprite '+spriteId+' '+ship.imageFile);\n      return foundSprite;\n    }\n  } // foundSprite\n\n  // No sprite found - create a new one\n  let spriteSheet = window.PIXI.loader.resources[c.SPRITESHEET_JSON];\n  sprite = new window.PIXI.Sprite(spriteSheet.textures[ship.imageFile]);\n  sprite.position.set(c.HALF_SCREEN_WIDTH, c.HALF_SCREEN_HEIGHT);\n  sprite.anchor.set(0.5, 0.5);  // pivot on ship center\n  sprite.scale.set(ship.imageScale, ship.imageScale);\n  sprite.rotation = ship.rotation;\n  sprite.visible = false;\n  ship.spriteWidth = sprite.width;\n  ship.spriteHeight = sprite.height;\n  ship.radius = sprite.width / 2; // used for circular aliens\n  ship.spriteId = window.world.nextId++;\n  shipSpriteCache.set(ship.spriteId, sprite);\n  window.world.system.spriteContainers.ships.addChild(sprite);\n  //console.log('created new ship sprite '+ship.imageFile, sprite);\n  return sprite;\n}\n\n/**\n * @return The original width/height of the sprite before scaling was applied\n *   {width, height}\n */\nexport function getSpriteOrigWithHeight(sprite) {\n  const origWidth = sprite.width;\n  const origHeight = sprite.height;\n  sprite.scale.set(1, 1);\n  const width = sprite.width;\n  const height = sprite.height;\n  sprite.width = origWidth;\n  sprite.height = origHeight;\n  return {width, height};\n}\n\nexport function getShieldSprite(ship, shield) {\n  const cacheId = ship.id + '~' + shield.spriteFile;\n  // Lookup the sprite in the cache by ID\n  let shieldSprite = window.world.system.shieldSpriteCache.get(cacheId);\n  if (shieldSprite) {\n    return shieldSprite;\n  }\n  // Add a new shield image to the ship\n  const shipSprite = getShipSprite(ship);\n  let spriteSheet = window.PIXI.loader.resources[c.SPRITESHEET_JSON];\n  shieldSprite = new window.PIXI.Sprite(spriteSheet.textures[shield.spriteFile]);\n  shieldSprite.anchor.set(0.5, 0.5);  // pivot on center\n  const {width, height} = getSpriteOrigWithHeight(shipSprite);\n  // Radius within the scaled ship sprite\n  const shieldWidth = Math.max(width, height) * 1.5; // 1.5 to make it larger than the ship\n  shieldSprite.width = shieldWidth;\n  shieldSprite.height = shieldWidth;\n  shield.radius = (shieldWidth * ship.imageScale) / 2; // size without ship scaling\n  shipSprite.addChild(shieldSprite);\n  window.world.system.shieldSpriteCache.set(cacheId, shieldSprite);\n  return shieldSprite;\n}\n\n// Creates and returns a ship object\nexport function createShip(shipType, owner) {\n  let ship = lodash.cloneDeep(shipType);\n  ship.id = window.world.nextId++;\n  ship.selectedSecondaryWeaponIndex = -1;\n  for (let i=0; i<ship.equip.length; i++) {\n    const equip = ship.equip[i];\n    equip.id = window.world.nextId++;\n    if (ship.selectedSecondaryWeaponIndex < 0 && equip.type === c.EQUIP_TYPE_SECONDARY_WEAPON) {\n      ship.selectedSecondaryWeaponIndex = i;\n    }\n  }\n  ship.owner = owner;\n  ship.vx = 0; // velocityX\n  ship.vy = 0; // velocityY\n  ship.x = window.world.shipStartX;\n  ship.y = window.world.shipStartY;\n  ship.spriteId = null; // no sprite yet\n  ship.alive = true; // set to false if it blows up\n  ship.spriteWidth = null; //We won't know until we load the sprite\n  ship.rotation = 0;\n  window.world.system.nearby.ships.push(ship);\n  return ship;\n}\n\nexport function createAlien(shipType, x, y) {\n  let alien = createShip(shipType, c.ALIEN);\n  window.world.ships.push(alien);\n  alien.x = x;\n  alien.y = y;\n  alien.radius = 50; // will be set to a real value when sprite loads\n  return alien;\n}\n\nexport function createAliens() {\n  // Create motherships\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, 1700, 200);\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, 0, 1700);\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, -1700, 0);\n  createAlien(c.SHIP_ALIEN_MOTHERSHIP, 0, -1700);\n\n  for (let ring of c.UNIVERSE_RINGS) {\n    for (const alienInfo of ring.aliens) {\n      for (let i = 0; i < alienInfo.count; i++) {\n        let {x, y} = getFreeXy(null, c.MIN_ALIEN_DIST_TO_PLANET, c.MIN_ALIEN_DIST_TO_ALIEN, ring.minDist, ring.maxDist);\n        createAlien(alienInfo.file, x, y);\n      } // for i\n    } // for alienInfo\n  } // for ring\n}\n\nexport function setupMiniMap() {\n  let container = window.world.system.spriteContainers.minimap;\n  let miniMapContainer = new window.PIXI.Container();\n  container.addChild(miniMapContainer);\n\n  // Mask so drawings don't spill out of the map\n  let mask = new window.PIXI.Graphics();\n  mask.drawRect(0, c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT, c.MINIMAP_WIDTH, c.SCREEN_HEIGHT);\n  mask.renderable = true;\n  mask.cacheAsBitmap = true;\n  miniMapContainer.addChild(mask);\n  miniMapContainer.mask = mask;\n\n  // Graphics for drawing shapes on\n  let g = new window.PIXI.Graphics();\n  miniMapContainer.addChild(g);\n  window.world.system.miniMapGraphics = g;\n}\n\n/**\n * Called when the user clicks on the screen\n */\nexport function click(event) {\n  let x = event.data.global.x;\n  let y = event.data.global.y;\n  if ((x < c.MINIMAP_WIDTH) && (y > c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT)) {\n    fly.clickOnMinimap(x, y);\n  }\n}\n\nexport function changeGameState(newState) {\n  const world = window.world;\n  world.system.gameState = newState;\n  if (newState === c.GAME_STATE.FLY) {\n    fly.enterFlyState();\n    world.system.gameLoop = fly.flyLoop;\n  } else if (newState === c.GAME_STATE.MANAGE) {\n    manage.enterManageState();\n    world.system.gameLoop = manage.manageLoop;\n  } else {\n    world.system.gameLoop = null;\n  }\n}\n\n/**\n * Loop to run building, runs in any game mode (fly,manage)\n */\nexport function runBuildings() {\n  const world = window.world;\n  for (let planet of world.planets) {\n    for (let building of planet.buildings) {\n      if (building.type === c.BUILDING_TYPE_MINE) {\n        mineResource(planet, 'titanium', c.MINE_SPEED_TITANIUM);\n        mineResource(planet, 'gold', c.MINE_SPEED_GOLD);\n        mineResource(planet, 'uranium', c.MINE_SPEED_URANIUM);\n      }\n    } // for building\n    // If planet is out of resources stop the mine animations\n    if ((planet.resources.raw.titanium === 0)\n      && (planet.resources.raw.gold === 0)\n      && (planet.resources.raw.uranium === 0)) {\n      const planetSprite = getPlanetSprite(planet);\n      for (const buildingSprite of planetSprite.children) {\n        // all animated sprites stop (this may not be true if new building types are added)\n        if (buildingSprite.animationSpeed) {\n          buildingSprite.animationSpeed = 0;\n        }\n      }\n    }\n  } // for planet\n}\n\nfunction mineResource(planet, resourceType, amount) {\n  if (planet.resources.raw[resourceType] > 0) {\n    planet.resources.raw[resourceType] -= amount;\n    planet.resources.stored[resourceType] += amount;\n    if (planet.resources.raw[resourceType] <= 0) {\n      planet.resources.raw[resourceType] = 0;\n    }\n    addMiningXp(amount, planet);\n  }\n}\n\nfunction addMiningXp(amount, planet) {\n  let blueprints = window.world.blueprints;\n  const xp = blueprints.xp[planet.spriteFile] += amount;\n  let nextLevel = blueprints.xpLevels[planet.spriteFile][0];\n  if (nextLevel && (nextLevel.xp <= xp)) {\n    addBlueprint(nextLevel);\n    // Remove the item\n    blueprints.xpLevels[planet.spriteFile].shift();\n  }\n}\n\nexport function addAlienXp(ship) {\n  let blueprints = window.world.blueprints;\n  const xp = blueprints.xp[ship.name] += 1;\n  if (!xp) {\n    return;\n  }\n  let nextLevel = blueprints.xpLevels[ship.name][0];\n  if (nextLevel && (nextLevel.xp <= xp)) {\n    addBlueprint(nextLevel);\n    // Remove the item\n    blueprints.xpLevels[ship.name].shift();\n  }\n}\n\nexport function addBlueprint(nextLevel) {\n  utils.showToast('New plan: ' + nextLevel.obj.name);\n  let blueprints = window.world.blueprints;\n  if (nextLevel.obj.objType === c.OBJ_EQUIP) {\n    blueprints.equip.push(nextLevel.obj);\n  } else if (nextLevel.obj.objType === c.OBJ_SHIP) {\n    blueprints.ship.push(nextLevel.obj);\n  } else {\n    console.warn(\"Could not find blueprint of type \" + nextLevel.obj.objType + \" nextLevel=\", nextLevel);\n  }\n}\n\n/**\n * Checks if the combined resources of planet and ship can afford the resources\n * Call this before calling payResourceCost\n * @return true if there are enough resources available\n */\nexport function canAfford(planet, ship, resources) {\n  let titanium = 0;\n  let gold = 0;\n  let uranium = 0;\n  if (planet) {\n    titanium += planet.resources.stored.titanium;\n    gold += planet.resources.stored.gold;\n    uranium += planet.resources.stored.uranium;\n  }\n  if (ship) {\n    titanium += ship.resources.titanium;\n    gold += ship.resources.gold;\n    uranium += ship.resources.uranium;\n  }\n  return (titanium >= resources.titanium)\n    && (gold >= resources.gold)\n    && (uranium >= resources.uranium);\n}\n\n/**\n * Pays the cost, taking from the planet and the ship as available\n * NOTE: This will not ensure you have enough resources, you can go into debt if you call this without checking\n * first using canAfford()\n * @param planet planet to get resources from\n * @param ship ship to get resources from\n * @param resources amount to pay\n */\nexport function payResourceCost(planet, ship, resources) {\n  payResource(planet, ship, 'titanium', resources.titanium);\n  payResource(planet, ship, 'gold', resources.gold);\n  payResource(planet, ship, 'uranium', resources.uranium);\n}\n\nexport function payResource(planet, ship, resourceType, amount) {\n  let paid = -amount; // amount owing (overwritten if some payment comes from the planet)\n  if (planet) {\n    paid = planet.resources.stored[resourceType] - amount;\n    if (paid >= 0) {\n      planet.resources.stored[resourceType] -= amount;\n      return;\n    } else {\n      // Planet can't afford this purchase, take some from the ship\n      planet.resources.stored[resourceType] = 0;\n    }\n  }\n  if (ship) {\n    ship.resources[resourceType] = ship.resources[resourceType] + paid;\n    if (ship.resources[resourceType] < 0) {\n      console.warn(\"Ship is in debt \" + ship.resources[resourceType] + \" \" + resourceType);\n    }\n  } else if (paid < 0) {\n    planet.resources.stored[resourceType] = planet.resources.stored[resourceType] + paid;\n    console.warn(\"Planet is in debt \" + planet.resources.stored[resourceType] + \" \" + resourceType);\n  }\n}\n\nexport function setupExplosionSheet() {\n  window.world.system.explosionSheet = window.PIXI.Loader.shared.resources[c.CRASH_JSON].spritesheet;\n  // Preload an explosion sprite animation (these will be cached and reused in world.system.explosions)\n  window.world.system.explosions.push(createExplosionSprite());\n}\n\nexport function createExplosionSprite() {\n  let sprite = new window.PIXI.AnimatedSprite(window.world.system.explosionSheet.animations[c.CRASH]);\n  sprite.animationSpeed = 0.4;\n  sprite.loop = false;\n  sprite.anchor.set(0.5, 0.5);\n  sprite.scale.set(2, 2);\n  sprite.x = c.HALF_SCREEN_WIDTH;\n  sprite.y = c.HALF_SCREEN_WIDTH;\n  sprite.loop = true;\n  sprite.visible = false;\n  window.world.system.explosions.push(sprite);\n  window.world.system.spriteContainers.bullets.addChild(sprite);\n  return sprite;\n}\n","import {ai, c, game, manage, utils} from './';\nimport {getShipSprite} from \"./game\";\n\nexport function enterFlyState() {\n  console.log(\"Take off\");\n}\n\n// Main play mode - flying\nexport function flyLoop(delta) {\n  if (delta > 1.005) {\n    console.log('Lagging with delta=' + delta);\n  }\n  let world = window.world;\n  let ship = window.world.ship;\n\n  // Cache all the nearby planets and ships\n  setupNearby();\n\n  // When ship.alive is false the ship is exploding\n  if (ship.alive) {\n    runDroids(ship);\n    // Keypress handling\n    if (world.system.keys.left.isDown || world.system.keys.a.isDown) {\n      turnShip(ship, true);\n    }\n    if (world.system.keys.right.isDown || world.system.keys.d.isDown) {\n      turnShip(ship, false);\n    }\n    if (world.system.keys.up.isDown || world.system.keys.w.isDown) {\n      propelShip(ship);\n    }\n    if (world.system.keys.down.isDown || world.system.keys.s.isDown) {\n      brakeShip(ship);\n    }\n    if (world.system.keys.space.isDown) {\n      firePrimaryWeapon(ship, 0.05);\n    }\n    if (world.system.keys.x.isDown) {\n      fireSecondaryWeapon(ship);\n    }\n    if (world.system.keys.q.isDown) {\n      thrustShip(ship, true);\n    }\n    if (world.system.keys.e.isDown) {\n      thrustShip(ship, false);\n    }\n\n    // Find planets in view\n    let planetsInView = [];\n    for (let planet of world.system.nearby.planets) {\n      if (planetInView(ship, planet)) {\n        planetsInView.push(planet);\n      }\n    }\n\n    // Gravity\n    for (let planet of planetsInView) {\n      let grav = utils.calcGravity(ship.x, ship.y, planet);\n      ship.vx += grav.x;\n      ship.vy += grav.y;\n    }\n\n    // move the ship\n    ship.x += ship.vx;\n    ship.y += ship.vy;\n    world.view.x = ship.x;\n    world.view.y = ship.y;\n\n    let shipSprite = game.getShipSprite(ship);\n    shipSprite.rotation = ship.rotation;\n\n    // Don't detect collisions until all the drawing is done\n    // Pixijs sometimes gets the sprite locations wrong when they haven't been rendered yet\n    if (!world.system.initializing) {\n      // Ship-Planet Collisions\n      for (let planet of planetsInView) {\n        if (detectCollisionWithPlanet(ship, shipSprite, planet)) {\n          landShip(ship, planet);\n          return; // exit loop\n        }\n      } // for planet\n      // Ship-Alien collision\n      for (let alien of world.system.nearby.ships) {\n        if (alien.alive && detectCollisionWithAlien(ship, shipSprite, alien)) {\n          shipsCollide(ship, alien);\n        }\n      }\n    }\n  }\n\n  moveExplosions(); // especially alien explosions\n  moveBackground(ship);\n  drawMiniMap();\n  // first draw is done\n  if (world.system.initializing) {\n    world.system.initializing = false;\n  }\n}\n\n\n/**\n * Creates a cache of all nearby planets and ships\n */\nexport function setupNearby() {\n  const nearby = window.world.system.nearby;\n  const ship = window.world.ship;\n  const minX = ship.x - c.NEARBY_WIDTH / 2;\n  const maxX = ship.x + c.NEARBY_WIDTH / 2;\n  const minY = ship.y - c.NEARBY_HEIGHT / 2;\n  const maxY = ship.y + c.NEARBY_HEIGHT / 2;\n\n  nearby.planets = [];\n  // for every planet\n  for (const planet of window.world.planets) {\n    if ((planet.x + planet.radius >= minX) && (planet.x - planet.radius <= maxX) &&\n      (planet.y + planet.radius >= minY) && (planet.y - planet.radius <= maxY)) {\n      nearby.planets.push(planet);\n    }\n  } // for planet\n\n  // for every ship\n  nearby.ships = [window.world.ship]; // ship is always nearby\n  for (const ship of window.world.ships) {\n    if ((ship.x + ship.radius >= minX) && (ship.x - ship.radius <= maxX) &&\n      (ship.y + ship.radius >= minY) && (ship.y - ship.radius <= maxY)) {\n      nearby.ships.push(ship);\n    }\n  } // for ship\n}\n\n/**\n * Redraw all planets and aliens\n */\nexport function repositionScreen() {\n  const ship = window.world.ship;\n  // Reposition all the planets\n  for (let planet of window.world.planets) {\n    planetInView(ship, planet);\n  }\n  for (const ship of window.world.ships) {\n    if (ship.spriteId) {\n      getShipSprite(ship).visible = false;\n      ship.spriteId = null;\n    }\n  }\n  setupNearby();\n  // Reposition all the aliens\n  ai.moveAliens();\n  drawMiniMap();\n}\n\n/**\n * Cools all ship weapons, run in mainLoop\n */\nexport function coolAllWeapons() {\n  // Ship is in nearby\n  for (let ship of window.world.system.nearby.ships) {\n    coolWeapons(ship);\n  }\n}\n\n/**\n * called in flyLoop to cool weapons\n */\nexport function coolWeapons(ship) {\n  for (let equip of ship.equip) {\n    // If equip has a cool time\n    if (equip.cool) {\n      equip.cool -= 1;\n    }\n    // Gunnery Droids are equip with weapons\n    if (equip.weapon && equip.weapon.cool) {\n      equip.weapon.cool -= 1;\n    }\n    if (equip.shield && equip.shield.active) {\n      equip.shield.lifetime -= 1;\n      if (equip.shield.lifetime <= 0) {\n        equip.shield.lifetime = 0;\n        disableShield(ship, equip.shield);\n      }\n    }\n  }\n}\n\nexport function resetWeaponsCool(ship) {\n  for (let equip of ship.equip) {\n    if ((equip.type === c.EQUIP_TYPE_PRIMARY_WEAPON) && (equip.cool > 0)) {\n      equip.cool = 0;\n    }\n  }\n}\n\nexport function runDroids(ship) {\n  for (let droid of ship.equip) {\n    if ((droid.type === c.EQUIP_TYPE_REPAIR_DROID) && (ship.armor < ship.armorMax)) {\n      let cost = {titanium: droid.repairSpeed, gold: 0, uranium: 0};\n      if (game.canAfford(null, ship, cost)) {\n        ship.armor += droid.repairSpeed;\n        game.payResourceCost(null, ship, cost);\n      }\n    } else if (droid.type === c.EQUIP_TYPE_GUNNERY_DROID) {\n      shootAtNearestAlien(ship, droid.weapon);\n    }\n  } // for\n}\n\n/**\n * Fires the weapon in the direction of the nearest alien (if able to )\n */\nexport function shootAtNearestAlien(ship, weapon) {\n  // If we can't shoot, don't waste our time\n  if (weapon.cool > 0) {\n    return;\n  }\n  let nearestAlien = null;\n  let nearestAlienDist = null;\n  for (let alien of window.world.system.nearby.ships) {\n    if (alien.alive && alien.owner === c.ALIEN) {\n      let dist = utils.distanceBetween(ship.x, ship.y, alien.x, alien.y);\n      if (!nearestAlien || (dist < nearestAlienDist)) {\n        nearestAlien = alien;\n        nearestAlienDist = dist;\n      }\n    }\n  } // for\n  if (nearestAlien && (nearestAlienDist <= weaponRange(weapon))) {\n    const origDir = ship.rotation;\n    ship.rotation = utils.normalizeRadian(Math.atan2(nearestAlien.y - ship.y, nearestAlien.x - ship.x));\n    fireWeapon(weapon, ship, 0.1);\n    ship.rotation = origDir;\n  }\n}\n\nexport function moveBackground(ship) {\n  let bgSprite = window.world.system.bgSprite;\n  bgSprite.tilePosition.x = (100 - ship.x) + c.HALF_SCREEN_WIDTH;\n  bgSprite.tilePosition.y = (100 - ship.y) + c.HALF_SCREEN_HEIGHT;\n}\n\n/**\n * @return true if the planet is in view of the ship, false otherwise\n * NOTE: This will set the sprite.visible and sprite x/y attributes for the planet\n */\nexport function planetInView(ship, planet) {\n  // Right side\n  if ((ship.x + c.HALF_SCREEN_WIDTH + planet.radius < planet.x) || // Right\n    (ship.x - c.HALF_SCREEN_WIDTH - planet.radius > planet.x) || // Left\n    (ship.y + c.HALF_SCREEN_HEIGHT + planet.radius < planet.y) || // Bottom\n    (ship.y - c.HALF_SCREEN_HEIGHT - planet.radius > planet.y)) { // Top\n    // Planet is not currently visible, but if it has an Id then it used to be visible\n    if (planet.spriteId) {\n      const sprite = game.getPlanetSprite(planet);\n      if (sprite.visible) {\n        sprite.visible = false;\n      }\n    }\n    return false;\n  }\n  // Here we know this planet is in view\n  const sprite = game.getPlanetSprite(planet);\n  sprite.visible = true;\n  // Set planet relative to the ship's viewport\n  sprite.x = (planet.x - ship.x) + c.HALF_SCREEN_WIDTH;\n  sprite.y = (planet.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n  return true;\n}\n\n/**\n * @return the first active shield the ship is equipped with\n */\nexport function getActiveShield(ship) {\n  for (const equip of ship.equip) {\n    if (equip.shield && equip.shield.active) {\n      return equip.shield;\n    }\n  }\n  return null;\n}\n\n/**\n * @return the first active shield equip in the ship, and if none are active, returns the first shield it finds.\n * returns an equip (not equip.shield like getActiveShield)\n */\nexport function getEquippedShield(ship) {\n  let shield = null;\n  for (const equip of ship.equip) {\n    if (equip.shield) {\n      shield = equip;\n      if (equip.shield.active) {\n        return shield;\n      }\n    }\n  } // for equip\n  return shield;\n}\n\n// Returns true if there is a collision and false otherwise\nexport function detectCollisionWithPlanet(ship, shipSprite, planet) {\n  const shield = getActiveShield(ship);\n  if (shield) {\n    // shield collision is round\n    return utils.distanceBetween(ship.x, ship.y, planet.x, planet.y) < (planet.radius + shield.radius);\n  }\n  // [[x,y],[x,y]]\n  let collisionPoints = utils.getVertexData(ship.x, ship.y, shipSprite);\n  for (let point of collisionPoints) {\n    let dist = utils.distanceBetween(point[0], point[1], planet.x, planet.y);\n    if (dist < planet.radius - c.ALLOWED_OVERLAP) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// Returns true if there is a collision and false otherwise\nexport function detectCollisionWithAlien(ship, shipSprite, alien) {\n  if (ship === alien) {\n    return false;\n  }\n  const shield = getActiveShield(ship);\n  if (shield) {\n    // shield collision is round\n    return utils.distanceBetween(ship.x, ship.y, alien.x, alien.y) < (alien.radius + shield.radius);\n  }\n  let collisionPoints = utils.getVertexData(ship.x, ship.y, shipSprite);\n  for (let point of collisionPoints) {\n    // Only works with circular aliens (need different logic for squares)\n    if (alien.radius) {\n      let dist = utils.distanceBetween(point[0], point[1], alien.x, alien.y);\n      if (dist < alien.radius - c.ALLOWED_OVERLAP) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * Land the ship on the planet\n * NOTE: This will cause damage to the ship attempting to land (side-effects)\n */\nfunction landShip(ship, planet) {\n  // atan2 has parameters (y,x)\n  let planetDir = utils.normalizeRadian(Math.atan2(ship.y - planet.y, ship.x - planet.x));\n  let dirDiff = Math.abs(ship.rotation - planetDir);\n  let speed = Math.abs(ship.vx) + Math.abs(ship.vy);\n  // 0 and PI*2 are right beside each other, so large values are very close to small values\n  let success = ((dirDiff < ship.crashAngle) || (dirDiff > (Math.PI * 2 - ship.crashAngle)))\n    && (speed < ship.crashSpeed)\n  // Stop moving\n  ship.vx = 0;\n  ship.vy = 0;\n  if (!success) {\n    // The landing was rough - do damage\n    let speedDiff = Math.max(speed - ship.crashSpeed, 0); // 0 if negative\n    let dirDiffAdj = Math.max(dirDiff - ship.crashAngle, 0); // 0 if negative\n    if (dirDiffAdj > Math.PI) {\n      dirDiffAdj = (Math.PI * 2) - dirDiff - ship.crashAngle;\n    }\n    let dmgPct = (speedDiff / 3) + dirDiffAdj;\n    let dmg = dmgPct * ship.armorMax;\n    damageShip(ship, dmg, resetGame);\n  }\n  // Disable shields when landing\n  const shield = getActiveShield(ship);\n  if (shield) {\n    disableShield(ship, shield);\n  }\n  // If the ship survived the landing\n  if (ship.armor > 0) {\n    window.world.selectedPlanet = planet; // currently selected planet (for manage UI)\n    window.world.lastPlanetLanded = planet; // last planet landed on\n    //Set ship position and angle on the planet surface\n    let dir = utils.directionTo(planet.x, planet.y, ship.x, ship.y)\n    let r = planet.radius + ship.spriteWidth / 2;\n    let {xAmt, yAmt} = utils.dirComponents(dir, r);\n    ship.x = planet.x + xAmt;\n    ship.y = planet.y + yAmt;\n    ship.rotation = dir;\n    planet.lastLandingDir = dir;\n    game.getShipSprite(ship).rotation = dir;\n    repositionScreen();\n    game.changeGameState(c.GAME_STATE.MANAGE);\n  }\n}\n\nexport function getExplosionSprite(ship) {\n  let sprite = null;\n  for (let explosionSprite of window.world.system.explosions) {\n    if (!explosionSprite.visible) {\n      sprite = explosionSprite;\n      break;\n    }\n  }\n  if (!sprite) {\n    sprite = game.createExplosionSprite();\n  }\n  let playerShip = window.world.ship;\n  sprite.visible = true;\n  sprite.globalX = ship.x;\n  sprite.globalY = ship.y;\n  sprite.x = (ship.x - playerShip.x) + c.HALF_SCREEN_WIDTH;\n  sprite.y = (ship.y - playerShip.y) + c.HALF_SCREEN_HEIGHT;\n  return sprite\n}\n\n/**\n * Destroys the ship playing an explosion animation\n * @param ship: the one to explode\n * @param afterExplosion: function to run after exploding (or null if nothing to do)\n */\nexport function destroyShip(ship, afterExplosion) {\n  if (ship.owner === c.ALIEN) {\n    game.addAlienXp(ship);\n  }\n  let explosionSprite = getExplosionSprite(ship);\n  const shipSprite = game.getShipSprite(ship);\n  shipSprite.visible = false;\n  ship.alive = false;\n  ship.spriteId = null;\n  explosionSprite.play();\n  // This function runs after the animation finishes a loop\n  explosionSprite.onLoop = () => {\n    explosionSprite.stop(); // pause until we crash again\n    explosionSprite.visible = false;\n    if (afterExplosion) {\n      afterExplosion();\n    }\n  };\n}\n\nfunction resetGame() {\n  // loadNewShip will setup a new ship but not position it\n  let ship = window.world.ship;\n  let planet = window.world.selectedPlanet;\n  // The current ship is gone\n  ship.resourcesMax = 0;\n  ship.resources = {titanium: 0, gold: 0, uranium: 0};\n  ship.equip = [];\n  ship.armorMax = 0;\n  ship.armor = 0;\n\n  // If the most recently used planet doesn't have any buildings\n  if (!planet || (planet.buildings.length === 0)) {\n    // find a planet with a mine\n    for (let planet of window.world.planets) {\n      if (planet.buildings.length > 0) {\n        window.world.selectedPlanet = planet;\n        break;\n      }\n    }\n    // No buildings on any planet- game over! \n    if (!planet) {\n      window.world.selectedPlanet = window.world.planets[0];\n    }\n  }\n  let {x, y, rotation} = manage.getAvailablePlanetXY(planet, ship, planet.lastLandingDir, 20, 0);\n  ship.x = x;\n  ship.y = y;\n  ship.vx = 0;\n  ship.vy = 0;\n  ship.rotation = rotation;\n  repositionScreen();\n  game.changeGameState(c.GAME_STATE.MANAGE);\n}\n\n/**\n * Explosion position update on screen as ship moves\n * This is called in the fly loop\n */\nfunction moveExplosions() {\n  let ship = window.world.ship;\n  for (let sprite of window.world.system.explosions) {\n    sprite.x = (sprite.globalX - ship.x) + c.HALF_SCREEN_WIDTH;\n    sprite.y = (sprite.globalY - ship.y) + c.HALF_SCREEN_HEIGHT;\n  }\n}\n\nfunction turnShip(ship, left) {\n  let turnSpeed = ship.turnSpeed;\n  let turnBooster = getEquip(ship, c.EQUIP_TYPE_TURN);\n  if (turnBooster) {\n    turnSpeed += turnBooster.boostSpeed;\n  }\n  ship.rotation = utils.normalizeRadian(ship.rotation + turnSpeed * (left ? -1 : 1));\n}\n\nfunction propelShip(ship) {\n  let propulsion = ship.propulsion;\n  let booster = getEquip(ship, c.EQUIP_TYPE_TURN);\n  if (booster) {\n    propulsion += booster.boostSpeed;\n  }\n  ship.vx += propulsion * Math.cos(ship.rotation);\n  ship.vy += propulsion * Math.sin(ship.rotation);\n}\n\nfunction brakeShip(ship) {\n  let brake = getEquip(ship, c.EQUIP_TYPE_BRAKE);\n  if (brake) {\n    if (brake.brakeSpeedPct > 0) {\n      ship.vx -= ship.vx * brake.brakeSpeedPct;\n      ship.vy -= ship.vy * brake.brakeSpeedPct;\n    } else {\n      // Blink brake pct is 0, immediate stop (no momentum)\n      ship.vx = 0;\n      ship.vy = 0;\n    }\n  }\n}\n\nfunction thrustShip(ship, left) {\n  let thruster = getEquip(ship, c.EQUIP_TYPE_THRUSTER);\n  if (thruster) {\n    let dir = utils.normalizeRadian(ship.rotation + ((left ? -1 : 1) * Math.PI / 2)); // 90 deg turn\n    const thrustX = thruster.thrustSpeed * Math.cos(dir);\n    const thrustY = thruster.thrustSpeed * Math.sin(dir);\n    if (thruster.thrustType === c.THRUST_MOMENTUM) {\n      ship.vx += thrustX;\n      ship.vy += thrustY\n    } else if (thruster.thrustType === c.THRUST_BLINK) {\n      ship.x += thrustX;\n      ship.y += thrustY;\n    } else {\n      console.warn(\"Unable to use thruster with type \" + thruster.thrustType);\n    }\n  }\n}\n\n/**\n * Fires the weapon from the location and direction of the ship\n */\nexport function fireWeapon(weapon, ship, jitter) {\n  if (weapon && (weapon.cool <= 0)) {\n    fireBullet(ship, weapon, jitter);\n    weapon.cool = weapon.coolTime; // this is decremented in coolWeapons\n  }\n}\n\nexport function firePrimaryWeapon(ship, jitter) {\n  let gun = getEquip(ship, c.EQUIP_TYPE_PRIMARY_WEAPON);\n  if (gun) {\n    fireWeapon(gun, ship, gun.jitter ? gun.jitter : jitter);\n  }\n}\n\nexport function getSecondaryWeapon(ship) {\n  if (!ship.selectedSecondaryWeaponIndex || ship.selectedSecondaryWeaponIndex < 0) {\n    // Just find any secondary weapon - none was selected\n    return getEquip(ship, c.EQUIP_TYPE_SECONDARY_WEAPON);\n  }\n  // Find the equipped weapon\n  const equip = ship.equip[ship.selectedSecondaryWeaponIndex];\n  if (equip.type !== c.EQUIP_TYPE_SECONDARY_WEAPON) {\n    manage.selectFirstSecondaryWeapon(ship);\n    return getEquip(ship, c.EQUIP_TYPE_SECONDARY_WEAPON);\n  }\n  return equip;\n}\n\nexport function fireSecondaryWeapon(ship) {\n  let weapon = getSecondaryWeapon(ship);\n  if (weapon && (weapon.cool <= 0)) {\n    if (weapon.createShip) {\n      if (!game.canAfford(null, ship, weapon.createShip.type.cost)) {\n        // We don't fire the weapon - we can't afford it\n        return;\n      }\n      game.payResourceCost(null, ship, weapon.createShip.type.cost);\n      const child = game.createShip(weapon.createShip.type, ship.owner);\n      const childSprite = game.getShipSprite(child);\n      const shipRadius = ship.spriteWidth || (ship.radius * 2);\n      const childDistFromShip = (shipRadius / 2) + (child.spriteWidth / 2) + 20;\n      const dir = weapon.createShip.dir === c.DIR_AHEAD_OF_SHIP ? utils.normalizeRadian(ship.rotation - Math.PI) : ship.rotation;\n      const {xAmt, yAmt} = utils.dirComponents(dir, childDistFromShip);\n      child.x = ship.x - xAmt;\n      child.y = ship.y - yAmt;\n      if (child.propulsion) {\n        child.vx = ship.vx;\n        child.vy = ship.vy;\n      }\n      child.rotation = utils.normalizeRadian(dir - Math.PI);\n      childSprite.x = (child.x - window.world.ship.x) + c.HALF_SCREEN_WIDTH;\n      childSprite.y = (child.y - window.world.ship.y) + c.HALF_SCREEN_HEIGHT;\n      childSprite.visible = true;\n      window.world.ships.push(child);\n      // Since it may not move we need to check if it collides with anything\n      ai.checkForCollisionWithPlanet(child);\n      ai.checkForCollisionWithShip(child);\n    }\n    if (weapon.shield) {\n      enableShield(ship, weapon.shield);\n    }\n    weapon.cool = weapon.coolTime; // this is decremented in coolWeapons\n  }\n}\n\n/**\n * Called to enable a ship's shield.\n * This will add a shield sprite to the ship and set it to visible\n */\nexport function enableShield(ship, shield) {\n  const shieldSprite = game.getShieldSprite(ship, shield);\n  shieldSprite.visible = true;\n  shield.active = true;\n  shield.lifetime = shield.lifetimeMax;\n  shield.armor = shield.armorMax;\n  // Increase the ship size to the size of the shield\n  ship.spriteWidth = shield.radius * 2;\n  ship.spriteHeight = shield.radius * 2;\n}\n\n/**\n * Called to disable, and stop drawing a shield on a ship\n */\nexport function disableShield(ship, shield) {\n  const shieldSprite = game.getShieldSprite(ship, shield);\n  shieldSprite.visible = false;\n  shield.active = false;\n  // Reset the ship size back to regular\n  const shipSprite = game.getShipSprite(ship);\n  ship.spriteWidth = shipSprite.width;\n  ship.spriteHeight = shipSprite.height;\n}\n\n/**\n * Fires a bullet from the ship\n */\nexport function fireBullet(ship, gun, jitter) {\n  let bullet = findOrCreateBullet(gun.bulletFile);\n  bullet.lifetime = gun.lifetime;\n  bullet.damage = gun.damage;\n  const jitterAmt = jitter ? (jitter * Math.random() * (utils.randomBool() ? -1 : 1)) : 0;\n  const rotation = ship.rotation + jitterAmt;\n  bullet.vx = ship.vx + gun.speed * Math.cos(rotation);\n  bullet.vy = ship.vy + gun.speed * Math.sin(rotation);\n  bullet.x = ship.x + Math.sqrt(ship.spriteWidth * ship.spriteWidth + ship.spriteHeight * ship.spriteHeight) / 2 * Math.cos(rotation);\n  bullet.y = ship.y + Math.sqrt(ship.spriteWidth * ship.spriteWidth + ship.spriteHeight * ship.spriteHeight) / 2 * Math.sin(rotation);\n}\n\n/**\n * Gets the next available bullet (one that is not visible)\n */\nfunction findOrCreateBullet(bulletFile) {\n  for (let bullet of window.world.system.bullets) {\n    if (!bullet.active && (bullet.fileName === bulletFile)) {\n      bullet.active = true;\n      bullet.sprite.visible = true;\n      return bullet;\n    }\n  }\n  // Create a new bullet\n  let bullet = {active: true, damage: 0, x: 0, y: 0, vx: 0, vy: 0, lifetime: 1, fileName: bulletFile};\n  // Setup sprite\n  let spritesheet = window.PIXI.loader.resources[c.SPRITESHEET_JSON];\n  let sprite = new window.PIXI.Sprite(spritesheet.textures[bulletFile]);\n  sprite.x = -100;\n  sprite.y = -100;\n  sprite.anchor.set(0.5, 0.5);\n  sprite.scale.set(0.5, 0.5);\n  window.world.system.spriteContainers.bullets.addChild(sprite);\n  bullet.sprite = sprite;\n  window.world.system.bullets.push(bullet);\n  return bullet;\n}\n\nfunction killBullet(bullet) {\n  bullet.active = false;\n  bullet.sprite.visible = false;\n  bullet.sprite.x = -100;\n  bullet.sprite.y = -100;\n  bullet.vx = 0;\n  bullet.vy = 0;\n}\n\n/**\n * Moves all the bullets (called every draw cycle from app.js mainLoop)\n */\nexport function moveBullets() {\n  let ship = window.world.ship;\n  for (let bullet of window.world.system.bullets) {\n    if (bullet.active) {\n      bullet.x = bullet.x + bullet.vx;\n      bullet.y = bullet.y + bullet.vy;\n      bullet.sprite.x = (bullet.x - ship.x) + c.HALF_SCREEN_WIDTH;\n      bullet.sprite.y = (bullet.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n      bullet.lifetime = bullet.lifetime - 1;\n      if (bullet.lifetime <= 0) {\n        killBullet(bullet);\n      }\n      checkForBulletCollision(bullet);\n    }\n  } // for bullet\n}\n\nfunction checkForBulletCollision(bullet) {\n  let ship = window.world.ship;\n  // Collision with planet\n  for (let planet of window.world.system.nearby.planets) {\n    if (utils.distanceBetween(planet.x, planet.y, bullet.x, bullet.y) < planet.radius) {\n      // TODO: Check for building damage\n      killBullet(bullet);\n    }\n  }\n  // Collision with ship\n  if (ship.alive) {\n    const shield = getActiveShield(ship);\n    if (shield && utils.distanceBetween(ship.x, ship.y, bullet.x, bullet.y) < shield.radius) {\n      bulletHitShip(bullet, ship, resetGame);\n    } else {\n      const shipSprite = game.getShipSprite(ship);\n      if (shipSprite.containsPoint({x: bullet.sprite.x, y: bullet.sprite.y})) {\n        bulletHitShip(bullet, ship, resetGame);\n      }\n    }\n  }\n  // Collision with alien ship\n  for (let alien of window.world.system.nearby.ships) {\n    if ((alien !== ship) && alien.alive && alien.radius) {\n      const shield = getActiveShield(alien);\n      if ((shield && utils.distanceBetween(alien.x, alien.y, bullet.x, bullet.y) < shield.radius) || // hit alien shield\n        (utils.distanceBetween(alien.x, alien.y, bullet.x, bullet.y) <= alien.radius)) { // hit alien ship\n        bulletHitShip(bullet, alien, null);\n      }\n    }\n  } // for alien\n}\n\n/**\n * Apply damage from bullet to ship, also kills the bullet\n */\nfunction bulletHitShip(bullet, ship, afterExplosion) {\n  damageShip(ship, bullet.damage, afterExplosion);\n  killBullet(bullet);\n}\n\n/**\n * applies damage to the ship, destroying the ship if needed\n */\nexport function damageShip(ship, damage, afterExplosion) {\n  const shield = getActiveShield(ship);\n  if (shield) {\n    shield.armor -= damage;\n    if (shield.armor <= 0) {\n      shield.armor = 0;\n      disableShield(ship, shield);\n    }\n  } else { // no shield\n    ship.armor = ship.armor - damage;\n    if (ship.armor <= 0) {\n      ship.armor = 0;\n      destroyShip(ship, afterExplosion);\n    }\n  }\n}\n\n/**\n * collision between player ship and alien (sometimes alien and alien)\n */\nexport function shipsCollide(ship, alien) {\n  if (ship === alien) {\n    return; // can't collide with yourself\n  }\n  let shipDamage = ship.armor;\n  let alienDamage = alien.armor;\n  damageShip(alien, shipDamage, (window.world.ship === alien) ? resetGame : null);\n  damageShip(ship, alienDamage, (window.world.ship === ship) ? resetGame : null);\n  // If you died hitting an alien, stop moving\n  if (!ship.alive) {\n    ship.vx = 0;\n    ship.vy = 0;\n  }\n}\n\n/**\n * @return matching acc equipment type if it is found, null otherwise\n */\nexport function getEquip(ship, equipType) {\n  for (let equip of ship.equip) {\n    if (equip.type === equipType) {\n      return equip;\n    }\n  }\n  return null;\n}\n\nexport function drawMiniMap() {\n  let g = window.world.system.miniMapGraphics;\n  let view = window.world.view;\n  let l = 0;\n  let t = c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT;\n  let r = c.MINIMAP_WIDTH;\n  let b = c.SCREEN_HEIGHT;\n  g.clear();\n  // Background\n  g.beginFill(c.MINIMAP_BACKGROUND_COLOR);\n  g.lineStyle(1, c.MINIMAP_BORDER_COLOR);\n  g.drawRect(l, t, r, b);\n  g.endFill();\n  // Planets\n  for (let planet of window.world.planets) {\n    if (planetOnMap(view, planet)) {\n      let x = l + c.HALF_MINIMAP_WIDTH + ((planet.x - view.x) * c.MINIMAP_SCALE_X);\n      let y = t + c.HALF_MINIMAP_HEIGHT + ((planet.y - view.y) * c.MINIMAP_SCALE_Y);\n      const planetColor = window.world.selectedPlanet === planet ? c.MINIMAP_SELECTED_PLANET_COLOR : c.MINIMAP_PLANET_COLOR;\n      g.lineStyle(2, planetColor);\n      g.drawCircle(x, y, planet.radius * c.MINIMAP_SCALE_X);\n      // Buildings\n      for (let building of planet.buildings) {\n        let buildingX = l + c.HALF_MINIMAP_WIDTH + ((building.x - view.x) * c.MINIMAP_SCALE_X) - 1.5;\n        let buildingY = t + c.HALF_MINIMAP_HEIGHT + ((building.y - view.y) * c.MINIMAP_SCALE_Y) - 1.5;\n        g.lineStyle(1, c.MINIMAP_BUILDING_COLOR);\n        g.drawRect(buildingX, buildingY, 2, 2);\n      }\n    }\n  }\n  // Ship\n  g.lineStyle(1, c.MINIMAP_SHIP_COLOR);\n  const x = l + c.HALF_MINIMAP_WIDTH + ((window.world.ship.x - view.x) * c.MINIMAP_SCALE_X);\n  const y = t + c.HALF_MINIMAP_HEIGHT + ((window.world.ship.y - view.y) * c.MINIMAP_SCALE_Y);\n  g.drawCircle(x, y, 2);\n}\n\n/**\n * Handles clicks on the minimap\n */\nexport function clickOnMinimap(clickX, clickY) {\n  if (window.world.system.gameState === c.GAME_STATE.MANAGE) {\n    const view = window.world.view\n    let globalX = view.x + ((clickX - c.HALF_MINIMAP_WIDTH) * (1 / c.MINIMAP_SCALE_X));\n    let globalY = view.y + (((clickY - (c.SCREEN_HEIGHT - c.MINIMAP_HEIGHT)) - c.HALF_MINIMAP_HEIGHT) * (1 / c.MINIMAP_SCALE_X));\n    for (let planet of window.world.planets) {\n      if (utils.distanceBetween(globalX, globalY, planet.x, planet.y) <= planet.radius) {\n        window.world.selectedPlanet = planet;\n      }\n    }\n    view.x = globalX;\n    view.y = globalY;\n    drawMiniMap();\n  }\n}\n\nfunction planetOnMap(view, planet) {\n  // Right side\n  return !((view.x + c.HALF_MINIMAP_VIEW_WIDTH + planet.radius < planet.x) || // Right\n    (view.x - c.HALF_MINIMAP_VIEW_WIDTH - planet.radius > planet.x) || // Left\n    (view.y + c.HALF_MINIMAP_VIEW_HEIGHT + planet.radius < planet.y) || // Bottom\n    (view.y - c.HALF_MINIMAP_VIEW_HEIGHT - planet.radius > planet.y));\n}\n\n/**\n * @return the max range of the weapon\n */\nexport function weaponRange(weapon) {\n  if (!weapon) {\n    return 0;\n  }\n  // Not sure what the fudge factor is, but the range seems a little short without it\n  return weapon.speed * weapon.lifetime * 1.4;\n}\n\n/**\n * @return the max range of the primary weapon on the ship\n */\nexport function primaryWeaponRange(ship) {\n  let gun = getEquip(ship, c.EQUIP_TYPE_PRIMARY_WEAPON);\n  return weaponRange(gun);\n}","import { c, utils, fly, game } from './';\nimport lodash from 'lodash';\nimport {EQUIP_TYPE_BRAKE, EQUIP_TYPE_PRIMARY_WEAPON, EQUIP_TYPE_THRUSTER} from \"./constants\";\n\nexport function enterManageState() {\n  console.log(\"enter manage state\");\n}\n\n// When managing planet resources - loop runs 60/s\nexport function manageLoop(delta) {\n  if ((window.world.system.keys.up.isDown || window.world.system.keys.w.isDown)) {\n    if (window.world.ship.alive && !window.world.system.isTyping) {\n      takeOff();\n    }\n  }\n}\n\nfunction takeOff() {\n  let world = window.world;\n  let ship = world.ship;\n  game.changeGameState(c.GAME_STATE.FLY);\n  let gravity = utils.calcGravity(ship.x, ship.y, world.selectedPlanet);\n  ship.vx = gravity.x * -c.TAKEOFF_SPEED;\n  ship.vy = gravity.y * -c.TAKEOFF_SPEED;\n}\n\n/**\n * @return Correct set of constants for the building type.\n * Maybe these constants could be moved into a variable or something\n */\nfunction getBuildingInfo(buildingType) {\n  if (buildingType === c.BUILDING_TYPE_FACTORY) {\n    return {spriteScale:c.FACTORY_SCALE, spriteFile:c.FACTORY_FILE, animation:false};\n  } else if (buildingType === c.BUILDING_TYPE_MINE) {\n    return {spriteScale:c.MINE_SCALE, spriteFile:c.MINE_FILE, animation:true};\n  }\n  console.warn('Unknown building type ', buildingType);\n  return {}\n}\n\n/**\n * Creates a factory sprite and adds it to the planet container using the factory x,y and rotation\n * NOTE: The building x,y,rot need to be set before calling this\n * @param building building to build\n * @param planet planet to build on\n * @param planetSprite optional, if null this will lookup the sprite using getPlanetSprite()\n */\nexport function makeBuildingSprite(building, planet, planetSprite = null) {\n  const { spriteScale, spriteFile, animation } = getBuildingInfo(building.type);\n  let spritesheet = window.PIXI.Loader.shared.resources[c.SPRITESHEET_JSON].spritesheet;\n  let buildingSprite;\n  if (animation) {\n    buildingSprite = new window.PIXI.AnimatedSprite(spritesheet.animations[spriteFile]);\n    buildingSprite.animationSpeed = c.MINE_ANIMATION_SPEED;\n    buildingSprite.play();\n  } else {\n    buildingSprite = new window.PIXI.Sprite(spritesheet.textures[spriteFile]);\n  }\n  buildingSprite.anchor.set(0.5, 0.5);\n  buildingSprite.scale.set(spriteScale, spriteScale);\n  buildingSprite.rotation = building.rotation;\n  buildingSprite.x = (building.x - planet.x);\n  buildingSprite.y = (building.y - planet.y);\n  buildingSprite.visible = true;\n  if (!planetSprite) {\n    planetSprite = game.getPlanetSprite(planet);\n  }\n  planetSprite.addChild(buildingSprite);\n}\n\nexport function buildMine() {\n  let world = window.world;\n  let mine = {type: c.BUILDING_TYPE_MINE};\n  let planet = world.selectedPlanet;\n  let ship = world.ship;\n  // Place the mine (to the right of the ship)\n  const initRotation = getBuildingPlacementRotation(ship, planet, c.MINE_WIDTH);\n  // Calculate an X,Y point near the ship on surface of the planet\n  // NOTE: we use sprite.height for width because all sprites face to the right (0 rotation)\n  let {x,y,rotation} = getAvailablePlanetXY(planet, ship, initRotation, c.MINE_WIDTH, 0);\n  if (x === null) {\n    console.warn(\"Unable to place mine\");\n    return;\n  }\n  mine.width = c.MINE_WIDTH;\n  mine.x = x;\n  mine.y = y;\n  mine.rotation = rotation;\n  // Setup the graphics\n  makeBuildingSprite(mine, planet);\n  game.payResourceCost(planet, ship, c.MINE_COST);\n  planet.buildings.push(mine);\n  fly.drawMiniMap(); // add building to minimap\n}\n\n/**\n * @return the rotation direction of a place some distance to the right of the ship\n */\nexport function getBuildingPlacementRotation(ship, planet, distanceFromShip) {\n  let deg = ship.rotation + Math.PI/2; // 90 deg (right of the ship)\n  let degX = ship.x + distanceFromShip  * Math.cos(deg); // Some point Xpx to the right of the ship\n  let degY = ship.y + distanceFromShip * Math.sin(deg);\n  // Calculate the rotation direction to get to that point\n  return utils.normalizeRadian(Math.atan2(degY - planet.y, degX - planet.x));\n\n}\n\n/**\n * @return {x,y} for the next free space to the right of the ship on the planet circumfrence \n */\nexport function getAvailablePlanetXY(planet, ship, rotation, buildingWidth, count) {\n  if (buildingFits(planet, ship, rotation, buildingWidth)) {\n    let x = planet.x + ((planet.radius + 10) * Math.cos(rotation));\n    let y = planet.y + ((planet.radius + 10) * Math.sin(rotation));\n    return {x,y, rotation};\n  }\n  // If we have done a full circle then give up\n  if (count > (Math.PI*2 / c.BUILDING_PLACEMENT_ROTATION_INCREMENT)) {\n    return {x:null, y:null, rotation:null};\n  }\n  return getAvailablePlanetXY(planet, ship, rotation+c.BUILDING_PLACEMENT_ROTATION_INCREMENT\n    , buildingWidth, ++count);\n}\n\nexport function buildingFits(planet, ship, rotation, buildingWidth) {\n  let x = planet.x + ((planet.radius + 10) * Math.cos(rotation));\n  let y = planet.y + ((planet.radius + 10) * Math.sin(rotation));\n  // Min distance to building\n  let minDist = utils.distanceBetween(x,y, ship.x, ship.y);\n  let minBuildingWidth = buildingWidth;\n  for (let building of planet.buildings) {\n     let dist = utils.distanceBetween(x,y, building.x, building.y);\n     if (dist < minDist) {\n       minDist = dist;\n       minBuildingWidth = building.width;\n     }\n  } \n  return (minDist > (buildingWidth/2 + minBuildingWidth/2 + 15));\n}\n\n/**\n * Move a resource ship <-> planet \n */\nexport function transferResource(source, target, resourceType, requestedAmtStr, maxCapacity) {\n  console.log('transferring '+requestedAmtStr+' of '+resourceType);\n  let requestedAmt = Number(requestedAmtStr);\n  if (isNaN(requestedAmt)) {\n    requestedAmt = 0;\n  }\n  let amt = requestedAmt;\n  // requesting '' is requesting the entire source (same as requesting too much)\n  if (requestedAmtStr === '' || (source[resourceType] - requestedAmt < 0)) {\n    amt = source[resourceType];\n  }\n  // Cap to max capacity of target\n  let spaceLeft =  maxCapacity - (target.titanium + target.gold + target.uranium);\n  if (spaceLeft < amt) {\n    amt = spaceLeft;\n  }\n  target[resourceType] += amt;\n  source[resourceType] -= amt;\n}\n\n/**\n * Choose some default resources to resupply the ship with.\n * This is for quick restocking of resources\n * NOTE: This may need to do multiple passes to fill up the space properly especially when planets are low on uranium\n */\nexport function resupplyShip(ship, planet) {\n  const desiredAmt = Math.floor(ship.resourcesMax / 3);\n  let freeAmt = ship.resourcesMax - (ship.resources.titanium + ship.resources.gold + ship.resources.uranium);\n  if (freeAmt <= 0) {\n    // no space for more resources\n    return;\n  }\n  // 20 is the min required to build a mine - you probably want at least 20\n  const desiredTitanium = desiredAmt >= 20 ? desiredAmt : 20;\n  if (ship.resources.titanium < desiredTitanium) {\n    transferResource(planet.resources.stored, ship.resources, 'titanium', desiredTitanium - ship.resources.titanium, ship.resourcesMax);\n  }\n  if (ship.resources.gold < desiredAmt) {\n    transferResource(planet.resources.stored, ship.resources, 'gold', desiredAmt - ship.resources.gold, ship.resourcesMax);\n  }\n  // Fill up the rest of the space with uranium (it's the rarest)\n  freeAmt = ship.resourcesMax - (ship.resources.titanium + ship.resources.gold + ship.resources.uranium);\n  if (ship.resources.uranium < freeAmt) {\n    transferResource(planet.resources.stored, ship.resources, 'uranium', freeAmt, ship.resourcesMax);\n  }\n}\n\nexport function buildFactory() {\n  let world = window.world;\n  let planet = world.selectedPlanet;\n  let ship = world.ship;\n  let factory = {type: c.BUILDING_TYPE_FACTORY};\n\n  // Place the mine (to the right of the ship)\n  const initialRotation = getBuildingPlacementRotation(ship, planet, c.FACTORY_WIDTH);\n  // Calculate an X,Y point near the ship on surface of the planet\n  // NOTE: we use sprite.height for width because all sprites face to the right (0 rotation)\n  let {x,y,rotation} = getAvailablePlanetXY(planet, ship, initialRotation, c.FACTORY_WIDTH, 0);\n  if (x === null) {\n    console.warn(\"Unable to place factory\");\n    return;\n  }\n  factory.width = c.MINE_WIDTH;\n  factory.x = x;\n  factory.y = y;\n  factory.rotation = rotation;\n  planet.buildings.push(factory);\n\n  // Setup the graphics\n  makeBuildingSprite(factory, planet);\n\n  game.payResourceCost(planet, ship, c.FACTORY_COST);\n  fly.drawMiniMap(); // add to minimap\n}\n\n/**\n * Called when the factory finishes building a new ship \n */\nexport function buildShip(shipTemplate) {\n  let world = window.world;\n  let planet = world.selectedPlanet;\n  let newShip = game.createShip(shipTemplate);\n  planet.ships.push(newShip);\n}\n\n/**\n * Called when the user clicks to switch to a new ship \n * NOTE: the new ship should already be created and stored in a planet\n */\nexport function switchToShip(newShip) {\n  let oldShip = window.world.ship;\n  let selectedPlanet = window.world.selectedPlanet;\n  let lastPlanetLanded = window.world.lastPlanetLanded;\n  if (!removeShipFromStorage(newShip, selectedPlanet)) {\n    console.warn(\"Unable to remove ship from planet \",newShip,\" planet=\",selectedPlanet);\n    return;\n  }\n  addShipToStorage(oldShip, lastPlanetLanded);\n\n  window.world.ship = newShip;\n  // check to ensure oldShip is not destroyed\n  if (oldShip && oldShip.alive && oldShip.spriteId) {\n    fly.resetWeaponsCool(oldShip);\n    const oldShipSprite = game.getShipSprite(oldShip);\n    oldShipSprite.visible = false;\n    oldShip.spriteId = null;\n  }\n  // Get the new sprite (adds it to the container)\n  const newShipSprite = game.getShipSprite(newShip);\n  newShipSprite.visible = true;\n  newShip.rotation = selectedPlanet.lastLandingDir;\n  newShipSprite.rotation = newShip.rotation;\n  newShipSprite.position.set(c.HALF_SCREEN_WIDTH, c.HALF_SCREEN_HEIGHT);\n\n  let r = selectedPlanet.radius + (newShip.spriteWidth / 2);\n  newShip.x = selectedPlanet.x + (r * Math.cos(newShip.rotation));\n  newShip.y = selectedPlanet.y + (r * Math.sin(newShip.rotation));\n  window.world.lastPlanetLanded = selectedPlanet;\n  fly.repositionScreen();\n}\n\n/**\n * Removes a ship from the planet, returns null if no matching ship was found\n */\nexport function removeShipFromStorage(ship, planet) {\n  let ships = planet.ships.filter((s) => s !== ship);\n  let removedShip = ships.length < planet.ships.length;\n  planet.ships = ships;\n  return removedShip;\n}\n\nexport function addShipToStorage(ship, planet) {\n  // If the ship is not visible (and armorMax is zero) it has been destroyed\n  // Some ships might be non-visible because they are not currently being used\n  if (ship.alive && ship.armorMax > 0) {\n    planet.ships.push(ship);\n  }\n}\n\n/**\n * @return true if the planet has a factory for the player\n */\nexport function hasFactory(planet) {\n  for (let building of planet.buildings) {\n    if (building.type === c.BUILDING_TYPE_FACTORY) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function buildEquip(equipTemplate) {\n  let planet = window.world.selectedPlanet;\n  let equip = lodash.cloneDeep(equipTemplate);\n  equip.id = window.world.nextId++;\n  planet.equip.push(equip);\n}\n\nexport function costToRepair(ship) {\n  return {titanium:(ship.armorMax - ship.armor), gold:0, uranium:0};\n}\n\nexport function repairShip(planet, ship) {\n  let cost = costToRepair(ship);\n  let addArmor = ship.armorMax - ship.armor; // armor needed\n  if (!game.canAfford(planet, ship, cost)) {\n    let titaniumOnHand = planet.resources.stored.titanium + ship.resources.titanium;\n    cost.titanium = titaniumOnHand;\n    addArmor = titaniumOnHand;\n  } \n  game.payResourceCost(planet, ship, cost);\n  ship.armor += addArmor;\n}\n\nexport function addEquip(ship, newEquip) {\n  if (newEquip.type === c.EQUIP_TYPE_ARMOR) {\n    // Only add armor if the ship is in full repair\n    if (ship.armor === ship.armorMax) {\n      ship.armor += newEquip.armorAmt;\n    }\n    ship.armorMax += newEquip.armorAmt;\n  } else if (newEquip.type === c.EQUIP_TYPE_STORAGE) {\n    ship.resourcesMax += newEquip.storageAmount;\n  }\n}\n\nexport function selectFirstSecondaryWeapon(ship) {\n  for (let i=0; i< ship.equip.length; i++) {\n    if (ship.equip[i].type === c.EQUIP_TYPE_SECONDARY_WEAPON) {\n      ship.selectedSecondaryWeaponIndex = i;\n      return;\n    }\n  } // for\n  // Couldn't find a secondary weapon\n  ship.selectedSecondaryWeaponIndex = -1;\n}\n\nexport function moveEquipFromPlanetToShip(ship, planet, equipToMove) {\n  // Remove from the planet\n  ship.equip.push(equipToMove);\n  addEquip(ship, equipToMove);\n  // Remove the oldEquip from the planet\n  lodash.remove(planet.equip, (e) => e.id === equipToMove.id);\n  selectFirstSecondaryWeapon(ship);\n}\n\nexport function moveEquipFromShipToPlanet(ship, planet, equipToMove) {\n  // Add to the planet\n  planet.equip.push(equipToMove);\n  if (equipToMove.type === c.EQUIP_TYPE_ARMOR) {\n    ship.armorMax -= equipToMove.armorAmt;\n    if (ship.armor > ship.armorMax) {\n      ship.armor = ship.armorMax;\n    }\n  } else if (equipToMove.type === c.EQUIP_TYPE_STORAGE) {\n    ship.resourcesMax -= equipToMove.storageAmount;\n    let shipResources = ship.resources.titanium + ship.resources.gold + ship.resources.uranium;\n    if (shipResources > ship.resourcesMax) {\n      let owing = this.removeResource(ship, 'titanium', (shipResources - ship.resourcesMax));\n      if (owing > 0) {\n        owing = this.removeResource(ship, 'gold', owing);\n      }\n      if (owing > 0) {\n        owing = this.removeResource(ship, 'uranium', owing);\n      }\n      if (owing > 0) {\n        console.warn(\"Cannot remove more resources from ship still owing \"+owing);\n      }\n    }\n  }\n  // Remove the oldEquip from the ship (no new equipment added)\n  lodash.remove(ship.equip, (e) => e.id === equipToMove.id);\n  selectFirstSecondaryWeapon(ship);\n}\n\n/**\n * Removes the resource from the ship\n * @return the amount still owing after removing\n */\nexport function removeResource(ship, resourceType, amount) {\n  ship.resources[resourceType] -= amount;\n  if (ship.resources[resourceType] < 0) {\n    let owing = Math.abs(ship.resources[resourceType]);\n    ship.resources[resourceType] = 0;\n    return owing;\n  }\n  return 0;\n}\n\n/**\n * @return true if the equip can be added to the ship\n */\nexport function canEquip(ship, equip) {\n  if (!ship || !ship.equip || !equip) {\n    return false;\n  }\n  // No more space\n  if (ship.equip.length >= ship.equipMax) {\n    return false;\n  }\n  // Some equip you can only have one\n  if ([EQUIP_TYPE_BRAKE, EQUIP_TYPE_PRIMARY_WEAPON, EQUIP_TYPE_THRUSTER].includes(equip.type)) {\n    if (ship.equip.find((eq) => eq.type === equip.type)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n","import {c, fly, utils} from './';\nimport {getShipSprite} from \"./game\";\n\nexport function moveAliens() {\n  let ship = window.world.ship;\n  for (let alien of window.world.system.nearby.ships) {\n    if (!alien.alive || ship === alien) {\n      continue;\n    }\n    let hasMoved = false;\n    if (alien.aiType === c.ALIEN_AI_TURRET) {\n      turretAi(alien);\n    } else if (alien.aiType === c.ALIEN_AI_CREEPER) {\n      hasMoved = creeperAi(alien, false);\n    } else if (alien.aiType === c.ALIEN_AI_KAMIKAZI) {\n      hasMoved = creeperAi(alien, true);\n    } else if (alien.aiType === c.EQUIP_AI_TURRET) {\n      hasMoved = playerTurretAi(alien);\n    } else if (alien.aiType === c.EQUIP_AI_MISSILE) {\n      hasMoved = missileAi(alien);\n    } else if (alien.aiType === c.ALIEN_AI_MOTHERSHIP) {\n      mothershipAi(alien);\n    }\n    if (hasMoved) {\n      checkForCollisionWithPlanet(alien);\n      checkForCollisionWithShip(alien);\n    }\n\n    // If alien is in the viewport\n    if ((ship.x + c.HALF_SCREEN_WIDTH + alien.radius >= alien.x) && // Right\n      (ship.x - c.HALF_SCREEN_WIDTH - alien.radius <= alien.x) && // Left\n      (ship.y + c.HALF_SCREEN_HEIGHT + alien.radius >= alien.y) && // Bottom\n      (ship.y - c.HALF_SCREEN_HEIGHT - alien.radius <= alien.y)) { // Top\n      // alien may have died in a collision\n      if (alien.alive) {\n        // Set alien ship relative to the ship's viewport\n        const alienSprite = getShipSprite(alien);\n        alienSprite.visible = true;\n        alienSprite.rotation = alien.rotation;\n        alienSprite.x = (alien.x - ship.x) + c.HALF_SCREEN_WIDTH;\n        alienSprite.y = (alien.y - ship.y) + c.HALF_SCREEN_HEIGHT;\n      }\n    } else { // alien is not in view\n      // Release the sprite if the alien is not in the view\n      if (alien.spriteId) {\n        const alienSprite = getShipSprite(alien);\n        alienSprite.visible = false;\n        alien.spriteId = null;\n      }\n    }\n  } // for alien\n}\n\n/**\n * Fire primary weapon in the direction of x,y\n * @ship ship with gun to fire\n * @x/y  the location to aim at\n * @jitter amount (in radians) of randomness added to direction component\n *         0 - shoots directly at player\n *         PI - shoot completely randomly\n */\nexport function shootAt(shooter, x, y, jitter) {\n  shooter.rotation = utils.normalizeRadian(Math.atan2(y - shooter.y, x - shooter.x));\n  fly.firePrimaryWeapon(shooter, jitter);\n}\n\nexport function turretAi(alien) {\n  let ship = window.world.ship;\n  if (!ship.alive) {\n    return;\n  }\n  if (utils.distanceBetween(alien.x, alien.y, ship.x, ship.y) < fly.primaryWeaponRange(alien)) {\n    shootAt(alien, ship.x, ship.y, 0.7);\n  }\n}\n\nexport function mothershipAi(alien) {\n  let ship = window.world.ship;\n  if (!ship.alive) {\n    return;\n  }\n  const distanceToPlayer = utils.distanceBetween(alien.x, alien.y, ship.x, ship.y);\n  if (distanceToPlayer < fly.primaryWeaponRange(alien)) {\n    shootAt(alien, ship.x, ship.y, 0.3);\n  }\n  if (distanceToPlayer < c.SCREEN_WIDTH*3) {\n    fly.fireSecondaryWeapon(alien);\n  }\n  if (alien.armor < alien.armorMax) {\n    enableShieldIfNeeded(alien);\n  }\n}\n\nexport function playerTurretAi(turret) {\n  const {target, dist} = getNearestAlienTarget(turret.x, turret.y);\n  if (target && (dist <= fly.primaryWeaponRange(turret))) {\n    shootAt(turret, target.x, target.y, 0.25);\n  }\n  return false; // never moves\n}\n\n/**\n * Simple AI for missiles - find nearest target and move toward it attempting to crash\n */\nexport function missileAi(missile) {\n  const {target, dist} = missile.owner === c.PLAYER\n    ? getNearestAlienTarget(missile.x, missile.y)\n    : getNearestPlayerTarget(missile.x, missile.y);\n  // Missiles don't track targets really far away\n  if (target && dist < c.SCREEN_WIDTH) {\n    let dirToTarget = utils.directionTo(missile.x, missile.y, target.x, target.y);\n    let {xAmt, yAmt} = utils.dirComponents(dirToTarget, missile.propulsion);\n    missile.vx += xAmt;\n    missile.vy += yAmt;\n    missile.x += missile.vx;\n    missile.y += missile.vy;\n    return true;\n  }\n  // Don't move if there's nobody to move towards\n  return false;\n}\n\n/**\n * AI for aliens that move toward the player and shoots\n * @return true if alien moved false otherwise\n */\nexport function creeperAi(alien, crashIntoPlayer=false) {\n  let ship = window.world.ship;\n  if (!ship.alive) {\n    return;\n  }\n  const viewRange = alien.viewRange || c.SCREEN_WIDTH;\n  let moved = false;\n  const {target:playerTarget, dist:distToPlayer} = getNearestPlayerTarget(alien.x, alien.y)\n  if (!playerTarget) {\n    return;\n  }\n  if (distToPlayer < viewRange) {\n    let dirToTarget = utils.directionTo(alien.x, alien.y, playerTarget.x, playerTarget.y);\n    let {xAmt, yAmt} = utils.dirComponents(dirToTarget, 25 * alien.propulsion);\n    // Check if we are too close to a planet (need to move around the planet)\n    for (let planet of window.world.system.nearby.planets) {\n      if (utils.distanceBetween(alien.x + xAmt, alien.y + yAmt, planet.x, planet.y) < (planet.radius + alien.radius + 10)) {\n        const dirToPlanet = utils.directionTo(alien.x, alien.y, planet.x, planet.y);\n        let dirDiff = dirToPlanet - dirToTarget;\n        let rightLeft = (dirDiff >= 0) ? -1 : 1;\n        if (Math.abs(dirDiff) > Math.PI) {\n          rightLeft = rightLeft * -1;\n        }\n        const turnDir = dirToPlanet + (rightLeft * Math.PI / 2);\n        ({xAmt, yAmt} = utils.dirComponents(turnDir, 20 * alien.propulsion));\n      }\n    } // for planet\n    // Too close to player, don't move closer\n    if (!crashIntoPlayer && distToPlayer < (ship.spriteWidth + alien.radius + 20)) {\n      xAmt = 0;\n      yAmt = 0;\n    }\n    // Don't crash into other aliens\n    const {target: alienTarget, dist: alienDist} = getNearestAlienTarget(alien.x + xAmt, alien.y + yAmt, alien.id);\n    if (alienTarget && (alienDist < (alien.radius + alienTarget.radius + 10))) {\n      xAmt = 0;\n      yAmt = 0;\n    }\n    if (alien.armor < alien.armorMax) {\n      enableShieldIfNeeded(alien);\n    }\n    alien.x += xAmt;\n    alien.y += yAmt;\n    alien.rotation = dirToTarget;\n    moved = true;\n  }\n  if (distToPlayer < fly.primaryWeaponRange(alien)) {\n    shootAt(alien, ship.x, ship.y, 0.15);\n  }\n  return moved;\n}\n\n/**\n * Finds the nearest alien target to the x,y location\n * @shipId : any alien except the one with a matching shipId\n * returns {target:X, dist:Y }  x and y will be null if no living targets are found\n */\nexport function getNearestAlienTarget(x, y, shipId = 'none') {\n  let target = null;\n  let minDist = null;\n  for (let alien of window.world.system.nearby.ships) {\n    if (alien.alive && alien.owner === c.ALIEN && alien.id !== shipId) {\n      let dist = utils.distanceBetween(x, y, alien.x, alien.y);\n      if (!target || (dist < minDist)) {\n        target = alien;\n        minDist = dist;\n      }\n    }\n  } // for\n  return {target: target, dist: minDist};\n}\n\n/**\n * Finds the nearest player target to the x,y location\n * returns {target:X, dist:Y }  x and y will be null if no living targets are found\n */\nexport function getNearestPlayerTarget(x, y) {\n  const ship = window.world.ship;\n  let target = ship;\n  let minDist = utils.distanceBetween(x, y, ship.x, ship.y);;\n  for (let ship of window.world.system.nearby.ships) {\n    if (ship.alive && ship.owner === c.PLAYER) {\n      let dist = utils.distanceBetween(x, y, ship.x, ship.y);\n      if (!target || (dist < minDist)) {\n        target = ship;\n        minDist = dist;\n      }\n    }\n  } // for\n  return {target: target, dist: minDist};\n}\n\n\nexport function checkForCollisionWithPlanet(alien) {\n  for (let planet of window.world.system.nearby.planets) {\n    let dist = utils.distanceBetween(alien.x, alien.y, planet.x, planet.y);\n    if (dist <= (alien.radius + planet.radius)) {\n      fly.destroyShip(alien, null);\n    }\n  } // for\n}\n\nexport function checkForCollisionWithShip(ship) {\n  for (let otherShip of window.world.system.nearby.ships) {\n    if (otherShip.alive && ship !== otherShip) {\n      let dist = utils.distanceBetween(ship.x, ship.y, otherShip.x, otherShip.y);\n      if (dist <= (ship.radius + otherShip.radius)) {\n        fly.shipsCollide(ship, otherShip);\n      }\n    }\n  } // for\n}\n\nexport function enableShieldIfNeeded(ship) {\n  const shieldEquip = getShield(ship);\n  if (!shieldEquip || shieldEquip.cool > 0) {\n    return;\n  }\n  fly.enableShield(ship, shieldEquip.shield);\n  shieldEquip.cool = shieldEquip.coolTime;\n}\n\nexport function getShield(ship) {\n  for (let i = 0; i < ship.equip.length; i++) {\n    const equip = ship.equip[i];\n    if ((equip.type === c.EQUIP_TYPE_SECONDARY_WEAPON) && equip.shield) {\n      return equip;\n    }\n  } // for\n  return null;\n}","import {fly, game, utils} from './';\nimport lodash from 'lodash';\n\n// IndexedDB constants\nconst WORLD_STORE = 'world';\nconst DB_NAME = 'astrominer';\nconst DB_VERSION = 1;\n\n/** Saves an object in localstorage.\n * @param key key to store/retrieve\n * @param objToSave: should be an Object or Array, NOT a primitive as the JSON.parse will fail\n */\nexport function saveLocalStorage(key, objToSave) {\n  const existing = localStorage.getItem(key);\n  if (existing) {\n    localStorage.removeItem(key);\n  }\n  localStorage.setItem(key, JSON.stringify(objToSave));\n}\n\n/**\n *  Loads an object from localstorage.\n * NOTE: The item stored must be an Object or Array as primitives will fail the JSON.parse\n */\nexport function loadLocalStorage(key) {\n  if (!key) {\n    console.warn('Unable to from localStorage without a key');\n    return;\n  }\n  const objString = localStorage.getItem(key)\n  //console.log('loaded objString ='+objString);\n  if (!objString) {\n    return null;\n  }\n  return JSON.parse(objString);\n}\n\nfunction upgradeDB(event) {\n  let db = event.target.result;\n  if (event.oldVersion >= 1) {\n    db.deleteObjectStore(WORLD_STORE);\n  }\n  db.createObjectStore(WORLD_STORE, {keyPath: \"saveGameName\"});\n}\n\n/**\n * Start using a newWorld, the old world and it's state will be discarded.\n * param key:  storage key where the world is kept\n */\nexport function loadWorld(key) {\n  let dbRequest = indexedDB.open(DB_NAME, DB_VERSION);\n  dbRequest.onerror = function (event) {\n    console.log('error ', event);\n  };\n  dbRequest.onupgradeneeded = upgradeDB;\n  dbRequest.onsuccess = function (event) {\n    let db = event.target.result;\n    let transaction = db.transaction([WORLD_STORE]);\n    let objectStore = transaction.objectStore(WORLD_STORE);\n    let request = objectStore.get(key);\n    request.onerror = function (event) {\n      console.log('Request error loading:', event);\n    };\n    request.onsuccess = function (event) {\n      const newWorld = request.result;\n      const oldSystem = window.world.system;\n      window.world = newWorld;\n      window.world.system = oldSystem;\n\n      // Clear the old containers of whatever they had\n      window.world.system.spriteContainers.planets.removeChildren();\n      window.world.system.planetSpriteCache = {};\n      window.world.system.shipSpriteCache = {};\n      window.world.system.spriteContainers.ships.removeChildren();\n\n      // Reset/Redraw all the sprites\n      window.world.ship.spriteId = null;\n      const shipSprite = game.getShipSprite(window.world.ship);\n      shipSprite.visible = true;\n      fly.repositionScreen();\n      utils.showToast('Loaded game');\n    };\n  }\n\n}\n\nexport function saveWorld(key) {\n  const worldToStore = lodash.cloneDeep(lodash.omit(window.world, ['system']));\n  worldToStore.saveGameName = key;\n\n  let dbRequest = indexedDB.open(DB_NAME, DB_VERSION);\n  dbRequest.onerror = function (event) {\n    console.log('DB Request Error:', event);\n  };\n  dbRequest.onupgradeneeded = upgradeDB;\n  dbRequest.onsuccess = function (event) {\n    let db = event.target.result;\n    let transaction = db.transaction([WORLD_STORE], \"readwrite\");\n    let objectStore = transaction.objectStore(WORLD_STORE);\n    let objectStoreRequest = objectStore.put(worldToStore);\n    objectStoreRequest.onsuccess = function (event) {\n      utils.showToast('Saved game');\n    };\n    objectStoreRequest.onerror = function (event) {\n      console.log('failed to save ', event.target);\n    }\n  }\n}\n\nexport function deleteWorld(key) {\n  let dbRequest = indexedDB.open(DB_NAME, DB_VERSION);\n  dbRequest.onerror = function (event) {\n    console.log('DB Request Error:', event);\n  };\n  dbRequest.onupgradeneeded = upgradeDB;\n  dbRequest.onsuccess = function (event) {\n    let db = event.target.result;\n    let transaction = db.transaction([WORLD_STORE], \"readwrite\");\n    let objectStore = transaction.objectStore(WORLD_STORE);\n    let objectStoreRequest = objectStore.delete(key);\n    objectStoreRequest.onsuccess = function (event) {\n      utils.showToast('Deleted game ' + key);\n    };\n    objectStoreRequest.onerror = function (event) {\n      console.log('failed to delete ', event.target);\n    }\n  }\n}\n","import React from 'react';\nimport './Heatbar.css';\n\nconst IMG_HEIGHT = 100;\nconst IMG_WIDTH = 24;\n\nexport const HEATBAR = {\n  GREEN : 'heatbar-green.png',\n  RED: 'heatbar-red.png',\n  COLOR: 'heatbar-color.png'\n};\n\nexport function Heatbar({type, curr, max}) {\n  if (type !== HEATBAR.GREEN &&\n    type !== HEATBAR.RED &&\n    type !== HEATBAR.COLOR) {\n    console.warn('unknown heatbar type '+type);\n    return <span />;\n  }\n\n  const pct = curr / max;\n  const topFree = 100 - (pct * IMG_HEIGHT );\n\n  // Use red or green as the base\n  let colorImgSrc = 'images/'+(type === HEATBAR.RED ? HEATBAR.RED : HEATBAR.GREEN);\n\n  // Multicolor is based off green\n  if (type === HEATBAR.COLOR && (topFree > 60)) {\n    colorImgSrc = 'images/heatbar-color.png'\n  }\n\n  return (\n    <span className='heatbar-container' style={{width:IMG_WIDTH+'px',  height:IMG_HEIGHT+'px'}}>\n      <span className='heatbar-base'>\n        <img src='images/heatbar-base.png' width={IMG_WIDTH+'px'} height={IMG_HEIGHT+'px'} alt='heat' />\n      </span>\n      <span className='heatbar-color'>\n        <img src={colorImgSrc} width={IMG_WIDTH+'px'} height={IMG_HEIGHT+'px'} alt='heat' style={{\n          clipPath: 'inset('+topFree+'px 0px 00px 0px)'\n        }}\n        />\n      </span>\n    </span>);\n}\n\n","import React from 'react';\nimport './PushButton.css';\n\nconst IMG_HEIGHT = 26;\nconst IMG_WIDTH = 44;\n\nexport function PushButton({selected, onChange}) {\n  const imgFile = selected ? 'images/button_push_on.png' : 'images/button_push_off.png';\n  return (\n    <img src={imgFile} width={IMG_WIDTH + 'px'} height={IMG_HEIGHT + 'px'} alt='button' onClick={() => {\n      onChange();\n    }}/>\n  );\n}\n","import React from 'react';\nimport './StatusButton.css';\n\nconst IMG_HEIGHT = 24;\nconst IMG_WIDTH = 48;\n// pct at which red turns into yellow\nconst YELLOW_PCT = 0.7; // pct to change to yellow at\nconst BORDER = 5; // width of button border (non drawing part of button)\n\nconst BUTTON = {\n  GREEN: 'button_long_green.png',\n  RED: 'button_long_red.png',\n  YELLOW: 'button_long_yellow.png',\n  BLACK: 'button_long_black.png'\n};\n\nfunction getStatus(curr, max) {\n  if (!max || max <= 0) {\n    return {rightFree: 0, colorImgSrc: 'images/' + BUTTON.BLACK};\n  }\n  if (curr >= max) {\n    return {rightFree: 0, colorImgSrc: 'images/' + BUTTON.GREEN};\n  }\n  // Red\n  if (curr / max < YELLOW_PCT) {\n    const pct = curr / (max * YELLOW_PCT);\n    const rightFree = IMG_WIDTH - (BORDER + pct * (IMG_WIDTH - (2 * BORDER)));\n    return {rightFree, colorImgSrc: 'images/' + BUTTON.RED};\n  }\n  // Yellow\n  const pct = (curr - (max * YELLOW_PCT)) / (max * (1 - YELLOW_PCT));\n  const rightFree = IMG_WIDTH - (BORDER + pct * (IMG_WIDTH - (2 * BORDER)));\n  return {rightFree, colorImgSrc: 'images/' + BUTTON.YELLOW};\n}\n\n\nexport function StatusButton({curr, max}) {\n\n  const {rightFree, colorImgSrc} = getStatus(curr, max);\n\n  return (\n    <span className='statusbutton-container' style={{width: IMG_WIDTH + 'px', height: IMG_HEIGHT + 'px'}}>\n      <span className='statusbutton-base'>\n        <img src={'images/' + BUTTON.BLACK} width={IMG_WIDTH + 'px'} height={IMG_HEIGHT + 'px'} alt='status'/>\n      </span>\n      <span className='statusbutton-color'>\n        <img src={colorImgSrc} width={IMG_WIDTH + 'px'} height={IMG_HEIGHT + 'px'} alt='heat' style={{\n          clipPath: 'inset(0px ' + rightFree + 'px 0px 0px)'\n        }}\n        />\n      </span>\n    </span>);\n}\n\n","import React from 'react';\nimport {c, fly} from '../functions';\nimport './InfoFly.css';\nimport {HEATBAR, Heatbar} from \"./Heatbar\";\nimport {PushButton} from \"./PushButton\";\nimport {StatusButton} from \"./StatusButton\";\n\nexport function InfoFly() {\n  const ship = window.world.ship;\n  const shield = fly.getEquippedShield(ship);\n\n  return (\n    <div className='section'\n         style={{backgroundImage: 'url(\"images/metalbackground.png\")', backgroundSize: 'cover', height: '100%'}}>\n      <div>{ship.name}</div>\n\n      <table>\n        <thead>\n        <tr>\n          <th style={{paddingRight: '10px'}}>Armor</th>\n          <th>Shield</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <td style={{textAlign: 'center'}}>\n            <Heatbar type={HEATBAR.COLOR} curr={ship.armor} max={ship.armorMax}/>\n          </td>\n          <td>\n            {shield && shield.shield.active &&\n            <span>\n                <Heatbar type={HEATBAR.RED} curr={shield.shield.lifetime} max={shield.shield.lifetimeMax}/>\n                <Heatbar type={HEATBAR.COLOR} curr={shield.shield.armor} max={shield.shield.armorMax}/>\n              </span>\n            }\n          </td>\n        </tr>\n        <tr>\n          <td>\n            {Math.floor(ship.armor)} / {ship.armorMax}\n          </td>\n          <td></td>\n          <td></td>\n        </tr>\n        </tbody>\n      </table>\n\n      <div className='section'>Equip (max {ship.equipMax})\n        <table>\n          <tbody>\n          {ship.equip.map((equip, i) => {\n            return <tr key={i} className='equip'>\n              <td>\n                {equip.type === c.EQUIP_TYPE_SECONDARY_WEAPON &&\n                <PushButton selected={i === ship.selectedSecondaryWeaponIndex} onChange={() => {\n                  ship.selectedSecondaryWeaponIndex = i;\n                }}/>}\n              </td>\n              <td>\n                <StatusButton curr={equip.coolTime - equip.cool} max={equip.coolTime}/>\n              </td>\n              <td>\n                {equip.name}\n              </td>\n            </tr>\n          })}\n          </tbody>\n        </table>\n      </div>\n\n      <div className='section'>\n        <table>\n          <tbody>\n          <tr>\n            <td className='bluescreen-container'>\n              <div className='bluescreen-background'>\n                <img src='images/blue_screen.png' className='stretch'/>\n              </div>\n              <div className='bluescreen-text'>\n                <table cellPadding='4'>\n                  <thead>\n                  <tr>\n                    <th colSpan='100%'>Resources</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  <tr>\n                    <td>Titatium</td>\n                    <td>{Math.floor(ship.resources.titanium)}</td>\n                  </tr>\n                  <tr>\n                    <td>Gold</td>\n                    <td>{Math.floor(ship.resources.gold)}</td>\n                  </tr>\n                  <tr>\n                    <td>Uranium</td>\n                    <td>{Math.floor(ship.resources.uranium)}</td>\n                  </tr>\n                  </tbody>\n                </table>\n              </div>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n\n    </div>\n  );\n}\n\n\n","import React, {useState} from 'react';\nimport {c, game, manage} from '../functions';\nimport './ManagePlanet.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nexport function ManagePlanet() {\n  const [titaniumAmt, setTitaniumAmt] = useState('');\n  const [goldAmt, setGoldAmt] = useState('');\n  const [uraniumAmt, setUraniumAmt] = useState('');\n\n  let world = window.world;\n  let planet = window.world.selectedPlanet;\n  let ship = window.world.ship;\n  let shipOnPlanet = ((planet === window.world.lastPlanetLanded) && ship.alive);\n  return (\n    <div className='planet-info'>\n      <div className='section'><b>Planet Name</b> {world.selectedPlanet.name}</div>\n      <div className='build-button'>\n        <button\n          disabled={!game.canAfford(planet, (shipOnPlanet ? ship : null), c.MINE_COST)}\n          onClick={() => manage.buildMine()}>Build Mine\n        </button>\n        Cost: T:{c.MINE_COST.titanium} G:{c.MINE_COST.gold}\n      </div>\n      <div className='build-button'>\n        <button\n          disabled={!game.canAfford(planet, (shipOnPlanet ? ship : null), c.FACTORY_COST)}\n          onClick={() => manage.buildFactory()}>Build Factory\n        </button>\n        Cost: T:{c.FACTORY_COST.titanium} G:{c.FACTORY_COST.gold} U:{c.FACTORY_COST.uranium}\n      </div>\n\n      <div className='section'>\n        <b>Resources</b> &nbsp; <button onClick={() => manage.resupplyShip(ship, planet)}>Resupply</button>\n      </div>\n      <div>Titatium {Math.floor(planet.resources.raw.titanium)}</div>\n      <div>Gold {Math.floor(planet.resources.raw.gold)}</div>\n      <div>Uranium {Math.floor(planet.resources.raw.uranium)}</div>\n\n      {shipOnPlanet && <table>\n        <thead>\n        <tr>\n          <th>Resource</th>\n          <th>Planet</th>\n          <th>Transfer</th>\n          <th>Ship ({ship.resourcesMax})</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <td>Titanium</td>\n          <td>{Math.floor(planet.resources.stored.titanium)}</td>\n          <td>\n              <span className='transfer-button'\n                    onClick={() => manage.transferResource(ship.resources, planet.resources.stored,\n                      'titanium', titaniumAmt, c.PLANET_RESOURCE_MAX)}><i className=\"fa fa-arrow-left\"> </i></span>\n            <input type='text' className='transfer-input'\n                   defaultValue={titaniumAmt}\n                   onChange={(event) => setTitaniumAmt(event.target.value)}/>\n            <span className='transfer-button'\n                  onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                    'titanium', titaniumAmt, ship.resourcesMax)}><i className=\"fa fa-arrow-right\"> </i></span>\n          </td>\n          <td>{Math.floor(ship.resources.titanium)}</td>\n        </tr>\n        <tr>\n          <td>Gold</td>\n          <td>{Math.floor(planet.resources.stored.gold)}</td>\n          <td>\n              <span className='transfer-button'\n                    onClick={() => manage.transferResource(ship.resources, planet.resources.stored,\n                      'gold', goldAmt, c.PLANET_RESOURCE_MAX)}><i className=\"fa fa-arrow-left\"> </i></span>\n            <input type='text' className='transfer-input'\n                   defaultValue={goldAmt}\n                   onChange={(event) => setGoldAmt(event.target.value)}/>\n            <span className='transfer-button'\n                  onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                    'gold', goldAmt, ship.resourcesMax)}><i className=\"fa fa-arrow-right\"> </i></span>\n          </td>\n          <td>{Math.floor(ship.resources.gold)}</td>\n        </tr>\n        <tr>\n          <td>Uranium</td>\n          <td>{Math.floor(planet.resources.stored.uranium)}</td>\n          <td>\n              <span className='transfer-button'\n                    onClick={() => manage.transferResource(ship.resources, planet.resources.stored,\n                      'uranium', uraniumAmt, c.PLANET_RESOURCE_MAX)}><i className=\"fa fa-arrow-left\"> </i></span>\n            <input type='text' className='transfer-input'\n                   defaultValue={uraniumAmt}\n                   onChange={(event) => setUraniumAmt(event.target.value)}/>\n            <span className='transfer-button'\n                  onClick={() => manage.transferResource(planet.resources.stored, ship.resources,\n                    'uranium', uraniumAmt, ship.resourcesMax)}><i className=\"fa fa-arrow-right\"> </i></span>\n          </td>\n          <td>{Math.floor(ship.resources.uranium)}</td>\n        </tr>\n        </tbody>\n      </table>}\n\n      {!shipOnPlanet &&\n      <table>\n        <thead>\n        <tr>\n          <th>Resource</th>\n          <th>Planet</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <td>Titanium</td>\n          <td>{Math.floor(planet.resources.stored.titanium)}</td>\n        </tr>\n        <tr>\n          <td>Gold</td>\n          <td>{Math.floor(planet.resources.stored.gold)}</td>\n        </tr>\n        <tr>\n          <td>Uranium</td>\n          <td>{Math.floor(planet.resources.stored.uranium)}</td>\n        </tr>\n        </tbody>\n      </table>}\n    </div>);\n}\n\n","import React from 'react';\nimport { c, manage, game} from '../../functions';\nimport './FactoryButton.css';\nimport {Col, Row} from \"react-bootstrap\";\n\nexport function FactoryButton({template}) {\n  const world = window.world;\n  const planet = world.selectedPlanet;\n  const ship = world.ship;\n  let existingInventory = (template.objType === c.OBJ_SHIP) ?\n    planet.ships.filter(s=> s.name === template.name).length:\n    planet.equip.filter(e=> e.name === template.name).length;\n\n  // We pretend the current ship is in storage in the planet\n  if (ship.alive && template.name === ship.name) {\n    existingInventory += 1;\n  }\n\n  function build(templateArg) {\n    if (templateArg.objType === c.OBJ_SHIP) {\n      manage.buildShip(templateArg);\n    } else if (templateArg.objType === c.OBJ_EQUIP) {\n      manage.buildEquip(templateArg);\n    }\n  }\n\n  return (\n    <Row className=\"pt-2\">\n      <Col xs='1'>\n        {existingInventory}\n      </Col>\n      <Col xs='5'>\n      <button className=\"factory-button\"\n        disabled={!manage.hasFactory(planet) || !game.canAfford(planet, ship, template.cost)}\n        onClick={() => build(template)}>{template.name}</button>\n      </Col>\n      <Col xs='6'>\n        <span className='cost'>{template.cost.titanium}T {template.cost.gold}G {template.cost.uranium}U</span>\n      </Col>\n    </Row>);\n};\n\n","import React from 'react';\nimport { c } from '../../functions/';\nimport './FactoryTab.css';\nimport {FactoryButton} from \"./FactoryButton\";\n\nexport function FactoryTab({type, templateList}) {\n  return (\n    <div className='container factory-tab' style={{maxHeight: (c.SCREEN_HEIGHT - 200), minWidth:'400px'}}>\n      {templateList.map((template, i) => {\n        return <FactoryButton key={type+i} template={template} />;\n      })}\n    </div>);\n}\n\n","import React from 'react';\nimport { c } from '../../functions/';\nimport './ManageFactory.css';\nimport {Tab, Tabs} from \"react-bootstrap\";\nimport {FactoryTab} from \"./FactoryTab\";\n\n\nexport function FactoryTabs() {\n  const equip = window.world.blueprints.equip;\n\n  const upgrades =  equip.filter((e) => c.EQUIP_UPGRADES.find(u => u.name === e.name));\n  const primaryWeapons = equip.filter((e) => c.EQUIP_PRIMARY_WEAPONS.find(p => p.name === e.name));\n  const secondaryWeapons = equip.filter((e) => c.EQUIP_SECONDARY_WEAPONS.find(s => s.name === e.name));\n  const droids = equip.filter((e) => c.EQUIP_DROIDS.find(d => d.name === e.name));\n\n  return (\n    <div className='factory-info'>\n      <Tabs defaultActiveKey='ships' id='factory-tabs'>\n        <Tab eventKey='ships' title=\"Ships\">\n          <FactoryTab type='ship' templateList={window.world.blueprints.ship} />\n        </Tab>\n\n        {upgrades && upgrades.length > 0 &&\n        <Tab eventKey='upgrades' title=\"Upgrades\">\n          <FactoryTab type='equip' templateList={upgrades} />\n        </Tab>\n        }\n\n        {primaryWeapons && primaryWeapons.length > 0 &&\n        <Tab eventKey='primaryWeapons' title=\"Primary Weapons\">\n          <FactoryTab type='equip' templateList={primaryWeapons} />\n        </Tab>\n        }\n\n        {secondaryWeapons && secondaryWeapons.length > 0 &&\n        <Tab eventKey='secondaryWeapons' title=\"Secondary Weapons\">\n          <FactoryTab type='equip' templateList={secondaryWeapons} />\n        </Tab>\n        }\n\n        {droids && droids.length > 0 &&\n        <Tab eventKey='droids' title=\"Droids\">\n          <FactoryTab type='equip' templateList={droids} />\n        </Tab>\n        }\n\n      </Tabs>\n    </div>);\n}\n\n","import React, {useState} from 'react';\nimport {manage} from '../functions';\nimport './ManageStorage.css';\n\nexport function ManageStorage() {\n  const [selectedShip, setSelectedShip] = useState();\n  let world = window.world;\n  let planet = world.selectedPlanet;\n  let currentShip = world.ship;\n  let shipOnPlanet = ((planet === window.world.lastPlanetLanded) && currentShip.alive);\n\n  function viewShip(ship) {\n    setSelectedShip(ship);\n  }\n\n  function startUsingShip() {\n    manage.switchToShip(selectedShip);\n    setSelectedShip(null);\n  }\n\n  // Default to selecting the current ship\n  if (!selectedShip && shipOnPlanet) {\n    setSelectedShip(currentShip);\n  }\n\n  let selectedShipEquip = [];\n  if (selectedShip) {\n    for (let equip of selectedShip.equip) {\n      selectedShipEquip.push(\n        <div className=\"item\" key={equip.id}>\n          {equip.name} &nbsp;\n          <button onClick={() => manage.moveEquipFromShipToPlanet(selectedShip, planet, equip)}>Remove</button>\n        </div>);\n    }\n  }\n\n  return (\n    <div>\n      <div className='storage-section'>\n        <div className='title'>Ships</div>\n        <span className='item-list'>\n          {(shipOnPlanet ? [currentShip] : []).concat(planet.ships).map((ship, i) => {\n            return <div key={i}\n                        onClick={() => viewShip(ship)}\n                        className={`ship ${selectedShip === ship ? 'selected-item' : 'non-selected-item'}`}>{ship.name}</div>\n          })}\n        </span>\n        <span className='item-details'>\n          {selectedShip != null && // exclude this block if no ship selected\n          <div>\n            <div className='item-attr'>\n              <button onClick={() => startUsingShip()} disabled={selectedShip === currentShip}>Use Ship</button>\n            </div>\n            <div className='item-attr'><b>Name</b> {selectedShip.name} {selectedShip.id}</div>\n            <div className='item-attr'>\n              <b>Engine</b> Propulsion:{Math.floor(selectedShip.propulsion * 100)} Turn:{Math.floor(selectedShip.turnSpeed * 100)}\n            </div>\n            <div className='item-attr'>\n              <b>Landing</b> Speed:{Math.floor(selectedShip.crashSpeed)} Angle:{Math.floor(selectedShip.crashAngle * 10)}\n            </div>\n            <div className='item-attr'><b>Armor</b> &nbsp;\n              {Math.floor(selectedShip.armor)} of {Math.floor(selectedShip.armorMax)}&nbsp;\n              <button onClick={() => manage.repairShip(planet, selectedShip)}\n                      disabled={selectedShip.armorMax <= selectedShip.armor}> Repair\n              </button>\n              &nbsp; Cost {Math.floor(selectedShip.armorMax - selectedShip.armor)} titanium\n            </div>\n            <div className='item-attr'><b>Resources Max</b>{Math.floor(selectedShip.resourcesMax)}</div>\n            <div className='item-attr'><b>Equip</b> (Max {selectedShip.equipMax})\n              {selectedShipEquip}\n            </div>\n          </div>\n          }\n        </span>\n      </div>\n\n      <div className='storage-section'>\n        <div className='title'>Equipment</div>\n        <span className='equip-list'>\n          {planet.equip.map((equip, i) => {\n            return <div key={i} className='item'>\n              {equip.name} &nbsp;\n              <button onClick={() => manage.moveEquipFromPlanetToShip(selectedShip, planet, equip)}\n                      disabled={!manage.canEquip(selectedShip, equip)}\n              >Equip\n              </button>\n            </div>\n          })}\n        </span>\n      </div>\n    </div>);\n}\n\n","import React, {useRef} from 'react';\nimport {c, savegame} from '../functions';\nimport './ManageSystem.css';\nimport lodash from 'lodash';\nimport {showToast} from \"../functions/utils\";\n\nexport function ManageSystem() {\n  const world = window.world;\n  const nameInput = useRef();\n  let gameNames = savegame.loadLocalStorage(c.LOCALSTORAGE_GAME_NAMES_KEY);\n\n  function setCurrentGame(newName) {\n    nameInput.current.value = newName;\n    world.saveGameName = newName;\n    console.log('new name ' + newName);\n  }\n\n  /**\n   * Adds a game name to the list of saved game names.\n   */\n  function addGameName(newGameName) {\n    if (newGameName && !gameNames.includes(newGameName)) {\n      gameNames.push(newGameName)\n    }\n    savegame.saveLocalStorage(c.LOCALSTORAGE_GAME_NAMES_KEY, gameNames);\n  }\n\n  // If no games are saved, setup an empty list of game names\n  if (!gameNames) {\n    gameNames = [];\n    addGameName(null);\n  }\n\n  function saveGame() {\n    const saveGameName = nameInput.current.value;\n    if (!saveGameName) {\n      showToast('Cannot save game without name');\n      return;\n    }\n    // Save the world in indexedDB\n    savegame.saveWorld(saveGameName);\n    // Save the game name in localStorage\n    addGameName(saveGameName);\n    setCurrentGame(saveGameName);\n  }\n\n  function loadGame(gameName) {\n    savegame.loadWorld(gameName);\n    setCurrentGame(gameName);\n  }\n\n  function deleteGame(gameName) {\n    if (!window.confirm(\"Are you sure you want to delete \" + gameName + \"?\")) {\n      return;\n    }\n    savegame.deleteWorld(gameName);\n    gameNames = lodash.remove(gameNames, (name) => name !== gameName);\n    savegame.saveLocalStorage(c.LOCALSTORAGE_GAME_NAMES_KEY, gameNames);\n    if (world.saveGameName === gameName) {\n      world.saveGameName = null;\n    }\n    if (nameInput.current.value === gameName) {\n      nameInput.current.value = '';\n    }\n  }\n\n  return (\n    <div>\n      <div className='system-section'>\n        <div className='section'><b>Current Game</b></div>\n        <input type='text' defaultValue={world.saveGameName} onFocus={() => world.system.isTyping = true}\n               onBlur={() => world.system.isTyping = false} ref={nameInput}/>\n        <button name=\"Save\" onClick={() => saveGame()}>Save</button>\n        <div className='section'><b>Saved Game</b></div>\n        {gameNames.map(gameName => (\n          <div key={gameName} className={'game-list-row ' + (world.saveGameName === gameName ? 'selected-game' : '')}>\n            <span className='game-list-item'><button onClick={() => loadGame(gameName)}>Load </button></span>\n            <span className='game-list-item'><button onClick={() => deleteGame(gameName)}>Delete</button></span>\n            <span className='game-list-item'>{gameName}</span>\n          </div>\n        ))}\n      </div>\n    </div>);\n}\n\n","import React from 'react';\nimport { ManagePlanet } from './ManagePlanet';\nimport './ManageTabs.css';\nimport { FactoryTabs } from './factory/FactoryTabs';\nimport { ManageStorage } from './ManageStorage';\nimport {ManageSystem} from \"./ManageSystem\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Tab, Tabs} from \"react-bootstrap\";\n\nexport function ManageTabs() {\n\n  return (\n    <Tabs defaultActiveKey='planet' id='manage-tabs' mountOnEnter unmountOnExit>\n      <Tab eventKey='planet' title='Planet'>\n        <ManagePlanet/>\n      </Tab>\n\n      <Tab eventKey='factory' title='Factory'>\n        <FactoryTabs/>\n      </Tab>\n\n      <Tab eventKey='storage' title='Storage'>\n        <ManageStorage/>\n      </Tab>\n\n      <Tab eventKey='system' title='System'>\n        <ManageSystem/>\n      </Tab>\n    </Tabs>);\n}\n\n","import React from 'react';\nimport { c } from './functions';\nimport './InfoPanel.css';\nimport { InfoFly } from './fly/InfoFly';\nimport { ManageTabs } from './manage/ManageTabs';\n\nexport class InfoPanel extends React.Component {\n  render() {\n    let world = window.world;\n    if (world.system.gameState === c.GAME_STATE.MANAGE) {\n      return (<ManageTabs/>);\n    } else if (world.system.gameState === c.GAME_STATE.FLY) {\n      return (<InfoFly/>);\n    }\n    return (<div>...</div>);\n  }\n}\n\n","import React from 'react';\nimport './App.css';\nimport {InfoPanel} from './InfoPanel';\nimport {ai, c, fly, game, utils} from './functions';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    window.world = game.createEmptyWorld();\n    this.pixiRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.createPixiApp();\n  }\n\n  render() {\n    return (\n      <table className='root-app' width='100%'>\n        <tbody>\n        <tr>\n          <td width='10%'>\n            <div className='viewport' ref={this.pixiRef}/>\n          </td>\n          <td className='info-panel' width='100%' height={c.SCREEN_HEIGHT + 'px'}>\n            <InfoPanel/>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    );\n  }\n\n  createPixiApp = () => {\n    let app = new window.PIXI.Application({width: c.SCREEN_WIDTH, height: c.SCREEN_HEIGHT});\n    app.renderer.backgroundColor = c.BLACK;\n    this.pixiRef.current.appendChild(app.view);\n    window.PIXI.loader\n      .add(c.SPRITESHEET_JSON)\n      .add(c.CRASH_JSON)\n      .load(this.setupGame);\n    window.world.system.app = app;\n  }\n\n  // Setup the App\n  setupGame = () => {\n    game.setupWorld();\n    this.setupKeyboardListeners();\n    game.changeGameState(c.GAME_STATE.FLY);\n    window.world.system.app.renderer.plugins.interaction.on('pointerdown', (event) => {\n      game.click(event);\n    });\n    window.world.system.app.ticker.add(delta => this.mainLoop(delta));\n  }\n\n  // Main loop runs 60 times per sec\n  mainLoop = (delta) => {\n    if (window.world.system.gameLoop) {\n      game.runBuildings();\n      fly.moveBullets();\n      fly.coolAllWeapons();\n      ai.moveAliens();\n      window.world.system.gameLoop(delta);\n    }\n    this.forceUpdate()\n  }\n\n  setupKeyboardListeners = () => {\n    window.world.system.keys.left = utils.keyboardListener(\"ArrowLeft\");\n    window.world.system.keys.right = utils.keyboardListener(\"ArrowRight\");\n    window.world.system.keys.up = utils.keyboardListener(\"ArrowUp\");\n    window.world.system.keys.down = utils.keyboardListener(\"ArrowDown\");\n    window.world.system.keys.space = utils.keyboardListener(\" \");\n    window.world.system.keys.w = utils.keyboardListener(\"w\"); // up\n    window.world.system.keys.a = utils.keyboardListener(\"a\"); // left\n    window.world.system.keys.s = utils.keyboardListener(\"s\"); // down\n    window.world.system.keys.d = utils.keyboardListener(\"d\"); // right\n    window.world.system.keys.q = utils.keyboardListener(\"q\"); // thrust left\n    window.world.system.keys.e = utils.keyboardListener(\"e\"); // thrust right\n    window.world.system.keys.x = utils.keyboardListener(\"x\"); // secondary weapon\n  }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}